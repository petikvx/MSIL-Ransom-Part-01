using System;
using System.Runtime.InteropServices;
using System.Text;
using Microsoft.VisualBasic.CompilerServices;

[StandardModule]
internal sealed class Class9
{
	[Flags]
	public enum Enum2 : uint
	{
		flag_0 = 0x8000u,
		flag_1 = 2u,
		flag_2 = 4u,
		flag_3 = 0x20u,
		flag_4 = 0x40u,
		flag_5 = 1u,
		flag_6 = 8u,
		flag_7 = 0x10u,
		flag_8 = 0x80u,
		flag_9 = 0x100u,
		flag_10 = 0x800u,
		flag_11 = 0x1000u
	}

	[DllImport("winmm.dll")]
	public static extern int mciSendString(string command, string buffer, int bufferSize, IntPtr hwndCallback);

	[DllImport("user32.dll", SetLastError = true)]
	public static extern IntPtr FindWindowEx(IntPtr hWnd1, IntPtr hWnd2, IntPtr lpsz1, string lpsz2);

	[DllImport("user32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
	public static extern IntPtr SendMessage(IntPtr hWnd, int hMsg, IntPtr wParam, IntPtr lParam);

	[DllImport("user32.dll", SetLastError = true)]
	public static extern bool SetWindowPos(IntPtr hWnd, IntPtr hWndInsertAfter, int X, int Y, int cx, int cy, uint uFlags);

	[DllImport("user32.dll", CharSet = CharSet.Auto, SetLastError = true)]
	public static extern IntPtr FindWindow(string lpClassName, string lpWindowName);

	[DllImport("user32.dll")]
	[return: MarshalAs(UnmanagedType.Bool)]
	public static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);

	[DllImport("user32.dll", CharSet = CharSet.Auto, EntryPoint = "FindWindowEx", SetLastError = true)]
	public static extern IntPtr FindWindowEx_1(IntPtr parentHandle, IntPtr childAfter, string lclassName, string windowTitle);

	[DllImport("user32.dll", CharSet = CharSet.Auto, SetLastError = true)]
	public static extern IntPtr GetWindow(IntPtr hWnd, uint uCmd);

	[DllImport("user32.dll", SetLastError = true)]
	public static extern IntPtr GetForegroundWindow();

	[DllImport("user32.dll")]
	public static extern int GetWindowTextW([In] IntPtr hWnd, [Out][MarshalAs(UnmanagedType.LPWStr)] StringBuilder lpString, int nMaxCount);

	[DllImport("advapi32.dll", SetLastError = true)]
	public static extern bool GetCurrentHwProfile(IntPtr fProfile);

	[DllImport("urlmon.dll", CharSet = CharSet.Auto, SetLastError = true)]
	public static extern int URLDownloadToFile([MarshalAs(UnmanagedType.IUnknown)] object pCaller, [MarshalAs(UnmanagedType.LPWStr)] string szURL, [MarshalAs(UnmanagedType.LPWStr)] string szFileName, int dwReserved, IntPtr lpfnCB);

	[DllImport("kernel32", CharSet = CharSet.Unicode, SetLastError = true)]
	[return: MarshalAs(UnmanagedType.Bool)]
	public static extern bool DeleteFile(string name);

	[DllImport("Kernel32.dll")]
	public static extern bool QueryFullProcessImageName([In] IntPtr hProcess, [In] uint dwFlags, [Out] StringBuilder lpExeName, [In][Out] ref uint lpdwSize);

	[DllImport("kernel32.dll", SetLastError = true)]
	public static extern void Sleep(int ms);

	[DllImport("user32.dll")]
	public static extern void mouse_event(uint dwFlags, uint dx, uint dy, uint dwData, int dwExtraInfo);
}
