using System;
using System.Runtime.InteropServices;

public class GClass26 : GClass21
{
	private Class20.Struct15[] struct15_0;

	public uint Value
	{
		get
		{
			method_0();
			return struct15_0[0].uint_0;
		}
		set
		{
			int num = Marshal.SizeOf(struct15_0[0]);
			struct5_0.intptr_1 = Marshal.AllocHGlobal(num * int_0);
			for (int i = 0; i < int_0; i++)
			{
				struct15_0[i].uint_0 = value;
				long num2 = struct5_0.intptr_1.ToInt64() + num * i;
				Marshal.StructureToPtr(struct15_0[i], (IntPtr)num2, fDeleteOld: false);
			}
			GException0.smethod_1(Class20.mixerSetControlDetails(intptr_0, ref struct5_0, GEnum16.flag_1 | genum16_0), "mixerSetControlDetails");
			Marshal.FreeHGlobal(struct5_0.intptr_1);
		}
	}

	public uint MinValue => (uint)struct11_0.struct9_0.int_0;

	public uint MaxValue => (uint)struct11_0.struct9_0.int_1;

	public double Percent
	{
		get
		{
			return 100.0 * (double)(Value - MinValue) / (double)(MaxValue - MinValue);
		}
		set
		{
			Value = (uint)((double)MinValue + value / 100.0 * (double)(MaxValue - MinValue));
		}
	}

	internal GClass26(Class20.Struct11 mixerControl, IntPtr mixerHandle, GEnum16 mixerHandleType, int nChannels)
	{
		struct11_0 = mixerControl;
		intptr_0 = mixerHandle;
		genum16_0 = mixerHandleType;
		int_0 = nChannels;
		struct5_0 = default(Class20.Struct5);
		method_0();
	}

	protected override void GetDetails(IntPtr pDetails)
	{
		struct15_0 = new Class20.Struct15[int_0];
		for (int i = 0; i < int_0; i++)
		{
			struct15_0[i] = (Class20.Struct15)Marshal.PtrToStructure(struct5_0.intptr_1, typeof(Class20.Struct15));
		}
	}

	public override string ToString()
	{
		return $"{base.ToString()} {Percent}%";
	}
}
