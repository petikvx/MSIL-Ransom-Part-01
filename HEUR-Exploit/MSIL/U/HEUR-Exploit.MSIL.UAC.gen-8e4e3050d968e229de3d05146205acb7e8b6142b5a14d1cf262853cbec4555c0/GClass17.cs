using System;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

public class GClass17
{
	[CompilerGenerated]
	private GEnum12 genum12_0;

	[CompilerGenerated]
	private IntPtr intptr_0;

	private Form0 form0_0;

	private Class19 class19_0;

	public GEnum12 Strategy
	{
		[CompilerGenerated]
		get
		{
			return genum12_0;
		}
		[CompilerGenerated]
		private set
		{
			genum12_0 = value;
		}
	}

	public IntPtr Handle
	{
		[CompilerGenerated]
		get
		{
			return intptr_0;
		}
		[CompilerGenerated]
		private set
		{
			intptr_0 = value;
		}
	}

	public static GClass17 smethod_0()
	{
		return new GClass17(GEnum12.const_0, IntPtr.Zero);
	}

	public static GClass17 smethod_1()
	{
		return new GClass17(GEnum12.const_1, IntPtr.Zero);
	}

	public static GClass17 smethod_2(IntPtr handle)
	{
		if (handle == IntPtr.Zero)
		{
			throw new ArgumentException("Handle cannot be zero");
		}
		return new GClass17(GEnum12.const_2, handle);
	}

	private GClass17(GEnum12 strategy, IntPtr handle)
	{
		Strategy = strategy;
		Handle = handle;
	}

	internal void method_0(Class18.Delegate12 callback)
	{
		if (Strategy == GEnum12.const_1)
		{
			form0_0 = new Form0(callback);
			((Control)form0_0).CreateControl();
			Handle = ((Control)form0_0).get_Handle();
		}
		else if (Strategy == GEnum12.const_2)
		{
			class19_0 = new Class19(callback);
			((NativeWindow)class19_0).AssignHandle(Handle);
		}
	}

	internal GEnum11 method_1(out IntPtr waveOutHandle, int deviceNumber, GClass15 waveFormat, Class18.Delegate12 callback)
	{
		if (Strategy == GEnum12.const_0)
		{
			return Class18.waveOutOpen(out waveOutHandle, (IntPtr)deviceNumber, waveFormat, callback, IntPtr.Zero, Class18.Enum3.flag_1);
		}
		return Class18.waveOutOpen_1(out waveOutHandle, (IntPtr)deviceNumber, waveFormat, Handle, IntPtr.Zero, Class18.Enum3.flag_3);
	}

	internal GEnum11 method_2(out IntPtr waveInHandle, int deviceNumber, GClass15 waveFormat, Class18.Delegate12 callback)
	{
		if (Strategy == GEnum12.const_0)
		{
			return Class18.waveInOpen(out waveInHandle, (IntPtr)deviceNumber, waveFormat, callback, IntPtr.Zero, Class18.Enum3.flag_1);
		}
		return Class18.waveInOpen_1(out waveInHandle, (IntPtr)deviceNumber, waveFormat, Handle, IntPtr.Zero, Class18.Enum3.flag_3);
	}

	internal void method_3()
	{
		if (form0_0 != null)
		{
			((Form)form0_0).Close();
			form0_0 = null;
		}
		if (class19_0 != null)
		{
			((NativeWindow)class19_0).ReleaseHandle();
			class19_0 = null;
		}
	}
}
