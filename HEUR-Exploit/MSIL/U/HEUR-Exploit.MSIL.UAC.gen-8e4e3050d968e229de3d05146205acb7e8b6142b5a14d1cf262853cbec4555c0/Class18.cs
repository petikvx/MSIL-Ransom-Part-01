using System;
using System.Runtime.InteropServices;

internal class Class18
{
	[Flags]
	public enum Enum3
	{
		flag_0 = 0,
		flag_1 = 0x30000,
		flag_2 = 0x50000,
		flag_3 = 0x10000,
		flag_4 = 0x20000
	}

	public enum Enum4
	{
		const_0 = 958,
		const_1 = 959,
		const_2 = 960,
		const_3 = 956,
		const_4 = 957,
		const_5 = 955
	}

	public delegate void Delegate12(IntPtr hWaveOut, Enum4 message, IntPtr dwInstance, Class16 wavhdr, IntPtr dwReserved);

	[DllImport("winmm.dll")]
	public static extern int mmioStringToFOURCC([MarshalAs(UnmanagedType.LPStr)] string s, int flags);

	[DllImport("winmm.dll")]
	public static extern int waveOutGetNumDevs();

	[DllImport("winmm.dll")]
	public static extern GEnum11 waveOutPrepareHeader(IntPtr hWaveOut, Class16 lpWaveOutHdr, int uSize);

	[DllImport("winmm.dll")]
	public static extern GEnum11 waveOutUnprepareHeader(IntPtr hWaveOut, Class16 lpWaveOutHdr, int uSize);

	[DllImport("winmm.dll")]
	public static extern GEnum11 waveOutWrite(IntPtr hWaveOut, Class16 lpWaveOutHdr, int uSize);

	[DllImport("winmm.dll")]
	public static extern GEnum11 waveOutOpen(out IntPtr hWaveOut, IntPtr uDeviceID, GClass15 lpFormat, Delegate12 dwCallback, IntPtr dwInstance, Enum3 dwFlags);

	[DllImport("winmm.dll", EntryPoint = "waveOutOpen")]
	public static extern GEnum11 waveOutOpen_1(out IntPtr hWaveOut, IntPtr uDeviceID, GClass15 lpFormat, IntPtr callbackWindowHandle, IntPtr dwInstance, Enum3 dwFlags);

	[DllImport("winmm.dll")]
	public static extern GEnum11 waveOutReset(IntPtr hWaveOut);

	[DllImport("winmm.dll")]
	public static extern GEnum11 waveOutClose(IntPtr hWaveOut);

	[DllImport("winmm.dll")]
	public static extern GEnum11 waveOutPause(IntPtr hWaveOut);

	[DllImport("winmm.dll")]
	public static extern GEnum11 waveOutRestart(IntPtr hWaveOut);

	[DllImport("winmm.dll")]
	public static extern GEnum11 waveOutGetPosition(IntPtr hWaveOut, out Struct4 mmTime, int uSize);

	[DllImport("winmm.dll")]
	public static extern GEnum11 waveOutSetVolume(IntPtr hWaveOut, int dwVolume);

	[DllImport("winmm.dll")]
	public static extern GEnum11 waveOutGetVolume(IntPtr hWaveOut, out int dwVolume);

	[DllImport("winmm.dll", CharSet = CharSet.Auto)]
	public static extern GEnum11 waveOutGetDevCaps(IntPtr deviceID, out GStruct2 waveOutCaps, int waveOutCapsSize);

	[DllImport("winmm.dll")]
	public static extern int waveInGetNumDevs();

	[DllImport("winmm.dll", CharSet = CharSet.Auto)]
	public static extern GEnum11 waveInGetDevCaps(IntPtr deviceID, out GStruct1 waveInCaps, int waveInCapsSize);

	[DllImport("winmm.dll")]
	public static extern GEnum11 waveInAddBuffer(IntPtr hWaveIn, Class16 pwh, int cbwh);

	[DllImport("winmm.dll")]
	public static extern GEnum11 waveInClose(IntPtr hWaveIn);

	[DllImport("winmm.dll")]
	public static extern GEnum11 waveInOpen(out IntPtr hWaveIn, IntPtr uDeviceID, GClass15 lpFormat, Delegate12 dwCallback, IntPtr dwInstance, Enum3 dwFlags);

	[DllImport("winmm.dll", EntryPoint = "waveInOpen")]
	public static extern GEnum11 waveInOpen_1(out IntPtr hWaveIn, IntPtr uDeviceID, GClass15 lpFormat, IntPtr callbackWindowHandle, IntPtr dwInstance, Enum3 dwFlags);

	[DllImport("winmm.dll")]
	public static extern GEnum11 waveInPrepareHeader(IntPtr hWaveIn, Class16 lpWaveInHdr, int uSize);

	[DllImport("winmm.dll")]
	public static extern GEnum11 waveInUnprepareHeader(IntPtr hWaveIn, Class16 lpWaveInHdr, int uSize);

	[DllImport("winmm.dll")]
	public static extern GEnum11 waveInReset(IntPtr hWaveIn);

	[DllImport("winmm.dll")]
	public static extern GEnum11 waveInStart(IntPtr hWaveIn);

	[DllImport("winmm.dll")]
	public static extern GEnum11 waveInStop(IntPtr hWaveIn);
}
