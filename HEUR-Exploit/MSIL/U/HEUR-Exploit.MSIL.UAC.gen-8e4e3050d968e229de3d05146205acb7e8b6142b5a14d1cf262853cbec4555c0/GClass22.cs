using System;
using System.Runtime.InteropServices;

public class GClass22 : GClass21
{
	private Class20.Struct12 struct12_0;

	public bool Value
	{
		get
		{
			method_0();
			return struct12_0.int_0 == 1;
		}
		set
		{
			struct12_0.int_0 = (value ? 1 : 0);
			struct5_0.intptr_1 = Marshal.AllocHGlobal(Marshal.SizeOf(struct12_0));
			Marshal.StructureToPtr(struct12_0, struct5_0.intptr_1, fDeleteOld: false);
			GException0.smethod_1(Class20.mixerSetControlDetails(intptr_0, ref struct5_0, GEnum16.flag_1 | genum16_0), "mixerSetControlDetails");
			Marshal.FreeHGlobal(struct5_0.intptr_1);
		}
	}

	internal GClass22(Class20.Struct11 mixerControl, IntPtr mixerHandle, GEnum16 mixerHandleType, int nChannels)
	{
		struct11_0 = mixerControl;
		intptr_0 = mixerHandle;
		genum16_0 = mixerHandleType;
		int_0 = nChannels;
		struct5_0 = default(Class20.Struct5);
		method_0();
	}

	protected override void GetDetails(IntPtr pDetails)
	{
		struct12_0 = (Class20.Struct12)Marshal.PtrToStructure(pDetails, typeof(Class20.Struct12));
	}
}
