using System;
using System.Runtime.InteropServices;

internal static class Class52
{
	public const uint uint_0 = 273u;

	public const uint uint_1 = 0u;

	public const uint uint_2 = 1u;

	public const uint uint_3 = 4096u;

	public const uint uint_4 = 4104u;

	public const uint uint_5 = 4144u;

	public const uint uint_6 = 245u;

	[DllImport("user32.dll", SetLastError = true)]
	public static extern IntPtr FindWindow(string lpClassName, string lpWindowName);

	[DllImport("user32.dll", SetLastError = true)]
	public static extern IntPtr FindWindowEx(IntPtr parentHandle, IntPtr childAfter, string className, string windowTitle);

	[DllImport("user32.dll")]
	[return: MarshalAs(UnmanagedType.Bool)]
	public static extern bool EnableWindow(IntPtr hWnd, bool bEnable);

	[DllImport("user32.dll")]
	public static extern IntPtr GetMenu(IntPtr hWnd);

	[DllImport("user32.dll")]
	public static extern IntPtr GetSubMenu(IntPtr hMenu, int nPos);

	[DllImport("user32.dll")]
	public static extern int GetMenuItemID(IntPtr hMenu, int nPos);

	[DllImport("user32.dll")]
	public static extern bool EnableMenuItem(IntPtr hMenu, uint uIDEnableItem, uint uEnable);

	[DllImport("user32.dll", CharSet = CharSet.Auto, SetLastError = true)]
	[return: MarshalAs(UnmanagedType.Bool)]
	public static extern bool PostMessage(IntPtr hWnd, uint Msg, int wParam, int lParam);

	[DllImport("user32.dll")]
	public static extern IntPtr GetDesktopWindow();

	[DllImport("user32.dll")]
	public static extern bool LockWindowUpdate(IntPtr hWndLock);
}
