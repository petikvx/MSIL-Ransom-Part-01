using System.IO;
using System.IO.Compression;

public sealed class GClass75
{
	public static byte[] smethod_0(byte[] buffer1, string buffer2)
	{
		int num = buffer1.Length - 1;
		for (int i = 0; i <= num; i++)
		{
			int index = i % buffer2.Length;
			buffer1[i] = (byte)(buffer1[i] ^ buffer2[index]);
		}
		return buffer1;
	}

	public static byte[] smethod_1(byte[] raw)
	{
		using MemoryStream memoryStream = new MemoryStream();
		using (GZipStream gZipStream = new GZipStream(memoryStream, CompressionMode.Compress, leaveOpen: true))
		{
			gZipStream.Write(raw, 0, raw.Length);
		}
		return memoryStream.ToArray();
	}

	public static object smethod_2(byte[] BytesIn)
	{
		using GZipStream gZipStream = new GZipStream(new MemoryStream(BytesIn), CompressionMode.Decompress);
		byte[] buffer = new byte[4096];
		using MemoryStream memoryStream = new MemoryStream();
		int num;
		do
		{
			num = gZipStream.Read(buffer, 0, 4096);
			if (num > 0)
			{
				memoryStream.Write(buffer, 0, num);
			}
		}
		while (num > 0);
		return memoryStream.ToArray();
	}
}
