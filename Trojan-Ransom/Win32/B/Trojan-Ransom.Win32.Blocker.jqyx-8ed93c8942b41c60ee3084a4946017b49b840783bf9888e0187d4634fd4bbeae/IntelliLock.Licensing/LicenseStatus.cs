namespace IntelliLock.Licensing;

[Attribute1(CBPJIFOEJODEDAIKFEHLINCOJEILAOPJLPJM = true, MILJMOALDHJBDENJEIFBOPJBAHHFENPIBGJJ = true, GPLINEOBJKEEECKFEIKDKBKILCBHDFGDIEPC = true)]
internal enum LicenseStatus
{
	[Attribute1(CBPJIFOEJODEDAIKFEHLINCOJEILAOPJLPJM = true, GPLINEOBJKEEECKFEIKDKBKILCBHDFGDIEPC = false)]
	NotChecked,
	[Attribute1(CBPJIFOEJODEDAIKFEHLINCOJEILAOPJLPJM = true, GPLINEOBJKEEECKFEIKDKBKILCBHDFGDIEPC = false)]
	Licensed,
	[Attribute1(CBPJIFOEJODEDAIKFEHLINCOJEILAOPJLPJM = true, GPLINEOBJKEEECKFEIKDKBKILCBHDFGDIEPC = false)]
	EvaluationMode,
	[Attribute1(CBPJIFOEJODEDAIKFEHLINCOJEILAOPJLPJM = true, GPLINEOBJKEEECKFEIKDKBKILCBHDFGDIEPC = false)]
	EvaluationExpired,
	[Attribute1(CBPJIFOEJODEDAIKFEHLINCOJEILAOPJLPJM = true, GPLINEOBJKEEECKFEIKDKBKILCBHDFGDIEPC = false)]
	LicenseFileNotFound,
	[Attribute1(CBPJIFOEJODEDAIKFEHLINCOJEILAOPJLPJM = true, GPLINEOBJKEEECKFEIKDKBKILCBHDFGDIEPC = false)]
	HardwareNotMatched,
	[Attribute1(CBPJIFOEJODEDAIKFEHLINCOJEILAOPJLPJM = true, GPLINEOBJKEEECKFEIKDKBKILCBHDFGDIEPC = false)]
	InvalidSignature,
	[Attribute1(CBPJIFOEJODEDAIKFEHLINCOJEILAOPJLPJM = true, GPLINEOBJKEEECKFEIKDKBKILCBHDFGDIEPC = false)]
	ServerValidationFailed,
	[Attribute1(CBPJIFOEJODEDAIKFEHLINCOJEILAOPJLPJM = true, GPLINEOBJKEEECKFEIKDKBKILCBHDFGDIEPC = false)]
	Deactivated,
	[Attribute1(CBPJIFOEJODEDAIKFEHLINCOJEILAOPJLPJM = true, GPLINEOBJKEEECKFEIKDKBKILCBHDFGDIEPC = false)]
	Reactivated,
	[Attribute1(CBPJIFOEJODEDAIKFEHLINCOJEILAOPJLPJM = true, GPLINEOBJKEEECKFEIKDKBKILCBHDFGDIEPC = false)]
	FloatingLicenseUserExceeded,
	[Attribute1(CBPJIFOEJODEDAIKFEHLINCOJEILAOPJLPJM = true, GPLINEOBJKEEECKFEIKDKBKILCBHDFGDIEPC = false)]
	FloatingLicenseServerError,
	[Attribute1(CBPJIFOEJODEDAIKFEHLINCOJEILAOPJLPJM = true, GPLINEOBJKEEECKFEIKDKBKILCBHDFGDIEPC = false)]
	FullVersionExpired,
	[Attribute1(CBPJIFOEJODEDAIKFEHLINCOJEILAOPJLPJM = true, GPLINEOBJKEEECKFEIKDKBKILCBHDFGDIEPC = false)]
	FloatingLicenseServerTimeout
}
