<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
<resheader name="resmimetype"><value>text/microsoft-resx</value></resheader><resheader name="version"><value>1.3</value></resheader><resheader name="reader"><value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value></resheader><resheader name="writer"><value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value></resheader><data name="cherry"><value>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</value></data>
  </root>